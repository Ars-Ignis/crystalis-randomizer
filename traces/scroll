What happens to $66..$6b ?

On Scroll horizontal:

several scalines earier:
 Read $0067: $87 at $3ed8b
 Read $0067: $87 at $3ee49

all at once:
 Read $0067: $87 at $3edbc

 Write $0067: $87 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb

 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb
 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb
 Write $0067: $86 -> $84 at $3edca
 Read $0066: $8400 at $3edcf
 Read $0067: $84 at $3edd4
 Write $0067: $84 -> $86 at $3edd9
 Read $0066: $8600 at $3eddb


=========

On transition:

005cd3:18: Write $0066: $00 -> $00 at $3e6d9
debug.js:1024 005cd3:18: Write $0068: $b2 -> $00 at $3e6db
debug.js:1024 005cd3:18: Write $0067: $86 -> $80 at $3e6df
speakers.js:37 Buffer overrun
debug.js:1024 005cd3:18: Write $0069: $b4 -> $b3 at $3e6e4
debug.js:1033 005cd3:18: Read $0067: $80 at $3e6e7
debug.js:1024 005cd3:18: Write $006a: $20 ( ) -> $00 at $3e6ee
debug.js:1024 005cd3:19: Write $006b: $be -> $be at $3e6f4

 - it looks like $68 and $6a are not read at all anywhere during this?


=========

on scroll vertical:

 Read $0067: $83 at $3ed8b
 Read $0067: $83 at $3edfd
 Read $0067: $83 at $3edbc

 Write $0067: $83 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb

 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb

 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb

 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb

 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb
 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb
 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb
 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb
 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb
 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb
 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb
 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb
 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb
 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb
 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9
 Read $0066: $8100 at $3eddb
 Write $0067: $81 -> $80 at $3edca
 Read $0066: $8000 at $3edcf
 Read $0067: $80 at $3edd4
 Write $0067: $80 -> $81 at $3edd9

====

main difference between horiz and vert is increment (2 vs 1)
 - alt4ernate between 80-82 and 81-83 (or vice versa) dep on tile being loaded


$3e6d0 - populate $66..$6b from mapdata.
  $66 is permanently zero
  $67 initialized to graphics[3] => %10abcd00 (12 different values: 80, 84, ..., ac)
  $68 starts as zero but gets shuffled around for some reason
  $69 initialized to graphics[4]
  $6a <- $67 << 3 =    %bcd0 0000
  $6b = #$be + carry = %1011 111a
=> ($66) = %10ab cdxy 0000 0000 -> 4x 256-byte tables
   ($68) = (graph[4]) (...?...)
   ($6a) = %1011 111a bcd0 0000 -> 32 bytes = 256 bits
           fits nicely at the end since %ab < 3.
             - but why 111a instead of just abcd ?
             - almost looks like it's going to be about palettes, but it's kind of not.

Looks like $66 is going to point to 

$3edba - translate tile to pattern index
