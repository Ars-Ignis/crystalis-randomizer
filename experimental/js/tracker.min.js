(function(){
const global=window;'use strict';var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.makeIterator=function(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};
$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};
$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};$jscomp.FORCE_POLYFILL_PROMISE=!1;$jscomp.SYMBOL_PREFIX="jscomp_symbol_";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};
$jscomp.Symbol=function(){var a=0;return function(b){return $jscomp.SYMBOL_PREFIX+(b||"")+a++}}();$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}});$jscomp.initSymbolIterator=function(){}};
$jscomp.initSymbolAsyncIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.asyncIterator;a||(a=$jscomp.global.Symbol.asyncIterator=$jscomp.global.Symbol("asyncIterator"));$jscomp.initSymbolAsyncIterator=function(){}};$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};$jscomp.underscoreProtoCanBeSet=function(){var a={a:!0},b={};try{return b.__proto__=a,b.a}catch(c){}return!1};
$jscomp.setPrototypeOf="function"==typeof Object.setPrototypeOf?Object.setPrototypeOf:$jscomp.underscoreProtoCanBeSet()?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null;$jscomp.generator={};$jscomp.generator.ensureIteratorResultIsObject_=function(a){if(!(a instanceof Object))throw new TypeError("Iterator result "+a+" is not an object");};
$jscomp.generator.Context=function(){this.isRunning_=!1;this.yieldAllIterator_=null;this.yieldResult=void 0;this.nextAddress=1;this.finallyAddress_=this.catchAddress_=0;this.finallyContexts_=this.abruptCompletion_=null};$jscomp.generator.Context.prototype.start_=function(){if(this.isRunning_)throw new TypeError("Generator is already running");this.isRunning_=!0};$jscomp.generator.Context.prototype.stop_=function(){this.isRunning_=!1};
$jscomp.generator.Context.prototype.jumpToErrorHandler_=function(){this.nextAddress=this.catchAddress_||this.finallyAddress_};$jscomp.generator.Context.prototype.next_=function(a){this.yieldResult=a};$jscomp.generator.Context.prototype.throw_=function(a){this.abruptCompletion_={exception:a,isException:!0};this.jumpToErrorHandler_()};$jscomp.generator.Context.prototype.return=function(a){this.abruptCompletion_={return:a};this.nextAddress=this.finallyAddress_};
$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks=function(a){this.abruptCompletion_={jumpTo:a};this.nextAddress=this.finallyAddress_};$jscomp.generator.Context.prototype.yield=function(a,b){this.nextAddress=b;return{value:a}};$jscomp.generator.Context.prototype.yieldAll=function(a,b){a=$jscomp.makeIterator(a);var c=a.next();$jscomp.generator.ensureIteratorResultIsObject_(c);if(c.done)this.yieldResult=c.value,this.nextAddress=b;else return this.yieldAllIterator_=a,this.yield(c.value,b)};
$jscomp.generator.Context.prototype.jumpTo=function(a){this.nextAddress=a};$jscomp.generator.Context.prototype.jumpToEnd=function(){this.nextAddress=0};$jscomp.generator.Context.prototype.setCatchFinallyBlocks=function(a,b){this.catchAddress_=a;void 0!=b&&(this.finallyAddress_=b)};$jscomp.generator.Context.prototype.setFinallyBlock=function(a){this.catchAddress_=0;this.finallyAddress_=a||0};$jscomp.generator.Context.prototype.leaveTryBlock=function(a,b){this.nextAddress=a;this.catchAddress_=b||0};
$jscomp.generator.Context.prototype.enterCatchBlock=function(a){this.catchAddress_=a||0;a=this.abruptCompletion_.exception;this.abruptCompletion_=null;return a};$jscomp.generator.Context.prototype.enterFinallyBlock=function(a,b,c){c?this.finallyContexts_[c]=this.abruptCompletion_:this.finallyContexts_=[this.abruptCompletion_];this.catchAddress_=a||0;this.finallyAddress_=b||0};
$jscomp.generator.Context.prototype.leaveFinallyBlock=function(a,b){b=this.finallyContexts_.splice(b||0)[0];if(b=this.abruptCompletion_=this.abruptCompletion_||b){if(b.isException)return this.jumpToErrorHandler_();void 0!=b.jumpTo&&this.finallyAddress_<b.jumpTo?(this.nextAddress=b.jumpTo,this.abruptCompletion_=null):this.nextAddress=this.finallyAddress_}else this.nextAddress=a};$jscomp.generator.Context.prototype.forIn=function(a){return new $jscomp.generator.Context.PropertyIterator(a)};
$jscomp.generator.Context.PropertyIterator=function(a){this.object_=a;this.properties_=[];for(var b in a)this.properties_.push(b);this.properties_.reverse()};$jscomp.generator.Context.PropertyIterator.prototype.getNext=function(){for(;0<this.properties_.length;){var a=this.properties_.pop();if(a in this.object_)return a}return null};$jscomp.generator.Engine_=function(a){this.context_=new $jscomp.generator.Context;this.program_=a};
$jscomp.generator.Engine_.prototype.next_=function(a){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_.next,a,this.context_.next_);this.context_.next_(a);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.return_=function(a){this.context_.start_();var b=this.context_.yieldAllIterator_;if(b)return this.yieldAllStep_("return"in b?b["return"]:function(a){return{value:a,done:!0}},a,this.context_.return);this.context_.return(a);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.throw_=function(a){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_["throw"],a,this.context_.next_);this.context_.throw_(a);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.yieldAllStep_=function(a,b,c){try{var d=a.call(this.context_.yieldAllIterator_,b);$jscomp.generator.ensureIteratorResultIsObject_(d);if(!d.done)return this.context_.stop_(),d;var e=d.value}catch(f){return this.context_.yieldAllIterator_=null,this.context_.throw_(f),this.nextStep_()}this.context_.yieldAllIterator_=null;c.call(this.context_,e);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.nextStep_=function(){for(;this.context_.nextAddress;)try{var a=this.program_(this.context_);if(a)return this.context_.stop_(),{value:a.value,done:!1}}catch(b){this.context_.yieldResult=void 0,this.context_.throw_(b)}this.context_.stop_();if(this.context_.abruptCompletion_){a=this.context_.abruptCompletion_;this.context_.abruptCompletion_=null;if(a.isException)throw a.exception;return{value:a.return,done:!0}}return{value:void 0,done:!0}};
$jscomp.generator.Generator_=function(a){this.next=function(b){return a.next_(b)};this.throw=function(b){return a.throw_(b)};this.return=function(b){return a.return_(b)};$jscomp.initSymbolIterator();this[Symbol.iterator]=function(){return this}};$jscomp.generator.createGenerator=function(a,b){b=new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(b));$jscomp.setPrototypeOf&&$jscomp.setPrototypeOf(b,a.prototype);return b};
$jscomp.asyncExecutePromiseGenerator=function(a){function b(b){return a.next(b)}function c(b){return a.throw(b)}return new Promise(function(d,e){function f(a){a.done?d(a.value):Promise.resolve(a.value).then(b,c).then(f,e)}f(a.next())})};$jscomp.asyncExecutePromiseGeneratorFunction=function(a){return $jscomp.asyncExecutePromiseGenerator(a())};$jscomp.asyncExecutePromiseGeneratorProgram=function(a){return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(a)))};
$jscomp.checkStringArgs=function(a,b,c){if(null==a)throw new TypeError("The 'this' value for String.prototype."+c+" must not be null or undefined");if(b instanceof RegExp)throw new TypeError("First argument to String.prototype."+c+" must not be a regular expression");return a+""};$jscomp.stringPadding=function(a,b){a=void 0!==a?String(a):" ";return 0<b&&a?a.repeat(Math.ceil(b/a.length)).substring(0,b):""};
$jscomp.polyfill("String.prototype.padStart",function(a){return a?a:function(a,c){var b=$jscomp.checkStringArgs(this,null,"padStart");return $jscomp.stringPadding(c,a-b.length)+b}},"es8","es3");$jscomp.iteratorFromArray=function(a,b){$jscomp.initSymbolIterator();a instanceof String&&(a+="");var c=0,d={next:function(){if(c<a.length){var e=c++;return{value:b(e,a[e]),done:!1}}d.next=function(){return{done:!0,value:void 0}};return d.next()}};d[Symbol.iterator]=function(){return d};return d};
$jscomp.polyfill("Array.prototype.values",function(a){return a?a:function(){return $jscomp.iteratorFromArray(this,function(a,c){return c})}},"es8","es3");$jscomp.polyfill("Array.prototype.includes",function(a){return a?a:function(a,c){var b=this;b instanceof String&&(b=String(b));var e=b.length;c=c||0;for(0>c&&(c=Math.max(c+e,0));c<e;c++){var f=b[c];if(f===a||Object.is(f,a))return!0}return!1}},"es7","es3");$jscomp.owns=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)};
$jscomp.polyfill("Object.entries",function(a){return a?a:function(a){var b=[],d;for(d in a)$jscomp.owns(a,d)&&b.push([d,a[d]]);return b}},"es8","es3");$jscomp.polyfill("Object.values",function(a){return a?a:function(a){var b=[],d;for(d in a)$jscomp.owns(a,d)&&b.push(a[d]);return b}},"es8","es3");$jscomp.polyfill("String.prototype.padEnd",function(a){return a?a:function(a,c){var b=$jscomp.checkStringArgs(this,null,"padStart");return b+$jscomp.stringPadding(c,a-b.length)}},"es8","es3");
const LOG$$module$js$6502=!0;
class Assembler$$module$js$6502{constructor(){this.labels={};this.allChunks=[];this.allBlocks=[]}assemble(a,b="input"){b=new File$$module$js$6502(this.labels,b);for(const c of a.split("\n"))b.ingest(c);a=b.assemble();this.allChunks.push(...a.filter((a)=>a instanceof Chunk$$module$js$6502))}chunks(){return[...this.allChunks]}blocks(){return[...this.allBlocks]}patch(){if(this.allBlocks.length)throw Error("No patch() with blocks");return Patch$$module$js$6502.from(this.allChunks)}patchRom(a){buildRomPatch$$module$js$6502(this.patch()).apply(a);this.allChunks=
[]}expand(a){const [b=null,...c]=this.labels[a]||[];if(null==b)throw Error(`Missing label: ${a}`);if(c.length)throw Error(`Non-unique label: ${a}`);return 0>b?~b:b}}
class File$$module$js$6502{constructor(a,b){this.labels=a;this.filename=b;this.lines=[];this.pc=0;this.lineNumber=-1;this.lineContents="";this.conditions=[];this.assembling=!0}addLine(a){this.lines.push(a.orig(this.filename,this.lineNumber,this.lineContents))}addLabel(a,b){if("number"!==typeof b)throw Error("Expected a number");a=this.labels[a]||(this.labels[a]=[]);const c=find$$module$js$6502(a,b);0>c&&a.splice(~c,0,b)}parseNumber(a){a=parseNumber$$module$js$6502(a,!0);return"number"===typeof a?
a:(new Context$$module$js$6502(this.labels)).mapLabel(a)}ingest(a){this.lineNumber++;this.lineContents=a;a=a.replace(/;.*/,"");a=a.replace(/\s+/g," ");a=a.replace(/\s$/g,"");var b;if(b=/^\s*\.if(n?)def\s+(\S+)/i.exec(a))a=b[2]in this.labels,this.conditions.push(b[1]?!a:a),this.assembling=this.conditions.every((a)=>a);else if(b=/^\s*\.else/i.exec(a))this.conditions.push(!this.conditions.pop()),this.assembling=this.conditions.every((a)=>a);else if(b=/^\s*\.endif/i.exec(a))this.conditions.pop(),this.assembling=
this.conditions.every((a)=>a);else if(this.assembling)if(b=/^\s*\.org\s+(\S+)/i.exec(a))this.addLine(new OrgLine$$module$js$6502(this.pc=parseNumber$$module$js$6502(b[1])));else if(b=/^\s*\.skip\s+(.+)/i.exec(a))this.addLine(new OrgLine$$module$js$6502(this.pc+=this.parseNumber(b[1])));else if(b=/^\s*\.assert\s+(<\s*)?(\S+)/i.exec(a))this.addLine(new AssertLine$$module$js$6502(this.pc=parseNumber$$module$js$6502(b[2]),!b[1]));else if(b=/^\s*\.bank\s+(\S+)\s+(\S+)\s*:\s*(\S+)/i.exec(a)){const [,a,
c,f]=b;this.addLine(new BankLine$$module$js$6502(parseNumber$$module$js$6502(a),parseNumber$$module$js$6502(c),parseNumber$$module$js$6502(f)))}else if(b=/^\s*\.(byte|word)\s+(.*)/i.exec(a))b=("word"===b[1]?WordLine$$module$js$6502:ByteLine$$module$js$6502).parse(b[2]),this.addLine(b),this.pc+=b.size();else if(b=/^\s*\.res\s+([^,]+)(?:,\s*(.+))?/i.exec(a))b=ByteLine$$module$js$6502.parseRes(this.parseNumber(b[1]),this.parseNumber(b[2]||"0")),this.addLine(b),this.pc+=b.size();else if(b=/^define\s+(\S+)\s+(.*)/.exec(a))this.addLabel(b[1],
this.parseNumber(b[2]));else{if(b=/^(\S+?):(.*)$/.exec(a)){var c=b[1];a=" "+b[2];this.addLabel(c,~this.pc)}else if(b=/^((?:[-+]+\s+)+)(.*)$/.exec(a)){a=b[1];for(c of a.trim().split(" "))this.addLabel(c,~this.pc);a=" "+b[2]}if(b=/^\s+([a-z]{3})(\s+.*)?$/.exec(a))b=new Opcode$$module$js$6502(b[1],(b[2]||"").trim(),this.pc),this.addLine(b),this.pc+=b.size();else if(/\S/.test(a))throw Error(`Could not parse line ${a} at ${this.filename}:${this.lineNumber}`);}}assemble(){var a=new Context$$module$js$6502(this.labels),
b=[];const c=[],d=(a,b)=>{throw Error(`Collision at $${b.toString(16)}:\n  written at ${c[b].source()}\n  written at ${a.source()}`);};for(var e of this.lines){try{e.expand(a)}catch(g){throw b=g.stack.replace(`Error: ${g.message}`,""),Error(`${g.message}${` from line ${e.origLineNumber+1}: \`${e.origContent}\``}${b}\n================`);}e instanceof OrgLine$$module$js$6502&&null!=b[e.pc]&&d(e,e.pc);for(const f of e.bytes())null!=b[a.pc]&&d(e,a.pc),c[a.pc]=e,b[a.pc++]=f}a=[];for(var f in b)Number(f)-
1 in b||a.push(Number(f));e=[];for(const c of a){f=[];for(a=c;a in b;a++)f.push(b[a]);e.push(new Chunk$$module$js$6502(c,f))}if(this.conditions.length)throw Error("Unterminated .if");return e}}class AbstractLine$$module$js$6502{constructor(){this.origFile="";this.origLineNumber=-1;this.origContent=""}orig(a,b,c){this.origFile=a;this.origLineNumber=b;this.origContent=c;return this}source(){return`${this.origFile}:${this.origLineNumber+1}  ${this.origContent}`}}
class ByteLine$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(a){super();this.bytesInternal=a}static parse(a){const b=[];for(let c of a.split(","))c=c.trim(),(a=/^"(.*)"$/.exec(c))?b.push(...[...a[1]].map((a)=>a.charCodeAt(0))):b.push(parseNumber$$module$js$6502(c,!0));return new ByteLine$$module$js$6502(b)}static parseRes(a,b){return new ByteLine$$module$js$6502(Array(a).fill(b))}bytes(){return[...this.bytesInternal]}size(){return this.bytesInternal.length}expand(a){for(let b=0;b<
this.bytesInternal.length;b++)"string"===typeof this.bytesInternal[b]&&(this.bytesInternal[b]=a.map(this.bytesInternal[b])&255)}}
class WordLine$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(a){super();this.words=a}static parse(a){const b=[];for(let c of a.split(","))c=c.trim(),c=c.replace(/[()]/g,""),b.push(parseNumber$$module$js$6502(c,!0));return new WordLine$$module$js$6502(b)}bytes(){const a=[];for(const b of this.words)a.push(b&255),a.push(b>>>8);return a}size(){return 2*this.words.length}expand(a){for(let b=0;b<this.words.length;b++)"string"===typeof this.words[b]&&(this.words[b]=a.map(this.words[b]))}}
class OrgLine$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(a){super();this.pc=a}bytes(){return[]}size(){return 0}expand(a){a.pc=this.pc}}
class AssertLine$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(a,b){super();this.pc=a;this.exact=b}bytes(){return[]}size(){return 0}expand(a){if(this.exact?a.pc!==this.pc:a.pc>this.pc)throw Error(`Misalignment: expected ${this.exact?"":"< "}$${this.pc.toString(16)} but was $${a.pc.toString(16)}`);!this.exact&&LOG$$module$js$6502&&console.log(`Free: ${this.pc-a.pc} bytes between $${a.pc.toString(16)} and $${this.pc.toString(16)}`)}}
class BankLine$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(a,b,c){super();this.prg=a;this.cpu=b;this.length=c}bytes(){return[]}size(){return 0}expand(a){a.updateBank(this.prg,this.cpu,this.length)}}
class Context$$module$js$6502{constructor(a){this.labels=a;this.pc=0;this.cpuToPrg=[];this.prgToCpu=[]}updateBank(a,b,c){for(var d=0;d<c;d++){var e=b+d,f=this.cpuToPrg[e];null!=f&&(this.prgToCpu[f]=null,this.cpuToPrg[e]=null)}for(d=0;d<c;d++)e=b+d,f=a+d,this.prgToCpu[f]=e,this.cpuToPrg[e]=f}mapLabel(a,b){var c=a.replace(/\(([^)]*)\)/g,(a,c)=>String(this.mapLabel(c,b)));if(c!==a)return this.mapLabel(c,b);if(c=/([^-+]+)([-+])(.*)/.exec(a)){a=this.map(parseNumber$$module$js$6502(c[1].trim(),!0),b);var d=
this.map(parseNumber$$module$js$6502(c[3].trim(),!0),b);return"-"===c[2]?a-d:a+d}if(c=/([^*]+)[*](.*)/.exec(a))return a=this.map(parseNumber$$module$js$6502(c[1].trim(),!0),b),c=this.map(parseNumber$$module$js$6502(c[2].trim(),!0),b),a*c;if(c=/([<>])(.*)/.exec(a))return a=this.map(parseNumber$$module$js$6502(c[2].trim(),!0),b),"<"===c[1]?a&255:a>>>8&255;c=Number(a);if(!isNaN(c))return c;c=this.labels[a];if(!c)throw Error(`Label not found: ${a}`);if(null==b){if(1<c.length)throw Error(`Ambiguous label: ${a}`);
return c[0]}b=~(b+2);d=find$$module$js$6502(c,b);if(0<=d)return c[d];if(-1===d)return c[0];if(d===~c.length)return c[c.length-1];c=c.slice(~d-1,~d+1);return a.startsWith("-")?c[1]:a.startsWith("+")?c[0]:b<(c[0]+c[1])/2?c[0]:c[1]}mapPrgToCpu(a){const b=this.prgToCpu[a];if(null==b)throw Error(`PRG address unmapped: $${a.toString(16)}`);return b}map(a,b){if(null==a)return a;"string"===typeof a&&(a=this.mapLabel(a,b));0>a&&(a=this.mapPrgToCpu(~a));return a}}
class Chunk$$module$js$6502 extends Uint8Array{constructor(a,b){super(b.length);this.start=a;this.set(b)}apply(a){a.subarray(this.start,this.start+this.length).set(this)}shift(a){return new Chunk$$module$js$6502(this.start+a,this)}}
class Patch$$module$js$6502{constructor(a){this.data=a}static from(a){const b=[];var c=8;for(var d of a)a=new Uint8Array(d.length+5),a[0]=d.start>>>16,a[1]=d.start>>>8&255,a[2]=d.start&255,a[3]=d.length>>>8,a[4]=d.length&255,a.set(d,5),b.push(a),c+=a.length;c=new Uint8Array(c);d=5;c[0]=80;c[1]=65;c[2]=84;c[3]=67;c[4]=72;for(const a of b)c.subarray(d,d+a.length).set(a),d+=a.length;c[d]=69;c[d+1]=79;c[d+2]=70;return new Patch$$module$js$6502(c)}apply(a){for(const b of this)b.apply(a)}*[Symbol.iterator](){let a=
5;for(;a<this.data.length-3;){const b=this.data[a+3]<<8|this.data[a+4];yield new Chunk$$module$js$6502(this.data[a]<<16|this.data[a+1]<<8|this.data[a+2],this.data.subarray(a+5,a+5+b));a+=b+5}}toHexString(){return[...this.data].map((a)=>a.toString(16).padStart(2,"0")).join("")}}
const assemble$$module$js$6502=(a,b="input")=>{b=new File$$module$js$6502({},b);for(const c of a.split("\n"))b.ingest(c);a=b.assemble();return Patch$$module$js$6502.from(a)},buildRomPatch$$module$js$6502=(a,b,c=262144)=>{a=[...a].map((a)=>a.shift(16));b=[...b||[]].map((a)=>a.shift(16+c));return Patch$$module$js$6502.from([...a,...b])};
class Opcode$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(a,b,c){super();this.mnemonic=a;this.pcInternal=c;this.arg=findMode$$module$js$6502(a,b)}get pc(){return this.pcInternal}size(){return 1+this.arg[1]}bytes(){let a=this.arg[2];if("Relative"===this.arg[0]&&(a-=this.pc+2,!(128>a&&-128<=a)))throw Error(`Too far to branch: ${a} at ${this.source()}`);var b=opcodes$$module$js$6502[this.mnemonic][this.arg[0]];if(null==b)throw Error(`No opcode: ${this.mnemonic} ${this.arg[0]}`);b=
[b];let c=this.arg[1];for(;c--;)b.push(a&255),a>>>=8;return b}expand(a){this.arg[2]=a.map(this.arg[2],this.pc);try{this.pcInternal=a.map(~this.pc)}catch(b){}}}
const find$$module$js$6502=(a,b)=>{let c=0,d=a.length-1;if(0>d||b<a[0])return-1;var e=a[d];if(b===e)return d;if(b>e)return~a.length;for(;1<d-c;)e=c+d>>1,b<a[e]?d=e:c=e;return b===a[c]?c:~d},findMode$$module$js$6502=(a,b)=>{for(const [d,e]of modes$$module$js$6502){var c=d.exec(b);if(c){c=e(c[1]);if(!(a in opcodes$$module$js$6502))throw Error(`Bad mnemonic: ${a}`);if(c[0]in opcodes$$module$js$6502[a])return c}}throw Error(`Could not find mode for ${a} ${b}
Expected one of [${Object.keys(opcodes$$module$js$6502[a]).join(", ")}]`);},modes$$module$js$6502=[[/^$/,()=>["Implied",0,0]],[/^#(.+)$/,(a)=>["Immediate",1,parseNumber$$module$js$6502(a,!0)]],[/^(\$..)$/,(a)=>["ZeroPage",1,parseNumber$$module$js$6502(a,!0)]],[/^(\$..),x$/,(a)=>["ZeroPageX",1,parseNumber$$module$js$6502(a,!0)]],[/^(\$..),y$/,(a)=>["ZeroPageY",1,parseNumber$$module$js$6502(a,!0)]],[/^\((\$..),x\)$/,(a)=>["PreindexedIndirect",1,parseNumber$$module$js$6502(a,!0)]],[/^\((\$..)\),y$/,
(a)=>["PostindexedIndirect",1,parseNumber$$module$js$6502(a,!0)]],[/^\((.+)\)$/,(a)=>["IndirectAbsolute",2,parseNumber$$module$js$6502(a,!0)]],[/^(.+),x$/,(a)=>["AbsoluteX",2,parseNumber$$module$js$6502(a,!0)]],[/^(.+),y$/,(a)=>["AbsoluteY",2,parseNumber$$module$js$6502(a,!0)]],[/^(.+)$/,(a)=>["Absolute",2,parseNumber$$module$js$6502(a,!0)]],[/^(.+)$/,(a)=>["Relative",1,parseNumber$$module$js$6502(a,!0)]]];
function parseNumber$$module$js$6502(a,b=!1){if(a.startsWith("$"))return Number.parseInt(a.substring(1),16);if(a.startsWith("%"))return Number.parseInt(a.substring(1),2);if(a.startsWith("0"))return Number.parseInt(a,8);const c=Number.parseInt(a,10);if(!Number.isNaN(c))return c;if(b)return a;throw Error(`Bad number: ${a}`);}
const opcodes$$module$js$6502={adc:{Absolute:109,AbsoluteX:125,AbsoluteY:121,Immediate:105,PostindexedIndirect:113,PreindexedIndirect:97,ZeroPage:101,ZeroPageX:117},and:{Absolute:45,AbsoluteX:61,AbsoluteY:57,Immediate:41,PostindexedIndirect:49,PreindexedIndirect:33,ZeroPage:37,ZeroPageX:53},asl:{Absolute:14,AbsoluteX:30,Implied:10,ZeroPage:6,ZeroPageX:22},bcc:{Relative:144},bcs:{Relative:176},beq:{Relative:240},bit:{Absolute:44,ZeroPage:36},bmi:{Relative:48},bne:{Relative:208},bpl:{Relative:16},brk:{Implied:0},
bvc:{Relative:80},bvs:{Relative:112},clc:{Implied:24},cld:{Implied:216},cli:{Implied:88},clv:{Implied:184},cmp:{Absolute:205,AbsoluteX:221,AbsoluteY:217,Immediate:201,PostindexedIndirect:209,PreindexedIndirect:193,ZeroPage:197,ZeroPageX:213},cpx:{Absolute:236,Immediate:224,ZeroPage:228},cpy:{Absolute:204,Immediate:192,ZeroPage:196},dec:{Absolute:206,AbsoluteX:222,ZeroPage:198,ZeroPageX:214},dex:{Implied:202},dey:{Implied:136},eor:{Absolute:77,AbsoluteX:93,AbsoluteY:89,Immediate:73,PostindexedIndirect:81,
PreindexedIndirect:65,ZeroPage:69,ZeroPageX:85},inc:{Absolute:238,AbsoluteX:254,ZeroPage:230,ZeroPageX:246},inx:{Implied:232},iny:{Implied:200},jmp:{Absolute:76,IndirectAbsolute:108},jsr:{Absolute:32},lda:{Absolute:173,AbsoluteX:189,AbsoluteY:185,Immediate:169,PostindexedIndirect:177,PreindexedIndirect:161,ZeroPage:165,ZeroPageX:181},ldx:{Absolute:174,AbsoluteY:190,Immediate:162,ZeroPage:166,ZeroPageY:182},ldy:{Absolute:172,AbsoluteX:188,Immediate:160,ZeroPage:164,ZeroPageX:180},lsr:{Absolute:78,
AbsoluteX:94,Implied:74,ZeroPage:70,ZeroPageX:86},nop:{Implied:234},ora:{Absolute:13,AbsoluteX:29,AbsoluteY:25,Immediate:9,PostindexedIndirect:17,PreindexedIndirect:1,ZeroPage:5,ZeroPageX:21},pha:{Implied:72},php:{Implied:8},pla:{Implied:104},plp:{Implied:40},rol:{Absolute:46,AbsoluteX:62,Implied:42,ZeroPage:38,ZeroPageX:54},ror:{Absolute:110,AbsoluteX:126,Implied:106,ZeroPage:102,ZeroPageX:118},rti:{Implied:64},rts:{Implied:96},sbc:{Absolute:237,AbsoluteX:253,AbsoluteY:249,Immediate:233,PostindexedIndirect:241,
PreindexedIndirect:225,ZeroPage:229,ZeroPageX:245},sec:{Implied:56},sed:{Implied:248},sei:{Implied:120},sta:{Absolute:141,AbsoluteX:157,AbsoluteY:153,PostindexedIndirect:145,PreindexedIndirect:129,ZeroPage:133,ZeroPageX:149},stx:{Absolute:142,ZeroPage:134,ZeroPageY:150},sty:{Absolute:140,ZeroPage:132,ZeroPageX:148},tax:{Implied:170},tay:{Implied:168},tsx:{Implied:186},txa:{Implied:138},txs:{Implied:154},tya:{Implied:152}};var module$js$6502={};module$js$6502.Assembler=Assembler$$module$js$6502;
module$js$6502.assemble=assemble$$module$js$6502;module$js$6502.buildRomPatch=buildRomPatch$$module$js$6502;let assertionsEnabled$$module$js$assert=!0;function disableAsserts$$module$js$assert(){assertionsEnabled$$module$js$assert=!1}function assert$$module$js$assert(a){if(assertionsEnabled$$module$js$assert&&!a)throw Error("impossible");}function fail$$module$js$assert(){if(assertionsEnabled$$module$js$assert)throw Error("impossible");}function die$$module$js$assert(a){throw Error(a);}var module$js$assert={};module$js$assert.disableAsserts=disableAsserts$$module$js$assert;module$js$assert.assert=assert$$module$js$assert;
module$js$assert.fail=fail$$module$js$assert;module$js$assert.die=die$$module$js$assert;const BitsArray$$module$js$bits_array={of:(...a)=>{const b=[];for(const c of a)b[c>>>5]=(b[c>>>5]||0)|1<<c;return b},from:(a)=>{const b=[];for(const c of a)b[c>>>5]=(b[c>>>5]||0)|1<<c;return b},containsAll:(a,b)=>{for(let c=Math.max(a.length,b.length)-1;0<=c;c--)if((b[c]||0)&~(a[c]||0))return!1;return!0},difference:(a,b)=>{const c=Array(Math.max(a.length,b.length));for(let d=Math.max(a.length,b.length)-1;0<=d;d--)c[d]=(a[d]||0)&~(b[d]||0);return c},with:(a,b)=>{a=[...a];a[b>>>5]=(a[b>>>5]||0)|1<<
b;return a},without:(a,b)=>{a=[...a];a[b>>>5]=(a[b>>>5]||0)&~(1<<b);return a},has:(a,b)=>!!((a[b>>>5]||0)&1<<b),bits:(a)=>{const b=[];for(let c=0;c<a.length;c++){let d=a[c],e=32;for(;d;){const a=Math.clz32(d)+1;e-=a;d<<=a;32===a&&(d=0);b.push(c<<5|e)}}return b},clone:(a)=>[...a],empty:(a)=>a.every((a)=>!a)};var module$js$bits_array={};module$js$bits_array.BitsArray=BitsArray$$module$js$bits_array;const BitsBigInt$$module$js$bits_bigint={of:(...a)=>{let b=ZERO$$module$js$bits_bigint;for(const c of a)b|=ONE$$module$js$bits_bigint<<BigInt(c);return b},from:(a)=>{let b=ZERO$$module$js$bits_bigint;for(const c of a)b|=ONE$$module$js$bits_bigint<<BigInt(c);return b},containsAll:(a,b)=>!(b&~a),with:(a,b)=>a|ONE$$module$js$bits_bigint<<BigInt(b),without:(a,b)=>a&~(ONE$$module$js$bits_bigint<<BigInt(b)),has:(a,b)=>!!(a&ONE$$module$js$bits_bigint<<BigInt(b)),bits:(a)=>{const b=[];let c=0;for(;a;){let d=
Number(a&MAX_UINT32$$module$js$bits_bigint),e=32;for(;d;){const a=Math.clz32(d)+1;e-=a;d<<=a;32===a&&(d=0);b.push(c|e)}a>>=THIRTY_TWO$$module$js$bits_bigint;c+=32}return b},clone:(a)=>a,empty:(a)=>!a,difference:(a,b)=>a&~b},BIGINT_OK$$module$js$bits_bigint="function"===typeof BigInt&&"bigint"===typeof BigInt(0),ZERO$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&BigInt(0),ONE$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&BigInt(1),MAX_UINT32$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&
BigInt(4294967295),THIRTY_TWO$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&BigInt(32);var module$js$bits_bigint={};module$js$bits_bigint.BitsBigInt=BitsBigInt$$module$js$bits_bigint;module$js$bits_bigint.BIGINT_OK=BIGINT_OK$$module$js$bits_bigint;const Bits$$module$js$bits=BIGINT_OK$$module$js$bits_bigint?BitsBigInt$$module$js$bits_bigint:BitsArray$$module$js$bits_array;var module$js$bits={};module$js$bits.Bits=Bits$$module$js$bits;let table$$module$js$crc32;
const buildTable$$module$js$crc32=()=>{let a;table$$module$js$crc32=new Uint32Array(256);for(let b=0;256>b;b++){a=b;for(let b=0;8>b;b++)a=a&1?3988292384^a>>>1:a>>>1;table$$module$js$crc32[b]=a}},USE_TEXT_ENCODER$$module$js$crc32=!1,strToBytes$$module$js$crc32=USE_TEXT_ENCODER$$module$js$crc32&&"function"===typeof TextEncoder?(a)=>(new TextEncoder).encode(a):(a)=>a.split("").map((a)=>a.charCodeAt(0)),crc32$$module$js$crc32=(a)=>{table$$module$js$crc32||buildTable$$module$js$crc32();"string"===typeof a&&
(a=strToBytes$$module$js$crc32(a));let b=-1;for(let c=0,d=a.length;c<d;c++)b=b>>>8^table$$module$js$crc32[(b^a[c])&255];return(b^-1)>>>0};var module$js$crc32={};module$js$crc32.crc32=crc32$$module$js$crc32;class Deque$$module$js$util{constructor(a){this.buffer=Array(16);this.mask=15;this.size=this.end=this.start=0;a&&this.push(...a)}[Symbol.iterator](){let a=0;return{next:()=>a>=this.size?{value:void 0,done:!0}:{value:this.buffer[this.start+a++&this.mask],done:!1},[Symbol.iterator](){return this}}}get length(){return this.size}upsize(a){for(;this.mask<=a;)this.end<this.start&&(this.start+=this.mask+1),this.mask=this.mask<<1|1,this.buffer=this.buffer.concat(this.buffer);this.size=a}push(...a){this.upsize(this.size+
a.length);for(const b of a)this.buffer[this.end]=b,this.end=this.end+1&this.mask}pop(){if(this.size)return this.end=this.end-1&this.mask,this.size--,this.buffer[this.end]}peek(){if(this.size)return this.buffer[this.end-1&this.mask]}unshift(...a){this.upsize(this.size+a.length);let b=this.start=this.start-a.length&this.mask;for(const c of a)this.buffer[b++&this.mask]=c}shift(){if(this.size){var a=this.buffer[this.start];this.start=this.start+1&this.mask;this.size--;return a}}front(){if(this.size)return this.buffer[this.start]}get(a){if(!(a>=
this.size))return this.buffer[this.start+a&this.mask]}slice(a,b=this.size){0>a&&(a+=this.size);0>b&&(b+=this.size);if(b<=a)return[];a=this.start+Math.max(0,Math.min(this.size,a))&this.mask;b=this.start+Math.max(0,Math.min(this.size,b))&this.mask;return a<=b?this.buffer.slice(a,b):this.buffer.slice(a).concat(this.buffer.slice(0,b))}splice(a,b,...c){0>a&&(a+=this.size);a=Math.max(0,Math.min(this.size,a));b=Math.max(0,Math.min(this.size-a,b));var d=a+b;b=c.length-b;const e=this.slice(a,d);this.upsize(this.size+
b);this.size-=b;if(0===a)for(this.start=this.start-b&this.mask,a=0;a<c.length;a++)this.buffer[this.start+a&this.mask]=c[a];else if(d===this.size)for(this.end=this.end+b&this.mask,a+=this.start,d=0;d<c.length;d++)this.buffer[a+d&this.mask]=c[d];else c=[...this.slice(0,a),...c,...this.slice(d)],c.length=this.buffer.length,this.buffer=c,this.start=0,this.end=this.size;this.size+=b;return e}toString(){const a=Array(this.size);for(let b=0;b<this.size;b++)a[b]=this.buffer[this.start+b&this.mask];return`[${a.join(", ")}]`}}
const breakLines$$module$js$util=(a,b)=>{a=a.trim();const c=[];for(;a.length>b;){let d=a.substring(0,b).lastIndexOf(" ");0>d&&(d=b);c.push(a.substring(0,d).trim());a=a.substring(d).trim()}c.push(a.trim());return c};class UsageError$$module$js$util extends Error{}
class SuffixTrie$$module$js$util{constructor(a=""){this.key=a;this.next=new Map}get(a){let b=this;for(let c=a.length-1;0<=c&&b;c++)b=b.next.get(a[c]);return b&&b.data}with(a){let b=this.next.get(a);b||this.next.set(a,b=new SuffixTrie$$module$js$util(a+this.key));return b}set(a,b){let c=this;for(let b=a.length-1;0<=b&&c;b++)c=c.with(a[b]);c.data=b}*values(){const a=[this];for(;a.length;){const b=a.pop();b.data&&(yield b.data);a.push(...b.next.values())}}}
class DefaultMap$$module$js$util extends Map{constructor(a,b){super(b);this.supplier=a}get(a){let b=super.get(a);null==b&&super.set(a,b=this.supplier(a));return b}sortedKeys(a){return[...this.keys()].sort(a)}sortedEntries(a){return this.sortedKeys(a).map((a)=>[a,this.get(a)])}}class IndexedSet$$module$js$util{constructor(){this.forward=[];this.reverse=new Map}add(a){let b=this.reverse.get(a);null==b&&this.reverse.set(a,b=this.forward.push(a)-1);return b}get(a){return this.forward[a]}}var iters$$module$js$util;
(function(a){a.concat=function*(...a){for(const b of a)yield*b};a.isEmpty=function(a){return!!a[Symbol.iterator]().next().done};a.map=function*(a,c){for(const b of a)yield c(b)};a.filter=function*(a,c){for(const b of a)c(b)&&(yield b)};a.flatMap=function*(a,c){for(const b of a)yield*c(b)};a.count=function(a){let b=0;for(const c of a)b++;return b};a.first=function(a,c){for(const b of a)return b;if(2>arguments.length)throw Error(`Empty iterable: ${a}`);return c};a.zip=function(a,c,d=(a,b)=>[a,b]){return{*[Symbol.iterator](){const b=
a[Symbol.iterator](),f=c[Symbol.iterator]();let g,h;for(;g=b.next(),h=f.next(),!g.done&&!h.done;)yield d(g.value,h.value)}}}})(iters$$module$js$util||(iters$$module$js$util={}));function spread$$module$js$util(a){return[...a]}class LabeledSet$$module$js$util{constructor(){this.map=new Map}add(a){this.map.set(a.label,a)}has(a){return this.map.has(a.label)}delete(a){this.map.delete(a.label)}[Symbol.iterator](){return this.map.values()}}
const INVALIDATED$$module$js$util=Symbol("Invalidated"),SIZE$$module$js$util=Symbol("Size");
class SetMultimapSetView$$module$js$util{constructor(a,b,c){this.ownerMap=a;this.ownerKey=b;this.currentSet=c}getCurrentSet(){if(!this.currentSet||this.currentSet[INVALIDATED$$module$js$util])this.currentSet=this.ownerMap.get(this.ownerKey)||new Set;return this.currentSet}mutateSet(a){const b=this.getCurrentSet(),c=b.size;try{return a(b)}finally{this.ownerMap[SIZE$$module$js$util]+=b.size-c,b.size||(this.ownerMap.delete(this.ownerKey),b[INVALIDATED$$module$js$util]=!0)}}add(a){this.mutateSet((b)=>
b.add(a));return this}has(a){return this.getCurrentSet().has(a)}clear(){this.mutateSet((a)=>a.clear())}delete(a){return this.mutateSet((b)=>b.delete(a))}[Symbol.iterator](){return this.getCurrentSet()[Symbol.iterator]()}values(){return this.getCurrentSet().values()}keys(){return this.getCurrentSet().keys()}entries(){return this.getCurrentSet().entries()}forEach(a,b){this.getCurrentSet().forEach(a,b)}get size(){return this.getCurrentSet().size}get [Symbol.toStringTag](){return"Set"}}
Reflect.setPrototypeOf(SetMultimapSetView$$module$js$util.prototype,Set.prototype);class SetMultimap$$module$js$util{constructor(a=[]){this.map=new Map;this.map[SIZE$$module$js$util]=0;for(const [b,c]of a)this.add(b,c)}get size(){return this.map[SIZE$$module$js$util]}get(a){return new SetMultimapSetView$$module$js$util(this.map,a,this.map.get(a))}add(a,b){let c=this.map.get(a);c||this.map.set(a,c=new Set);a=c.size;c.add(b);this.map[SIZE$$module$js$util]+=c.size-a}}
class Multiset$$module$js$util{constructor(a=[]){this.entries=new DefaultMap$$module$js$util(()=>0,a)}add(a){this.entries.set(a,this.entries.get(a)+1)}delete(a){const b=this.entries.get(a)-1;0<b?this.entries.set(a,b):this.entries.delete(a)}unique(){return this.entries.size}count(a){return this.entries.has(a)?this.entries.get(a):0}[Symbol.iterator](){return this.entries.entries()}}function assertNever$$module$js$util(a){throw Error(`non-exhaustive check: ${a}`);}
function assert$$module$js$util(a){if(!a)throw Error(`asserted but falsy: ${a}`);return a}function isNonNull$$module$js$util(a){return null!=a}function memoize$$module$js$util(a){const b={};return function(...c){for(const a of c)b.next||(b.next=new WeakMap),(b.next||(b.next=new WeakMap)).get(a)||b.next.set(a,{});b.cached||(b.value=a.apply(this,c),b.cached=!0);return b.value}}function strcmp$$module$js$util(a,b){return a<b?-1:b<a?1:0}
class Keyed$$module$js$util{constructor(a){this.data=a}get(a){return this.data[a]}[Symbol.iterator](){return this.data.entries()}values(){return this.data[Symbol.iterator]()}}
class ArrayMap$$module$js$util{constructor(a){this.data=a;const b=new Map;for(let c=0;c<a.length;c++)b.set(a[c],c);this.rev=b;this.length=a.length}get(a){return this.data[a]}hasValue(a){return this.rev.has(a)}index(a){const b=this.rev.get(a);if(null==b)throw Error(`Missing index for ${a}`);return b}[Symbol.iterator](){return this.data.entries()}values(){return this.data[Symbol.iterator]()}}
class MutableArrayBiMap$$module$js$util{constructor(){this._fwd=[];this._rev=[]}*[Symbol.iterator](){for(let a=0;a<this._fwd.length;a++){const b=this._fwd[a];null!=b&&(yield[a,b])}}*keys(){for(let a=0;a<this._fwd.length;a++)null!=this._fwd[a]&&(yield a)}*values(){for(let a=0;a<this._rev.length;a++)null!=this._rev[a]&&(yield a)}get(a){return this._fwd[a]}has(a){return null!=this._fwd[a]}hasValue(a){return null!=this._rev[a]}index(a){const b=this._rev[a];if(null==b)throw Error(`Missing index for ${a}`);
return b}set(a,b){if(this._fwd[a])throw Error(`already has key ${a}`);if(this._rev[b])throw Error(`already has value ${b}`);this._fwd[a]=b;this._rev[b]=a}replace(a,b){var c=this._rev[b];null!=c&&delete this._fwd[c];c=this._fwd[a];null!=c&&delete this._rev[c];this._fwd[a]=b;this._rev[b]=a;return c}}class CancelTokenReg$$module$js$util{constructor(a,b){this.callback=a;this.source=b}unregister(){this.source.unregister(this)}}
class CancelTokenSource$$module$js$util{constructor(){this.cancelled=!1;this.registrations=new Set;const a=this;this.token={get requested(){return a.cancelled},throwIfRequested(){if(a.cancelled)throw Error("Cancelled");},register(b){b=new CancelTokenReg$$module$js$util(b,a);a.registrations.add(b);return b}}}cancel(){if(!this.cancelled){this.cancelled=!0;var a=[...this.registrations];this.registrations.clear();for(const b of a)b.callback()}}unregister(a){this.registrations.delete(a)}}var CancelToken$$module$js$util;
(function(a){a.NONE={get requested(){return!1},throwIfRequested(){},register(){return{unregister(){}}}};a.CANCELLED={get requested(){return!0},throwIfRequested(){throw Error("cancelled");},register(){return{unregister(){}}}}})(CancelToken$$module$js$util||(CancelToken$$module$js$util={}));class CaseMap$$module$js$util{constructor(){this.s=new Map;this.i=new Map;this.sensitive=!0}set(a,b){const c=a=a.toUpperCase();this.sensitive&&(this.s.set(a,b),this.i.set(c,b))}}var module$js$util={};
module$js$util.Deque=Deque$$module$js$util;module$js$util.breakLines=breakLines$$module$js$util;module$js$util.UsageError=UsageError$$module$js$util;module$js$util.SuffixTrie=SuffixTrie$$module$js$util;module$js$util.DefaultMap=DefaultMap$$module$js$util;module$js$util.IndexedSet=IndexedSet$$module$js$util;module$js$util.iters=iters$$module$js$util;module$js$util.spread=spread$$module$js$util;module$js$util.LabeledSet=LabeledSet$$module$js$util;module$js$util.SetMultimap=SetMultimap$$module$js$util;
module$js$util.Multiset=Multiset$$module$js$util;module$js$util.assertNever=assertNever$$module$js$util;module$js$util.assert=assert$$module$js$util;module$js$util.isNonNull=isNonNull$$module$js$util;module$js$util.memoize=memoize$$module$js$util;module$js$util.strcmp=strcmp$$module$js$util;module$js$util.Keyed=Keyed$$module$js$util;module$js$util.ArrayMap=ArrayMap$$module$js$util;module$js$util.MutableArrayBiMap=MutableArrayBiMap$$module$js$util;module$js$util.CancelTokenSource=CancelTokenSource$$module$js$util;
module$js$util.CancelToken=CancelToken$$module$js$util;module$js$util.CaseMap=CaseMap$$module$js$util;class AbstractCpu$$module$js$asm$cpu{constructor(a){this.table=a}op(a){const b=this.table[a];if(!b)throw Error(`Bad mnemonic: ${a}`);return b}argLen(a){switch(a){case "acc":case "imp":return 0;case "imm":case "rel":case "zpg":case "zpx":case "zpy":case "iny":return 1;case "abs":case "abx":case "aby":case "ind":case "inx":return 2}return assertNever$$module$js$util(a)}}var Cpu$$module$js$asm$cpu;
(function(a){a.P02=new AbstractCpu$$module$js$asm$cpu({adc:{abs:109,abx:125,aby:121,imm:105,iny:113,inx:97,zpg:101,zpx:117},and:{abs:45,abx:61,aby:57,imm:41,iny:49,inx:33,zpg:37,zpx:53},asl:{abs:14,abx:30,acc:10,imp:10,zpg:6,zpx:22},bcc:{rel:144},bcs:{rel:176},beq:{rel:240},bit:{abs:44,zpg:36},bmi:{rel:48},bne:{rel:208},bpl:{rel:16},brk:{imp:0},bvc:{rel:80},bvs:{rel:112},clc:{imp:24},cld:{imp:216},cli:{imp:88},clv:{imp:184},cmp:{abs:205,abx:221,aby:217,imm:201,iny:209,inx:193,zpg:197,zpx:213},cpx:{abs:236,
imm:224,zpg:228},cpy:{abs:204,imm:192,zpg:196},dec:{abs:206,abx:222,zpg:198,zpx:214},dex:{imp:202},dey:{imp:136},eor:{abs:77,abx:93,aby:89,imm:73,iny:81,inx:65,zpg:69,zpx:85},inc:{abs:238,abx:254,zpg:230,zpx:246},inx:{imp:232},iny:{imp:200},jmp:{abs:76,ind:108},jsr:{abs:32},lda:{abs:173,abx:189,aby:185,imm:169,iny:177,inx:161,zpg:165,zpx:181},ldx:{abs:174,aby:190,imm:162,zpg:166,zpy:182},ldy:{abs:172,abx:188,imm:160,zpg:164,zpx:180},lsr:{abs:78,abx:94,acc:74,imp:74,zpg:70,zpx:86},nop:{imp:234},ora:{abs:13,
abx:29,aby:25,imm:9,iny:17,inx:1,zpg:5,zpx:21},pha:{imp:72},php:{imp:8},pla:{imp:104},plp:{imp:40},rol:{abs:46,abx:62,acc:42,imp:42,zpg:38,zpx:54},ror:{abs:110,abx:126,acc:106,imp:106,zpg:102,zpx:118},rti:{imp:64},rts:{imp:96},sbc:{abs:237,abx:253,aby:249,imm:233,iny:241,inx:225,zpg:229,zpx:245},sec:{imp:56},sed:{imp:248},sei:{imp:120},sta:{abs:141,abx:157,aby:153,iny:145,inx:129,zpg:133,zpx:149},stx:{abs:142,zpg:134,zpy:150},sty:{abs:140,zpg:132,zpx:148},tax:{imp:170},tay:{imp:168},tsx:{imp:186},
txa:{imp:138},txs:{imp:154},tya:{imp:152}})})(Cpu$$module$js$asm$cpu||(Cpu$$module$js$asm$cpu={}));var module$js$asm$cpu={};module$js$asm$cpu.Cpu=Cpu$$module$js$asm$cpu;var TokenSource$$module$js$asm$token;(function(a){class b{next(){for(;;){this.sink||(this.sink=this.pump());const {value:a,done:b}=this.sink.next();if(!b)return a;this.sink=void 0}}}a.Abstract=b;a.concat=function(...a){let b;return{next:()=>{for(;;){b||(b=a.shift());if(!b)break;const c=b.next();if(c)return c;b=void 0}}}}})(TokenSource$$module$js$asm$token||(TokenSource$$module$js$asm$token={}));var Token$$module$js$asm$token;
(function(a){function b(a,b){return a&&b&&a.token===b.token&&"grp"!==a.token&&a.str===b.str&&a.num===b.num?!0:!1}function c(a){switch(a.token){case "num":return`NUM[$${a.num.toString(16)}]`;case "str":return`STR[$${a.str}]`;case "lb":return"[";case "rb":return"]";case "grp":return"{";case "lc":return"{";case "rc":return"}";case "lp":return"(";case "rp":return")";case "eol":return"EOL";case "eof":return"EOF";case "ident":return a.str;case "cs":case "op":return`${a.str.toUpperCase()}`;default:assertNever$$module$js$util(a)}}
function d(a){return(a=a.source)?`\n  at ${a.file}:${a.line}:${a.column}`:""}function e(a){return c(a)+d(a)}function f(a,b){return g("ident","identifier",a,b)}function g(a,b,c,d){if(!c){if(!d)throw Error(`Expected ${b}`);throw Error(`Expected ${b} after ${e(d)}`);}if(c.token!==a)throw Error(`Expected ${b}: ${e(c)}`);return c.str}function h(a,c,d){for(;d<a.length;d++)if(b(a[d],c))return d;return-1}function k(a){let b=0;for(const c of a)"grp"===c.token?b+=2+k(c.inner):b++;return b}a.LB={token:"lb"};
a.LC={token:"lc"};a.LP={token:"lp"};a.RB={token:"rb"};a.RC={token:"rc"};a.RP={token:"rp"};a.EOL={token:"eol"};a.EOF={token:"eof"};a.DEFINE={token:"cs",str:".define"};a.DOT_EOL={token:"cs",str:".eol"};a.ELSE={token:"cs",str:".else"};a.ELSEIF={token:"cs",str:".elseif"};a.ENDIF={token:"cs",str:".endif"};a.ENDMAC={token:"cs",str:".endmac"};a.ENDMACRO={token:"cs",str:".endmacro"};a.ENDREP={token:"cs",str:".endrep"};a.ENDREPEAT={token:"cs",str:".endrepeat"};a.ENDPROC={token:"cs",str:".endproc"};a.ENDSCOPE=
{token:"cs",str:".endscope"};a.LOCAL={token:"cs",str:".local"};a.MACRO={token:"cs",str:".macro"};a.REPEAT={token:"cs",str:".repeat"};a.SET={token:"cs",str:".set"};a.SKIP={token:"cs",str:".skip"};a.BYTE={token:"cs",str:".byte"};a.WORD={token:"cs",str:".word"};a.COLON={token:"op",str:":"};a.COMMA={token:"op",str:","};a.STAR={token:"op",str:"*"};a.IMMEDIATE={token:"op",str:"#"};a.ASSIGN={token:"op",str:"="};a.match=function(a,b){return a.token!==b.token?!1:"num"===a.token||"str"===a.token?!0:a.str!==
b.str?!1:!0};a.eq=b;a.name=c;a.at=d;a.nameAt=e;a.expectEol=function(b,c="end of line"){if(b)throw Error(`Expected ${c}: ${a.nameAt(b)}`);};a.expect=function(a,d,f){if(!d){if(!f)throw Error(`Expected ${c(a)}`);throw Error(`Expected ${c(a)} after ${e(d)}`);}if(!b(a,d))throw Error(`Expected ${c(a)}: ${e(d)}`);};a.expectIdentifier=f;a.expectString=function(a,b){return g("str","constant string",a,b)};a.identsFromCList=function(c){var d;if(!c.length)return[];const f=[];for(let g=0;g<=c.length;g+=2){const h=
c[g];if("ident"!==(null===(d=h)||void 0===d?void 0:d.token)){if(h)throw Error(`Expected identifier: ${e(h)}`);throw Error(`Expected identifier after ${e(c[c.length-1])}`);}if(g+1<c.length&&!b(c[g+1],a.COMMA))throw Error(`Expected comma: ${e(c[g+1])}`);f.push(h.str)}return f};a.findBalanced=function(a,b){const c=a[b++].token;if("lp"!==c&&"lb"!==c)throw Error("non-grouping token");const d="lp"===c?"rp":"rb";let e=1;for(;b<a.length;b++){const f=a[b].token;e+=Number(f===c)-Number(f===d);if(!e)return b}return-1};
a.parseArgList=function(c,e=0,f=c.length){let g=[];const h=[g];let k=0;for(;e<f;e++){const f=c[e];if(!k&&b(f,a.COMMA))h.push(g=[]);else if(g.push(f),b(f,a.LP)&&k++,b(f,a.RP)&&0>--k)throw Error(`Unbalanced paren${d(f)}`);}return h};a.parseAttrList=function(c,g){const h=new Map;let k,l=[];if(g>=c.length)return h;if(!b(c[g],a.COLON))throw Error(`Unexpected: ${e(c[g])}`);for(g+=1;g<c.length;g++){const e=c[g];if(b(e,a.COLON)){if(null==k)throw Error(`Missing key${d(e)}`);h.set(k,l);k=void 0;l=[]}else null==
k?k=f(e):l.push(e)}null!=k?h.set(k,l):f(void 0,c[c.length-1]);return h};a.findComma=function(b,c){c=h(b,a.COMMA,c);return 0>c?b.length:c};a.find=h;a.count=k;a.isRegister=function(a,b){return"ident"===a.token&&a.str.toLowerCase()===b};a.str=function(b){switch(b.token){case "cs":case "ident":case "str":case "op":return b.str}throw Error(`Non-string token: ${a.nameAt(b)}`);};a.strip=function(a){delete a.source;return a}})(Token$$module$js$asm$token||(Token$$module$js$asm$token={}));
const TOKENFUNCS$$module$js$asm$token=new Set(".blank .const .defined .left .match .mid .right .tcount .xmatch".split(" ")),DIRECTIVES$$module$js$asm$token=".define .else .elseif .endif .endmacro .endproc .endscope .ident .if .ifblank .ifdef .ifnblank .ifndef .ifnref .ifref .include .local .macro .proc .scope .skip".split(" ");var module$js$asm$token={};module$js$asm$token.TokenSource=TokenSource$$module$js$asm$token;module$js$asm$token.Token=Token$$module$js$asm$token;
module$js$asm$token.TOKENFUNCS=TOKENFUNCS$$module$js$asm$token;module$js$asm$token.DIRECTIVES=DIRECTIVES$$module$js$asm$token;var Expr$$module$js$asm$expr;
(function(a){function b(a,b){function c(a){return a.args?Object.assign({},a,{args:a.args.map((b)=>d(b,a))}):a}function d(a,d){const e=a.source;a=b(a,c,d);e&&!a.source&&(a.source=e);return a}return d(a)}function c(a,b){const [c,e]=d(a,void 0===b?0:b);if(e<a.length)throw Error(`Garbage after expression: ${module$js$asm$token.Token.nameAt(a[e])}`);if(!c)throw Error("No expression?");return c}function d(a,b){function d(){const [a,[,,b]]=f.pop(),c=g.splice(g.length-b,b);if(c.length!==b)throw Error("shunting parse failed?");
g.push(fixSize$$module$js$asm$expr({op:a,args:c}))}b=void 0===b?0:b;var e;const f=[],g=[];for(var h=!0,k=b;k<a.length;k++){var l=a[k];if(h)if("cs"===l.token||"op"===l.token){var m=NAME_MAP$$module$js$asm$expr.get(l.str);if(m=PREFIXOPS$$module$js$asm$expr.get(null!==m&&void 0!==m?m:l.str))f.push([l.str,m]);else if("cs"===l.token){h=l.str;if(!FUNCTIONS$$module$js$asm$expr.has(h))throw Error(`No such function: ${module$js$asm$token.Token.nameAt(l)}`);m=a[k+1];if("lp"!==(null===(e=m)||void 0===e?void 0:
e.token))throw Error(`Bad funcall: ${module$js$asm$token.Token.nameAt(null!==m&&void 0!==m?m:l)}`);l=module$js$asm$token.Token.findBalanced(a,k+1);if(0>l)throw Error(`Never closed: ${module$js$asm$token.Token.nameAt(m)}`);m=[];for(const b of module$js$asm$token.Token.parseArgList(a,k+2,l))m.push(c(b));k=l;g.push(fixSize$$module$js$asm$expr({op:h,args:m}));h=!1}else if(module$js$asm$token.Token.eq(l,module$js$asm$token.Token.STAR))g.push({op:"sym",sym:"*"}),h=!1;else throw Error(`Unknown prefix operator: ${module$js$asm$token.Token.nameAt(l)}`);
}else if("lp"===l.token){h=module$js$asm$token.Token.findBalanced(a,k);if(0>h)throw Error(`No close paren: ${module$js$asm$token.Token.nameAt(l)}`);k=c(a.slice(k+1,h));g.push(k);k=h;h=!1}else if("ident"===l.token)g.push({op:"sym",sym:l.str}),h=!1;else if("num"===l.token)l=l.num,g.push({op:"num",num:l,meta:size$$module$js$asm$expr(l)}),h=!1;else throw Error(`Bad expression token: ${module$js$asm$token.Token.nameAt(l)}`);else{if(module$js$asm$token.Token.eq(l,module$js$asm$token.Token.COMMA))break;
if("cs"===l.token||"op"===l.token){h=NAME_MAP$$module$js$asm$expr.get(l.str);h=BINOPS$$module$js$asm$expr.get(null!==h&&void 0!==h?h:l.str);if(!h)break;for(;f.length;){m=f[f.length-1];const a=compareOp$$module$js$asm$expr(m[1],h);if(0>a)break;if(0===a)throw Error(`Mixing ${m[0]} and ${l.str} needs explicit parens.${module$js$asm$token.Token.at(l)}`);d()}f.push([l.str,h]);h=!0}else break}}for(;f.length;)d();if(1!==g.length)throw Error("shunting parse failed?");a[b].source&&(g[0].source=a[b].source);
return[g[0],k]}function e(a){if(null!=a)return{op:"num",num:a,meta:size$$module$js$asm$expr(a)}}function f(a,b){const c=a.args[0];if(!m(c))return a;a=b(c.num);return{op:"num",num:a,meta:size$$module$js$asm$expr(a)}}function g(a,b){const [c,d]=a.args;if(!m(c)||!m(d))return a;a=b(c.num,d.num);return{op:"num",num:a,meta:size$$module$js$asm$expr(a)}}function h(a){var b,c,d,e,f,g;const [h,k]=a.args;if("num"!==h.op||"num"!==k.op)return a;const l={op:"num",num:h.num+k.num};if(h.meta||k.meta){if((null===
(b=h.meta)||void 0===b?0:b.rel)&&(null===(c=k.meta)||void 0===c?0:c.rel))return a;if(null===(d=h.meta)||void 0===d?0:d.rel)l.meta=h.meta;else if(null===(e=k.meta)||void 0===e?0:e.rel)l.meta=k.meta}null!==(f=l.meta)&&void 0!==f&&f.rel||null!=(null===(g=l.meta)||void 0===g?void 0:g.size)||((l.meta||(l.meta={})).size=size$$module$js$asm$expr(l.num).size);return l}function k(a){var b,c,d,e,f;const [g,h]=a.args;if("num"!==g.op||"num"!==h.op)return a;const k={op:"num",num:g.num-h.num};if(null===(b=h.meta)||
void 0===b?0:b.rel)return(null===(c=g.meta)||void 0===c?0:c.rel)&&g.meta.chunk===h.meta.chunk?k:a;if(null===(d=g.meta)||void 0===d?0:d.rel)k.meta=g.meta;null!==(e=k.meta)&&void 0!==e&&e.rel||null!=(null===(f=k.meta)||void 0===f?void 0:f.size)||((k.meta||(k.meta={})).size=size$$module$js$asm$expr(k.num).size);return k}function m(a){var b;return"num"===a.op&&!(null===(b=a.meta)||void 0===b?0:b.rel)}a.traverse=b;a.traversePost=function(a,c){return b(a,(a,b)=>c(b(a)))};a.evaluate=function(a){var b,c,
d,m;switch(a.op){case ".move":case "im":case "sym":return a;case "num":return(null===(b=a.meta)||void 0===b?0:b.rel)&&null!=a.meta.org?(b=Object.assign({},a.meta),b=(delete b.rel,b),{op:"num",num:a.num+b.org,meta:b}):a;case ".max":throw Error();case ".min":throw Error();}if(1===(null===(c=a.args)||void 0===c?void 0:c.length))switch(a.op){case "+":return a.args[0];case "-":return f(a,(a)=>-a);case "~":return f(a,(a)=>~a);case "!":return f(a,(a)=>+!a);case "<":return f(a,(a)=>a&255);case ">":return f(a,
(a)=>a>>8&255);case "^":return m=e(null===(d=a.args[0].meta)||void 0===d?void 0:d.bank),null!==m&&void 0!==m?m:a;default:throw Error(`Unknown unary operator: ${a.op}`);}switch(a.op){case "+":return h(a);case "-":return k(a);case "*":return g(a,(a,b)=>a*b);case "/":return g(a,(a,b)=>Math.floor(a/b));case ".mod":return g(a,(a,b)=>a%b);case "&":return g(a,(a,b)=>a&b);case "|":return g(a,(a,b)=>a|b);case "^":return g(a,(a,b)=>a^b);case "<<":return g(a,(a,b)=>a<<b);case ">>":return g(a,(a,b)=>a>>>b);case "<":return g(a,
(a,b)=>+(a<b));case "<=":return g(a,(a,b)=>+(a<=b));case ">":return g(a,(a,b)=>+(a>b));case ">=":return g(a,(a,b)=>+(a>=b));case "=":return g(a,(a,b)=>+(a==b));case "<>":return g(a,(a,b)=>+(a!=b));case "&&":return g(a,(a,b)=>a&&b);case "||":return g(a,(a,b)=>a||b);case ".xor":return g(a,(a,b)=>!a&&b||!b&&a||0);default:throw Error(`Unknown operator: ${a.op}`);}};a.identifier=function(a){if("sym"===a.op&&a.sym)return a.sym;throw Error(`Expected identifier but got op: ${a.op}`);};a.parseOnly=c;a.parse=
d})(Expr$$module$js$asm$expr||(Expr$$module$js$asm$expr={}));function compareOp$$module$js$asm$expr(a,b){return a[0]>b[0]?1:a[0]<b[0]?-1:a[1]!==b[1]?0:a[1]}
const BINARY$$module$js$asm$expr=2,UNARY$$module$js$asm$expr=1,BINOPS$$module$js$asm$expr=new Map([["*",[5,4,BINARY$$module$js$asm$expr]],["/",[5,4,BINARY$$module$js$asm$expr]],[".mod",[5,3,BINARY$$module$js$asm$expr]],["&",[5,2,BINARY$$module$js$asm$expr]],["^",[5,1,BINARY$$module$js$asm$expr]],["<<",[5,0,BINARY$$module$js$asm$expr]],[">>",[5,0,BINARY$$module$js$asm$expr]],["+",[4,2,BINARY$$module$js$asm$expr]],["-",[4,2,BINARY$$module$js$asm$expr]],["|",[4,1,BINARY$$module$js$asm$expr]],["<",[3,
0,BINARY$$module$js$asm$expr]],["<=",[3,0,BINARY$$module$js$asm$expr]],[">",[3,0,BINARY$$module$js$asm$expr]],[">=",[3,0,BINARY$$module$js$asm$expr]],["=",[3,0,BINARY$$module$js$asm$expr]],["<>",[3,0,BINARY$$module$js$asm$expr]],["&&",[2,3,BINARY$$module$js$asm$expr]],[".xor",[2,2,BINARY$$module$js$asm$expr]],["||",[2,1,BINARY$$module$js$asm$expr]]]),PREFIXOPS$$module$js$asm$expr=new Map([["+",[9,-1,UNARY$$module$js$asm$expr]],["-",[9,-1,UNARY$$module$js$asm$expr]],["~",[9,-1,UNARY$$module$js$asm$expr]],
["<",[9,-1,UNARY$$module$js$asm$expr]],[">",[9,-1,UNARY$$module$js$asm$expr]],["^",[9,-1,UNARY$$module$js$asm$expr]],["!",[2,-1,UNARY$$module$js$asm$expr]]]),FUNCTIONS$$module$js$asm$expr=new Set([".byteat",".wordat",".max",".min"]),NAME_MAP$$module$js$asm$expr=new Map([[".bitand","&"],[".bitxor","^"],[".bitor","|"],[".shl","<<"],[".shr",">>"],[".and","&&"],[".or","||"],[".bitnot","~"],[".lobyte","<"],[".hibyte",">"],[".bankbyte","^"],[".not","!"]]),SIZE_TRANSFORMS$$module$js$asm$expr=new Map([["^",
(...a)=>1===a.length?1:Math.max(...a)],["<",()=>1],[">",()=>1],["!",()=>1],["<=",()=>1],[">=",()=>1],["<>",()=>1],["=",()=>1],["&",Math.max],["&&",Math.max],["|",Math.max],["||",Math.max],[".xor",Math.max],[".max",Math.max],[".min",Math.max]]);
function fixSize$$module$js$asm$expr(a){var b;const c=null===(b=SIZE_TRANSFORMS$$module$js$asm$expr.get(a.op))||void 0===b?void 0:b(...a.args.map((a)=>{var b;return Number(null===(b=a.meta)||void 0===b?void 0:b.size)}));c&&((a.meta||(a.meta={})).size=c);return a}function size$$module$js$asm$expr(a){return{size:0<=a&&256>a?1:2}}var module$js$asm$expr={};module$js$asm$expr.Expr=Expr$$module$js$asm$expr;module$js$asm$expr.BINOPS=BINOPS$$module$js$asm$expr;var Segment$$module$js$asm$module;(function(a){a.merge=function(a,c){const b=Object.assign({},a,c);a=[...a.free||[],...c.free||[]];a.length&&(b.free=a);return b}})(Segment$$module$js$asm$module||(Segment$$module$js$asm$module={}));var module$js$asm$module={};module$js$asm$module.Segment=Segment$$module$js$asm$module;class State$$module$js$asm$buffer{constructor(a,b,c,d,e){this.line=a;this.column=b;this.prefix=c;this.remainder=d;this.match=e}}
class Buffer$$module$js$asm$buffer{constructor(a,b=0,c=0){this.content=a;this.line=b;this.column=c;this.prefix="";this.remainder=a}advance(a){const b=this.remainder.substring(0,a.length);if(a!==b)throw Error(`Non-rooted token: '${a}' vs '${b}'`);this.prefix+=a;this.remainder=this.remainder.substring(a.length);a=a.split(/\n/g);1<a.length&&(this.line+=a.length-1,this.column=0);this.column+=a[a.length-1].length}saveState(){return new State$$module$js$asm$buffer(this.line,this.column,this.prefix,this.remainder,
this.lastMatch)}restoreState(a){this.line=a.line;this.column=a.column;this.prefix=a.prefix;this.remainder=a.remainder;this.lastMatch=a.match}skip(a){a=a.exec(this.remainder);if(!a)return!1;this.advance(a[0]);return!0}space(){return this.skip(/^[ \t]+/)}newline(){return this.skip(/^\n/)}lookingAt(a){return"string"===typeof a?this.remainder.startsWith(a):a.test(this.remainder)}token(a){if("string"===typeof a){if(!this.remainder.startsWith(a))return!1;a=[a]}else a=a.exec(this.remainder);if(!a)return!1;
a.line=this.line;a.column=this.column;this.lastMatch=a;this.advance(a[0]);return!0}lookBehind(a){if("string"===typeof a)return this.prefix.endsWith(a);a=a.exec(this.prefix);if(!a)return!1;a.line=this.line;a.column=this.line;this.lastMatch=a;return!0}match(){return this.lastMatch}group(a=0){var b;return null===(b=this.lastMatch)||void 0===b?void 0:b[a]}eof(){return!this.remainder}}var module$js$asm$buffer={};module$js$asm$buffer.Buffer=Buffer$$module$js$asm$buffer;class Tokenizer$$module$js$asm$tokenizer{constructor(a,b="input.s",c={}){this.file=b;this.opts=c;this.buffer=new Buffer$$module$js$asm$buffer(a)}next(){for(var a=this.token();module$js$asm$token.Token.eq(a,module$js$asm$token.Token.EOL);)a=this.token();var b=[[]];let c=0;for(;!module$js$asm$token.Token.eq(a,module$js$asm$token.Token.EOL)&&!module$js$asm$token.Token.eq(a,module$js$asm$token.Token.EOF);){if(module$js$asm$token.Token.eq(a,module$js$asm$token.Token.LC))b[c++].push(a),b.push([]);else if(module$js$asm$token.Token.eq(a,
module$js$asm$token.Token.RC)){if(!c)throw Error(`Missing open curly: ${module$js$asm$token.Token.nameAt(a)}`);var d=b.pop();a=b[--c].pop().source;d={token:"grp",inner:d};a&&(d.source=a);b[c].push(d)}else b[c].push(a);a=this.token()}if(c)throw b=b[c-1].pop(),Error(`Missing close curly: ${module$js$asm$token.Token.nameAt(b)}`);return b[0].length?b[0]:void 0}token(){for(;this.buffer.space()||this.buffer.token(/^;.*/)||this.opts.lineContinuations&&this.buffer.token(/^\\\n/););if(this.buffer.eof())return module$js$asm$token.Token.EOF;
var a={file:this.file,line:this.buffer.line,column:this.buffer.column};try{const b=this.tokenInternal();this.opts.skipSourceAnnotations||(b.source=a);return b}catch(b){const {file:c,line:d,column:e}=a;a=(a=this.buffer.group())?` near '${a}'`:"";b.message+=`\n  at ${c}:${d}:${e}${a}`;throw b;}}tokenInternal(){if(this.buffer.newline())return{token:"eol"};if(this.buffer.token(/^@+[a-z0-9_]*/i)||this.buffer.token(/^((::)?[a-z_][a-z0-9_]*)+/i))return this.strTok("ident");if(this.buffer.token(/^\.[a-z]+/i))return this.strTok("cs");
if(this.buffer.token(/^:(\++|-+)/))return this.strTok("ident");if(this.buffer.token(/^(:|\++|-+|&&?|\|\|?|[#*/,=~!^]|<[<>=]?|>[>=]?)/))return this.strTok("op");if(this.buffer.token("["))return{token:"lb"};if(this.buffer.token("{"))return{token:"lc"};if(this.buffer.token("("))return{token:"lp"};if(this.buffer.token("]"))return{token:"rb"};if(this.buffer.token("}"))return{token:"rc"};if(this.buffer.token(")"))return{token:"rp"};if(this.buffer.token(/^["']/))return this.tokenizeStr();if(this.buffer.token(/^[$%]?[0-9a-z_]+/i))return this.tokenizeNum();
throw Error("Syntax error");}tokenizeStr(){const a=this.buffer,b=a.match()[0];let c="";for(;!a.lookingAt(b);){if(a.eof())throw Error(`EOF while looking for ${b}`);a.token(/^\\u([0-9a-f]{4})/i)?c+=String.fromCodePoint(parseInt(a.group(1),16)):a.token(/^\\x([0-9a-f]{2})/i)?c+=String.fromCharCode(parseInt(a.group(1),16)):a.token(/^\\(.)/)?c+=a.group(1):(a.token(/^./),c+=a.group(0))}a.token(b);return{token:"str",str:c}}strTok(a){return{token:a,str:this.buffer.group()}}tokenizeNum(a=this.buffer.group()){this.opts.numberSeparators&&
(a=a.replace(/_/g,""));return"$"===a[0]?parseHex$$module$js$asm$tokenizer(a.substring(1)):"%"===a[0]?parseBin$$module$js$asm$tokenizer(a.substring(1)):"0"===a[0]?parseOct$$module$js$asm$tokenizer(a):parseDec$$module$js$asm$tokenizer(a)}}function parseHex$$module$js$asm$tokenizer(a){if(!/^[0-9a-f]+$/i.test(a))throw Error(`Bad hex number: $${a}`);return{token:"num",num:Number.parseInt(a,16)}}
function parseDec$$module$js$asm$tokenizer(a){if(!/^[0-9]+$/.test(a))throw Error(`Bad decimal number: ${a}`);return{token:"num",num:Number.parseInt(a,10)}}function parseOct$$module$js$asm$tokenizer(a){if(!/^[0-7]+$/.test(a))throw Error(`Bad octal number: ${a}`);return{token:"num",num:Number.parseInt(a,8)}}function parseBin$$module$js$asm$tokenizer(a){if(!/^[01]+$/.test(a))throw Error(`Bad binary number: %${a}`);return{token:"num",num:Number.parseInt(a,2)}}var module$js$asm$tokenizer={};
module$js$asm$tokenizer.Tokenizer=Tokenizer$$module$js$asm$tokenizer;const Segment$$module$js$asm$assembler=module$js$asm$module.Segment;class Symbol$$module$js$asm$assembler{}class BaseScope$$module$js$asm$assembler{constructor(){this.symbols=new Map}pickScope(a){return[a,this]}resolve(a,b){const [c,d]=this.pickScope(a);let e=d.symbols.get(c);if(e)return c!==a&&(e.scoped=!0),e;if(b)return b={},d.symbols.set(c,b),c!==a&&(b.scoped=!0),b}}
class Scope$$module$js$asm$assembler extends BaseScope$$module$js$asm$assembler{constructor(a,b){super();this.parent=a;this.kind=b;this.children=new Map;this.anonymousChildren=[];this.global=a?a.global:this}pickScope(a){var b=this;a=a.split(/::/g);const c=a.pop();for(let c=0;c<a.length;c++){if(!c&&!a[c]){b=b.global;continue}let d=b.children.get(a[c]);for(;!c&&b.parent&&!d;)d=(b=b.parent).children.get(a[c]);if(!d)throw b=a.slice(0,c+1).join("::"),Error(`Could not resolve scope ${b}`);b=d}return[c,
b]}}class CheapScope$$module$js$asm$assembler extends BaseScope$$module$js$asm$assembler{clear(){for(var a of this.symbols){const [b,c]=a;if(!c.expr)throw a=c.ref?module$js$asm$token.Token.at(c.ref):"",Error(`Cheap local label never defined: ${b}${a}`);}this.symbols.clear()}}
class Assembler$$module$js$asm$assembler{constructor(a,b){a=void 0===a?module$js$asm$cpu.Cpu.P02:a;b=void 0===b?{}:b;this.cpu=a;this.opts=b;this.segments=["code"];this.segmentData=new Map;this.segmentStack=[];this.symbols=[];this.globals=new Map;this.currentScope=new Scope$$module$js$asm$assembler;this.cheapLocals=new CheapScope$$module$js$asm$assembler;this.anonymousForward=[];this.anonymousReverse=[];this.relativeForward=[];this.relativeReverse=[];this.chunks=[];this._org=this._name=this._chunk=
void 0;this._segmentPrefix=""}get chunk(){this.ensureChunk();return this._chunk}ensureChunk(){this._chunk||(this._chunk={segments:this.segments,data:[]},null!=this._org&&(this._chunk.org=this._org),this._name&&(this._chunk.name=this._name),this.chunks.push(this._chunk))}definedSymbol(a){let b=this.currentScope;const c=!a.includes("::");do{const c=b.resolve(a,!1);if(c)return!!c.expr}while(c&&(b=b.parent));return!1}constantSymbol(a){a=this.currentScope.resolve(a,!1);return!(!a||!a.expr||0>a.id)}referencedSymbol(a){return null!=
this.currentScope.resolve(a,!1)}evaluate(a){var b;a=this.resolve(a);if("num"===a.op&&(null===(b=a.meta)||void 0===b||!b.rel))return a.num}pc(){var a;const b=this.chunk.data.length,c={rel:!0,chunk:this.chunks.length-1};null!=(null===(a=this._chunk)||void 0===a?void 0:a.org)&&(c.org=this._chunk.org);return module$js$asm$expr.Expr.evaluate({op:"num",num:b,meta:c})}resolve(a){return module$js$asm$expr.Expr.traverse(a,(a,c)=>{for(;"sym"===a.op&&a.sym;)a=this.resolveSymbol(a.sym);return module$js$asm$expr.Expr.evaluate(c(a))})}resolveSymbol(a){if("*"===
a)return this.pc();if(/^:\++$/.test(a)){a=a.length-2;var b=this.anonymousForward[a];if(null!=b)return{op:"sym",num:b};this.anonymousForward[a]=b=this.symbols.length;this.symbols.push({id:b});return{op:"sym",num:b}}if(/^\++$/.test(a)){b=this.relativeForward[a.length-1];if(null!=b)return{op:"sym",num:b};this.relativeForward[a.length-1]=b=this.symbols.length;this.symbols.push({id:b});return{op:"sym",num:b}}if(/^:-+$/.test(a))return b=this.anonymousReverse.length-a.length+1,0>b&&this.fail(`Bad anonymous backref: ${a}`),
this.anonymousReverse[b];if(/^-+$/.test(a))return b=this.relativeReverse[a.length-1],null==b&&this.fail(`Bad relative backref: ${a}`),b;a=(a.startsWith("@")?this.cheapLocals:this.currentScope).resolve(a,!0);if(a.expr)return a.expr;null==a.id&&(a.id=this.symbols.length,this.symbols.push(a));return{op:"sym",num:a.id}}chunkData(a){return{org:this.chunks[a].org}}closeScopes(){function a(b){for(var c of b.children.values())a(c);for(const c of b.anonymousChildren)a(c);for(const a of b.symbols){const [d,
e]=a;if(!e.expr&&null!=e.id&&b.parent){if(e.scoped)throw Error(`Symbol '${d}' undefined`);if(c=b.parent.symbols.get(d))if(null!=c.id)e.expr={op:"sym",num:c.id};else if(c.expr)e.expr=c.expr;else throw Error(`Impossible: ${d}`);else b.parent.symbols.set(d,e)}}}var b;this.cheapLocals.clear();if(this.currentScope.parent)throw Error("Scope never closed");a(this.currentScope);for(const a of this.globals){const [c,e]=a;{const a=this.currentScope.symbols.get(c);if("export"===e){if(null===(b=a)||void 0===
b||!b.expr)throw Error(`Symbol '${c}' undefined`);null==a.id&&(a.id=this.symbols.length,this.symbols.push(a));a.export=c}else if("import"===e){if(a){if(a.expr)throw Error(`Already defined: ${c}`);a.expr={op:"im",sym:c}}}else assertNever$$module$js$util(e)}}for(const a of this.currentScope.symbols){const [b,c]=a;if(!c.expr)throw Error(`Symbol '${b}' undefined`);}}module(){this.closeScopes();const a=[];for(var b of this.chunks)a.push(Object.assign({},b,{data:Uint8Array.from(b.data)}));b=[];for(var c of this.symbols){if(null==
c.expr)throw Error("Symbol undefined");const a={expr:c.expr};null!=c.export&&(a.export=c.export);b.push(a)}c=[...this.segmentData.values()];return{chunks:a,symbols:b,segments:c}}line(a){this._source=a[0].source;3>a.length&&module$js$asm$token.Token.eq(a[a.length-1],module$js$asm$token.Token.COLON)?this.label(a[0]):module$js$asm$token.Token.eq(a[1],module$js$asm$token.Token.ASSIGN)?this.assign(module$js$asm$token.Token.str(a[0]),this.parseExpr(a,2)):module$js$asm$token.Token.eq(a[1],module$js$asm$token.Token.SET)?
this.set(module$js$asm$token.Token.str(a[0]),this.parseExpr(a,2)):"cs"===a[0].token?this.directive(a):this.instruction(a)}tokens(a){let b;for(;b=a.next();)this.line(b)}tokensAsync(a){const b=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){let c;for(;c=yield a.nextAsync();)b.line(c)})}directive(a){switch(module$js$asm$token.Token.str(a[0])){case ".org":return this.org(this.parseConst(a));case ".reloc":return this.parseNoArgs(a),this.reloc();case ".assert":return this.assert(this.parseExpr(a));
case ".segment":return this.segment(...this.parseSegmentList(a));case ".byte":return this.byte(...this.parseDataList(a,!0));case ".res":return this.res(...this.parseResArgs(a));case ".word":return this.word(...this.parseDataList(a));case ".free":return this.free(this.parseConst(a),a[0]);case ".segmentprefix":return this.segmentPrefix(this.parseStr(a));case ".import":return this.import(...this.parseIdentifierList(a));case ".export":return this.export(...this.parseIdentifierList(a));case ".scope":return this.scope(this.parseOptionalIdentifier(a));
case ".endscope":return this.parseNoArgs(a),this.endScope();case ".proc":return this.proc(this.parseRequiredIdentifier(a));case ".endproc":return this.parseNoArgs(a),this.endProc();case ".pushseg":return this.pushSeg(...this.parseSegmentList(a));case ".popseg":return this.parseNoArgs(a),this.popSeg();case ".move":return this.move(...this.parseMoveArgs(a))}this.fail(`Unknown directive: ${module$js$asm$token.Token.nameAt(a[0])}`)}label(a){let b;const c=this.pc();if("string"===typeof a)var d=a;else d=
module$js$asm$token.Token.str(b=a),a.source&&(c.source=a.source);":"===d?(this.anonymousReverse.push(c),d=this.anonymousForward.shift(),null!=d&&(this.symbols[d].expr=c)):/^\++$/.test(d)?(a=this.relativeForward[d.length-1],delete this.relativeForward[d.length-1],null!=a&&(this.symbols[a].expr=c)):/^-+$/.test(d)?this.relativeReverse[d.length-1]=c:(d.startsWith("@")||this.cheapLocals.clear(),this.assignSymbol(d,!1,c,b))}assign(a,b){a.startsWith("@")&&this.fail(`Cheap locals may only be labels: ${a}`);
"number"!==typeof b&&(b=this.resolve(b));this.assignSymbol(a,!1,b)}set(a,b){a.startsWith("@")&&this.fail(`Cheap locals may only be labels: ${a}`);"number"!==typeof b&&(b=this.resolve(b));this.assignSymbol(a,!0,b)}assignSymbol(a,b,c,d){"number"===typeof c&&(c={op:"num",num:c});const e=a.startsWith("@")?this.cheapLocals:this.currentScope;let f=e.resolve(a,!b);if(f&&b!==0>f.id)this.fail(`Cannot change mutability of ${a}`,d);else if(b&&"num"!=c.op)this.fail("Mutable set requires constant",d);else if(!f){if(!b)throw Error("impossible");
e.symbols.set(a,f={id:-1})}else if(!b&&f.expr)throw b=f.expr.source?`\nOriginally defined${module$js$asm$token.Token.at(f.expr)}`:"",a=d?module$js$asm$token.Token.nameAt(d):a+(this._source?module$js$asm$token.Token.at({source:this._source}):""),Error(`Redefining symbol ${a}${b}`);f.expr=c}instruction(...a){var b;let c;1===a.length&&Array.isArray(a[0])?(a=a[0],c=module$js$asm$token.Token.expectIdentifier(a[0]).toLowerCase(),a=this.parseArg(a)):"string"===typeof a[1]?(c=a[0],a=new Tokenizer$$module$js$asm$tokenizer(a[1]),
a=this.parseArg(a.next(),0)):(([c,a]=a)||(a=["imp"]),c=c.toLowerCase());const d=this.cpu.op(c),e=a[0];if("add"===e||"a,x"===e||"a,y"===e){const f=a[1],g=(null===(b=f.meta)||void 0===b?void 0:b.size)||2;if("add"===e&&1===g&&"zpg"in d)return this.opcode(d.zpg,1,f);if("add"===e&&"abs"in d)return this.opcode(d.abs,2,f);if("add"===e&&"rel"in d)return this.relative(d.rel,1,f);if("a,x"===e&&1===g&&"zpx"in d)return this.opcode(d.zpx,1,f);if("a,x"===e&&"abx"in d)return this.opcode(d.abx,2,f);if("a,y"===e&&
1===g&&"zpy"in d)return this.opcode(d.zpy,1,f);if("a,y"===e&&"aby"in d)return this.opcode(d.aby,2,f);this.fail(`Bad address mode ${e} for ${c}`)}if(e in d)return b=this.cpu.argLen(e),"rel"===e?this.relative(d[e],b,a[1]):this.opcode(d[e],b,a[1]);this.fail(`Bad address mode ${e} for ${c}`)}parseArg(a,b){b=void 0===b?1:b;if(a.length===b)return["imp"];const c=a[b];var d=a[b+1];if(a.length===b+1){if(module$js$asm$token.Token.isRegister(c,"a"))return["acc"]}else if(module$js$asm$token.Token.eq(c,module$js$asm$token.Token.IMMEDIATE))return["imm",
module$js$asm$expr.Expr.parseOnly(a,b+1)];if(module$js$asm$token.Token.eq(c,module$js$asm$token.Token.COLON)&&a.length===b+2&&"op"===d.token&&/^[-+]+$/.test(d.str))return["add",{op:"sym",sym:":"+d.str}];if(a.length===b+1&&"op"===c.token&&/^[-+]+$/.test(c.str))return["add",{op:"sym",sym:c.str}];if(module$js$asm$token.Token.eq(c,module$js$asm$token.Token.LP)||this.opts.allowBrackets&&module$js$asm$token.Token.eq(c,module$js$asm$token.Token.LB)){d=module$js$asm$token.Token.findBalanced(a,b);0>d&&this.fail(`Unbalanced ${module$js$asm$token.Token.name(c)}`,
c);const e=module$js$asm$token.Token.parseArgList(a,b+1,d);e.length||this.fail("Bad argument",c);const f=module$js$asm$expr.Expr.parseOnly(e[0]);if(1===e.length){if(module$js$asm$token.Token.eq(a[d+1],module$js$asm$token.Token.COMMA)&&module$js$asm$token.Token.isRegister(a[d+2],"y"))return module$js$asm$token.Token.expectEol(a[d+3]),["iny",f];module$js$asm$token.Token.expectEol(a[d+1]);return["ind",f]}if(2===e.length&&1===e[1].length&&module$js$asm$token.Token.isRegister(e[1][0],"x"))return["inx",
f];this.fail("Bad argument",c)}a=module$js$asm$token.Token.parseArgList(a,b);a.length||this.fail("Bad arg",c);b=module$js$asm$expr.Expr.parseOnly(a[0]);if(1===a.length)return["add",b];if(2===a.length&&1===a[1].length){if(module$js$asm$token.Token.isRegister(a[1][0],"x"))return["a,x",b];if(module$js$asm$token.Token.isRegister(a[1][0],"y"))return["a,y",b]}this.fail("Bad arg",c)}relative(a,b,c){var d;const e=this.chunk.data.length+b+1,f={rel:!0,chunk:this.chunks.length-1};if(null===(d=this._chunk)||
void 0===d?0:d.org)f.org=this._chunk.org;d={op:"-",args:[c,{op:"num",num:e,meta:f}]};c.source&&(d.source=c.source);this.opcode(a,b,d)}opcode(a,b,c){b&&(c=this.resolve(c));const {chunk:d}=this;d.data.push(a);b&&this.append(c,b)}append(a,b){var c;const {chunk:d}=this;a=this.resolve(a);let e=a.num;"num"!==a.op||(null===(c=a.meta)||void 0===c?0:c.rel)?(c=d.data.length,(d.subs||(d.subs=[])).push({offset:c,size:b,expr:a}),this.writeNumber(d.data,b)):this.writeNumber(d.data,b,e)}org(a,b){this._org=a;this._chunk=
void 0;this._name=b}reloc(a){this._chunk=this._org=void 0;this._name=a}segment(...a){this.segments=a.map((a)=>"string"===typeof a?a:a.name);for(const b of a)"object"===typeof b&&(a=this.segmentData.get(b.name)||{name:b.name},this.segmentData.set(b.name,module$js$asm$module.Segment.merge(a,b)));this._name=this._chunk=void 0}assert(a){a=this.resolve(a);var b=this.evaluate(a);null!=b?b||this.fail("Assertion failed",a):({chunk:b}=this,(b.asserts||(b.asserts=[])).push(a))}byte(...a){const {chunk:b}=this;
for(const c of a)"number"===typeof c?this.writeNumber(b.data,1,c):"string"===typeof c?writeString$$module$js$asm$assembler(b.data,c):this.append(c,1)}res(a,b){a&&this.byte(...Array(a).fill(null!==b&&void 0!==b?b:0))}word(...a){const {chunk:b}=this;for(const c of a)"number"===typeof c?this.writeNumber(b.data,2,c):this.append(c,2)}free(a,b){1!==this.segments.length?this.fail(`.free with non-unique segment: ${this.segments}`,b):null==this._org?this.fail(".free in .reloc mode",b):0>a&&this.fail(`.free with negative size: ${a}`,
b);this._chunk&&(this._org+=this._chunk.data.length);this._chunk=void 0;b=this.segments[0];let c=this.segmentData.get(b);c||this.segmentData.set(b,c={name:b});(c.free||(c.free=[])).push([this._org,this._org+a]);this._org+=a}segmentPrefix(a){this._segmentPrefix=a}import(...a){for(const b of a)this.globals.set(b,"import")}export(...a){for(const b of a)this.globals.set(b,"export")}scope(a){this.enterScope(a,"scope")}proc(a){this.label(a);this.enterScope(a,"proc")}enterScope(a,b){const c=a?this.currentScope.children.get(a):
void 0;if(c){if(this.opts.reentrantScopes){this.currentScope=c;return}this.fail(`Cannot re-enter scope ${a}`)}b=new Scope$$module$js$asm$assembler(this.currentScope,b);a?this.currentScope.children.set(a,b):this.currentScope.anonymousChildren.push(b);this.currentScope=b}endScope(){this.exitScope("scope")}endProc(){this.exitScope("proc")}exitScope(a){this.currentScope.kind===a&&this.currentScope.parent||this.fail(`.end${a} without .${a}`);this.currentScope=this.currentScope.parent}pushSeg(...a){this.segmentStack.push([this.segments,
this._chunk]);this.segment(...a)}popSeg(){this.segmentStack.length||this.fail(".popseg without .pushseg");[this.segments,this._chunk]=this.segmentStack.pop()}move(a,b){this.append({op:".move",args:[b],meta:{size:a}},a)}parseConst(a,b){b=this.evaluate(module$js$asm$expr.Expr.parseOnly(a,void 0===b?1:b));if(null!=b)return b;this.fail("Expression is not constant",a[1])}parseNoArgs(a,b){module$js$asm$token.Token.expectEol(a[1])}parseExpr(a,b){return module$js$asm$expr.Expr.parseOnly(a,void 0===b?1:b)}parseStr(a,
b){b=void 0===b?1:b;const c=module$js$asm$token.Token.expectString(a[b]);module$js$asm$token.Token.expectEol(a[b+1],"a single string");return c}parseSegmentList(a,b){b=void 0===b?1:b;a.length<b+1&&this.fail("Expected a segment list",a[b-1]);return module$js$asm$token.Token.parseArgList(a,1).map((a)=>{var b=this._segmentPrefix+module$js$asm$token.Token.expectString(a[0]);if(1===a.length)return b;module$js$asm$token.Token.eq(a[1],module$js$asm$token.Token.COLON)||this.fail(`Expected comma or colon: ${module$js$asm$token.Token.name(a[1])}`,
a[1]);b={name:b};a=module$js$asm$token.Token.parseAttrList(a,1);for(const c of a){const [a,d]=c;switch(a){case "bank":b.bank=this.parseConst(d,0);break;case "size":b.size=this.parseConst(d,0);break;case "off":b.offset=this.parseConst(d,0);break;case "mem":b.memory=this.parseConst(d,0);break;default:this.fail(`Unknown segment attr: ${a}`)}}return b})}parseResArgs(a){a=this.parseDataList(a);2<a.length&&this.fail("Expected at most 2 args",a[2]);a.length||this.fail("Expected at least 1 arg");const b=
this.evaluate(a[0]);null==b&&this.fail("Expected constant count");const c=a[1]&&this.evaluate(a[1]);a[1]&&null==c&&this.fail("Expected constant value");return[b,c]}parseDataList(a,b){b=void 0===b?!1:b;2>a.length&&this.fail("Expected a data list",a[0]);const c=[];for(const d of module$js$asm$token.Token.parseArgList(a,1))b&&1===d.length&&"str"===d[0].token?c.push(d[0].str):c.push(this.resolve(module$js$asm$expr.Expr.parseOnly(d)));return c}parseIdentifierList(a){2>a.length&&this.fail("Expected identifier(s)",
a[0]);const b=[];for(const c of module$js$asm$token.Token.parseArgList(a,1))1===c.length&&"ident"===c[0].token||this.fail(`Expected identifier: ${module$js$asm$token.Token.name(c[0])}`,c[0]),b.push(module$js$asm$token.Token.str(c[0]));return b}parseOptionalIdentifier(a){var b=a[1];if(b)return b=module$js$asm$token.Token.expectIdentifier(b),module$js$asm$token.Token.expectEol(a[2]),b}parseRequiredIdentifier(a){const b=module$js$asm$token.Token.expectIdentifier(a[1]);module$js$asm$token.Token.expectEol(a[2]);
return b}parseMoveArgs(a){var b;a=module$js$asm$token.Token.parseArgList(a,1);2!==a.length&&this.fail("Expected constant number, then identifier");const c=this.evaluate(module$js$asm$expr.Expr.parseOnly(a[0]));null==c&&this.fail("Expected a constant number");const d=this.resolve(module$js$asm$expr.Expr.parseOnly(a[1]));if("num"===d.op&&null!=(null===(b=d.meta)||void 0===b?void 0:b.chunk))return[c,d];this.fail("Expected a constant offset",a[1][0])}fail(a,b){if(null===b||void 0===b?0:b.source)throw Error(a+
module$js$asm$token.Token.at(b));throw Error(a+module$js$asm$token.Token.at({source:this._source}));}writeNumber(a,b,c){var d=b<<3;null!=c&&(c<-1<<d||c>=1<<d)&&this.fail(`Not a ${["byte","word","farword","dword"][b-1]}: $${c.toString(16)}`);for(d=0;d<b;d++)a.push(null!=c?c&255:255),null!=c&&(c>>=8)}}function writeString$$module$js$asm$assembler(a,b){for(let c=0;c<b.length;c++)a.push(b.charCodeAt(c))}var module$js$asm$assembler={};module$js$asm$assembler.Assembler=Assembler$$module$js$asm$assembler;const DEBUG$$module$js$asm$define=!1;
class Define$$module$js$asm$define{constructor(a){this.overloads=a}canOverload(){return this.overloads[this.overloads.length-1].canOverload()}append(a){if(!this.canOverload()){var b=this.overloads[this.overloads.length-1].definition;b=(b?module$js$asm$token.Token.at(b):"").replace(/at/,"previously defined at");a=(a=a.overloads[0].definition)?module$js$asm$token.Token.nameAt(a):"";throw Error(`Non-overloadable: ${a}${b}`);}this.overloads.push(...a.overloads)}expand(a,b){const c=[];for(const d of this.overloads){const e=
d.expand(a,b);if(Array.isArray(e))return e;c.push(e)}DEBUG$$module$js$asm$define&&console.error(c.join("\n"))}static from(a){var b;if(!module$js$asm$token.Token.eq(a[0],module$js$asm$token.Token.DEFINE))throw Error("invalid");if("ident"!==(null===(b=a[1])||void 0===b?void 0:b.token))throw Error("invalid");if(b=a[2])if("grp"===b.token)a=new TexStyleDefine$$module$js$asm$define(b.inner,a.slice(3),a[1]);else if("lp"===b.token){b=module$js$asm$token.Token.findBalanced(a,2);if(0>b)throw Error(`Expected close paren ${module$js$asm$token.Token.nameAt(a[2])}`);
a=new CStyleDefine$$module$js$asm$define(module$js$asm$token.Token.identsFromCList(a.slice(3,b)),a.slice(b+1),a[1])}else a=new TexStyleDefine$$module$js$asm$define([],a.slice(2),a[1]);else a=new TexStyleDefine$$module$js$asm$define([],[],a[1]);return new Define$$module$js$asm$define([a])}}
function produce$$module$js$asm$define(a,b,c,d,e){const f=[];let g=[],h=f;for(const a of e){if("ident"===a.token){if(e=d.get(a.str)){h.push(...e);continue}}else if(module$js$asm$token.Token.eq(a,module$js$asm$token.Token.DOT_EOL)){g.push(h=[]);continue}h.push(a)}g=g.filter((a)=>a.length);if(g.length&&c<a.length)return"cannot expand .eol without consuming to end of line";a.splice(b,c-b,...f);return g}
class CStyleDefine$$module$js$asm$define{constructor(a,b,c){this.params=a;this.production=b;this.definition=c}expand(a,b){let c=b+1,d=this.params.length?a.length:b;var e=d;const f=new Map;if(b<a.length&&module$js$asm$token.Token.eq(module$js$asm$token.Token.LP,a[c])){e=module$js$asm$token.Token.findBalanced(a,c);if(0>e)return"missing close paren for enclosed C-style expansion";d=e+1;c++}e=module$js$asm$token.Token.parseArgList(a,c,e);if(e.length>this.params.length)return"too many args";for(c=0;c<
this.params.length;c++){let a=e[c]||[];const b=a[0];1===a.length&&"grp"===b.token&&(a=b.inner);f.set(this.params[c],a)}return produce$$module$js$asm$define(a,b,d,f,this.production)}canOverload(){return!!this.params.length}}
class TexStyleDefine$$module$js$asm$define{constructor(a,b,c){this.pattern=a;this.production=b;this.definition=c}expand(a,b){var c;let d=b+1;const e=new Map;for(let b=0;b<this.pattern.length;b++){const g=this.pattern[b];if("ident"===g.token){var f=this.pattern[b+1];if(f&&"ident"!==(null===(c=f)||void 0===c?void 0:c.token)){const b=module$js$asm$token.Token.eq(f,module$js$asm$token.Token.DOT_EOL)?a.length:module$js$asm$token.Token.find(a,f,d);if(0>b)return`could not find delimiter ${module$js$asm$token.Token.name(f)}`;
e.set(g.str,a.slice(d,b));d=b}else{f=a[d++];if(!f)return`missing undelimited argument ${module$js$asm$token.Token.name(g)}`;e.set(g.str,"grp"===f.token?f.inner:[f])}}else if(module$js$asm$token.Token.eq(g,module$js$asm$token.Token.DOT_EOL)){if(d<a.length)return"could not match .eol"}else if(!module$js$asm$token.Token.eq(a[d++],g))return`could not match: ${module$js$asm$token.Token.name(g)}`}return produce$$module$js$asm$define(a,b,d,e,this.production)}canOverload(){return!!this.pattern.length}}
var module$js$asm$define={};module$js$asm$define.Define=Define$$module$js$asm$define;class Evaluator$$module$js$asm$evaluator{constructor(a){this.env=a;this.functions=new Map([[".min",Math.min],[".max",Math.max],[".byteat",(a)=>this.byteAt(a)],[".wordat",(a)=>this.byteAt(a)|this.byteAt(a+1)<<8]]);this.prefix=new Map([["+",(a)=>a],["-",(a)=>-a],["~",(a)=>~a],["!",(a)=>Number(!a)],["<",(a)=>a&255],[">",(a)=>a>>8&255]]);this.infix=new Map([["+",(a,c)=>a+c],["-",(a,c)=>a-c],["*",(a,c)=>a*c],["/",(a,c)=>Math.floor(a/c)],[".mod",(a,c)=>a%c],["<<",(a,c)=>a<<c],[">>",(a,c)=>a>>>c],["&",(a,
c)=>a&c],["|",(a,c)=>a|c],["^",(a,c)=>a^c],["&&",(a,c)=>a&&c],["||",(a,c)=>a||c],[".xor",(a,c)=>Number(!a&&c||!c&&a)],["<",(a,c)=>Number(a<c)],["<=",(a,c)=>Number(a<=c)],[">",(a,c)=>Number(a>c)],[">=",(a,c)=>Number(a>=c)],["=",(a,c)=>Number(a===c)],["<>",(a,c)=>Number(a!==c)]])}definedSymbol(a){throw Error("unimplemented");}referencedSymbol(a){throw Error("unimplemented");}evaluate(a){throw Error("unimplemented");}simplify(a){var b;const c=a.args;if(!c)return a;let d=[];for(var e=0;e<c.length;e++)c[e]=
this.simplify(c[e]),"num"===c[e].op&&d?d[e]=c[e].num:d=void 0;return(e=(b=this.functions.get(a.op),null!==b&&void 0!==b?b:1===c.length?this.prefix.get(a.op):this.infix.get(a.op)))&&d?{op:"num",num:e(...d)}:{op:a.op,args:c}}byteAt(a){throw Error("not implemented");}}var module$js$asm$evaluator={};module$js$asm$evaluator.Evaluator=Evaluator$$module$js$asm$evaluator;class IdGenerator$$module$js$asm$idgenerator{constructor(){this.id=1}next(){return this.id++}}var module$js$asm$idgenerator={};module$js$asm$idgenerator.IdGenerator=IdGenerator$$module$js$asm$idgenerator;class IncludeWrapper$$module$js$asm$io{constructor(a,b,c,d){this.readFile=a;this.source=b;this.stream=c;this.opts=d}nextAsync(){const a=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){for(var b;;){var c=a.source.next();if("cs"!==(null===(b=c)||void 0===b?void 0:b[0].token)||".include"!==c[0].str)return c;c=str$$module$js$asm$io(c);const d=yield a.readFile(c);a.stream.enter(new Tokenizer$$module$js$asm$tokenizer(d,c,a.opts))}})}}
class ConsoleWrapper$$module$js$asm$io{constructor(a){this.source=a}next(){for(var a;;){const b=this.source.next();if("cs"!==(null===(a=b)||void 0===a?void 0:a[0].token))return b;switch(b[0].str){case ".out":console.log(str$$module$js$asm$io(b));break;case ".warning":console.warn(str$$module$js$asm$io(b));break;case ".error":err$$module$js$asm$io(b);break;default:return b}}}}function err$$module$js$asm$io(a){const b=str$$module$js$asm$io(a);throw Error(b+module$js$asm$token.Token.at(a[0]));}
function str$$module$js$asm$io(a){const b=module$js$asm$token.Token.expectString(a[1],a[0]);module$js$asm$token.Token.expectEol(a[2],"a single string");return b}var module$js$asm$io={};module$js$asm$io.IncludeWrapper=IncludeWrapper$$module$js$asm$io;module$js$asm$io.ConsoleWrapper=ConsoleWrapper$$module$js$asm$io;function binarySearch$$module$js$asm$util(a,b){if(!a)return-1;var c=b(0),d=b(a-1);if(0>c)return-1;if(0===c)return 0;if(0<d)return~a;if(0===d)return a-1;c=0;for(--a;1<a-c;){d=c+a>>1;const e=b(d);if(0<e)c=d;else if(0>e)a=d;else return d}return~a}function binaryInsert$$module$js$asm$util(a,b,c){const d=b(c),e=binarySearch$$module$js$asm$util(a.length,(c)=>d<b(a[c])?-1:1);a.splice(~e,0,c)}
class SparseArray$$module$js$asm$util{constructor(){this._chunks=[];this._length=0}get length(){return this._length}_find(a){return binarySearch$$module$js$asm$util(this._chunks.length,(b)=>{const [c,d]=this._chunks[b];return a<c?-1:a>=c+d.length?1:0})}apply(a){if(a.length<this._length)throw Error("Target too small.");for(const [b,c]of this._chunks)for(let d=0;d<c.length;d++)a[b+d]=c[d]}chunks(){return this._chunks}get(a){let b=this._find(a);if(!(0>b)){var [c,d]=this._chunks[b];return d[a-c]}}set(a,
...b){this.setInternal(a,b)}setInternal(a,b){var c;if(b.length){var d=a+b.length;this._length=Math.max(this._length,d);var e=this._find(a),f=this._find(d);if(0<=e&&e===f){const [c,d]=this._chunks[e];for(f=0;f<b.length;f++)d[a+f-c]=b[f]}else{var g=this._chunks[~e-1];g&&g[0]+g[1].length===a&&(e=~e-1);(null===(c=this._chunks[~f])||void 0===c?void 0:c[0])===d&&(f=~f);if(0<=e){const [c,d]=this._chunks[e];f===e&&Array.isArray(b)?b.unshift(...d.slice(0,a-c)):b=spliceHead$$module$js$asm$util(d,a-c,b);a=c}if(0<=
f){const [a,c]=this._chunks[f];b=spliceTail$$module$js$asm$util(b,d-a,c)}c=0>e?~e:e;d=0>f?~f:f;0<=f&&d++;Array.isArray(b)||(b=Array.from(b));this._chunks.splice(c,d-c,[a,b])}}}splice(a,b=1){const c=a+b;var d=this._find(a);b=this._find(c);var e=0<=d?this._chunks[d]:void 0;let f=0<=b?this._chunks[b]:void 0;e&&((a-=e[0])?e=[e[0],e===f?e[1].slice(0,a):arrayHead$$module$js$asm$util(e[1],a)]:(e=void 0,d=~d));f&&(f=[c,arrayTail$$module$js$asm$util(f[1],c-f[0])],f[1].length||(f=void 0,b=~b));a=[];e&&a.push(e);
f&&a.push(f);d=0>d?~d:d;e=0>b?~b:b;0<=b&&e++;this._chunks.splice(d,e-d,...a)}slice(a,b){if(b<=a)return[];const c=this._find(a);if(0>c)throw Error(`Absent: ${a}`);const [d,e]=this._chunks[c];if(d+e.length<b)throw Error(`Absent: ${d+e.length}`);return e.slice(a-d,b-d)}}
class SparseByteArray$$module$js$asm$util extends SparseArray$$module$js$asm$util{set(a,...b){this.setInternal(a,b[0]instanceof Uint8Array?b[0]:Uint8Array.from(b))}search(a,b,c){return this.pattern(a).search(b,c)}pattern(a){function b(b){for(let c=b,e=0;c<d;++c,++e)if(a[c]!==a[e])return!1;return!0}function c(b){let c=0;for(let e=b,f=d-1;0<=e&&a[e]===a[f];--e,--f)++c;return c}if(!a.length)return{search:(a=0)=>a};const d=a.length,e=Array(256).fill(d);for(var f=0;f<a.length;f++)e[a[f]]=d-1-f;const g=
[];f=d;for(let a=d;0<a;--a){b(a)&&(f=a);g[d-a]=f-a+d;for(let a=0;a<d-1;++a){const b=c(a);g[b]=d-1-a+b}}return{search:(b=0,c=this._length)=>{if(!this._chunks.length||c<b)return-1;let f=this._find(b),h=0;for(0<=f?h=b-this._chunks[f][0]:f=~f;f<this._chunks.length;){const [k,m]=this._chunks[f++];b=Math.min(c-k,m.length);if(0>b)break;for(let c=d-1+h,f;c<b;){for(f=d-1;a[f]===m[c];--c,--f)if(0===f)return c+k;c+=Math.max(g[d-1-f],e[m[c]])}h=0}return-1}}}addOffset(a){const b=new SparseByteArray$$module$js$asm$util;
for(const [c,d]of this._chunks)b._chunks.push([c+a,d]);return b}toIpsPatch(){var a=8;for(var [,b]of this._chunks)a+=5+b.length;a=new Uint8Array(a);b=5;a[0]=80;a[1]=65;a[2]=84;a[3]=67;a[4]=72;for(const [c,d]of this._chunks){if(65535<d.length)throw Error("Oops!");a[b++]=c>>>16;a[b++]=c>>>8&255;a[b++]=c&255;a[b++]=d.length>>>8;a[b++]=d.length&255;a.subarray(b,b+d.length).set(d);b+=d.length}a[b]=69;a[b+1]=79;a[b+2]=70;return a}toIpsHexString(){const a=[...this.toIpsPatch()],b=[];for(let c=0;c<a.length;c+=
16)b.push([c.toString(16).padStart(8,"0")+":",...a.slice(c,c+16).map((a)=>a.toString(16).padStart(2,"0"))].join(" "));return b.join("\n")}}function spliceHead$$module$js$asm$util(a,b,c){const d=a.length;if(c.length<d||!Array.isArray(c))return a.splice(b,d-b,...c),a;c.unshift(...arrayHead$$module$js$asm$util(a,b));return c}function spliceTail$$module$js$asm$util(a,b,c){if(a.length<c.length||!Array.isArray(a))return c.splice(0,b,...a),c;a.push(...arrayTail$$module$js$asm$util(c,b));return a}
function arrayHead$$module$js$asm$util(a,b){const c=a.length;if(b<<1<c)return a.slice(0,b);a.splice(b,c-b);return a}function arrayTail$$module$js$asm$util(a,b){return b<<1<a.length?(a.splice(0,b),a):a.slice(b)}
class BitSet$$module$js$asm$util{constructor(){this.data=new Uint8Array(16)}add(a){const b=a>>>3;if(b>=this.data.length){for(var c=this.data.length;c<=b;)c<<=1;c=new Uint8Array(c);c.subarray(0,this.data.length).set(this.data);this.data=c}this.data[b]|=1<<(a&7)}delete(a){const b=a>>>3;b<this.data.length&&(this.data[b]&=~(1<<(a&7)))}has(a){return!!((this.data[a>>>3]||0)&1<<(a&7))}}
class IntervalSet$$module$js$asm$util{constructor(){this.data=[]}[Symbol.iterator](){return this.data[Symbol.iterator]()}_find(a){return binarySearch$$module$js$asm$util(this.data.length,(b)=>{b=this.data[b];return a<b[0]?-1:a>=b[1]?1:0})}has(a){return 0<=this._find(a)}add(a,b){var c,d,e=this._find(a);let f=this._find(b);(null===(c=this.data[~e-1])||void 0===c?void 0:c[1])===a&&(e=~e-1);(null===(d=this.data[~f])||void 0===d?void 0:d[0])===b&&(f=~f);a=[a,b];0<=e&&(a[0]=this.data[e][0]);0<=f&&(a[1]=
this.data[f][1]);e=0>e?~e:e;b=0>f?~f:f;0<=f&&b++;this.data.splice(e,b-e,a)}delete(a,b){var c=this._find(a);let d=this._find(b);var e=0<=c?this.data[c]:void 0;let f=0<=d?this.data[d]:void 0;e&&(e=[e[0],Math.min(e[1],a)],e[0]===e[1]&&(e=void 0,c=~c));f&&(f=[Math.max(f[0],b),f[1]],f[0]===f[1]&&(f=void 0,d=~d));a=[];e&&a.push(e);f&&a.push(f);c=0>c?~c:c;e=0>d?~d:d;0<=d&&e++;this.data.splice(c,e-c,...a)}tail(a){let b=this._find(a);0>b&&(b=~b);const c=this.data;return{[Symbol.iterator](){return this},next(){if(b>=
c.length)return{value:void 0,done:!0};const d=c[b++];return{value:[Math.max(a,d[0]),d[1]],done:!1}}}}}var module$js$asm$util={};module$js$asm$util.binarySearch=binarySearch$$module$js$asm$util;module$js$asm$util.binaryInsert=binaryInsert$$module$js$asm$util;module$js$asm$util.SparseArray=SparseArray$$module$js$asm$util;module$js$asm$util.SparseByteArray=SparseByteArray$$module$js$asm$util;module$js$asm$util.BitSet=BitSet$$module$js$asm$util;module$js$asm$util.IntervalSet=IntervalSet$$module$js$asm$util;class Linker$$module$js$asm$linker{constructor(){this._link=new Link$$module$js$asm$linker}static link(...a){const b=new Linker$$module$js$asm$linker;for(const c of a)b.read(c);return b.link()}read(a){this._link.readFile(a);return this}base(a,b){this._link.base(a,void 0===b?0:b);return this}link(){return this._link.link()}report(){this._link.report()}exports(){return this._exports?this._exports:this._exports=this._link.buildExports()}}function fail$$module$js$asm$linker(a){throw Error(a);}
class LinkSegment$$module$js$asm$linker{constructor(a){var b,c,d,e,f;const g=this.name=a.name;this.bank=(b=a.bank,null!==b&&void 0!==b?b:0);this.addressing=(c=a.addressing,null!==c&&void 0!==c?c:2);this.size=(d=a.size,null!==d&&void 0!==d?d:fail$$module$js$asm$linker(`Size must be specified: ${g}`));this.offset=(e=a.offset,null!==e&&void 0!==e?e:fail$$module$js$asm$linker(`OFfset must be specified: ${g}`));this.memory=(f=a.memory,null!==f&&void 0!==f?f:fail$$module$js$asm$linker(`OFfset must be specified: ${g}`))}get delta(){return this.offset-
this.memory}}
class LinkChunk$$module$js$asm$linker{constructor(a,b,c,d,e){this.linker=a;this.index=b;this.subs=new Set;this.selfSubs=new Set;this.deps=new Set;this.imports=new Set;this.follow=new Map;this.overlaps=!1;this.name=c.name;this.size=c.data.length;this.segments=c.segments;this._data=c.data;for(const a of c.subs||[])this.subs.add(translateSub$$module$js$asm$linker(a,d,e));this.asserts=(c.asserts||[]).map((a)=>translateExpr$$module$js$asm$linker(a,d,e));c.org&&(this._org=c.org)}get org(){return this._org}get offset(){return this._offset}get segment(){return this._segment}get data(){var a;return a=
this._data,null!==a&&void 0!==a?a:fail$$module$js$asm$linker("no data")}initialPlacement(){if(null!=this._org){var a=[];for(const b of this.segments){const c=this.linker.segments.get(b);if(!c)throw Error(`Unknown segment: ${b}`);this._org>=c.memory&&this._org<c.memory+c.size&&a.push(c)}if(1!==a.length)throw Error(`Non-unique segment: ${a}`);a=a[0];if(this._org>=a.memory+a.size)throw Error(`Chunk does not fit in segment ${a.name}`);this.place(this._org,a)}}place(a,b){var c;this._org=a;this._segment=
b;a=this._offset=a+b.delta;b=this.linker.data;const d=(c=this._data,null!==c&&void 0!==c?c:fail$$module$js$asm$linker("No data"));this._data=void 0;if(this.subs.size){b.splice(a,d.length);c=new SparseByteArray$$module$js$asm$util;c.set(0,d);for(const a of this.subs)c.splice(a.offset,a.size);for(const d of c.chunks()){const [c,e]=d;b.set(a+c,...e)}}else b.set(a,d);for(const a of this.follow){const [b,c]=a;c.resolveSub(b,!1)}this.linker.free.delete(this.offset,this.offset+this.size)}resolveSubs(a){a=
void 0===a?!1:a;for(const b of this.selfSubs)this.resolveSub(b,a);for(const b of this.subs)this.resolveSub(b,a)}addDep(a,b){b===this.index&&this.subs.delete(a)&&this.selfSubs.add(a);this.linker.chunks[b].follow.set(a,this);this.deps.add(b)}resolveSub(a,b){var c,d;if(this.subs.has(a)||this.selfSubs.has(a)){a.expr=module$js$asm$expr.Expr.traverse(a.expr,(c,d,e)=>{var f;if(b&&"^"===(null===e||void 0===e?void 0:e.op)&&1===e.args.length&&c.meta)return null==c.meta.bank&&this.addDep(a,c.meta.chunk),c;c=
this.linker.resolveLink(module$js$asm$expr.Expr.evaluate(d(c)));b&&(null===(f=c.meta)||void 0===f?0:f.rel)&&this.addDep(a,c.meta.chunk);return c});var e=!1;if("num"===a.expr.op&&(null===(c=a.expr.meta)||void 0===c||!c.rel))this.writeValue(a.offset,a.expr.num,a.size),e=!0;else if(".move"===a.expr.op){if(1!==a.expr.args.length)throw Error("bad .move");c=a.expr.args[0];"num"===c.op&&null!=(null===(d=c.meta)||void 0===d?void 0:d.offset)&&(d=c.meta.offset+c.num,d=this.linker.orig.slice(d,d+a.size),this.writeBytes(a.offset,
Uint8Array.from(d)),e=!0)}e&&(this.subs.delete(a)||this.selfSubs.delete(a),this.subs.size||this.linker.unresolvedChunks.delete(this)&&this.linker.insertResolved(this))}}writeBytes(a,b){if(this._data)this._data.subarray(a,a+b.length).set(b);else if(null!=this._offset)this.linker.data.set(this._offset+a,b);else throw Error("Impossible");}writeValue(a,b,c){var d=c<<3;if(null!=b&&(b<-1<<d||b>=1<<d))throw Error(`Not a ${["byte","word","farword","dword"][c-1]}: $${b.toString(16)}`);d=new Uint8Array(c);
for(let a=0;a<c;a++)d[a]=b&255,b>>=8;this.writeBytes(a,d)}}function translateSub$$module$js$asm$linker(a,b,c){a=Object.assign({},a);a.expr=translateExpr$$module$js$asm$linker(a.expr,b,c);return a}
function translateExpr$$module$js$asm$linker(a,b,c){var d;a=Object.assign({},a);a.meta&&(a.meta=Object.assign({},a.meta));a.args&&(a.args=a.args.map((a)=>translateExpr$$module$js$asm$linker(a,b,c)));null!=(null===(d=a.meta)||void 0===d?void 0:d.chunk)&&(a.meta.chunk+=b);"sym"===a.op&&null!=a.num&&(a.num+=c);return a}function translateSymbol$$module$js$asm$linker(a,b,c){a=Object.assign({},a);a.expr&&(a.expr=translateExpr$$module$js$asm$linker(a.expr,b,c));return a}
class Link$$module$js$asm$linker{constructor(){this.data=new SparseByteArray$$module$js$asm$util;this.orig=new SparseByteArray$$module$js$asm$util;this.exports=new Map;this.chunks=[];this.symbols=[];this.free=new IntervalSet$$module$js$asm$util;this.rawSegments=new Map;this.segments=new Map;this.resolvedChunks=[];this.unresolvedChunks=new Set}insertResolved(a){binaryInsert$$module$js$asm$util(this.resolvedChunks,(a)=>a.size,a)}base(a,b){b=void 0===b?0:b;this.data.set(b,a);this.orig.set(b,a)}readFile(a){const b=
this.chunks.length,c=this.symbols.length;for(var d of a.segments||[])this.addRawSegment(d);for(const e of a.chunks||[])d=new LinkChunk$$module$js$asm$linker(this,this.chunks.length,e,b,c),this.chunks.push(d);for(const d of a.symbols||[])this.symbols.push(translateSymbol$$module$js$asm$linker(d,b,c))}resolveLink(a){var b,c,d;if(".orig"===a.op&&1===(null===(b=a.args)||void 0===b?void 0:b.length)){var e=a.args[0];var f=null===(c=e.meta)||void 0===c?void 0:c.offset;if(null!=f&&(e=this.orig.get(f+e.num),
null!=e))return{op:"num",num:e}}else"num"===a.op&&null!=(null===(d=a.meta)||void 0===d?void 0:d.chunk)&&(c=a.meta,b=this.chunks[c.chunk],b.org!==c.org||(null===(f=b.segment)||void 0===f?void 0:f.bank)!==c.bank||b.offset!==c.offset)&&(f={org:b.org,offset:b.offset,bank:null===(e=b.segment)||void 0===e?void 0:e.bank},a=module$js$asm$expr.Expr.evaluate(Object.assign({},a,{meta:Object.assign({},c,f)})));return a}resolveExpr(a){var b;a=module$js$asm$expr.Expr.traverse(a,(a,b)=>this.resolveLink(module$js$asm$expr.Expr.evaluate(b(a))));
if("num"===a.op&&(null===(b=a.meta)||void 0===b||!b.rel))return a.num;a=module$js$asm$token.Token.at(a);throw Error(`Unable to fully resolve expr${a}`);}link(){for(var a of this.rawSegments){const [c,d]=a;var b=d[0];for(let a=1;a<d.length;a++)b=module$js$asm$module.Segment.merge(b,d[a]);this.segments.set(c,new LinkSegment$$module$js$asm$linker(b))}for(var c of this.rawSegments){const [e,f]=c;a=this.segments.get(e);for(var d of f){b=d.free;for(const c of b||[]){const [b,d]=c;this.free.add(b+a.delta,
d+a.delta);this.data.splice(b+a.delta,d-b)}}}for(const a of this.chunks)a.initialPlacement();for(c=0;c<this.symbols.length;c++){d=this.symbols[c];if(!d.expr)throw Error(`Symbol ${c} never resolved`);null!=d.export&&this.exports.set(d.export,c)}for(var e of this.symbols)e.expr=this.resolveSymbols(e.expr);for(var f of this.chunks){for(const a of[...f.subs,...f.selfSubs])a.expr=this.resolveSymbols(a.expr);for(e=0;e<f.asserts.length;e++)f.asserts[e]=this.resolveSymbols(f.asserts[e])}for(const a of this.chunks)a.resolveSubs(!0);
f=[...this.chunks];f.sort((a,b)=>b.size-a.size);for(var g of f)g.resolveSubs(),g.subs.size?this.unresolvedChunks.add(g):this.insertResolved(g);for(g=this.resolvedChunks.length+2*this.unresolvedChunks.size;g;){if(f=this.resolvedChunks.pop())this.placeChunk(f);else{[f]=this.unresolvedChunks;for(var h of f.deps)f=this.chunks[h],null==f.org&&this.placeChunk(f)}f=this.resolvedChunks.length+2*this.unresolvedChunks.size;if(f===g)throw console.error(this.resolvedChunks,this.unresolvedChunks),Error("Not making progress");
g=f}h=new SparseByteArray$$module$js$asm$util;for(var k of this.chunks){for(const a of k.asserts)if(!this.resolveExpr(a))throw k=module$js$asm$token.Token.at(a),Error(`Assertion failed${k}`);k.overlaps||h.set(k.offset,...this.data.slice(k.offset,k.offset+k.size))}return h}placeChunk(a){if(null==a.org){var b=a.size;if(!a.subs.size&&!a.selfSubs.size){var c=this.data.pattern(a.data);for(var d of a.segments){var e=this.segments.get(d),f=e.offset;f=c.search(f,f+e.size);if(!(0>f)){a.place(f-e.delta,e);
a.overlaps=!0;return}}}for(var g of a.segments){c=this.segments.get(g);f=c.offset;d=f+c.size;let h;e=Infinity;for(const a of this.free.tail(f)){const [c,g]=a;if(c>=d)break;f=Math.min(g,d)-c;!(f<b)&&f<e&&(h=c,e=f)}if(null!=h){a.place(h-c.delta,c);return}}console.log("After filling:");this.report();g=a.name?`${a.name} `:"";console.log(this.segments.get(a.segments[0]));throw Error(`Could not find space for ${b}-byte chunk ${g}in ${a.segments.join(", ")}`);}}resolveSymbols(a){return module$js$asm$expr.Expr.traverse(a,
(b,c)=>{for(;"im"===b.op||"sym"===b.op;)if("im"===b.op){b=b.sym;const d=this.exports.get(b);if(null==d)throw c=module$js$asm$token.Token.at(a),Error(`Symbol never exported ${b}${c}`);b=this.symbols[d].expr}else{if(null==b.num)throw Error("Symbol not global");b=this.symbols[b.num].expr}return module$js$asm$expr.Expr.evaluate(c(b))})}addRawSegment(a){let b=this.rawSegments.get(a.name);b||this.rawSegments.set(a.name,b=[]);b.push(a)}buildExports(){var a,b;const c=new Map;for(const d of this.symbols){if(!d.export)continue;
const e=module$js$asm$expr.Expr.traverse(d.expr,(a,b)=>this.resolveLink(module$js$asm$expr.Expr.evaluate(b(a))));if("num"!==e.op)throw Error(`never resolved: ${d.export}`);const f=e.num,g={value:f};null!=(null===(a=e.meta)||void 0===a?void 0:a.offset)&&null!=e.meta.org&&(g.offset=e.meta.offset+f-e.meta.org);null!=(null===(b=e.meta)||void 0===b?void 0:b.bank)&&(g.bank=e.meta.bank);c.set(d.export,g)}return c}report(){for(const a of this.free){const [b,c]=a;console.log(`Free: ${b.toString(16)}..${c.toString(16)}`)}}}
var module$js$asm$linker={};module$js$asm$linker.Linker=Linker$$module$js$asm$linker;class Macro$$module$js$asm$macro{constructor(a,b){this.params=a;this.production=b}static from(a,b){var c;if(!module$js$asm$token.Token.eq(a[0],module$js$asm$token.Token.MACRO))throw Error("invalid");if("ident"!==(null===(c=a[1])||void 0===c?void 0:c.token))throw Error("invalid");c=module$js$asm$token.Token.identsFromCList(a.slice(2));const d=[];let e;for(;e=b.next();){if(module$js$asm$token.Token.eq(e[0],module$js$asm$token.Token.ENDMACRO)||module$js$asm$token.Token.eq(e[0],module$js$asm$token.Token.ENDMAC))return new Macro$$module$js$asm$macro(c,
d);d.push(e)}throw Error(`EOF looking for .endmacro: ${module$js$asm$token.Token.nameAt(a[1])}`);}expand(a,b){let c=1;const d=new Map,e=[];for(const b of this.params){const e=module$js$asm$token.Token.findComma(a,c);let f=a.slice(c,e);c=e+1;1===f.length&&"grp"===f[0].token&&(f=f[0].inner);d.set(b,f)}if(c<a.length)throw Error(`Too many macro parameters: ${module$js$asm$token.Token.nameAt(a[c])}`);const f=new Map;for(const a of this.production){var g=function(a){const b=[];for(const c of a){if("ident"===
c.token){if(a=d.get(c.str)){b.push(...a);continue}if(a=f.get(c.str)){b.push({token:"ident",str:a});continue}}else if("grp"===c.token){b.push({token:"grp",inner:g(c.inner)});continue}b.push(c)}return b};if(module$js$asm$token.Token.eq(a[0],module$js$asm$token.Token.LOCAL))for(const c of module$js$asm$token.Token.identsFromCList(a.slice(1)))f.set(c,`${c}@${b.next()}`);e.push(g(a))}return e}}var module$js$asm$macro={};module$js$asm$macro.Macro=Macro$$module$js$asm$macro;const MAX_STACK_DEPTH$$module$js$asm$preprocessor=100,ID_MAP$$module$js$asm$preprocessor=new WeakMap;function idGen$$module$js$asm$preprocessor(a){let b=ID_MAP$$module$js$asm$preprocessor.get(a);b||ID_MAP$$module$js$asm$preprocessor.set(a,b=((a)=>({next:()=>a++}))(0));return b}
class Preprocessor$$module$js$asm$preprocessor extends module$js$asm$token.TokenSource.Abstract{constructor(a,b,c){super();this.stream=a;this.env=b;this.repeats=[];this.runDirectives={".define":(a)=>this.parseDefine(a),".undefine":(a)=>this.parseUndefine(a),".else":([a])=>badClose$$module$js$asm$preprocessor(".if",a),".elseif":([a])=>badClose$$module$js$asm$preprocessor(".if",a),".endif":([a])=>badClose$$module$js$asm$preprocessor(".if",a),".endmac":([a])=>badClose$$module$js$asm$preprocessor(".macro",
a),".endmacro":([a])=>badClose$$module$js$asm$preprocessor(".macro",a),".endrep":(a)=>this.parseEndRepeat(a),".endrepeat":(a)=>this.parseEndRepeat(a),".exitmacro":([,a])=>{noGarbage$$module$js$asm$preprocessor(a);this.stream.exit()},".if":([a,...b])=>this.parseIf(!!this.evaluateConst(parseOneExpr$$module$js$asm$preprocessor(b,a))),".ifdef":([a,...b])=>this.parseIf(this.macros.has(parseOneIdent$$module$js$asm$preprocessor(b,a))),".ifndef":([a,...b])=>this.parseIf(!this.macros.has(parseOneIdent$$module$js$asm$preprocessor(b,
a))),".ifblank":([,...a])=>this.parseIf(!a.length),".ifnblank":([,...a])=>this.parseIf(!!a.length),".ifref":([a,...b])=>this.parseIf(this.env.referencedSymbol(parseOneIdent$$module$js$asm$preprocessor(b,a))),".ifnref":([a,...b])=>this.parseIf(!this.env.referencedSymbol(parseOneIdent$$module$js$asm$preprocessor(b,a))),".ifsym":([a,...b])=>this.parseIf(this.env.definedSymbol(parseOneIdent$$module$js$asm$preprocessor(b,a))),".ifnsym":([a,...b])=>this.parseIf(!this.env.definedSymbol(parseOneIdent$$module$js$asm$preprocessor(b,
a))),".ifconst":([a,...b])=>this.parseIf(this.env.constantSymbol(parseOneIdent$$module$js$asm$preprocessor(b,a))),".ifnconst":([a,...b])=>this.parseIf(!this.env.constantSymbol(parseOneIdent$$module$js$asm$preprocessor(b,a))),".macro":(a)=>this.parseMacro(a),".repeat":(a)=>this.parseRepeat(a)};this.macros=c?c.macros:new Map}*pump(){const a=this.readLine();if(null==a)return void(yield a);for(;a.length;){var b=a[0];switch(b.token){case "ident":if(module$js$asm$token.Token.eq(a[1],module$js$asm$token.Token.COLON)){yield a.splice(0,
2);break}this.tryExpandMacro(a)||(yield a);return;case "cs":this.tryRunDirective(a)||(yield a);return;case "op":if(/^[-+]+$/.test(b.str)){b=[b];const c=a[1];c&&module$js$asm$token.Token.eq(c,module$js$asm$token.Token.COLON)?(b.push(c),a.splice(0,2)):(b.push({token:"op",str:":"}),a.splice(0,1));yield b;break}else if(":"===b.str){yield a.splice(0,1);break}default:throw Error(`Unexpected: ${module$js$asm$token.Token.nameAt(a[0])}`);}}}readLine(){const a=this.stream.next();return null==a?a:this.expandLine(a)}expandLine(a,
b=0){const c=a[0];let d=0,e=0;for(;b<a.length;){if(b>e)e=b,d=0;else if(d++>MAX_STACK_DEPTH$$module$js$asm$preprocessor)throw Error(`Maximum expansion depth reached: ${a.map(module$js$asm$token.Token.name).join(" ")}${module$js$asm$token.Token.at(c)}`);b=this.expandToken(a,b)}return a}expandToken(a,b){var c=a[b];if("ident"===c.token){if(c=this.macros.get(c.str),c instanceof Define$$module$js$asm$define&&(a=c.expand(a,b)))return a.length&&this.stream.unshift(...a),b}else if("cs"===c.token)return this.expandDirective(c.str,
a,b);return b+1}tryExpandMacro(a){var [b]=a;if("ident"!==b.token)throw Error("impossible");b=this.macros.get(b.str);if(!(b instanceof Macro$$module$js$asm$macro))return!1;a=b.expand(a,idGen$$module$js$asm$preprocessor(this.env));this.stream.enter();this.stream.unshift(...a);return!0}expandDirective(a,b,c){switch(a){case ".define":case ".ifdef":case ".ifndef":case ".undefine":return this.skipIdentifier(b,c);case ".skip":return this.skip(b,c);case ".noexpand":return this.noexpand(b,c);case ".tcount":return this.parseArgs(b,
c,1,this.tcount);case ".ident":return this.parseArgs(b,c,1,this.ident);case ".string":return this.parseArgs(b,c,1,this.string);case ".concat":return this.parseArgs(b,c,0,this.concat);case ".sprintf":return this.parseArgs(b,c,0,this.sprintf);case ".cond":return this.parseArgs(b,c,0,this.cond);case ".def":case ".defined":return this.parseArgs(b,c,1,this.defined);case ".definedsymbol":return this.parseArgs(b,c,1,this.definedSymbol);case ".constantsymbol":return this.parseArgs(b,c,1,this.constantSymbol);
case ".referencedsymbol":return this.parseArgs(b,c,1,this.referencedSymbol)}return c+1}skip(a,b){a.splice(b,1);const c=a[b];"grp"===(null===c||void 0===c?void 0:c.token)?this.expandToken(c.inner,0):this.expandToken(a,b+1);return b}noexpand(a,b){const c=a[b+1];"grp"===c.token?(a.splice(b,2,...c.inner),b+=c.inner.length-1):a.splice(b,1);return b+1}parseArgs(a,b,c,d){const e=a[b];module$js$asm$token.Token.expect(module$js$asm$token.Token.LP,a[b+1],e);const f=module$js$asm$token.Token.findBalanced(a,
b+1),g=module$js$asm$token.Token.parseArgList(a,b+2,f).map((a)=>{1===a.length&&"grp"===a[0].token&&(a=a[0].inner);return this.expandLine(a)});if(c&&g.length!==c)throw Error(`Expected ${c} parameters: ${module$js$asm$token.Token.nameAt(e)}`);c=d.call(this,e,...g);a.splice(b,f+1-b,...c);return b}tcount(a,b){return[{token:"num",num:module$js$asm$token.Token.count(b),source:a.source}]}ident(a,b){a=module$js$asm$token.Token.expectString(b[0],a);module$js$asm$token.Token.expectEol(b[1],"a single token");
return[{token:"ident",str:a,source:b[0].source}]}string(a,b){a=module$js$asm$token.Token.expectIdentifier(b[0],a);module$js$asm$token.Token.expectEol(b[1],"a single token");return[{token:"str",str:a,source:b[0].source}]}concat(a,...b){return[{token:"str",str:b.map((a)=>{const b=module$js$asm$token.Token.expectString(a[0]);module$js$asm$token.Token.expectEol(a[1],"a single string");return b}).join(""),source:a.source}]}sprintf(a,b,...c){module$js$asm$token.Token.expectString(b[0],a);module$js$asm$token.Token.expectEol(b[1],
"a single format string");throw Error("unimplemented");}cond(a,...b){throw Error("unimplemented");}defined(a,b){a=module$js$asm$token.Token.expectIdentifier(b[0],a);module$js$asm$token.Token.expectEol(b[1],"a single identifier");return[{token:"num",num:this.macros.has(a)?1:0}]}definedSymbol(a,b){a=module$js$asm$token.Token.expectIdentifier(b[0],a);module$js$asm$token.Token.expectEol(b[1],"a single identifier");return[{token:"num",num:this.env.definedSymbol(a)?1:0}]}constantSymbol(a,b){a=module$js$asm$token.Token.expectIdentifier(b[0],
a);module$js$asm$token.Token.expectEol(b[1],"a single identifier");return[{token:"num",num:this.env.constantSymbol(a)?1:0}]}referencedSymbol(a,b){a=module$js$asm$token.Token.expectIdentifier(b[0],a);module$js$asm$token.Token.expectEol(b[1],"a single identifier");return[{token:"num",num:this.env.referencedSymbol(a)?1:0}]}skipIdentifier(a,b){var c;return"ident"===(null===(c=a[b+1])||void 0===c?void 0:c.token)?b+2:b+1}tryRunDirective(a){var b=a[0];if("cs"!==b.token)throw Error("impossible");b=this.runDirectives[b.str];
if(!b)return!1;b(a);return!0}evaluateConst(a){var b;a=module$js$asm$expr.Expr.traversePost(a,module$js$asm$expr.Expr.evaluate);if("num"===a.op&&(null===(b=a.meta)||void 0===b||!b.rel))return a.num;a=module$js$asm$token.Token.at(a);throw Error(`Expected a constant${a}`);}parseDefine(a){const b=module$js$asm$token.Token.expectIdentifier(a[1],a[0]);a=Define$$module$js$asm$define.from(a);const c=this.macros.get(b);if(c instanceof Define$$module$js$asm$define)c.append(a);else{if(c)throw Error(`Already defined: ${b}`);
this.macros.set(b,a)}}parseUndefine(a){const [b,c,d]=a;a=module$js$asm$token.Token.expectIdentifier(c,b);module$js$asm$token.Token.expectEol(d);if(!this.macros.has(a))throw Error(`Not defined: ${module$js$asm$token.Token.nameAt(c)}`);this.macros.delete(a)}parseMacro(a){const b=module$js$asm$token.Token.expectIdentifier(a[1],a[0]);a=Macro$$module$js$asm$macro.from(a,this.stream);if(this.macros.get(b))throw Error(`Already defined: ${b}`);this.macros.set(b,a)}parseRepeat(a){var b;const [c,d]=module$js$asm$expr.Expr.parse(a,
1);var e=a[1]||a[0];if(!c)throw Error(`Expected expression: ${module$js$asm$token.Token.nameAt(e)}`);e=this.evaluateConst(c);if(null==e)throw Error(`Expected a constant${module$js$asm$token.Token.at(c)}`);let f;if(d<a.length){if(!module$js$asm$token.Token.eq(a[d],module$js$asm$token.Token.COMMA))throw Error(`Expected comma: ${module$js$asm$token.Token.nameAt(a[d])}`);f=module$js$asm$token.Token.expectIdentifier(a[d+1]);module$js$asm$token.Token.expectEol(a[d+2])}const g=[];let h=1;for(;0<h;)a=(b=
this.stream.next(),null!==b&&void 0!==b?b:fail$$module$js$asm$preprocessor(".repeat with no .endrep")),module$js$asm$token.Token.eq(a[0],module$js$asm$token.Token.REPEAT)&&h++,module$js$asm$token.Token.eq(a[0],module$js$asm$token.Token.ENDREPEAT)&&h--,module$js$asm$token.Token.eq(a[0],module$js$asm$token.Token.ENDREP)&&h--,g.push(a);this.repeats.push([g,e,-1,f]);this.parseEndRepeat(a)}parseEndRepeat(a){module$js$asm$token.Token.expectEol(a[1]);const b=this.repeats.pop();if(!b)throw Error(`.endrep with no .repeat${module$js$asm$token.Token.at(a[0])}`);
++b[2]>=b[1]||(this.repeats.push(b),this.stream.unshift(...b[0].map((a)=>a.map((a)=>{if("ident"!==a.token||a.str!==b[3])return a;const c={token:"num",num:b[2]};a.source&&(c.source=a.source);return c}))))}parseIf(a){let b=1,c=!1;const d=[];for(;0<b;){const e=this.stream.next();if(!e)throw Error("EOF looking for .endif");const f=e[0];if(module$js$asm$token.Token.eq(f,module$js$asm$token.Token.ENDIF))b--;else{if(1===b&&!c)if(a&&(module$js$asm$token.Token.eq(f,module$js$asm$token.Token.ELSE)||module$js$asm$token.Token.eq(f,
module$js$asm$token.Token.ELSEIF))){a=!1;c=!0;continue}else if(module$js$asm$token.Token.eq(f,module$js$asm$token.Token.ELSEIF)){a=!!this.evaluateConst(parseOneExpr$$module$js$asm$preprocessor(e.slice(1),f));continue}else if(module$js$asm$token.Token.eq(f,module$js$asm$token.Token.ELSE)){a=!0;continue}a&&d.push(e)}}this.stream.unshift(...d)}}function parseOneIdent$$module$js$asm$preprocessor(a,b){a=parseOneExpr$$module$js$asm$preprocessor(a,b);return module$js$asm$expr.Expr.identifier(a)}
function parseOneExpr$$module$js$asm$preprocessor(a,b){if(!a.length){if(!b)throw Error("Expected expression");throw Error(`Expected expression: ${module$js$asm$token.Token.nameAt(b)}`);}return module$js$asm$expr.Expr.parseOnly(a)}function noGarbage$$module$js$asm$preprocessor(a){if(a)throw Error(`garbage at end of line: ${module$js$asm$token.Token.nameAt(a)}`);}
function badClose$$module$js$asm$preprocessor(a,b){throw Error(`${module$js$asm$token.Token.name(b)} with no ${a}${module$js$asm$token.Token.at(b)}`);}function fail$$module$js$asm$preprocessor(a){throw Error(a);}var module$js$asm$preprocessor={};module$js$asm$preprocessor.Preprocessor=Preprocessor$$module$js$asm$preprocessor;const MAX_DEPTH$$module$js$asm$tokenstream=100;
class TokenStream$$module$js$asm$tokenstream{constructor(){this.stack=[]}next(){for(var a;this.stack.length;){const [b,c]=this.stack[this.stack.length-1];if(c.length)return c.pop();const d=null===(a=b)||void 0===a?void 0:a.next();if(d)return d;this.stack.pop()}}unshift(...a){if(!this.stack.length)throw Error("Cannot unshift after EOF");const b=this.stack[this.stack.length-1][1];for(let c=a.length-1;0<=c;c--)b.push(a[c])}enter(a){const b=[void 0,[]];a&&(b[0]=a);this.stack.push(b);if(this.stack.length>
MAX_DEPTH$$module$js$asm$tokenstream)throw Error("Stack overflow");}exit(){this.stack.pop()}}var module$js$asm$tokenstream={};module$js$asm$tokenstream.TokenStream=TokenStream$$module$js$asm$tokenstream;const OPTIONAL$$module$js$flagset=(a)=>"",NO_BANG$$module$js$flagset=(a)=>!0===a?!1:a;class Flag$$module$js$flagset{constructor(a,b){this.flag=a;this.opts=b;Flag$$module$js$flagset.flags.set(a,this)}static all(){return[...this.flags.values()]}}Flag$$module$js$flagset.flags=new Map;
class Preset$$module$js$flagset{constructor(a,b,c,d){this.name=b;this.description=c;this.flags=d.map((a)=>a instanceof Flag$$module$js$flagset?[a,!0]:a);a.presets.set(mapPresetName$$module$js$flagset(b),this)}static all(){Presets$$module$js$flagset.instance||(Presets$$module$js$flagset.instance=new Presets$$module$js$flagset);return[...Presets$$module$js$flagset.instance.presets.values()]}get flagString(){null==this._flagString&&(this._flagString=String(new FlagSet$$module$js$flagset(`@${this.name}`)));
return this._flagString}}function mapPresetName$$module$js$flagset(a){return a.toLowerCase().replace(/[^a-z]/g,"")}
class Presets$$module$js$flagset{constructor(){this.presets=new Map;this.Casual=new Preset$$module$js$flagset(this,"Casual","\n      Basic flags for a relatively easy playthrough.  This is a good\n      place to start.",[EasyMode$$module$js$flagset.PreserveUniqueChecks,EasyMode$$module$js$flagset.NoShuffleMimics,EasyMode$$module$js$flagset.DecreaseEnemyDamage,EasyMode$$module$js$flagset.GuaranteeRefresh,EasyMode$$module$js$flagset.GuaranteeStartingSword,EasyMode$$module$js$flagset.ExperienceScalesFaster,
Routing$$module$js$flagset.NoThunderSwordWarp,Vanilla$$module$js$flagset.Shops,Vanilla$$module$js$flagset.Dyna,[Vanilla$$module$js$flagset.Maps,"!"],[Vanilla$$module$js$flagset.WildWarp,"!"],DebugMode$$module$js$flagset.SpoilerLog]);this.Classic=new Preset$$module$js$flagset(this,"Classic","\n      Provides a relatively quick playthough with a reasonable amount of\n      challenge.  Similar to older versions.",[EasyMode$$module$js$flagset.GuaranteeStartingSword,Glitches$$module$js$flagset.StatueGlitch,
[Routing$$module$js$flagset.NoThunderSwordWarp,"!"],[Vanilla$$module$js$flagset.Maps,"!"],DebugMode$$module$js$flagset.SpoilerLog]);this.Standard=new Preset$$module$js$flagset(this,"Standard","\n      Well-balanced, standard race flags.",[Monsters$$module$js$flagset.RandomizeWeaknesses,Routing$$module$js$flagset.StoryMode,DebugMode$$module$js$flagset.SpoilerLog]);this.NoBowMode=new Preset$$module$js$flagset(this,"No Bow Mode","\n      The tower is open from the start, as soon as you're ready for it.",
[Monsters$$module$js$flagset.RandomizeWeaknesses,Monsters$$module$js$flagset.TowerRobots,HardMode$$module$js$flagset.MaxScalingInTower,Routing$$module$js$flagset.NoBowMode,DebugMode$$module$js$flagset.SpoilerLog]);this.Advanced=new Preset$$module$js$flagset(this,"Advanced","\n      A balanced randomization with quite a bit more difficulty.",[Glitches$$module$js$flagset.GhettoFlight,Glitches$$module$js$flagset.MtSabreRequirementSkip,Glitches$$module$js$flagset.StatueGlitch,[Glitches$$module$js$flagset.SwordChargeGlitch,
"!"],NoGuarantees$$module$js$flagset.Barrier,NoGuarantees$$module$js$flagset.BattleMagic,NoGuarantees$$module$js$flagset.GasMask,HardMode$$module$js$flagset.MaxScalingInTower,Monsters$$module$js$flagset.RandomizeWeaknesses,Monsters$$module$js$flagset.TowerRobots,Routing$$module$js$flagset.OrbsNotRequired,Routing$$module$js$flagset.StoryMode,World$$module$js$flagset.RandomizeMaps,World$$module$js$flagset.RandomizeTrades,World$$module$js$flagset.RandomizeWallElements,World$$module$js$flagset.UnidentifiedKeyItems,
DebugMode$$module$js$flagset.SpoilerLog]);this.WildWarp=new Preset$$module$js$flagset(this,"Wild Warp","\n      Significantly opens up the game right from the start with wild\n      warp in logic.",[EasyMode$$module$js$flagset.GuaranteeRefresh,World$$module$js$flagset.RandomizeWildWarp,Monsters$$module$js$flagset.RandomizeWeaknesses,Monsters$$module$js$flagset.TowerRobots,Routing$$module$js$flagset.OrbsNotRequired,Routing$$module$js$flagset.StoryMode,DebugMode$$module$js$flagset.SpoilerLog]);this.Hardcore=
new Preset$$module$js$flagset(this,"Hardcore","\n      Not for the faint of heart.  Good luck.",[NoGuarantees$$module$js$flagset.Barrier,NoGuarantees$$module$js$flagset.BattleMagic,HardMode$$module$js$flagset.ExperienceScalesSlower,HardMode$$module$js$flagset.MaxScalingInTower,HardMode$$module$js$flagset.Permadeath,Routing$$module$js$flagset.OrbsNotRequired,Routing$$module$js$flagset.StoryMode,World$$module$js$flagset.RandomizeMaps,World$$module$js$flagset.RandomizeTrades,World$$module$js$flagset.RandomizeWallElements,
World$$module$js$flagset.UnidentifiedKeyItems]);this.FullStupid=new Preset$$module$js$flagset(this,"The Full Stupid","\n      Nobody has ever completed this.  Be sure to record this because\n      pics or it didn't happen.",[NoGuarantees$$module$js$flagset.Barrier,NoGuarantees$$module$js$flagset.BattleMagic,HardMode$$module$js$flagset.Blackout,HardMode$$module$js$flagset.ExperienceScalesSlower,HardMode$$module$js$flagset.MaxScalingInTower,HardMode$$module$js$flagset.Permadeath,Routing$$module$js$flagset.OrbsNotRequired,
Routing$$module$js$flagset.StoryMode,World$$module$js$flagset.RandomizeMaps,World$$module$js$flagset.RandomizeTrades,World$$module$js$flagset.RandomizeWallElements,World$$module$js$flagset.UnidentifiedKeyItems]);this.Random=new Preset$$module$js$flagset(this,"Truly Random","\n      Even the options are random.",[[World$$module$js$flagset.RandomizeMaps,"?"],[World$$module$js$flagset.RandomizeTrades,"?"],[World$$module$js$flagset.UnidentifiedKeyItems,"?"],[World$$module$js$flagset.RandomizeWallElements,
"?"],[World$$module$js$flagset.ShuffleGoaFloors,"?"],[World$$module$js$flagset.RandomizeSpriteColors,"?"],[World$$module$js$flagset.RandomizeWildWarp,"?"],[Routing$$module$js$flagset.OrbsNotRequired,"?"],[Routing$$module$js$flagset.NoBowMode,"?"],[Routing$$module$js$flagset.StoryMode,"?"],[Routing$$module$js$flagset.VanillaDolphin,"?"],[Routing$$module$js$flagset.NoThunderSwordWarp,"?"],[Glitches$$module$js$flagset.RageSkip,"?"],[Glitches$$module$js$flagset.TriggerSkip,"?"],[Glitches$$module$js$flagset.StatueGlitch,
"?"],[Glitches$$module$js$flagset.GhettoFlight,"?"],[Glitches$$module$js$flagset.SwordChargeGlitch,"?"],[Glitches$$module$js$flagset.MtSabreRequirementSkip,"?"],[Aesthetics$$module$js$flagset.RandomizeMusic,"?"],[Aesthetics$$module$js$flagset.RandomizeMapColors,"?"],[Monsters$$module$js$flagset.RandomizeWeaknesses,"?"],[Monsters$$module$js$flagset.TowerRobots,"?"],[EasyMode$$module$js$flagset.NoShuffleMimics,"?"],[EasyMode$$module$js$flagset.PreserveUniqueChecks,"?"],[NoGuarantees$$module$js$flagset.Barrier,
"?"],[NoGuarantees$$module$js$flagset.BattleMagic,"?"],[NoGuarantees$$module$js$flagset.GasMask,"?"],[Vanilla$$module$js$flagset.Dyna,"?"],[Vanilla$$module$js$flagset.BonusItems,"?"],[Vanilla$$module$js$flagset.Maps,"?"],DebugMode$$module$js$flagset.SpoilerLog])}static get(a){this.instance||(this.instance=new Presets$$module$js$flagset);return this.instance.presets.get(mapPresetName$$module$js$flagset(a))}}
class FlagSection$$module$js$flagset{constructor(){this.flags=new Map}static all(){return[...this.sections]}static flag(a,b){FlagSection$$module$js$flagset.sections.add(this.instance||(this.instance=new this));b=new Flag$$module$js$flagset(a,b);if(!a.startsWith(this.instance.prefix))throw Error("bad flag");this.instance.flags.set(a,b);return b}}FlagSection$$module$js$flagset.sections=new Set;
class World$$module$js$flagset extends FlagSection$$module$js$flagset{constructor(){super(...arguments);this.prefix="W";this.name="World"}}World$$module$js$flagset.RandomizeMaps=World$$module$js$flagset.flag("Wm",{name:"Randomize maps",text:"Individual maps are randomized.  For now this is only a subset of\n           possible maps.  A randomized map will have all the same features\n           (exits, chests, NPCs, etc) except things are moved around.",hard:!0});
World$$module$js$flagset.RandomizeTrades=World$$module$js$flagset.flag("Wt",{name:"Randomize trade-in items",text:"Items expected by various NPCs will be shuffled: specifically,\n           Statue of Onyx, Kirisa Plant, Love Pendant, Ivory Statue, Fog\n           Lamp, and Flute of Lime (for Akahana).  Rage will expect a\n           random sword, and Tornel will expect a random bracelet.",hard:!0});
World$$module$js$flagset.UnidentifiedKeyItems=World$$module$js$flagset.flag("Wu",{name:"Unidentified key items",text:"Item names will be generic and effects will be shuffled.  This\n           includes keys, flutes, lamps, and statues.",hard:!0});World$$module$js$flagset.RandomizeWallElements=World$$module$js$flagset.flag("We",{name:"Randomize elements to break walls",text:'Walls will require a randomized element to break.  Normal rock and\n           ice walls will indicate the required element by the color (light\n           grey or yellow for wind, blue for fire, bright orange ("embers") for\n           water, or dark grey ("steel") for thunder.  The element to break\n           these walls is the same throughout an area.  Iron walls require a\n           one-off random element, with no visual cue, and two walls in the\n           same area may have different requirements.'});
World$$module$js$flagset.ShuffleGoaFloors=World$$module$js$flagset.flag("Wg",{name:"Shuffle Goa fortress floors",text:"The four areas of Goa fortress will appear in a random order."});World$$module$js$flagset.RandomizeSpriteColors=World$$module$js$flagset.flag("Ws",{name:"Randomize sprite colors",text:"Monsters and NPCs will have different colors.  This is not an\n           optional flag because it affects what monsters can be grouped\n           together."});
World$$module$js$flagset.RandomizeWildWarp=World$$module$js$flagset.flag("Ww",{name:"Randomize wild warp",text:"Wild warp will go to Mezame Shrine and 15 other random locations.\n           These locations will be considered in-logic.",excludes:["Vw"]});class Routing$$module$js$flagset extends FlagSection$$module$js$flagset{constructor(){super(...arguments);this.prefix="R";this.name="Routing"}}Routing$$module$js$flagset.StoryMode=Routing$$module$js$flagset.flag("Rs",{name:"Story Mode",text:"Draygon 2 won't spawn unless you have all four swords and have\n           defeated all major bosses of the tetrarchy."});
Routing$$module$js$flagset.NoBowMode=Routing$$module$js$flagset.flag("Rb",{name:"No Bow mode",text:"No items are required to finish the game.  An exit is added from\n           Mezame shrine directly to the Draygon 2 fight (and the normal entrance\n           is removed).  Draygon 2 spawns automatically with no Bow of Truth."});Routing$$module$js$flagset.OrbsNotRequired=Routing$$module$js$flagset.flag("Ro",{name:"Orbs not required to break walls",text:"Walls can be broken and bridges formed with level 1 shots."});
Routing$$module$js$flagset.NoThunderSwordWarp=Routing$$module$js$flagset.flag("Rt",{name:"No Sword of Thunder warp",text:'Normally when acquiring the thunder sword, the player is instantly\n           warped to a random town.  This flag disables the warp.  If set as\n           "R!t", then the warp will always go to Shyron, like in vanilla.',modes:"!"});Routing$$module$js$flagset.VanillaDolphin=Routing$$module$js$flagset.flag("Rd",{name:"Vanilla Dolphin interactions",text:"By default, the randomizer changes a number of dolphin and boat\n           interactions: (1) healing the dolphin and having the Shell Flute\n           is no longer required before the fisherman spawns: instead, he\n           will spawn as soon as you have the item he wants; (2) talking to\n           Kensu in the beach cabin is no longer required for the Shell Flute\n           to work: instead, the Shell Flute will always work, and Kensu will\n           spawn after the Fog Lamp is turned in and will give a key item\n           check.  This flag restores the vanilla interaction where healing\n           and shell flute are required."});
class Glitches$$module$js$flagset extends FlagSection$$module$js$flagset{constructor(){super(...arguments);this.prefix="G";this.name="Glitches";this.description="\n      By default, the randomizer disables all known glitches (except ghetto\n      flight).  These flags selectively re-enable certain glitches.  Most of\n      these flags have two modes: normally enabling a glitch will add it as\n      possibly required by logic, but clicking a second time will add a '!'\n      and enable the glitch outside of logic (e.g. \"G!c\")."}}
Glitches$$module$js$flagset.GhettoFlight=Glitches$$module$js$flagset.flag("Gf",{name:"Ghetto flight",text:"Ghetto flight allows using Dolphin and Rabbit Boots to fly up the\n           waterfalls in the Angry Sea (without calming the whirlpools).\n           This is done by swimming up to a diagonal beach and jumping\n           in a different direction immediately before disembarking."});
Glitches$$module$js$flagset.StatueGlitch=Glitches$$module$js$flagset.flag("Gs",{name:"Statue glitch",text:"Statue glitch allows getting behind statues that block certain\n           entrances: the guards in Portoa, Amazones, Oak, Goa, and Shyron,\n           as well as the statues in the Waterfall Cave.  It is done by\n           approaching the statue from the top right and holding down and\n           left on the controller while mashing B.",modes:"!"});
Glitches$$module$js$flagset.MtSabreRequirementSkip=Glitches$$module$js$flagset.flag("Gn",{name:"Mt Sabre requirements skip",text:"Entering Mt Sabre North normally requires (1) having Teleport,\n           and (2) talking to the rabbit in Leaf after the abduction (via\n           Telepathy).  Both of these requirements can be skipped: first by\n           flying over the river in Cordel plain rather than crossing the\n           bridge, and then by threading the needle between the hitboxes in\n           Mt Sabre North.",
modes:"!"});Glitches$$module$js$flagset.StatueGauntletSkip=Glitches$$module$js$flagset.flag("Gg",{name:"Statue guantlet skip",text:"The shooting statues in front of Goa and Stxy normally require\n           Barrier to pass safely.  With this flag, Flight can also be used\n           by flying around the edge of the statue.",modes:"!"});
Glitches$$module$js$flagset.SwordChargeGlitch=Glitches$$module$js$flagset.flag("Gc",{name:"Sword charge glitch",text:"Sword charge glitch allows charging one sword to the level of\n           another sword by equipping the higher-level sword, re-entering\n           the menu, changing to the lower-level sword without exiting the\n           menu, creating a hard save, resetting, and then continuing.",hard:!0,modes:"!"});
Glitches$$module$js$flagset.TriggerSkip=Glitches$$module$js$flagset.flag("Gt",{name:"Trigger skip",text:"A wide variety of triggers and exit squares can be skipped by\n           using an invalid item every frame while walking.  This allows\n           bypassing both Mt Sabre entrance triggers, the Evil Spirit Island\n           entrance trigger, triggers for guards to move, slopes, and seamless\n           map transitions.",hard:!0,modes:"!"});
Glitches$$module$js$flagset.RageSkip=Glitches$$module$js$flagset.flag("Gr",{name:"Rage skip",text:"Rage can be skipped by damage-boosting diagonally into the Lime\n           Tree Lake screen.  This provides access to the area beyond the\n           lake if flight or bridges are available.",hard:!0,modes:"!"});
class Aesthetics$$module$js$flagset extends FlagSection$$module$js$flagset{constructor(){super(...arguments);this.prefix="A";this.name="Aesthetics";this.description='\n      These flags don\'t directly affect gameplay or shuffling, but they do\n      affect the experience significantly enough that there are three modes\n      for each: "off", "optional", and "required".  The first two are\n      equivalent for seed generation purposes, so that you can play the same\n      seed with either setting.  Setting it to "required" will change the\n      seed.'}}
Aesthetics$$module$js$flagset.RandomizeMusic=Aesthetics$$module$js$flagset.flag("Am",{name:"Randomize background music",modes:"!",optional:NO_BANG$$module$js$flagset});Aesthetics$$module$js$flagset.RandomizeMapColors=Aesthetics$$module$js$flagset.flag("Ac",{name:"Randomize map colors",modes:"!",optional:NO_BANG$$module$js$flagset});class Monsters$$module$js$flagset extends FlagSection$$module$js$flagset{constructor(){super(...arguments);this.prefix="M";this.name="Monsters"}}
Monsters$$module$js$flagset.RandomizeWeaknesses=Monsters$$module$js$flagset.flag("Me",{name:"Randomize monster weaknesses",text:"Monster and boss elemental weaknesses are shuffled."});Monsters$$module$js$flagset.TowerRobots=Monsters$$module$js$flagset.flag("Mt",{name:"Shuffle tower robots",text:"Tower robots will be shuffled into the normal pool.  At some\n           point, normal monsters may be shuffled into the tower as well.",hard:!0});
class EasyMode$$module$js$flagset extends FlagSection$$module$js$flagset{constructor(){super(...arguments);this.prefix="E";this.name="Easy Mode";this.description="\n      The following options make parts of the game easier."}}EasyMode$$module$js$flagset.NoShuffleMimics=EasyMode$$module$js$flagset.flag("Et",{name:"Don't shuffle mimics.",text:"Mimics will be in their vanilla locations."});
EasyMode$$module$js$flagset.PreserveUniqueChecks=EasyMode$$module$js$flagset.flag("Eu",{name:"Keep unique items and consumables separate",text:"Normally all items and mimics are shuffled into a single pool and\n           distributed from there.  If this flag is set, unique items\n           (specifically, anything that cannot be sold) will only be found in\n           either (a) checks that held unique items in vanilla, or (b) boss\n           drops.  Chests containing consumables in vanilla may be safely\n           ignored, but chests containing unique items in vanilla may still\n           end up with non-unique items because of bosses like Vampire 2 that\n           drop consumables.  If mimics are shuffled, they will only be in\n           consumable locations."});
EasyMode$$module$js$flagset.DecreaseEnemyDamage=EasyMode$$module$js$flagset.flag("Ed",{name:"Decrease enemy damage",text:"Enemy attack power will be significantly decreased in the early game\n           (by a factor of 3).  The gap will narrow in the mid-game and eventually\n           phase out at scaling level 40."});EasyMode$$module$js$flagset.GuaranteeStartingSword=EasyMode$$module$js$flagset.flag("Es",{name:"Guarantee starting sword",text:"The Leaf elder is guaranteed to give a sword.  It will not be\n           required to deal with any enemies before finding the first sword."});
EasyMode$$module$js$flagset.GuaranteeRefresh=EasyMode$$module$js$flagset.flag("Er",{name:"Guarantee refresh",text:"Guarantees the Refresh spell will be available before fighting\n           Tetrarchs."});EasyMode$$module$js$flagset.ExperienceScalesFaster=EasyMode$$module$js$flagset.flag("Ex",{name:"Experience scales faster",text:'Less grinding will be required to "keep up" with the game difficulty.',excludes:["Hx"]});
class NoGuarantees$$module$js$flagset extends FlagSection$$module$js$flagset{constructor(){super(...arguments);this.prefix="N";this.name="No guarantees";this.description="\n      Removes various guarantees from the logic."}}
NoGuarantees$$module$js$flagset.BattleMagic=NoGuarantees$$module$js$flagset.flag("Nw",{name:"Battle magic not guaranteed",text:"Normally, the logic will guarantee that level 3 sword charges are\n           available before fighting the tetrarchs (with the exception of Karmine,\n           who only requires level 2).  This disables that check.",hard:!0});
NoGuarantees$$module$js$flagset.MatchingSword=NoGuarantees$$module$js$flagset.flag("Ns",{name:"Matching sword not guaranteed",text:'Player may be required to fight bosses with the wrong sword, which\n           may require using "tink strats" dealing 1 damage per hit.',hard:!0});
NoGuarantees$$module$js$flagset.Barrier=NoGuarantees$$module$js$flagset.flag("Nb",{name:"Barrier not guaranteed",text:"Normally, the logic will guarantee Barrier (or else refresh and shield\n           ring) before entering Stxy, the Fortress, or fighting Karmine.  This\n           disables that check.",hard:!0});
NoGuarantees$$module$js$flagset.GasMask=NoGuarantees$$module$js$flagset.flag("Ng",{name:"Gas mask not guaranteed",text:"The logic will not guarantee gas mask before needing to enter the swamp.\n           Gas mask is still guaranteed to kill the insect.",hard:!0});class HardMode$$module$js$flagset extends FlagSection$$module$js$flagset{constructor(){super(...arguments);this.prefix="H";this.name="Hard mode"}}
HardMode$$module$js$flagset.NoBuffMedicalHerb=HardMode$$module$js$flagset.flag("Hm",{name:"Don't buff medical herb or fruit of power",text:"Medical Herb is not buffed to heal 80 damage, which is helpful to make\n           up for cases where Refresh is unavailable early.  Fruit of Power is not\n           buffed to restore 56 MP.",hard:!0});
HardMode$$module$js$flagset.MaxScalingInTower=HardMode$$module$js$flagset.flag("Ht",{name:"Max scaling level in tower",text:"Enemies in the tower spawn at max scaling level.",hard:!0});HardMode$$module$js$flagset.ExperienceScalesSlower=HardMode$$module$js$flagset.flag("Hx",{name:"Experience scales slower",text:'More grinding will be required to "keep up" with the difficulty.',excludes:["Ex"],hard:!0});
HardMode$$module$js$flagset.ChargeShotsOnly=HardMode$$module$js$flagset.flag("Hc",{name:"Charge shots only",text:"Stabbing is completely ineffective.  Only charged shots work.",hard:!0});HardMode$$module$js$flagset.Blackout=HardMode$$module$js$flagset.flag("Hz",{name:"Blackout",text:"All caves and fortresses are permanently dark.",hard:!0});HardMode$$module$js$flagset.Permadeath=HardMode$$module$js$flagset.flag("Hh",{name:"Permadeath",text:"Hardcore mode: checkpoints and saves are removed.",hard:!0});
class Vanilla$$module$js$flagset extends FlagSection$$module$js$flagset{constructor(){super(...arguments);this.name="Vanilla";this.prefix="V";this.description="\n      Options to restore vanilla behavior changed by default."}}Vanilla$$module$js$flagset.Dyna=Vanilla$$module$js$flagset.flag("Vd",{name:"Don't buff Dyna",text:"By default, we makes the Dyna fight a bit more of a challenge.\n           Side pods will fire significantly more.  The safe spot has been\n           removed.  The revenge beams pass through barrier.  Side pods can\n           now be killed.  This flag prevents that change."});
Vanilla$$module$js$flagset.BonusItems=Vanilla$$module$js$flagset.flag("Vb",{name:"Don't buff bonus items",text:"Leather Boots are changed to Speed Boots, which increase player walking\n           speed (this allows climbing up the slope to access the Tornado Bracelet\n           chest, which is taken into consideration by the logic).  Deo's pendant\n           restores MP while moving.  Rabbit boots enable sword charging up to\n           level 2 while walking (level 3 still requires being stationary, so as\n           to prevent wasting tons of magic)."});
Vanilla$$module$js$flagset.Maps=Vanilla$$module$js$flagset.flag("Vm",{name:"Vanilla maps",text:'Normally the randomizer adds a new "East Cave" to Valley of Wind,\n           borrowed from the GBC version of the game.  This cave contains two\n           chests (one considered a key item) on the upper floor and exits to\n           two random areas (chosen between Lime Tree Valley, Cordel Plain,\n           Goa Valley, or Desert 2; the quicksand is removed from the entrances\n           to Pyramid and Crypt), one unblocked on the lower floor, and one\n           down the stairs and behind a rock wall from the upper floor.  This\n           flag prevents adding that cave.  If set as "V!m" then a direct path\n           will instead be added between Valley of Wind and Lime Tree Valley\n           (as in earlier versions of the randomizer).',
modes:"!"});Vanilla$$module$js$flagset.Shops=Vanilla$$module$js$flagset.flag("Vs",{name:"Vanilla shops",text:"By default, we disable shop glitch, shuffle shop contents, and tie\n           the prices to the scaling level (item shops and inns increase by a\n           factor of 2 every 10 scaling levels, armor shops decrease by a\n           factor of 2 every 12 scaling levels).  This flag prevents all of\n           these changes, restoring shops to be completely vanilla."});
Vanilla$$module$js$flagset.WildWarp=Vanilla$$module$js$flagset.flag("Vw",{name:"Vanilla wild warp",text:"By default, Wild Warp is nerfed to only return to Mezame Shrine.\n           This flag restores it to work like normal.  Note that this will put\n           all wild warp locations in logic unless the flag is set as (V!w).",modes:"!"});
class Quality$$module$js$flagset extends FlagSection$$module$js$flagset{constructor(){super(...arguments);this.prefix="Q";this.name="Quality of Life";this.description="\n      The following quality-of-life flags turn <i>off</i> improvements that\n      are normally on by default.  They are optional and will not affect the\n      seed generation.  They may be toggled freely in race mode."}}
Quality$$module$js$flagset.NoAutoEquip=Quality$$module$js$flagset.flag("Qa",{name:"Don't automatically equip orbs and bracelets",text:"Prevents adding a quality-of-life improvement to automatically equip\n           the corresponding orb/bracelet whenever changing swords.",optional:OPTIONAL$$module$js$flagset});
Quality$$module$js$flagset.NoControllerShortcuts=Quality$$module$js$flagset.flag("Qc",{name:"Disable controller shortcuts",text:"By default, we disable second controller input and instead enable\n           some new shortcuts on controller 1: Start+A+B for wild warp, and\n           Select+B to quickly change swords.  To support this, the action of\n           the start and select buttons is changed slightly.  This flag\n           disables this change and retains normal behavior.",optional:OPTIONAL$$module$js$flagset});
class DebugMode$$module$js$flagset extends FlagSection$$module$js$flagset{constructor(){super(...arguments);this.prefix="D";this.name="Debug Mode";this.description="\n      These options are helpful for exploring or debugging.  Note that,\n      while they do not directly affect any randomization, they\n      <i>do</i> factor into the seed to prevent cheating, and they\n      will remove the option to generate a seed for racing."}}
DebugMode$$module$js$flagset.SpoilerLog=DebugMode$$module$js$flagset.flag("Ds",{name:"Generate a spoiler log",text:"Note: <b>this will change the placement of items</b> compared to a\n           seed generated without this flag turned on."});DebugMode$$module$js$flagset.TrainerMode=DebugMode$$module$js$flagset.flag("Dt",{name:"Trainer mode",text:"Installs a trainer for practicing certain parts of the game.\n           At the start of the game, the player will have all swords, basic\n           armors and shields, all worn items and magics, a selection of\n           consumables, bow of truth, maximum cash, all warp points activated,\n           and the Shyron massacre will have been triggered.  Wild warp is\n           reconfigured to provide easy access to all bosses.  Additionally,\n           the following button combinations are recognized:<ul>\n             <li>Start+Up: increase player level\n             <li>Start+Down: increase scaling level\n             <li>Start+Left: get all balls\n             <li>Start+Right: get all bracelets\n             <li>Start+B+Down: get a full set of consumable items\n             <li>Start+B+Left: get all advanced armors\n             <li>Start+B+Right: get all advanced shields\n           </ul>"});
DebugMode$$module$js$flagset.NeverDie=DebugMode$$module$js$flagset.flag("Di",{name:"Player never dies"});
class FlagSet$$module$js$flagset{constructor(a="@Casual"){if("string"!==typeof a){this.flags=new Map;for(const [b,c]of a)this.set(b.flag,c)}else if(a.startsWith("@")){var b=Presets$$module$js$flagset.get(a.substring(1));if(!b)throw new UsageError$$module$js$util(`Unknown preset: ${a}`);this.flags=new Map(b.flags)}else{this.flags=new Map;a=a.replace(/[^A-Za-z0-9!?]/g,"");b=/([A-Z])([a-z0-9!?]+)/g;for(var c;c=b.exec(a);){const [,a,b]=c,f=/([!?]|^)([a-z0-9]+)/g;for(;c=f.exec(b);){const [,b,d]=c;for(const c of d)this.set(a+
c,b||!0)}}}}filterOptional(){return new FlagSet$$module$js$flagset(new Map([...this.flags].map(([a,b])=>[a,a.opts.optional?a.opts.optional(b):b])))}filterRandom(a){return new FlagSet$$module$js$flagset(new Map([...this.flags].map(([b,c])=>{c="?"!==c?c:a.pick([!0,!1,...b.opts.modes||""]);return[b,c]})))}toString(){var a=new DefaultMap$$module$js$util(()=>new DefaultMap$$module$js$util(()=>[]));for(const [b,d]of this.flags){if(2!==b.flag.length)throw Error(`Bad flag ${b.flag}`);d&&a.get(b.flag[0]).get(!0===
d?"":d).push(b.flag[1])}const b=[];for(const [c,d]of a.sortedEntries()){a=c;for(const [b,c]of d)a+=b+c.sort().join("");b.push(a)}return b.join(" ")}toggle(a){const b=Flag$$module$js$flagset.flags.get(a);if(!b)return console.error(`Bad flag: ${a}`),!1;a=this.flags.get(b)||!1;const c=[!1,!0,...b.opts.modes||"","?",!1],d=c.indexOf(a);if(0>d)throw Error(`Bad current mode ${a}`);a=c[d+1];this.flags.set(b,a);return a}set(a,b){var c;const d=Flag$$module$js$flagset.flags.get(a);if(d){if(b)if(!0===b||"?"===
b||(null===(c=d.opts.modes)||void 0===c?0:c.includes(b)))this.flags.set(d,b);else{console.error(`Bad flag mode: ${a[0]}${b}${a.substring(1)}`);return}else this.flags.delete(d);for(const a of d.opts.excludes||[])this.flags.delete(Flag$$module$js$flagset.flags.get(a))}else console.error(`Bad flag: ${a}`)}check(a,...b){a=a instanceof Flag$$module$js$flagset?a:Flag$$module$js$flagset.flags.get(a);b.length||b.push(!0);return b.includes(a&&this.flags.get(a)||!1)}get(a){return(a=a instanceof Flag$$module$js$flagset?
a:Flag$$module$js$flagset.flags.get(a))&&this.flags.get(a)||!1}preserveUniqueChecks(){return this.check(EasyMode$$module$js$flagset.PreserveUniqueChecks)}shuffleMimics(){return this.check(EasyMode$$module$js$flagset.NoShuffleMimics,!1)}autoEquipBracelet(){return this.check(Quality$$module$js$flagset.NoAutoEquip,!1)}buffDeosPendant(){return this.check(Vanilla$$module$js$flagset.BonusItems,!1)}changeGasMaskToHazmatSuit(){return this.check(Vanilla$$module$js$flagset.BonusItems,!1)}slowDownTornado(){return this.check(Vanilla$$module$js$flagset.BonusItems,
!1)}leatherBootsGiveSpeed(){return this.check(Vanilla$$module$js$flagset.BonusItems,!1)}rabbitBootsChargeWhileWalking(){return this.check(Vanilla$$module$js$flagset.BonusItems,!1)}controllerShortcuts(){return this.check(Quality$$module$js$flagset.NoControllerShortcuts,!1)}randomizeMusic(){return this.check(Aesthetics$$module$js$flagset.RandomizeMusic)}shuffleSpritePalettes(){return this.check(World$$module$js$flagset.RandomizeSpriteColors)}shuffleTilePalettes(){return this.check(Aesthetics$$module$js$flagset.RandomizeMapColors)}shuffleMonsters(){return!0}shuffleShops(){return this.check(Vanilla$$module$js$flagset.Shops,
!1)}bargainHunting(){return this.shuffleShops()}shuffleTowerMonsters(){return this.check(Monsters$$module$js$flagset.TowerRobots)}shuffleMonsterElements(){return this.check(Monsters$$module$js$flagset.RandomizeWeaknesses)}shuffleBossElements(){return this.shuffleMonsterElements()}buffMedicalHerb(){return this.check(HardMode$$module$js$flagset.NoBuffMedicalHerb,!1)}decreaseEnemyDamage(){return this.check(EasyMode$$module$js$flagset.DecreaseEnemyDamage)}trainer(){return this.check(DebugMode$$module$js$flagset.TrainerMode)}neverDie(){return this.check(DebugMode$$module$js$flagset.NeverDie)}chargeShotsOnly(){return this.check(HardMode$$module$js$flagset.ChargeShotsOnly)}barrierRequiresCalmSea(){return!0}connectLimeTreeToLeaf(){return this.check(Vanilla$$module$js$flagset.Maps,
"!")}addEastCave(){return this.check(Vanilla$$module$js$flagset.Maps,!1)}fogLampNotRequired(){return this.check(Routing$$module$js$flagset.VanillaDolphin,!1)}storyMode(){return this.check(Routing$$module$js$flagset.StoryMode)}noBowMode(){return this.check(Routing$$module$js$flagset.NoBowMode)}requireHealedDolphinToRide(){return this.check(Routing$$module$js$flagset.VanillaDolphin)}saharaRabbitsRequireTelepathy(){return!0}teleportOnThunderSword(){return this.check(Routing$$module$js$flagset.NoThunderSwordWarp,
!1,"!")}randomizeThunderTeleport(){return this.check(Routing$$module$js$flagset.NoThunderSwordWarp,!1)}orbsOptional(){return this.check(Routing$$module$js$flagset.OrbsNotRequired)}randomizeMaps(){return this.check(World$$module$js$flagset.RandomizeMaps)}randomizeTrades(){return this.check(World$$module$js$flagset.RandomizeTrades)}unidentifiedItems(){return this.check(World$$module$js$flagset.UnidentifiedKeyItems)}randomizeWalls(){return this.check(World$$module$js$flagset.RandomizeWallElements)}guaranteeSword(){return this.check(EasyMode$$module$js$flagset.GuaranteeStartingSword)}guaranteeSwordMagic(){return this.check(NoGuarantees$$module$js$flagset.BattleMagic,
!1)}guaranteeMatchingSword(){return this.check(NoGuarantees$$module$js$flagset.MatchingSword,!1)}guaranteeGasMask(){return this.check(NoGuarantees$$module$js$flagset.GasMask,!1)}guaranteeBarrier(){return this.check(NoGuarantees$$module$js$flagset.Barrier,!1)}guaranteeRefresh(){return this.check(EasyMode$$module$js$flagset.GuaranteeRefresh)}disableSwordChargeGlitch(){return this.check(Glitches$$module$js$flagset.SwordChargeGlitch,!1)}disableTeleportSkip(){return this.check(Glitches$$module$js$flagset.MtSabreRequirementSkip,
!1)}disableRabbitSkip(){return this.check(Glitches$$module$js$flagset.MtSabreRequirementSkip,!1)}disableShopGlitch(){return this.check(Vanilla$$module$js$flagset.Shops,!1)}disableStatueGlitch(){return this.check(Glitches$$module$js$flagset.StatueGlitch,!1)}disableRageSkip(){return this.check(Glitches$$module$js$flagset.RageSkip,!1)}disableFlightStatueSkip(){return this.check(Glitches$$module$js$flagset.StatueGauntletSkip,!1)}assumeSwordChargeGlitch(){return this.check(Glitches$$module$js$flagset.SwordChargeGlitch)}assumeGhettoFlight(){return this.check(Glitches$$module$js$flagset.GhettoFlight)}assumeTeleportSkip(){return this.check(Glitches$$module$js$flagset.MtSabreRequirementSkip)}assumeRabbitSkip(){return this.check(Glitches$$module$js$flagset.MtSabreRequirementSkip)}assumeStatueGlitch(){return this.check(Glitches$$module$js$flagset.StatueGlitch)}assumeTriggerGlitch(){return this.check(Glitches$$module$js$flagset.TriggerSkip)}assumeFlightStatueSkip(){return this.check(Glitches$$module$js$flagset.StatueGauntletSkip)}assumeWildWarp(){return this.check(Vanilla$$module$js$flagset.WildWarp)||
this.check(World$$module$js$flagset.RandomizeWildWarp)}assumeRageSkip(){return!1}nerfWildWarp(){return this.check(Vanilla$$module$js$flagset.WildWarp,!1)&&this.check(World$$module$js$flagset.RandomizeWildWarp,!1)}allowWildWarp(){return!this.nerfWildWarp()}randomizeWildWarp(){return this.check(World$$module$js$flagset.RandomizeWildWarp,!0,"!")}blackoutMode(){return this.check(HardMode$$module$js$flagset.Blackout)}hardcoreMode(){return this.check(HardMode$$module$js$flagset.Permadeath)}buffDyna(){return!this.check(Vanilla$$module$js$flagset.Dyna)}maxScalingInTower(){return this.check(HardMode$$module$js$flagset.MaxScalingInTower)}expScalingFactor(){return this.check(HardMode$$module$js$flagset.ExperienceScalesSlower)?
.25:this.check(EasyMode$$module$js$flagset.ExperienceScalesFaster)?2.5:1}}var module$js$flagset={};module$js$flagset.Flag=Flag$$module$js$flagset;module$js$flagset.Preset=Preset$$module$js$flagset;module$js$flagset.FlagSection=FlagSection$$module$js$flagset;module$js$flagset.FlagSet=FlagSet$$module$js$flagset;const Edge$$module$js$graph={of:(...a)=>a.map((a)=>a.uid)};class Node$$module$js$graph{constructor(a,b){this.graph=a;this.name=b;this.uid=a.nodes.length;a.nodes.push(this)}get nodeType(){return"Node"}toString(){return`${this.nodeType} ${this.name}`}edges(a){return[]}write(){}}
class Graph$$module$js$graph{constructor(a){this.rom=a;this.nodes=[]}traverse({wanted:a,dfs:b=!1}={}){const c=new Deque$$module$js$util,d=new Map,e=new Map;for(var f of this.nodes)for(var g of f.edges()){var h=g.join(" ");for(let a=1;a<g.length;a++){const b=g[a];e.has(b)||e.set(b,new Map);e.get(b).set(h,g)}1===g.length&&(h=g[0],d.has(h)||(c.push(h),d.set(h,g)))}a=new Set((a||this.nodes).map((a)=>a instanceof Node$$module$js$graph?a.uid:a));for(f=new Map;a.size&&c.length;){g=b?c.pop():c.shift();a.delete(g);
a:for(const a of(e.get(g)||f).values())if(g=a[0],!d.has(g)){for(h=1;h<a.length;h++)if(!d.has(a[h]))continue a;d.set(g,a);c.push(g)}}return{path:[...d.values()].map(([a,...b])=>{const c=(a)=>[this.nodes[a]];return[a,[...c(a)," (",b.map((a)=>c(a).join("").replace(/\s+\(.*\)/,"")).join(", "),")"].join("")]}),seen:d,win:!a.size}}}
class SparseDependencyGraph$$module$js$graph{constructor(a){this.nodes=Array(a).fill(0).map(()=>new Map);this.finalized=Array(a).fill(!1)}addRoute(a){const b=a[0];if(this.finalized[b])throw Error(`Attempted to add a route for finalized node ${b}`);let c=new Set;for(let b=a.length-1;1<=b;b--)c.add(a[b]);for(;;){a=!1;for(var d of c){if(d===b)return[];if(this.finalized[d]){a=this.nodes[d];if(!a.size)return[];c.delete(d);if(1===a.size){for(const b of a.values().next().value)c.add(b);a=!0;break}d=new Map;
for(var e of a.values())for(var f of this.addRoute([b,...c,...e]))d.set(f.label,f);return[...d.values()]}}if(!a)break}e=[...c].sort();c=new Set(e);e=e.join(" ");f=this.nodes[b];if(f.has(e))return[];for(const [a,b]of f){if(containsAll$$module$js$graph(c,b))return[];containsAll$$module$js$graph(b,c)&&f.delete(a)}f.set(e,c);return[{target:b,deps:c,label:`${b}:${e}`}]}finalize(a){if(!this.finalized[a]){this.finalized[a]=!0;for(let b=0;b<this.nodes.length;b++){const c=this.nodes[b];if(c.size)for(const [d,
e]of c)if(e.has(a)){const a=this.finalized[b];this.finalized[b]=!1;c.delete(d);this.addRoute([b,...e.values()]);this.finalized[b]=a}}}}}const containsAll$$module$js$graph=(a,b)=>{if(a.size<b.size)return!1;for(const c of b)if(!a.has(c))return!1;return!0};var module$js$graph={};module$js$graph.Edge=Edge$$module$js$graph;module$js$graph.Node=Node$$module$js$graph;module$js$graph.Graph=Graph$$module$js$graph;module$js$graph.SparseDependencyGraph=SparseDependencyGraph$$module$js$graph;function upperCamelToSpaces$$module$js$rom$util(a){return a.replace(/([a-z])([A-Z0-9])/g,"$1 $2").replace(/Of/g,"of").replace(/_/g," - ")}function seq$$module$js$rom$util(a,b=(a)=>a){return Array(a).fill(0).map((a,d)=>b(d))}function slice$$module$js$rom$util(a,b,c){return a.slice(b,b+c)}function tuple$$module$js$rom$util(a,b,c){return Array.from(a.slice(b,b+c))}function signed$$module$js$rom$util(a){return 128>a?a:a-256}function unsigned$$module$js$rom$util(a){return 0>a?a+256:a}
function varSlice$$module$js$rom$util(a,b,c,d,e=Infinity,f){f||(f=(a)=>a);const g=[];for(;b+c<=e&&a[b]!==d;)g.push(f(a.slice(b,b+c))),b+=c;return g}function addr$$module$js$rom$util(a,b,c=0){return(a[b]|a[b+1]<<8)+c}function group$$module$js$rom$util(a,b,c){c||(c=(a)=>a);return seq$$module$js$rom$util(Math.max(0,Math.floor(b.length/a)),(d)=>c(slice$$module$js$rom$util(b,d*a,a)))}function reverseBits$$module$js$rom$util(a){return 65793*(2050*a&139536|32800*a&558144)>>>16&255}
function countBits$$module$js$rom$util(a){a-=a>>1&85;a=(a&51)+(a>>2&51);return a+(a>>4)&15}function hex$$module$js$rom$util(a){return null!=a?a.toString(16).padStart(2,"0"):String(a)}function hex3$$module$js$rom$util(a){return a.toString(16).padStart(3,"0")}function hex4$$module$js$rom$util(a){return a.toString(16).padStart(4,"0")}function hex5$$module$js$rom$util(a){return a.toString(16).padStart(5,"0")}
function concatIterables$$module$js$rom$util(a){const b=[];for(const c of a)for(const a of c)b.push(a);return b}function readBigEndian$$module$js$rom$util(a,b){return a[b]<<8|a[b+1]}function readLittleEndian$$module$js$rom$util(a,b){return a[b+1]<<8|a[b]}function readString$$module$js$rom$util(a,b,c=0){const d=[];for(;a[b]!=c;)d.push(a[b++]);return String.fromCharCode(...d)}function writeLittleEndian$$module$js$rom$util(a,b,c){a[b]=c&255;a[b+1]=c>>>8}
function writeString$$module$js$rom$util(a,b,c){for(let d=0,e=c.length;d<e;d++)a[b+d]=c.charCodeAt(d)}function write$$module$js$rom$util(a,b,c){a.subarray(b,b+c.length).set(c)}
class FlagListType$$module$js$rom$util{constructor(a,b,c=!1){this.last=a;this.clear=b;this.nonEmpty=c}read(a,b=0){const c=[];for(;;){const e=a[b++];var d=a[b++];d|=(e&3)<<8;d=e&this.clear?~d:d;-1!==d&&c.push(d);if(e&this.last)return c}}bytes(a){a=a.filter((a)=>-1!==a);this.nonEmpty&&!a.length&&(a=[-1]);const b=[];for(let c=0;c<a.length;c++){let d=a[c];0>d&&(d=this.clear<<8|~d);c===a.length-1&&(d|=this.last<<8);b.push(d>>>8);b.push(d&255)}return b}write(a,b,c=0){b=this.bytes(b);for(let d=0;d<b.length;d++)a[d+
c]=b[d]}}const DIALOG_FLAGS$$module$js$rom$util=new FlagListType$$module$js$rom$util(64,128),ITEM_GET_FLAGS$$module$js$rom$util=new FlagListType$$module$js$rom$util(64,128,!0),ITEM_USE_FLAGS$$module$js$rom$util=new FlagListType$$module$js$rom$util(64,128,!0),ITEM_CONDITION_FLAGS$$module$js$rom$util=new FlagListType$$module$js$rom$util(128,32,!0),SPAWN_CONDITION_FLAGS$$module$js$rom$util=new FlagListType$$module$js$rom$util(128,32);
function initializer$$module$js$rom$util(){function a(...a){return{tag:b,args:a}}const b=Symbol();a.commit=(a,d)=>{for(const c of Object.getOwnPropertyNames(a)){const e=a[c];e.tag===b&&(a[c]=d(c,...e.args))}};return a}
class DataTuple$$module$js$rom$util{constructor(a){this.data=a}[Symbol.iterator](){return this.data[Symbol.iterator]()}hex(){return Array.from(this.data,hex$$module$js$rom$util).join(" ")}clone(){return new this.constructor(this.data)}static make(a,b){const c=class extends DataTuple$$module$js$rom$util{constructor(b=Array(a).fill(0)){super(b)}static of(a){const b=new c;for(const [c,d]of Object.entries(a))b[c]=d;return b}static from(b,d=0){return new c(tuple$$module$js$rom$util(b,d,a))}},d={};for(const a in b)d[a]=
"function"===typeof b[a]?{value:b[a]}:b[a];Object.defineProperties(c.prototype,d);return c}static prop(...a){return{get(){let b=0;for(const [c,d=255,e=0]of a)b|=(this.data[c]&d)>>>(0>e?0:e)<<(0>e?-e:0);return b},set(b){for(const [c,d=255,e=0]of a)this.data[c]=this.data[c]&~d|b>>>(0>e?-e:0)<<(0>e?0:e)&d}}}static booleanProp(a){const b=DataTuple$$module$js$rom$util.prop(a);return{get(){return!!b.get.call(this)},set(a){b.set.call(this,+a)}}}}
const watchArray$$module$js$rom$util=(a,b)=>new Proxy(a,{get(a,d){let c=a[d];if("subarray"===d)return(c,d)=>{const e=a.subarray(c,d);return c<=b&&b<d?watchArray$$module$js$rom$util(e,b-c):e};if("set"===d)return(c)=>{console.log(`Setting overlapping array ${b}`);debugger;a.set(c)};"function"===typeof c&&(c=c.bind(a));return c},set(a,d,e,f){if(d==b){console.log(`Writing ${b.toString(16)}`);debugger}a[d]=e;return!0}});
class Segment$$module$js$rom$util{constructor(a,b,c){this.name=a;this.bank=b;this.org=c}get offset(){return(this.bank&31)<<13}}Segment$$module$js$rom$util.$04=new Segment$$module$js$rom$util("04",4,32768);Segment$$module$js$rom$util.$05=new Segment$$module$js$rom$util("05",5,40960);Segment$$module$js$rom$util.$0a=new Segment$$module$js$rom$util("0a",10,32768);Segment$$module$js$rom$util.$0b=new Segment$$module$js$rom$util("0b",11,40960);
Segment$$module$js$rom$util.$0c=new Segment$$module$js$rom$util("0c",12,32768);Segment$$module$js$rom$util.$0d=new Segment$$module$js$rom$util("0d",13,40960);Segment$$module$js$rom$util.$0e=new Segment$$module$js$rom$util("0e",14,32768);Segment$$module$js$rom$util.$0f=new Segment$$module$js$rom$util("0f",15,40960);Segment$$module$js$rom$util.$10=new Segment$$module$js$rom$util("10",16,32768);Segment$$module$js$rom$util.$14=new Segment$$module$js$rom$util("14",20,32768);
Segment$$module$js$rom$util.$15=new Segment$$module$js$rom$util("15",21,40960);Segment$$module$js$rom$util.$16_a=new Segment$$module$js$rom$util("16:a",22,40960);Segment$$module$js$rom$util.$17=new Segment$$module$js$rom$util("17",23,40960);Segment$$module$js$rom$util.$18=new Segment$$module$js$rom$util("18",24,32768);Segment$$module$js$rom$util.$19=new Segment$$module$js$rom$util("19",25,40960);Segment$$module$js$rom$util.$1a=new Segment$$module$js$rom$util("1a",26,32768);
Segment$$module$js$rom$util.$1b=new Segment$$module$js$rom$util("1b",27,40960);Segment$$module$js$rom$util.$fe=new Segment$$module$js$rom$util("fe",30,49152);Segment$$module$js$rom$util.$ff=new Segment$$module$js$rom$util("ff",31,57344);
class Address$$module$js$rom$util{constructor(a,b){this.seg=a;this.delta=b}static of(a,b){return new Address$$module$js$rom$util(a,b-a.org)}get offset(){return this.seg.offset+this.delta}get org(){return this.seg.org+this.delta}get segment(){return this.seg.name}plus(a,b){a=this.delta+a;if(8192<=a){if(!b)throw Error("Segment changed");if(this.seg.org&8192)throw Error("Bad segment cross");return new Address$$module$js$rom$util(b,a&8191)}return new Address$$module$js$rom$util(this.seg,a)}minus(a){if(a.seg!==
this.seg)throw Error("Incompatible segments");return this.delta-a.delta}read(a){return a[this.offset]}readLittleEndian(a){const b=this.offset;return a[b]|a[b+1]<<8}readAddress(a,...b){a=this.readLittleEndian(a);b.length||(b=[this.seg]);for(const c of b)if((a&57344)===(c.org&57344))return Address$$module$js$rom$util.of(c,a);throw Error(`Could not find valid segment for ${hex$$module$js$rom$util(a)}`);}loc(a,b){a.segment(this.segment);a.org(this.org,b)}}
function free$$module$js$rom$util(a,b,c,d){a.segment(b.name);a.org(c);a.free(d-c)}var module$js$rom$util={};module$js$rom$util.upperCamelToSpaces=upperCamelToSpaces$$module$js$rom$util;module$js$rom$util.seq=seq$$module$js$rom$util;module$js$rom$util.slice=slice$$module$js$rom$util;module$js$rom$util.tuple=tuple$$module$js$rom$util;module$js$rom$util.signed=signed$$module$js$rom$util;module$js$rom$util.unsigned=unsigned$$module$js$rom$util;module$js$rom$util.varSlice=varSlice$$module$js$rom$util;
module$js$rom$util.addr=addr$$module$js$rom$util;module$js$rom$util.group=group$$module$js$rom$util;module$js$rom$util.reverseBits=reverseBits$$module$js$rom$util;module$js$rom$util.countBits=countBits$$module$js$rom$util;module$js$rom$util.hex=hex$$module$js$rom$util;module$js$rom$util.hex3=hex3$$module$js$rom$util;module$js$rom$util.hex4=hex4$$module$js$rom$util;module$js$rom$util.hex5=hex5$$module$js$rom$util;module$js$rom$util.concatIterables=concatIterables$$module$js$rom$util;
module$js$rom$util.readBigEndian=readBigEndian$$module$js$rom$util;module$js$rom$util.readLittleEndian=readLittleEndian$$module$js$rom$util;module$js$rom$util.readString=readString$$module$js$rom$util;module$js$rom$util.writeLittleEndian=writeLittleEndian$$module$js$rom$util;module$js$rom$util.writeString=writeString$$module$js$rom$util;module$js$rom$util.write=write$$module$js$rom$util;module$js$rom$util.FlagListType=FlagListType$$module$js$rom$util;module$js$rom$util.DIALOG_FLAGS=DIALOG_FLAGS$$module$js$rom$util;
module$js$rom$util.ITEM_GET_FLAGS=ITEM_GET_FLAGS$$module$js$rom$util;module$js$rom$util.ITEM_USE_FLAGS=ITEM_USE_FLAGS$$module$js$rom$util;module$js$rom$util.ITEM_CONDITION_FLAGS=ITEM_CONDITION_FLAGS$$module$js$rom$util;module$js$rom$util.SPAWN_CONDITION_FLAGS=SPAWN_CONDITION_FLAGS$$module$js$rom$util;module$js$rom$util.initializer=initializer$$module$js$rom$util;module$js$rom$util.DataTuple=DataTuple$$module$js$rom$util;module$js$rom$util.watchArray=watchArray$$module$js$rom$util;
module$js$rom$util.Segment=Segment$$module$js$rom$util;module$js$rom$util.Address=Address$$module$js$rom$util;module$js$rom$util.free=free$$module$js$rom$util;class TrackerNode$$module$js$nodes extends Node$$module$js$graph{constructor(a,b,c){super(a,c);this.type=b}get nodeType(){return"Tracker"}edges({}={}){return[]}}TrackerNode$$module$js$nodes.OFF_ROUTE=1;TrackerNode$$module$js$nodes.GLITCH=2;TrackerNode$$module$js$nodes.HARD=3;class Option$$module$js$nodes extends Node$$module$js$graph{constructor(a,b,c){super(a,b);this.value=c}get nodeType(){return"Option"}edges(){return this.value?[Edge$$module$js$graph.of(this)]:[]}}
class Slot$$module$js$nodes extends Node$$module$js$graph{constructor(a,b,c,d,e=[]){super(a,b);this.item=c;this.slots=e;this.isInvisible=this.requiresUnique=!1;this.slotName=b;this.slotIndex=d;this.slotType=c instanceof Magic$$module$js$nodes?"magic":"consumable";this.vanillaItemName=c.name;this.itemIndex=d}get nodeType(){return"Slot"}toString(){return`${super.toString()} [${this.vanillaItemName} $${this.slotIndex.toString(16).padStart(2,"0")}]`}edges(){return null!=this.item&&null!=this.itemIndex?
[Edge$$module$js$graph.of(this.item,this)]:[]}isFixed(){return!1}isMimic(){return 112<=this.itemIndex}requireUnique(){this.requiresUnique=!0;return this}canHoldMimic(){return this instanceof Chest$$module$js$nodes&&!this.isInvisible}needsChest(){const a=this.itemIndex;return 13<=a&&36>=a||38===a||72<a}isChest(){return(this instanceof Chest$$module$js$nodes||this instanceof BossDrop$$module$js$nodes)&&9!==this.slotIndex}get name2(){return this.item.name===this.vanillaItemName?this.name:`${this.item.name} [${this.vanillaItemName}]`}set(a,
b){this.item=a;this.itemIndex=b}write(){if(this.slots){var a=this.graph.rom;if(a)for(const b of this.slots)b(a,this)}}swap(a){const b=this.item,c=this.itemIndex;this.set(a.item,a.itemIndex);a.set(b,c)}key(){this.slotType="key";return this}bonus(){this.slotType="bonus";return this}direct(a){this.slots.push((b,c)=>{write$$module$js$nodes(b.prg,a,c.itemIndex)});return this}fromPerson(a,b,c=0){this.slots.push((a,e)=>{a.npcs[b].data[c]=e.itemIndex});return this}npcSpawn(a,b,c=0){this.slots.push((d,e)=>
{d=d.npcs[a].spawnConditions;null==b&&(b=getFirst$$module$js$nodes(d.keys()));d=d.get(b);if(!d)throw Error(`No spawn found for NPC $${hex$$module$js$rom$util(a)} @ $${hex$$module$js$rom$util(b)}`);d[c]=setItem$$module$js$nodes(d[c],e)});return this}dialog(a,b,c=0,d){this.slots.push((e,f)=>{e=e.npcs[a].localDialogs;null==b&&(b=getFirst$$module$js$nodes(e.keys()));e=e.get(b);if(!e)throw Error(`No dialog found for NPC $${hex$$module$js$rom$util(a)} @ $${hex$$module$js$rom$util(b)}`);e=e[c];if(!e)throw Error(`No such dialog ${c}`);
null==d?e.condition=setItem$$module$js$nodes(e.condition,f):e.flags[d]=setItem$$module$js$nodes(e.flags[d],f)});return this}trigger(a,b=0,c){this.slots.push((d,e)=>{d=d.triggers[a&127];null==c?d.conditions[b]=setItem$$module$js$nodes(d.conditions[b],e):d.flags[c]=setItem$$module$js$nodes(d.flags[c],e)});return this}}class FixedSlot$$module$js$nodes extends Slot$$module$js$nodes{isFixed(){return!0}}class BossDrop$$module$js$nodes extends Slot$$module$js$nodes{get nodeType(){return"BossDrop"}}
class Chest$$module$js$nodes extends Slot$$module$js$nodes{constructor(a,b,c,d){super(a,b,c,d);this.spawnSlot=null;this.isInvisible=!1}get nodeType(){return"Chest"}objectSlot(a,b){this.spawnSlot=b;this.slots.push((c,d)=>{c=c.locations[a];if(!c||!c.used)throw Error(`No such location: $${hex$$module$js$rom$util(a)}`);c=c.spawns[b-13];if(!c||!c.isChest())throw Error(`No chest $${hex$$module$js$rom$util(b)} on $${hex$$module$js$rom$util(a)}`);c.timed=!1;c.id=Math.min(d.itemIndex,112)});return this}invisible(a){this.isInvisible=
!0;return this.direct(a)}}
class ItemGet$$module$js$nodes extends Node$$module$js$graph{constructor(a,b,c){super(a,c);this.id=b;this.shufflePriority=1;this.inventoryRow="unique"}get nodeType(){return"ItemGet"}chest(a=this.name+" chest",b=this.id){return new Chest$$module$js$nodes(this.graph,a,this,b)}fromPerson(a,b,c=0){return new Slot$$module$js$nodes(this.graph,a,this,this.id,[(a,e)=>{a.npcs[b].data[c]=e.itemIndex}])}bossDrop(a,b,c=this.id){return new BossDrop$$module$js$nodes(this.graph,a,this,c,[(a,c)=>{a.bossKills[b].itemDrop=
c.itemIndex}])}direct(a,b){return new Slot$$module$js$nodes(this.graph,a,this,this.id,[(a,d)=>{write$$module$js$nodes(a.prg,b,d.itemIndex)}])}fixed(){return new FixedSlot$$module$js$nodes(this.graph,this.name,this,this.id)}weight(a){this.shufflePriority=a;return this}consumable(){this.inventoryRow="consumable";return this}armor(){this.inventoryRow="armor";return this}}class Item$$module$js$nodes extends ItemGet$$module$js$nodes{get nodeType(){return"Item"}}
class Magic$$module$js$nodes extends ItemGet$$module$js$nodes{get nodeType(){return"Magic"}}class Trigger$$module$js$nodes extends Node$$module$js$graph{constructor(a,b){super(a,b);this.slot=null;this.reqs=[]}get nodeType(){return"Trigger"}edges(){const a=[...this.reqs];this.slot&&a.push(Edge$$module$js$graph.of(this.slot,this));return a}get(a){if(this.slot)throw Error("already have a slot");this.slot=a;return this}}
class Condition$$module$js$nodes extends Node$$module$js$graph{constructor(a,b){super(a,b);this.options=[]}get nodeType(){return"Condition"}edges(){return this.options.map((a)=>Edge$$module$js$graph.of(this,...a))}option(...a){this.options.push(a.map((a)=>a instanceof Slot$$module$js$nodes?a.item:a));return this}}
class Boss$$module$js$nodes extends Trigger$$module$js$nodes{constructor(a,b,c,...d){super(a,c);this.index=b;this.deps=d.map((a)=>a instanceof Slot$$module$js$nodes?a.item:a)}get nodeType(){return"Boss"}}class Area$$module$js$nodes extends Node$$module$js$graph{get nodeType(){return"Area"}}
class Connection$$module$js$nodes{constructor(a,b,c=!1,d=[]){this.from=a;this.to=b;this.bidi=c;this.deps=d.map((a)=>a instanceof Slot$$module$js$nodes?a.item:a)}reverse(){return new Connection$$module$js$nodes(this.to,this.from,this.bidi,this.deps)}}
class Location$$module$js$nodes extends Node$$module$js$graph{constructor(a,b,c,d){super(a,c.name+": "+d);this.id=b;this.area=c;this.connections=[];this.chests=[];this.type=this.bossNode=null;this.isEnd=this.isStart=!1;this.sells=[];this.simpleName=d}get nodeType(){return"Location"}toString(){return`Location ${this.id.toString(16).padStart(2,"0")} ${this.name}`}edges(){const a=[];for(const b of this.connections)a.push(Edge$$module$js$graph.of(b.to,b.from,...b.deps,...b.from.bossNode?[b.from.bossNode]:
[])),b.bidi&&a.push(Edge$$module$js$graph.of(b.from,b.to,...b.deps,...b.to.bossNode?[b.to.bossNode]:[]));for(const b of this.chests)a.push(Edge$$module$js$graph.of(b,this));this.isStart&&a.push(Edge$$module$js$graph.of(this));return a}addConnection(a){a.from.connections.push(a);a.to.connections.push(a);return this}from(a,...b){return this.addConnection(new Connection$$module$js$nodes(a,this,!1,b))}to(a,...b){return this.addConnection(new Connection$$module$js$nodes(this,a,!1,b))}connect(a,...b){return this.addConnection(new Connection$$module$js$nodes(a,
this,!0,b))}connectTo(a,...b){return this.addConnection(new Connection$$module$js$nodes(this,a,!0,b))}chest(a,b,c){a instanceof Slot$$module$js$nodes&&!(a instanceof Chest$$module$js$nodes)&&null!=c&&(a=a.item);a instanceof ItemGet$$module$js$nodes&&(a=a.chest(void 0,c));b=a.objectSlot(this.id,b);this.chests.push(b);112<=b.itemIndex&&(b.slotType="trap");if(!b.slotName||b.slotName.endsWith(" chest"))b.slotName=a.name+" in "+this.area.name;return this}trigger(a,...b){b=b.map((a)=>a instanceof Slot$$module$js$nodes?
a.item:a);a.reqs.push(Edge$$module$js$graph.of(a,this,...b));return this}boss(a){this.bossNode=a;a.reqs.push(Edge$$module$js$graph.of(a,this,...a.deps));return this}overworld(){this.type="overworld";return this}town(){this.type="town";return this}cave(){this.type="cave";return this}sea(){this.type="sea";return this}fortress(){this.type="fortress";return this}house(){this.type="house";return this}shop(...a){this.type="house";this.sells=a.map((a)=>a instanceof Slot$$module$js$nodes?a.item:a);return this}misc(){this.type=
"misc";return this}start(){this.isStart=!0;return this}end(){this.isEnd=!0;return this}fullName(){const a=[this.simpleName];this.bossNode&&a.push(this.bossNode.name);return a.join("\\n")}write(){if(this.sells.length){var a=this.graph.rom;if(!a)throw Error("Cannot write without a rom");for(const b of a.shops)if(b.location===this.id)for(a=0;4>a;a++)b.contents[a]=this.sells[a]?this.sells[a].id:255}}}
class WorldGraph$$module$js$nodes extends Graph$$module$js$graph{write(){for(const a of this.nodes)a.write()}shuffleShops(a){const b={shops:[],items:[]},c={shops:[],items:[]};for(var d of this.nodes)if(d instanceof Location$$module$js$nodes&&d.sells.length){var e="armor"===d.sells[0].inventoryRow?b:c;e.shops.push(d);for(let a=0;4>a;a++)e.items.push(d.sells[a]||null);d.sells=[]}a.shuffle(b.items);a.shuffle(c.items);for(const {shops:f,items:g}of[b,c])for(a=0;g.length&&1E5>a;)d=g.pop(),e=f[a++%f.length],
d&&(0<=e.sells.indexOf(d)||4<=e.sells.length?g.push(d):e.sells.push(d));for(const {shops:a}of[b,c])for(const b of a)b.sells.sort((a,b)=>a.id-b.id)}integrate({tracker:a=!1}={}){var b=!a;const c=new SparseDependencyGraph$$module$js$graph(this.nodes.length);var d=[],e=[];const f=new Set,g=new Map;var h=[];const k=[],m=[],l=[],n=[],p=new Set;for(const a of this.nodes)if(a instanceof Location$$module$js$nodes){if(a.isStart){const [b]=c.addRoute([a.uid]);g.set(b.label,b)}d[a.uid]=[];e[a.uid]=[];for(const b of a.connections)f.has(b)||
(f.add(b),b.bidi&&f.add(b.reverse()));for(const b of a.chests)c.addRoute([b.uid,a.uid])}else if(a instanceof ItemGet$$module$js$nodes&&"Medical Herb"===a.name&&(c.addRoute([a.uid]),c.finalize(a.uid)),a instanceof Option$$module$js$nodes)h.push(a);else if(a instanceof TrackerNode$$module$js$nodes)k.push(a);else if(a instanceof Condition$$module$js$nodes)m.push(a);else if(a instanceof Trigger$$module$js$nodes)l.push(a);else if(a instanceof ItemGet$$module$js$nodes)n.push(a);else if(a instanceof Slot$$module$js$nodes)p.add(a);
else if(!(a instanceof Area$$module$js$nodes))throw Error(`Unknown node type: ${a.nodeType}`);for(const a of f)d[a.from.uid].push(a),e[a.to.uid].push(a);e=(b)=>{for(const d of b){for(const b of d.edges({tracker:a}))c.addRoute(b);c.finalize(d.uid)}};e(h);b&&e(k);e(l);for(const a of g.values()){b=a.target;for(const e of d[b]){b=[e.to.uid,...a.deps];for(h=e.deps.length-1;0<=h;h--)b.push(e.deps[h].uid);e.from.bossNode&&b.push(e.from.bossNode.uid);for(const a of c.addRoute(b))g.has(a.label)||g.set(a.label,
a)}}e(m);for(d=0;d<this.nodes.length;d++)this.nodes[d]instanceof ItemGet$$module$js$nodes||this.nodes[d]instanceof TrackerNode$$module$js$nodes||c.finalize(d);d=new LocationList$$module$js$nodes(this);for(const a of p)for(const b of c.nodes[a.uid].values())d.addRoute([a.uid,...b]);return d}}
class LocationList$$module$js$nodes{constructor(a){this.worldGraph=a;this.uidToLocation=[];this.locationToUid=[];this.uidToItem=[];this.itemToUid=[];this.routes=[];this.unlocks=[];this.win=null}item(a){return this.worldGraph.nodes[this.itemToUid[a]]}location(a){return this.worldGraph.nodes[this.locationToUid[a]]}addRoute(a){let b=Bits$$module$js$bits.of(),c=-1;const d=[];for(let f=a.length-1;0<=f;f--){var e=f?this.uidToItem:this.uidToLocation;const g=f?this.itemToUid:this.locationToUid,h=a[f];let k=
e[h];null==k&&(k=g.length,g.push(h),e[h]=k,e=this.worldGraph.nodes[h],!f&&e instanceof Slot$$module$js$nodes&&e.isFixed()&&(this.win=k));f?(b=Bits$$module$js$bits.with(b,k),d.push(this.unlocks[k]||(this.unlocks[k]=new Set))):c=k}(this.routes[c]||(this.routes[c]=[])).push(b);for(const a of d)a.add(c)}canReach(a,b){a=this.routes[this.uidToLocation[a.uid]];for(let c=0,d=a.length;c<d;c++)if(Bits$$module$js$bits.containsAll(b,a[c]))return!0;return!1}traverse(a=Bits$$module$js$bits.of(),b=[]){a=Bits$$module$js$bits.clone(a);
const c=new Set,d=new Set;for(var e=0;e<this.locationToUid.length;e++)d.add(e);for(const f of d)if(d.delete(f),!c.has(f)){e=this.routes[f];for(let g=0,h=e.length;g<h;g++)if(Bits$$module$js$bits.containsAll(a,e[g])){c.add(f);if(b[f]){a=Bits$$module$js$bits.with(a,b[f]);for(const a of this.unlocks[b[f]])d.add(a)}break}}return c}traverseDepths(a){let b=Bits$$module$js$bits.of(),c=0;const d=[],e={},f=new Set;for(var g=0;g<this.locationToUid.length;g++)f.add(g);f.add(e);for(const h of f)if(f.delete(h),
"number"!==typeof h)f.size&&f.add(e),c++;else if(null==d[h]){g=this.routes[h];for(let e=0,m=g.length;e<m;e++)if(Bits$$module$js$bits.containsAll(b,g[e])){d[h]=c;if(a[h]){b=Bits$$module$js$bits.with(b,a[h]);for(const b of this.unlocks[a[h]])f.add(b)}break}}return d}toString(){const a=[];for(let b=0;b<this.routes.length;b++){const c=this.location(b),d=this.routes[b],e=[];for(let a=0,b=d.length;a<b;a++){const b=[];for(const c of Bits$$module$js$bits.bits(d[a]))b.push(this.item(c));e.push("("+b.join(" & ")+
")")}a.push(`${c}: ${e.join(" | ")}`)}return a.join("\n")}assumedFill(a,b=(a,b)=>!0,c=FillStrategy$$module$js$nodes){const d=c.shuffleItems(this.itemToUid.map((a)=>this.worldGraph.nodes[a]),a);let e=Bits$$module$js$bits.from(d);const f=Array(this.locationToUid.length).fill(null);for(;d.length;){const g=d.pop();if(!Bits$$module$js$bits.has(e,g))continue;const h=this.item(g);e=Bits$$module$js$bits.without(e,g);const k=[...this.traverse(e,f)].filter((a)=>null==f[a]);c.shuffleSlots(h,k,a);let m=!1;for(const a of k)if(null==
f[a]&&a!==this.win&&b(this.location(a),h)){if(100<a)throw Error("Something went horribly wrong");f[a]=g;m=!0;break}if(!m)return null}return f}}const FillStrategy$$module$js$nodes={shuffleSlots:(a,b,c)=>{c.shuffle(b)},shuffleItems:(a,b)=>{const c=[];for(let b=0;b<a.length;b++){const {shufflePriority:d=1}=a[b];for(let a=0;a<d;a++)c.push(b)}b.shuffle(c);return c}},write$$module$js$nodes=(a,b,c)=>{a[b]=c};function getFirst$$module$js$nodes(a){for(const b of a)return b;throw Error("Empty iterable");}
function setItem$$module$js$nodes(a,b){return 0>a?~(512|b.itemIndex):512|b.itemIndex}var module$js$nodes={};module$js$nodes.TrackerNode=TrackerNode$$module$js$nodes;module$js$nodes.Option=Option$$module$js$nodes;module$js$nodes.Slot=Slot$$module$js$nodes;module$js$nodes.FixedSlot=FixedSlot$$module$js$nodes;module$js$nodes.BossDrop=BossDrop$$module$js$nodes;module$js$nodes.Chest=Chest$$module$js$nodes;module$js$nodes.ItemGet=ItemGet$$module$js$nodes;module$js$nodes.Item=Item$$module$js$nodes;
module$js$nodes.Magic=Magic$$module$js$nodes;module$js$nodes.Trigger=Trigger$$module$js$nodes;module$js$nodes.Condition=Condition$$module$js$nodes;module$js$nodes.Boss=Boss$$module$js$nodes;module$js$nodes.Area=Area$$module$js$nodes;module$js$nodes.Connection=Connection$$module$js$nodes;module$js$nodes.Location=Location$$module$js$nodes;module$js$nodes.WorldGraph=WorldGraph$$module$js$nodes;module$js$nodes.LocationList=LocationList$$module$js$nodes;module$js$nodes.FillStrategy=FillStrategy$$module$js$nodes;const generate$$module$js$depgraph=(a=new FlagSet$$module$js$flagset,b)=>{const c=new WorldGraph$$module$js$nodes(b),d=(a,b=!0)=>new Option$$module$js$nodes(c,a,b),e=(a,b,...d)=>new Boss$$module$js$nodes(c,a,b,...d),f=new TrackerNode$$module$js$nodes(c,TrackerNode$$module$js$nodes.GLITCH,"Glitch"),g=new TrackerNode$$module$js$nodes(c,TrackerNode$$module$js$nodes.HARD,"Hard"),h=(a,b,c)=>a.value?a:f,k=d("Leather Boots grant speed",a.leatherBootsGiveSpeed()),m=h(d("Assume ghetto flight",a.assumeGhettoFlight())),
l=h(d("Assume statue glitch",a.assumeStatueGlitch())),n=d("Allow statue glitch",!a.disableStatueGlitch()),p=h(d("Assume teleport skip",a.assumeTeleportSkip())),q=d("Allow teleport skip",!a.disableTeleportSkip()),v=h(d("Assume rabbit skip",a.assumeRabbitSkip())),z=h(d("Allow rabbit skip",!a.disableRabbitSkip())),w=h(d("Assume sword charge glitch",a.assumeSwordChargeGlitch())),A=d("Allow sword charge glitch",!a.disableSwordChargeGlitch()),D=h(d("Assume wild warp",a.assumeWildWarp())),O=d("Allow wild warp",
a.allowWildWarp()),t=d("Sword magic optional",!a.guaranteeSwordMagic()),r=d("Matching sword optional",!a.guaranteeMatchingSword()),W=d("Gas mask optional",!a.guaranteeGasMask()),G=d("Healed dolphin optional",!a.requireHealedDolphinToRide()),Na=d("Calm sea optional",!a.barrierRequiresCalmSea()),jb=d("Prison key optional",!1),ua=d("Windmill optional",!1),va=d("Sword of Thunder teleports to Shyron",a.teleportOnThunderSword()),wa=d("Barrier magic optional",!a.guaranteeBarrier()),Wa=d("Refresh magic optional",
!a.guaranteeRefresh()),Xa=d("Telepathy optional for Deo",!a.saharaRabbitsRequireTelepathy()),X=d("Lime Tree connects to Leaf",a.connectLimeTreeToLeaf()),kb=d("Buffed medical herb",a.buffMedicalHerb()),T=d("Orbs optional",a.orbsOptional()),P=(new Item$$module$js$nodes(c,0,"Sword of Wind")).weight(a.guaranteeSword()?10:5).fromPerson("Leaf elder",13).npcSpawn(94,16,1).dialog(13,192,2).key(),I=(new Item$$module$js$nodes(c,1,"Sword of Fire")).weight(a.guaranteeSword()?10:5).fromPerson("Oak elder",29).dialog(29,
void 0,3).key(),M=(new Item$$module$js$nodes(c,2,"Sword of Water")).weight(10).chest().key(),N=(new Item$$module$js$nodes(c,3,"Sword of Thunder")).weight(15).chest().key(),ka=(new Item$$module$js$nodes(c,4,"Crystalis")).fixed(),aa=(new Item$$module$js$nodes(c,5,"Ball of Wind")).chest().key(),xa=(new Item$$module$js$nodes(c,6,"Tornado Bracelet")).chest().key(),Y=(new Item$$module$js$nodes(c,7,"Ball of Fire")).bossDrop("Insect",1).dialog(30,void 0,2).dialog(32,void 0,0).dialog(33,void 0,0).dialog(34,
void 0,0).dialog(96,30,0).dialog(29,void 0,2).dialog(31,void 0,1).npcSpawn(193).key(),la=(new Item$$module$js$nodes(c,8,"Flame Bracelet")).bossDrop("Kelbesque 1",2).npcSpawn(194).key(),ma=(new Item$$module$js$nodes(c,9,"Ball of Water")).weight(5).direct("Rage",250679).npcSpawn(195).key(),na=(new Item$$module$js$nodes(c,10,"Blizzard Bracelet")).weight(5).chest().key(),ea=(new Item$$module$js$nodes(c,11,"Ball of Thunder")).bossDrop("Mado 1",5).trigger(154,1).key(),Ca=(new Item$$module$js$nodes(c,12,
"Storm Bracelet")).chest().key(),Oa=(new Item$$module$js$nodes(c,13,"Carapace Shield")).armor(),Da=(new Item$$module$js$nodes(c,14,"Bronze Shield")).armor(),u=(new Item$$module$js$nodes(c,15,"Platinum Shield")).armor(),rb=(new Item$$module$js$nodes(c,16,"Mirrored Shield")).armor(),E=(new Item$$module$js$nodes(c,17,"Ceramic Shield")).armor(),U=(new Item$$module$js$nodes(c,18,"Sacred Shield")).armor().bossDrop("Mado 2",8).npcSpawn(199).bonus(),Q=(new Item$$module$js$nodes(c,19,"Battle Shield")).armor(),
oa=(new Item$$module$js$nodes(c,20,"Psycho Shield")).armor(),Pa=(new Item$$module$js$nodes(c,21,"Tanned Hide")).armor(),Ea=(new Item$$module$js$nodes(c,22,"Leather Armor")).armor(),be=(new Item$$module$js$nodes(c,23,"Bronze Armor")).armor(),oc=(new Item$$module$js$nodes(c,24,"Platinmum Armor")).armor(),ce=(new Item$$module$js$nodes(c,25,"Soldier Suit")).armor(),pc=(new Item$$module$js$nodes(c,26,"Ceramic Suit")).armor(),de=(new Item$$module$js$nodes(c,27,"Battle Suit")).armor(),ee=(new Item$$module$js$nodes(c,
28,"Psycho Armor")).armor().bossDrop("Draygon 1",10).npcSpawn(203).trigger(159).npcSpawn(131).key(),R=(new Item$$module$js$nodes(c,29,"Medical Herb")).consumable(),Z=(new Item$$module$js$nodes(c,30,"Antidote")).consumable(),Ya=(new Item$$module$js$nodes(c,31,"Lysis Plant")).consumable(),Kb=(new Item$$module$js$nodes(c,32,"Fruit of Lime")).consumable(),ba=(new Item$$module$js$nodes(c,33,"Fruit of Power")).consumable(),pa=(new Item$$module$js$nodes(c,34,"Magic Ring")).consumable(),Lb=(new Item$$module$js$nodes(c,
35,"Fruit of Repun")).consumable().bossDrop("Sabera 2",7).npcSpawn(198).key(),fa=(new Item$$module$js$nodes(c,36,"Warp Boots")).consumable(),qc=(new Item$$module$js$nodes(c,37,"Statue of Onyx")).chest("Cordel grass").invisible(254882).key(),Mb=(new Item$$module$js$nodes(c,38,"Opel Statue")).consumable().bossDrop("Kelbesque 2",6).npcSpawn(197).key(),rc=(new Item$$module$js$nodes(c,39,"Insect Flute")).fromPerson("Oak mother",30).dialog(30,void 0,1).key(),Nb=(new Item$$module$js$nodes(c,40,"Flute of Lime")).fromPerson("Portoa queen",
56).fromPerson("Asina secondary",98,1).dialog(56,void 0,4).key(),sb=(new Item$$module$js$nodes(c,41,"Gas Mask")).direct("Akahana in Brynmaer",251902).npcSpawn(22,24).key(),fe=(new Item$$module$js$nodes(c,42,"Power Ring")).chest().bonus(),ge=(new Item$$module$js$nodes(c,43,"Warrior Ring")).fromPerson("Akahana's friend",84).dialog(84,void 0,2).bonus(),he=(new Item$$module$js$nodes(c,44,"Iron Necklace")).chest().bonus(),ie=(new Item$$module$js$nodes(c,45,"Deo's Pendant")).fromPerson("Deo",90).dialog(90,
void 0,0).bonus(),Ob=(new Item$$module$js$nodes(c,46,"Rabbit Boots")).bossDrop("Vampire 1",0).npcSpawn(192).key(),sc=((a,b)=>new Item$$module$js$nodes(c,a,b))(47,a.leatherBootsGiveSpeed()?"Speed Boots":"Leather Boots").chest().bonus(),tc=(new Item$$module$js$nodes(c,48,"Shield Ring")).direct("Akahana in waterfall cave",250543).bonus(),Pb=(new Item$$module$js$nodes(c,49,"Alarm Flute")).fromPerson("Zebu's student",20,1).key(),uc=(new Item$$module$js$nodes(c,50,"Windmill Key")).fromPerson("Windmill guard",
20).dialog(20,14,0).npcSpawn(20,14,1).key(),Qb=(new Item$$module$js$nodes(c,51,"Key to Prison")).chest().key(),vc=(new Item$$module$js$nodes(c,52,"Key to Styx")).fromPerson("Zebu in Shyron",94,1).trigger(128,2).dialog(94,242,0).dialog(98,242,0).key(),wc=(new Item$$module$js$nodes(c,53,"Fog Lamp")).chest().key(),Rb=(new Item$$module$js$nodes(c,54,"Shell Flute")).fromPerson("Dolphin",99,1).npcSpawn(99).key(),xc=(new Item$$module$js$nodes(c,55,"Eye Glasses")).fromPerson("Clark",68).dialog(68,233,1).key(),
yc=(new Item$$module$js$nodes(c,56,"Broken Statue")).bossDrop("Sabera 1",4).npcSpawn(127,101).npcSpawn(9).npcSpawn(10).npcSpawn(69).npcSpawn(70).npcSpawn(71).npcSpawn(132).npcSpawn(142).dialog(61).dialog(62).dialog(63).dialog(64).dialog(65).dialog(66).dialog(67).dialog(68,233).trigger(182).key(),zc=(new Item$$module$js$nodes(c,57,"Glowing Lamp")).direct("Kensu in lighthouse",250638).npcSpawn(126,98,1).key(),Ac=(new Item$$module$js$nodes(c,59,"Love Pendant")).chest("Underground channel").invisible(254890).key(),
Bc=(new Item$$module$js$nodes(c,60,"Kirisa Plant")).chest("Kirisa meadow").invisible(254886).key(),Sb=(new Item$$module$js$nodes(c,61,"Ivory Statue")).bossDrop("Karmine",9).npcSpawn(200).key(),Cc=(new Item$$module$js$nodes(c,62,"Bow of Moon")).fromPerson("Aryllis",35).direct(251624).dialog(35,void 0,1).key(),Dc=(new Item$$module$js$nodes(c,63,"Bow of Sun")).chest().key(),Ec=(new Item$$module$js$nodes(c,64,"Bow of Truth")).fromPerson("Azteca",131).npcSpawn(131,156,1).dialog(131,void 0,0).key(),tb=
(new Magic$$module$js$nodes(c,65,"Refresh")).fromPerson("Zebu at windmill",94).requireUnique().direct(251665).dialog(94,16,3).trigger(180,1),lb=(new Magic$$module$js$nodes(c,66,"Paralysis")).direct("Zebu at Mt. Sabre summit",251477).requireUnique().trigger(141).trigger(178),Fa=(new Magic$$module$js$nodes(c,67,"Telepathy")).direct("Tornel at Stom's house",223220).npcSpawn(95,30,1).trigger(133,1),Fc=(new Magic$$module$js$nodes(c,68,"Teleport")).fromPerson("Tornel on Mt. Sabre",95).dialog(95,33,0),je=
(new Magic$$module$js$nodes(c,69,"Recover")).direct("Asina in Portoa",250361),Gc=(new Magic$$module$js$nodes(c,70,"Barrier")).direct("Asina on Angry sea",251609).requireUnique().trigger(132,0),Qa=(new Magic$$module$js$nodes(c,71,"Change")).direct("Kensu in Swan",251614).npcSpawn(116,241,1).npcSpawn(126,241,1),J=(new Magic$$module$js$nodes(c,72,"Flight")).weight(15).direct("Kensu in Draygonia Fortress",250255),ke=ba.bossDrop("Vampire 2",12,97).npcSpawn(204).key(),ca=new Item$$module$js$nodes(c,112,
"Mimic"),Hc=(new Trigger$$module$js$nodes(c,"Talked to Leaf Elder")).get(P),Ic=(new Trigger$$module$js$nodes(c,"Talked to Leaf Student")).get(Pb),Tb=new Trigger$$module$js$nodes(c,"Talked to Zebu in cave"),le=(new Trigger$$module$js$nodes(c,"Woke up Windmill Guard")).get(uc),mb=new Trigger$$module$js$nodes(c,"Started Windmill"),Jc=(new Trigger$$module$js$nodes(c,"Learned Refresh")).get(tb),me=(new Trigger$$module$js$nodes(c,"Gave Statue to Akahana")).get(sb),ne=(new Trigger$$module$js$nodes(c,"Fought Stom")).get(Fa),
Kc=new Trigger$$module$js$nodes(c,"Visited Oak"),Lc=new Trigger$$module$js$nodes(c,"Talked to Oak Mother"),Ub=new Trigger$$module$js$nodes(c,"Rescued Oak Child"),oe=(new Trigger$$module$js$nodes(c,"Talked to Oak Mother Again")).get(rc),pe=(new Trigger$$module$js$nodes(c,"Talked to Oak Elder")).get(I),qe=(new Trigger$$module$js$nodes(c,"Talked to Tornel on Mt Sabre")).get(Fc),Mc=new Trigger$$module$js$nodes(c,"Villagers Abducted"),Nc=new Trigger$$module$js$nodes(c,"Talked to Rabbit in Leaf"),re=(new Trigger$$module$js$nodes(c,
"Learned Paralysis")).get(lb),Oc=new Trigger$$module$js$nodes(c,"Talked to Portoa Queen"),Pc=new Trigger$$module$js$nodes(c,"Talked to Fortune Teller"),Qc=new Trigger$$module$js$nodes(c,"Visited Underground Channel"),se=(new Trigger$$module$js$nodes(c,"Sent to Waterfall Cave")).get(Nb),te=(new Trigger$$module$js$nodes(c,"Cured Akahana")).get(tc),Rc=(new Trigger$$module$js$nodes(c,"Talked to Rage")).get(ma),Sc=new Trigger$$module$js$nodes(c,"Mesia recording played"),Tc=(new Trigger$$module$js$nodes(c,
"Talked to Asina")).get(je),Uc=(new Trigger$$module$js$nodes(c,"Healed Dolphin")).get(Rb),Vb=new Trigger$$module$js$nodes(c,"Returned Fog Lamp"),Vc=new Trigger$$module$js$nodes(c,"Talked to Kensu in Cabin"),Wc=new Trigger$$module$js$nodes(c,"Talked to Joel Elder"),ue=(new Trigger$$module$js$nodes(c,"Talked to Clark")).get(xc),ve=(new Trigger$$module$js$nodes(c,"Talked to Kensu in Lighthouse")).get(zc),Wb=new Trigger$$module$js$nodes(c,"Calmed the Angry Sea"),we=(new Trigger$$module$js$nodes(c,"Learned Barrier")).get(Gc),
Xc=new Trigger$$module$js$nodes(c,"Talked to Stom in Swan Hut"),Yc=new Trigger$$module$js$nodes(c,"Talked to Kensu in Swan tavern"),Zc=new Trigger$$module$js$nodes(c,"Talked to Kensu at Swan dance"),xe=(new Trigger$$module$js$nodes(c,"Returned Kensu's love pendant")).get(Qa),ye=(new Trigger$$module$js$nodes(c,"Talked to Amazones Queen")).get(Cc),Xb=new Trigger$$module$js$nodes(c,"Entered Shyron"),ze=(new Trigger$$module$js$nodes(c,"Talked to Zebu in Shyron")).get(vc),$c=new Trigger$$module$js$nodes(c,
"Shyron Massacre"),Ae=(new Trigger$$module$js$nodes(c,"Saved Kensu")).get(J),Be=(new Trigger$$module$js$nodes(c,"Talked to Deo")).get(ie),Ce=(new Trigger$$module$js$nodes(c,"Talked to Akahana's Friend")).get(ge),De=(new Trigger$$module$js$nodes(c,"Get Bow of Truth")).get(Ec),Ee=(new Trigger$$module$js$nodes(c,"Forged Crystalis")).get(ka),ub=(new Condition$$module$js$nodes(c,"Sword charge glitch")).option(w,A),Fe=(new Condition$$module$js$nodes(c,"Rabbit skip")).option(v,z),Ge=(new Condition$$module$js$nodes(c,
"Teleport skip")).option(p,q),vb=(new Condition$$module$js$nodes(c,"Statue glitch")).option(l,n),He=(new Condition$$module$js$nodes(c,"Wild warp")).option(D,O),wb=(new Condition$$module$js$nodes(c,"Any level 2 sword")).option(P,aa).option(P,xa).option(I,Y).option(I,la).option(M,ma).option(M,na).option(N,ea).option(N,Ca),B=(new Condition$$module$js$nodes(c,"Destroy stone")).option(P,T).option(P,aa).option(P,xa).option(ub,P,wb),C=(new Condition$$module$js$nodes(c,"Destroy ice")).option(I,T).option(I,
Y).option(I,la).option(ub,I,wb),x=(new Condition$$module$js$nodes(c,"Cross rivers")).option(M,T).option(M,ma).option(M,na).option(J).option(ub,M,wb),Za=(new Condition$$module$js$nodes(c,"Destroy iron")).option(N,T).option(N,ea).option(N,Ca).option(ub,N,wb),ha=(new Condition$$module$js$nodes(c,"Any sword")).option(P).option(I).option(M).option(N),Ie=(new Condition$$module$js$nodes(c,"Match insect sword (fire/water/thunder)")).option(I).option(M).option(N).option(sb,r.value?r:g,P),Je=(new Condition$$module$js$nodes(c,
"Match vampire 2 sword (wind/water/thunder)")).option(P).option(M).option(N).option(r.value?r:g,I),ad=(new Condition$$module$js$nodes(c,"Speed boots")).option(sc,k),bd=(new Condition$$module$js$nodes(c,"Climb slopes")).option(Ob).option(J).option(ad),Ke=(new Condition$$module$js$nodes(c,"Enter Mt Sabre North (rabbit)")).option(Nc).option(Fe),Le=(new Condition$$module$js$nodes(c,"Enter Mt Sabre North (Teleport)")).option(Fc).option(Ge,J),cd=(new Condition$$module$js$nodes(c,"Asina in her room")).option(Sc),
Me=(new Condition$$module$js$nodes(c,"Paralysis or Asina revealed")).option(lb).option(cd).option(vb),dd=(new Condition$$module$js$nodes(c,"Ride dolphin")).option(Rb,Vc),Ne=(new Condition$$module$js$nodes(c,"Ghetto flight")).option(m,dd,Ob),ya=(new Condition$$module$js$nodes(c,"Cross sea")).option(dd).option(J),Oe=(new Condition$$module$js$nodes(c,"Cross whirlpool")).option(Wb).option(J).option(Ne),ia=(new Condition$$module$js$nodes(c,"Refresh if needed")).option(Wa.value?Wa:g).option(tb),ed=(new Condition$$module$js$nodes(c,
"Wind magic")).option(t.value?t:g,ia).option(aa,xa,ia),fd=(new Condition$$module$js$nodes(c,"Fire magic")).option(t.value?t:g,ia).option(Y,la,ia),gd=(new Condition$$module$js$nodes(c,"Water magic")).option(t.value?t:g,ia).option(t,ia).option(ma,na,ia),Pe=(new Condition$$module$js$nodes(c,"Thunder magic")).option(t.value?t:g,ia).option(t,ia).option(ea,ia).option(Ca,ia),Qe=(new Condition$$module$js$nodes(c,"Flute of lime or glitch")).option(Nb).option(vb),Re=(new Condition$$module$js$nodes(c,"Change or glitch")).option(Qa).option(vb),
Se=(new Condition$$module$js$nodes(c,"Change or glitch or paralysis")).option(Qa).option(vb).option(lb),Yb=(new Condition$$module$js$nodes(c,"Pass shooting statues")).option(Gc).option(ha,wa.value?wa:g).option(tb,tc),Te=(new Condition$$module$js$nodes(c,"Healed dolphin if required")).option(Uc).option(G),hd=(new Condition$$module$js$nodes(c,"Match sword of wind")).option(P).option(r.value?r:g,ha),id=(new Condition$$module$js$nodes(c,"Match sword of fire")).option(I).option(r.value?r:g,ha),jd=(new Condition$$module$js$nodes(c,
"Match sword of water")).option(M).option(r.value?r:g,ha),Ue=(new Condition$$module$js$nodes(c,"Match sword of thunder")).option(N).option(r.value?r:g,ha),Ve=(new Condition$$module$js$nodes(c,"Swamp run possible")).option(ha,ad).option(ha,kb).option(ha,tb),We=(new Condition$$module$js$nodes(c,"Insect possible to kill")).option(sb),xb=(new Condition$$module$js$nodes(c,"Travel swamp")).option(sb).option(W.value?W:g,Ve),Xe=(new Condition$$module$js$nodes(c,"Calmed sea if required")).option(Wb).option(Na),
Ye=(new Condition$$module$js$nodes(c,"Started windmill if required")).option(mb).option(ua),Ze=(new Condition$$module$js$nodes(c,"Telepathy if required for Deo")).option(Fa).option(Xa),$e=e(0,"Vampire 1",ha).get(Ob),af=e(1,"Insect",rc,Ie,We).get(Y),bf=e(2,"Kelbesque 1",hd,ed).get(la),cf=e(12,"Vampire 2",Je).get(ke),kd=e(4,"Sabera 1",id,fd).get(yc),df=e(5,"Mado 1",jd,gd).get(ea),ef=e(6,"Kelbesque 2",hd,ed).get(Mb),ff=e(7,"Sabera 2",id,fd).get(Lb),gf=e(8,"Mado 2",jd,gd).get(U),hf=e(9,"Karmine",Ue,Pe).get(Sb),
jf=e(10,"Draygon 1",ha).get(ee),kf=e(-1,"Statues",Dc,Cc),lf=e(11,"Draygon 2",ha,Ec),mf=e(13,"Dyna",ka),nf=(new Condition$$module$js$nodes(c,"Opened prison if required")).option(Qb).option(jb),qa=new Area$$module$js$nodes(c,"Leaf"),$a=new Area$$module$js$nodes(c,"Valley of Wind"),ja=new Area$$module$js$nodes(c,"Sealed Cave"),Ra=new Area$$module$js$nodes(c,"Cordel Plain"),ab=new Area$$module$js$nodes(c,"Brynmaer"),bb=new Area$$module$js$nodes(c,"Amazones"),K=new Area$$module$js$nodes(c,"Mt Sabre West"),
y=new Area$$module$js$nodes(c,"Mt Sabre North"),yb=new Area$$module$js$nodes(c,"Nadare's"),nb=new Area$$module$js$nodes(c,"Oak"),Ga=new Area$$module$js$nodes(c,"Waterfall Valley"),H=new Area$$module$js$nodes(c,"Portoa"),Ha=new Area$$module$js$nodes(c,"Waterfall Cave"),L=new Area$$module$js$nodes(c,"Fog Lamp Cave"),Ia=new Area$$module$js$nodes(c,"Kirisa Plant Cave"),Sa=new Area$$module$js$nodes(c,"Angry Sea"),Ja=new Area$$module$js$nodes(c,"Joel"),V=new Area$$module$js$nodes(c,"Evil Spirit Island"),
Ka=new Area$$module$js$nodes(c,"Sabera's Castle"),ra=new Area$$module$js$nodes(c,"Swan"),F=new Area$$module$js$nodes(c,"Mt Hydra"),La=new Area$$module$js$nodes(c,"Shyron"),Ta=new Area$$module$js$nodes(c,"Styx"),Ua=new Area$$module$js$nodes(c,"Goa"),zb=new Area$$module$js$nodes(c,"Draygonia Fortress 1"),sa=new Area$$module$js$nodes(c,"Draygonia Fortress 2"),cb=new Area$$module$js$nodes(c,"Draygonia Fortress 3"),da=new Area$$module$js$nodes(c,"Draygonia Fortress 4"),S=new Area$$module$js$nodes(c,"Oasis Cave"),
ta=new Area$$module$js$nodes(c,"Sahara"),db=new Area$$module$js$nodes(c,"Pyramid Front"),za=new Area$$module$js$nodes(c,"Pyramid Back"),Aa=new Area$$module$js$nodes(c,"Tower"),Zb=(new Location$$module$js$nodes(c,0,qa,"Start")).overworld().start(),of=(new Location$$module$js$nodes(c,0,qa,"Mezame Shrine")).overworld().from(Zb),pf=(new Location$$module$js$nodes(c,1,qa,"Outside Start")).overworld().connect(of),Ma=(new Location$$module$js$nodes(c,2,qa,"Town")).town().connect(pf),ob=(new Location$$module$js$nodes(c,
3,$a,"Main")).overworld().connect(Ma).trigger(Jc,mb),ld=(new Location$$module$js$nodes(c,3,$a,"Outside Windmill")).overworld(),md=(new Location$$module$js$nodes(c,4,ja,"Tunnel 1 (entrance)")).cave().from(ob,mb),qf=(new Location$$module$js$nodes(c,5,ja,"Tunnel 2 (over bridge)")).cave().connect(md),rf=(new Location$$module$js$nodes(c,6,ja,"Tunnel 6 (herb dead end)")).cave().chest(R,15),nd=(new Location$$module$js$nodes(c,7,ja,"Tunnel 4a (ball corridor)")).cave().chest(R,20,80).chest(aa,21);(new Location$$module$js$nodes(c,
7,ja,"Tunnel 4b (antidote dead end)")).cave().connect(nd,B).chest(Z,19);const sf=(new Location$$module$js$nodes(c,8,ja,"Tunnel 5 (warp boots dead end)")).cave().chest(fa,14),tf=(new Location$$module$js$nodes(c,9,ja,"Tunnel 3a (branch, front)")).cave().connect(qf).connectTo(nd).connectTo(sf),uf=(new Location$$module$js$nodes(c,9,ja,"Tunnel 3b (branch, back)")).cave().connect(tf,B).connectTo(rf),vf=(new Location$$module$js$nodes(c,10,ja,"Tunnel 7 (boss)")).cave().connect(uf).boss($e),wf=(new Location$$module$js$nodes(c,
12,ja,"Tunnel 8a (exit, above wall)")).cave().connect(vf),xf=(new Location$$module$js$nodes(c,12,ja,"Tunnel 8b (exit, below wall")).cave().connect(wf,B);(new Location$$module$js$nodes(c,14,$a,"Windmill Cave")).cave().connect(ob).connectTo(ld).trigger(le,Pb,Tb);(new Location$$module$js$nodes(c,15,$a,"Windmill")).misc().connect(ld).trigger(mb,uc);const yf=(new Location$$module$js$nodes(c,16,$a,"Zebu's Cave Front")).cave().connect(ob).trigger(Tb,Hc,Ic).trigger(Jc,mb,Tb),zf=(new Location$$module$js$nodes(c,
16,$a,"Zebu's Cave Back")).cave().trigger(Mc).connect(yf,C),Af=(new Location$$module$js$nodes(c,17,K,"Tunnel 1 (to Zebu)")).cave().connect(zf),eb=(new Location$$module$js$nodes(c,20,Ra,"West")).overworld().connect(xf,Ye),Bf=(new Location$$module$js$nodes(c,20,Ra,"South")).overworld().connect(eb,x),od=(new Location$$module$js$nodes(c,21,Ra,"East")).overworld().connect(eb).chest(qc,24),pb=(new Location$$module$js$nodes(c,24,ab,"Town")).town().connect(eb).trigger(me,qc),Cf=(new Location$$module$js$nodes(c,
25,Ra,"Outside Stom's House")).town().connect(eb),$b=(new Location$$module$js$nodes(c,26,Ra,"Swamp")).overworld().connect(od,xb).trigger(Ub,Lc,xb);(new Location$$module$js$nodes(c,26,Ra,"Swamp Insect Area")).overworld().connect($b,xb).boss(af);const Ab=(new Location$$module$js$nodes(c,27,bb,"Town")).town().connect(Bf),Bb=(new Location$$module$js$nodes(c,28,nb,"Town")).town().connect($b,xb).trigger(Kc);(new Location$$module$js$nodes(c,30,Ra,"Stom's House")).house().connect(Cf).trigger(ne,Kc);const fb=
(new Location$$module$js$nodes(c,32,K,"Entrance")).overworld().connect(eb).connect(Af),Df=(new Location$$module$js$nodes(c,32,K,"Up Slope")).overworld().from(fb,bd).to(fb),Ef=(new Location$$module$js$nodes(c,32,K,"Dead End (warp boots)")).overworld().chest(fa,24,106),pd=(new Location$$module$js$nodes(c,33,K,"Upper")).overworld().from(fb,J).to(fb),Ff=(new Location$$module$js$nodes(c,33,K,"Tornel Dead End")).overworld().trigger(qe,aa,xa).chest(pa,23,105),qd=(new Location$$module$js$nodes(c,34,K,"Tunnel 2a (fork at start)")).cave().connect(fb);
(new Location$$module$js$nodes(c,34,K,"Tunnel 2b (left branch to dead end)")).cave().connect(qd,C).connectTo(Ef);const Gf=(new Location$$module$js$nodes(c,34,K,"Tunnel 2c (right branch to upper)")).cave().connect(qd,C),Hf=(new Location$$module$js$nodes(c,35,K,"Tunnel 3a (tunnel to upper, with herb chest)")).cave().connect(Gf).chest(R,23,82),If=(new Location$$module$js$nodes(c,35,K,"Tunnel 3b (tunnel to upper, branch below ice)")).cave().connect(Hf,C).connectTo(pd),rd=(new Location$$module$js$nodes(c,
36,K,"Tunnel 4a (branch to upper or Tornel)")).cave().connect(If);(new Location$$module$js$nodes(c,36,K,"Tunnel 4b (out to upper)")).cave().connect(rd,C).connectTo(pd);const Jf=(new Location$$module$js$nodes(c,37,K,"Tunnel 5 (tiny connector)")).cave().connect(rd),Kf=(new Location$$module$js$nodes(c,38,K,"Tunnel 6a (exit to Tornel, above ice)")).cave().connect(Jf);(new Location$$module$js$nodes(c,38,K,"Tunnel 6b (exit to Tornel, below ice)")).cave().connect(Kf,C).connectTo(Ff);const Lf=(new Location$$module$js$nodes(c,
39,K,"Tunnel 7a (tornado bracelet, lower)")).cave().connect(Df),Mf=(new Location$$module$js$nodes(c,39,K,"Tunnel 7b (tornado bracelet, middle)")).cave().connect(Lf,C);(new Location$$module$js$nodes(c,39,K,"Tunnel 7c (tornado bracelet, upper)")).cave().connect(Mf,C).chest(xa,25);const Cb=(new Location$$module$js$nodes(c,40,y,"Entrance")).overworld().connect(od,Le,Ke),Db=(new Location$$module$js$nodes(c,40,y,"Upper")).overworld().from(Cb,J).to(Cb),ac=(new Location$$module$js$nodes(c,40,y,"Summit (boss)")).overworld().from(Db,
J).to(Db).boss(bf),sd=(new Location$$module$js$nodes(c,41,y,"Connector")).overworld(),bc=(new Location$$module$js$nodes(c,41,y,"Middle Left")).overworld(),Nf=(new Location$$module$js$nodes(c,41,y,"Middle Right")).overworld().from(bc,bd).to(bc),td=(new Location$$module$js$nodes(c,42,y,"Tunnel 2a (from entrance to connector)")).cave().connectTo(sd);(new Location$$module$js$nodes(c,42,y,"Tunnel 2b (under bridge, to antidote)")).cave().connect(td,C).chest(Z,23,94);const ud=(new Location$$module$js$nodes(c,
43,y,"Tunnel 3a (branch after connector)")).cave().connect(sd),Of=(new Location$$module$js$nodes(c,43,y,"Tunnel 3b (right branch)")).cave().connect(ud,C),Pf=(new Location$$module$js$nodes(c,43,y,"Tunnel 3c (upper branch)")).cave().connect(ud,C);(new Location$$module$js$nodes(c,44,y,"Tunnel 4 (over bridge, to middle)")).cave().connect(Pf).connectTo(bc);const vd=(new Location$$module$js$nodes(c,45,y,"Tunnel 5a (E-shaped, from right branch)")).cave().connect(Of).connectTo(Nf);(new Location$$module$js$nodes(c,
45,y,"Tunnel 5b (dead-end with herb)")).cave().connect(vd,C).chest(R,22,83);const Qf=(new Location$$module$js$nodes(c,46,y,"Tunne; 6a (S-shaped hall, right)")).cave().connect(vd),Rf=(new Location$$module$js$nodes(c,46,y,"Tunne; 6b (S-shaped hall, middle)")).cave().connect(Qf,C),Sf=(new Location$$module$js$nodes(c,46,y,"Tunnel 6c (S-shaped hall, left)")).cave().connect(Rf,C),wd=(new Location$$module$js$nodes(c,47,y,"Prison (hallway)")).cave().connect(Db),Tf=(new Location$$module$js$nodes(c,48,y,"Left Cell (shopkeepers)")).cave().from(wd,
C);(new Location$$module$js$nodes(c,49,y,"Left Cell 2 (back, with prison key)")).cave().from(Tf,C).chest(Qb,13);const Uf=(new Location$$module$js$nodes(c,50,y,"Right Cell (villagers)")).cave().from(wd,C),Vf=(new Location$$module$js$nodes(c,51,y,"Tunnel 8 (behind right cell, toward summit)")).cave().from(Uf,C);(new Location$$module$js$nodes(c,52,y,"Tunnel 9 (connector to summit)")).cave().connect(Vf).connectTo(ac);const Wf=(new Location$$module$js$nodes(c,53,y,"Summit Cave (front)")).cave().from(ac,
Qb).to(ac),Xf=(new Location$$module$js$nodes(c,53,y,"Summit Cave (behind ice)")).cave().connect(Wf,C).trigger(re);(new Location$$module$js$nodes(c,56,y,"Tunnel 1 (leads from main entrance)")).cave().connect(Cb).connectTo(td);(new Location$$module$js$nodes(c,57,y,"Tunnel 7 (to upper)")).cave().connect(Sf).connectTo(Db);const Yf=(new Location$$module$js$nodes(c,60,yb,"Inn")).shop(),Zf=(new Location$$module$js$nodes(c,61,yb,"Tool Shop")).shop(R,Z,ba,fa),$f=(new Location$$module$js$nodes(c,62,yb,"Back Room")).house(),
cc=(new Location$$module$js$nodes(c,64,Ga,"Summit")).overworld().connect(Xf,nf),Eb=(new Location$$module$js$nodes(c,64,Ga,"Northwest")).overworld().from(cc).to(cc,J),ag=(new Location$$module$js$nodes(c,64,Ga,"Northeast")).overworld().connect(Eb,x),xd=(new Location$$module$js$nodes(c,65,Ga,"Southwest")).overworld().connect(Eb),bg=(new Location$$module$js$nodes(c,65,Ga,"Southeast")).overworld().connect(xd,x),yd=(new Location$$module$js$nodes(c,66,Ga,"Lime Tree Valley")).overworld().connect(xd).connect(ob,
X),cg=(new Location$$module$js$nodes(c,67,Ga,"Lime Tree Lake (Rage)")).cave().connect(yd).trigger(Rc,M),dg=(new Location$$module$js$nodes(c,68,Ia,"Tunnel 1a (entrance)")).cave().connect(bg),eg=(new Location$$module$js$nodes(c,68,Ia,"Tunnel 1b (behind wall)")).cave().connect(dg,B),zd=(new Location$$module$js$nodes(c,69,Ia,"Tunnel 2a (main path, before wall)")).cave().connect(eg);(new Location$$module$js$nodes(c,69,Ia,"Tunnel 2b (dead end, antidote)")).cave().connect(zd,B).chest(Z,25,95);const fg=(new Location$$module$js$nodes(c,
69,Ia,"Tunnel 2c (main path, after wall)")).cave().connect(zd,B),gg=(new Location$$module$js$nodes(c,70,Ia,"Tunnel 3a (last room, before wall)")).cave().connect(fg),hg=(new Location$$module$js$nodes(c,70,Ia,"Tunnel 3b (last room, after wall)")).cave().connect(gg,B);(new Location$$module$js$nodes(c,71,Ia,"Meadow")).overworld().connect(hg).chest(Bc,14);const ig=(new Location$$module$js$nodes(c,72,L,"Tunnel 1a (entrance)")).cave().connect(ag),Ad=(new Location$$module$js$nodes(c,72,L,"Tunnel 1b (past wall)")).cave().connect(ig,
B);(new Location$$module$js$nodes(c,72,L,"Tunnel 1c (dead end, lysisPlant)")).cave().connect(Ad,B).chest(Ya,24);const jg=(new Location$$module$js$nodes(c,73,L,"Tunnel 2 (tiny connector)")).cave().connect(Ad),Bd=(new Location$$module$js$nodes(c,74,L,"Tunnel 3a (upper branch)")).cave().connect(jg);(new Location$$module$js$nodes(c,74,L,"Tunnel 3b (dead end, mimic)")).cave().connect(Bd,B).chest(ca,21,112);const Cd=(new Location$$module$js$nodes(c,74,L,"Tunnel 3c (short passage with mimic)")).cave().connect(Bd,
B).chest(ca,22,113),kg=(new Location$$module$js$nodes(c,74,L,"Tunnel 3d (lower branch)")).cave().connect(Cd,B);(new Location$$module$js$nodes(c,75,L,"Dead end loop")).cave().connect(kg);const Dd=(new Location$$module$js$nodes(c,76,L,"Tunnel 4a (right branch over bridge)")).cave().connect(Cd),lg=(new Location$$module$js$nodes(c,76,L,"Tunnel 4b (past wall over bridge)")).cave().connect(Dd,B),mg=(new Location$$module$js$nodes(c,77,L,"Tunnel 5a (from left branch)")).cave().connect(Dd),ng=(new Location$$module$js$nodes(c,
77,L,"Tunnel 5b (reconvergence)")).cave().connect(mg,B).connect(lg),og=(new Location$$module$js$nodes(c,77,L,"Tunnel 5c (between walls)")).cave().connect(ng,B),pg=(new Location$$module$js$nodes(c,77,L,"Tunnel 5d (under bridge)")).cave().connect(og,B),qg=(new Location$$module$js$nodes(c,78,L,"Tunnel 6a (over second bridge)")).cave().connect(pg),rg=(new Location$$module$js$nodes(c,78,L,"Tunnel 6b (past wall)")).cave().connect(qg,B),sg=(new Location$$module$js$nodes(c,79,L,"Tunnel 7a (under second bridge)")).cave().connect(rg);
(new Location$$module$js$nodes(c,79,L,"Tunnel 7b (fog lamp)")).cave().connect(sg,B).chest(wc,19);const Va=(new Location$$module$js$nodes(c,80,H,"Town")).town().connect(Eb),Ed=(new Location$$module$js$nodes(c,81,H,"Fishherman Island")).town().connect(Va);(new Location$$module$js$nodes(c,82,Ga,"Mesia Shrine")).cave().trigger(Sc).connect(cg,x,Rc);const Fd=(new Location$$module$js$nodes(c,84,Ha,"Tunnel 1a (entrance)")).cave().connect(Eb);(new Location$$module$js$nodes(c,84,Ha,"Tunnel 1b (dead end, mimic)")).cave().connect(Fd,
C).chest(ca,19,114);const tg=(new Location$$module$js$nodes(c,84,Ha,"Tunnel 1c (past ice)")).cave().connect(Fd,C),ug=(new Location$$module$js$nodes(c,85,Ha,"Tunnel 2 (stoned pair)")).cave().connect(tg),dc=(new Location$$module$js$nodes(c,86,Ha,"Tunnel 3 (wide medusa hallways)")).cave().connect(ug,Qe),vg=(new Location$$module$js$nodes(c,87,Ha,"Tunnel 4a (left entrance)")).cave().from(dc,C).chest(rb.chest().bonus(),25).trigger(te,Nb);(new Location$$module$js$nodes(c,87,Ha,"Tunnel 4b (right entrance)")).cave().from(dc,
C).connect(vg,J);(new Location$$module$js$nodes(c,87,Ha,"Tunnel 4c (sword of water)")).cave().connect(dc,C).chest(M,24);const Gd=(new Location$$module$js$nodes(c,88,Aa,"Entrance")).misc(),wg=(new Location$$module$js$nodes(c,89,Aa,"Level 1")).misc().from(Gd),xg=(new Location$$module$js$nodes(c,90,Aa,"Level 2")).misc().from(wg),yg=(new Location$$module$js$nodes(c,91,Aa,"Level 3")).misc().from(xg),Hd=(new Location$$module$js$nodes(c,92,Aa,"Outside Mesia Room")).misc().from(yg),zg=(new Location$$module$js$nodes(c,
93,Aa,"Outside Dyna Room")).misc().from(Hd,ka);(new Location$$module$js$nodes(c,94,Aa,"Mesia")).misc().connect(Hd).trigger(Ee);const Ag=(new Location$$module$js$nodes(c,95,Aa,"Dyna")).misc().from(zg).boss(mf);(new Location$$module$js$nodes(c,95,Aa,"Win")).misc().from(Ag).end();const ec=(new Location$$module$js$nodes(c,96,Sa,"Cabin Beach")).sea().from(Ed,Vb),gb=(new Location$$module$js$nodes(c,96,Sa,"South")).sea().connect(ec,ya),Bg=(new Location$$module$js$nodes(c,96,Sa,"Joel Beach")).sea().connect(gb,
ya),Id=(new Location$$module$js$nodes(c,96,Ja,"Outside Lighthouse")).sea();(new Location$$module$js$nodes(c,96,Sa,"Altar")).sea().connect(gb,ya).trigger(Wb,zc,yc);const Cg=(new Location$$module$js$nodes(c,96,Sa,"North")).sea().to(gb,ya).from(gb,ya,Oe).trigger(we,Xe),Dg=(new Location$$module$js$nodes(c,96,Sa,"Swan Beach")).sea().connect(Cg,ya);(new Location$$module$js$nodes(c,97,Sa,"Cabin")).misc().connect(ec).trigger(Vc,Vb);(new Location$$module$js$nodes(c,98,Ja,"Lighthouse")).misc().connect(Id).trigger(ve,
Pb);const Fb=(new Location$$module$js$nodes(c,100,H,"Underground Channel 1 (from throne room)")).sea().trigger(Qc),Eg=(new Location$$module$js$nodes(c,100,H,"Underground Channel 2 (to fortune teller)")).sea().connect(Fb,x),Jd=(new Location$$module$js$nodes(c,100,H,"Underground Channel 3 (from fortune teller)")).sea().connect(Fb,J),Kd=(new Location$$module$js$nodes(c,100,H,"Underground Channel 4 (asina)")).sea().connect(Jd,x),Fg=(new Location$$module$js$nodes(c,100,H,"Underground Channel 5 (dolphin)")).sea().connect(Kd,
x).trigger(Uc,R,Tc);(new Location$$module$js$nodes(c,100,H,"Underground Channel 6 (water)")).sea().connect(Fg,ya).connectTo(gb,ya).chest(Ac,17);const fc=(new Location$$module$js$nodes(c,101,V,"Zombie Town")).town(),Gg=(new Location$$module$js$nodes(c,104,V,"Tunnel 1 (entrance)")).sea().connect(gb,Wc,ya),Ld=(new Location$$module$js$nodes(c,105,V,"Tunnel 2a (start)")).cave().connect(Gg);(new Location$$module$js$nodes(c,105,V,"Tunnel 2b (dead end to left)")).cave().connect(Ld,x);const Hg=(new Location$$module$js$nodes(c,
105,V,"Tunnel 2c (across first river)")).cave().connect(Ld,x),Md=(new Location$$module$js$nodes(c,105,V,"Tunnel 2d (across second river)")).cave().connect(Hg,x);(new Location$$module$js$nodes(c,105,V,"Tunnel 2e (dead end, magic ring)")).cave().connect(Md,B).chest(pa,29);const Ig=(new Location$$module$js$nodes(c,105,V,"Tunnel 2f (stair down)")).cave().connect(Md,B),Jg=(new Location$$module$js$nodes(c,106,V,"Tunnel 3a (main area)")).cave().connect(Ig).connectTo(fc).chest(Ya,25,92),Kg=(new Location$$module$js$nodes(c,
106,V,"Tunnel 3b (left area toward items)")).cave().connect(Jg,B),Lg=(new Location$$module$js$nodes(c,107,V,"Tunnel 4a (right side, mimic)")).cave().connect(Kg).chest(ca,14,115);(new Location$$module$js$nodes(c,107,V,"Tunnel 4b (left side, iron necklace)")).cave().connect(Lg,x).chest(he,15);const gc=(new Location$$module$js$nodes(c,108,Ka,"Floor 1")).fortress().connect(fc),Mg=(new Location$$module$js$nodes(c,108,Ka,"Miniboss")).fortress().boss(cf).connect(gc);(new Location$$module$js$nodes(c,109,
Ka,"Floor 2a (left stair)")).fortress().connect(gc).chest(ba,19);const Ng=(new Location$$module$js$nodes(c,109,Ka,"Floor 2b (right stair)")).fortress().connect(Mg).chest(R,30,85),Og=(new Location$$module$js$nodes(c,110,Ka,"Floor 3a (toward boss)")).fortress().connect(Ng),Nd=(new Location$$module$js$nodes(c,110,Ka,"Floor 3b (boss room)")).fortress().connect(Og);(new Location$$module$js$nodes(c,110,Ka,"Boss")).fortress().boss(kd).connect(Nd);(new Location$$module$js$nodes(c,110,Ka,"Floor 3c (back room trap)")).fortress().from(Nd).to(gc);
const Pg=(new Location$$module$js$nodes(c,112,Ja,"Secret Passage")).cave().connectTo(Id),Gb=(new Location$$module$js$nodes(c,113,Ja,"Town")).town().connect(Bg),Ba=(new Location$$module$js$nodes(c,114,ra,"Town")).town().connect(Dg),Qg=(new Location$$module$js$nodes(c,115,ra,"Inside Gate")).overworld().connect(Ba),Rg=(new Location$$module$js$nodes(c,115,ra,"Outside Gate")).overworld().from(Qg,Qa),Hb=(new Location$$module$js$nodes(c,120,Ua,"Valley")).overworld().connect(Rg),hc=(new Location$$module$js$nodes(c,
124,F,"Entrance")).overworld().connect(Hb),Sg=(new Location$$module$js$nodes(c,124,F,"Over first river toward Shyron")).overworld().connect(hc,x),Od=(new Location$$module$js$nodes(c,124,F,"After first tunnel")).overworld(),Pd=(new Location$$module$js$nodes(c,124,F,"Door to Styx")).overworld().connect(Od,x),Tg=(new Location$$module$js$nodes(c,124,F,"Dead end (no item)")).overworld(),Ug=(new Location$$module$js$nodes(c,124,F,"Dead end (fruit of lime)")).overworld().chest(Kb,26),Vg=(new Location$$module$js$nodes(c,
124,F,"Dead end (magic ring)")).overworld().chest(pa,25,101),Qd=(new Location$$module$js$nodes(c,124,F,"Outside tunnel to bow")).overworld();(new Location$$module$js$nodes(c,124,F,"Floating island (bow of sun)")).overworld().connect(Qd,J).chest(Dc,24);const Wg=(new Location$$module$js$nodes(c,125,F,"Tunnel 1 (to Shyron)")).cave().connect(Sg),Xg=(new Location$$module$js$nodes(c,126,F,"Outside Shyron")).overworld().connect(Wg);(new Location$$module$js$nodes(c,127,F,"Tunnel 2 (fork)")).cave().connect(hc).connectTo(Ug).connectTo(Od);
const Rd=(new Location$$module$js$nodes(c,128,F,"Tunnel 3 (caves)")).cave().connect(Pd).connect(Tg),Sd=(new Location$$module$js$nodes(c,129,F,"Tunnel 4 (left branch of cave)")).cave().connect(Rd);(new Location$$module$js$nodes(c,130,F,"Tunnel 5 (dead end, medical herb)")).cave().connect(Sd).chest(R,15,86);const Yg=(new Location$$module$js$nodes(c,131,F,"Tunnel 6a (left-then-right)")).cave().connect(Sd),Zg=(new Location$$module$js$nodes(c,131,F,"Tunnel 6b (past wall)")).cave().connect(Yg,B),$g=(new Location$$module$js$nodes(c,
132,F,"Tunnel 7 (wide hall)")).cave().connect(Zg);(new Location$$module$js$nodes(c,133,F,"Tunnel 8 (red slimes)")).cave().from($g,B).connectTo(Qd).chest(ca,23,116);const ah=(new Location$$module$js$nodes(c,134,F,"Tunnel 9 (right branch, infinite loop)")).cave().connect(Rd),bh=(new Location$$module$js$nodes(c,135,F,"Tunnel 10a (toward magic ring)")).cave().connect(ah);(new Location$$module$js$nodes(c,135,F,"Tunnel 10b (past wall)")).cave().connect(bh,B).connectTo(Vg);const Td=(new Location$$module$js$nodes(c,
136,Ta,"Entrance")).fortress().from(Pd,vc,Yb),ch=(new Location$$module$js$nodes(c,137,Ta,"Left branch")).fortress().connect(Td).chest(ca,19,117),dh=(new Location$$module$js$nodes(c,137,Ta,"Left branch, past one bridge")).fortress().connect(ch,x),eh=(new Location$$module$js$nodes(c,137,Ta,"Left branch, past two bridges")).fortress().connect(dh,x).chest(R,29,87),fh=(new Location$$module$js$nodes(c,137,Ta,"Right branch")).fortress().connect(Td);(new Location$$module$js$nodes(c,137,Ta,"Right branch, across water")).fortress().connect(fh,
J).chest(ca,20,118).chest(ca,21,119).chest(oa,28);(new Location$$module$js$nodes(c,138,Ta,"Upper floor")).fortress().connect(eh).chest(N,27);const hb=(new Location$$module$js$nodes(c,140,La,"Town")).town().connect(Xg,Re).trigger(Xb),qb=(new Location$$module$js$nodes(c,142,Ua,"Town")).town().connect(Hb),Ud=(new Location$$module$js$nodes(c,143,S,"Draygonia Fortress Basement 1 (front)")).fortress();(new Location$$module$js$nodes(c,143,S,"Draygonia Fortress Basement 2 (power ring)")).fortress().connect(Ud,
Za).chest(fe,15);const ic=(new Location$$module$js$nodes(c,144,Ua,"Desert 1")).overworld().connect(Hb),Ib=(new Location$$module$js$nodes(c,145,S,"Area 1 (from entrance)")).cave().chest(sc,26),Vd=(new Location$$module$js$nodes(c,145,S,"Area 2 (across top bridge)")).cave().connect(Ib,x);(new Location$$module$js$nodes(c,145,S,"Area 3 (dead-end across top-right bridge)")).cave().connect(Vd,x);const gh=(new Location$$module$js$nodes(c,145,S,"Area 4 (left across middle-right bridge)")).cave().connect(Vd,
x),hh=(new Location$$module$js$nodes(c,145,S,"Area 5 (bottom edge)")).cave().connect(gh,x),ih=(new Location$$module$js$nodes(c,145,S,"Area 6 (bottom island)")).cave().connect(hh,x),jh=(new Location$$module$js$nodes(c,145,S,"Area 7 (bottom inner ring)")).cave().connect(ih,x),kh=(new Location$$module$js$nodes(c,145,S,"Area 8 (left outer ring)")).cave().connect(jh,x).connect(Ib,x).chest(ba,27,100),lh=(new Location$$module$js$nodes(c,145,S,"Area 9 (top left inner ring)")).cave().connect(kh,x),mh=(new Location$$module$js$nodes(c,
145,S,"Area 10 (top right inner ring)")).cave().connect(lh,x);(new Location$$module$js$nodes(c,145,S,"Area 11 (center)")).cave().connect(mh,x).connectTo(Ud);(new Location$$module$js$nodes(c,145,S,"Area 12 (top center islands)")).cave().connect(Ib,J).chest(de,28);const nh=(new Location$$module$js$nodes(c,146,ta,"Desert Cave 1")).cave().connect(ic,J),ib=(new Location$$module$js$nodes(c,147,ta,"Town")).town(),oh=(new Location$$module$js$nodes(c,148,ta,"Outside Cave")).overworld().connect(ib),ph=(new Location$$module$js$nodes(c,
149,ta,"Desert Cave 2")).cave().connect(oh);(new Location$$module$js$nodes(c,150,ta,"Meadow")).overworld().connect(nh).connectTo(ib).trigger(Be,Qa,Ze);const jc=(new Location$$module$js$nodes(c,152,ta,"Desert 2")).overworld().connect(ph),qh=(new Location$$module$js$nodes(c,156,db,"Entrance")).fortress().connect(jc,J),rh=(new Location$$module$js$nodes(c,156,db,"Azteca")).fortress().trigger(De),sh=(new Location$$module$js$nodes(c,157,db,"Fork")).fortress().connect(qh),Wd=(new Location$$module$js$nodes(c,
158,db,"Main")).fortress().connect(sh);(new Location$$module$js$nodes(c,158,db,"Treasure Chest (magic ring)")).fortress().connect(Wd).chest(pa,27,108);(new Location$$module$js$nodes(c,159,db,"Draygon")).fortress().connect(Wd).to(rh).boss(jf);const th=(new Location$$module$js$nodes(c,160,za,"Entrance")).fortress().connect(jc,J),uh=(new Location$$module$js$nodes(c,160,za,"Statues")).fortress().connect(th).boss(kf),vh=(new Location$$module$js$nodes(c,161,za,"Hall 1")).fortress().connect(uh),kc=(new Location$$module$js$nodes(c,
162,za,"Branch")).fortress().connect(vh);(new Location$$module$js$nodes(c,163,za,"Left Dead End")).fortress().connect(kc).chest(ca,13,120);(new Location$$module$js$nodes(c,164,za,"Right Dead End")).fortress().connect(kc);const wh=(new Location$$module$js$nodes(c,165,za,"Hall 2")).fortress().connect(kc).chest(Mb,26,109),xh=(new Location$$module$js$nodes(c,166,za,"Draygon 2")).fortress().connect(wh).boss(lf);(new Location$$module$js$nodes(c,167,za,"Teleporter")).fortress().from(xh).to(Gd);const Xd=
(new Location$$module$js$nodes(c,168,zb,"Entrance")).fortress().connect(qb,Yb).trigger($c,N),yh=(new Location$$module$js$nodes(c,169,zb,"Main")).fortress().from(Xd,Za),zh=(new Location$$module$js$nodes(c,169,zb,"Boss")).fortress().connect(yh).boss(ef),Ah=(new Location$$module$js$nodes(c,170,zb,"Zebu")).fortress().connect(zh),Jb=(new Location$$module$js$nodes(c,171,sa,"Entrance")).fortress().connect(Ah);(new Location$$module$js$nodes(c,171,sa,"Dead End Behind Iron (fruit of power)")).fortress().connect(Jb,
Za).chest(ba,28,98);(new Location$$module$js$nodes(c,171,sa,"Dead End Loop Across Closer Bridges")).fortress().connect(Jb,x).connect(Jb,x);const Bh=(new Location$$module$js$nodes(c,171,sa,"Across First Bridge (fruit of repun)")).fortress().connect(Jb,x).chest(Lb,30,102),lc=(new Location$$module$js$nodes(c,171,sa,"Across Second Bridge")).fortress().connect(Bh,x);(new Location$$module$js$nodes(c,171,sa,"Dead End Across Two Bridges ()")).fortress().connect(lc,x).connect(lc,x).chest(Ya,29,93);const Ch=
(new Location$$module$js$nodes(c,171,sa,"Across Third Bridge")).fortress().connect(lc,x),Dh=(new Location$$module$js$nodes(c,171,sa,"Exit Behind Iron Door")).fortress().connect(Ch,Za),Eh=(new Location$$module$js$nodes(c,172,sa,"Boss")).fortress().connect(Dh).boss(ff),Fh=(new Location$$module$js$nodes(c,172,sa,"Tornel")).fortress().connect(Eh),Yd=(new Location$$module$js$nodes(c,173,cb,"Lower")).fortress().connect(Fh).chest(Mb,26,99).chest(pa,27,111),Gh=(new Location$$module$js$nodes(c,174,cb,"Upper Loop")).fortress().connect(Yd).chest(Z,
22,96);(new Location$$module$js$nodes(c,174,cb,"Upper Loop Behind Wall (magic ring)")).fortress().connect(Gh,Za).chest(pa,23,107);const Hh=(new Location$$module$js$nodes(c,175,cb,"Upper Passage (toward Mado)")).fortress().connect(Yd).chest(pa,27,84),mc=(new Location$$module$js$nodes(c,176,da,"Initial Fork")).fortress(),Ih=(new Location$$module$js$nodes(c,177,da,"Left Branch")).fortress().connect(mc),Zd=(new Location$$module$js$nodes(c,178,da,"Main Area (right branch, over bridges)")).fortress().connect(mc),
Jh=(new Location$$module$js$nodes(c,179,da,"U-shaped Passage (between floors)")).fortress().connect(Zd),Kh=(new Location$$module$js$nodes(c,180,da,"Main Area Lower (under bridge)")).fortress().connect(Ih).connect(Zd).connect(Jh),$d=(new Location$$module$js$nodes(c,180,da,"Behind Iron Wall")).fortress().connect(Kh,Za),Lh=(new Location$$module$js$nodes(c,181,da,"Lower")).fortress().connect($d).chest(ca,13,121).chest(ca,14,122).chest(ca,15,123).chest(pa,23,88).chest(fa,24,110),Mh=(new Location$$module$js$nodes(c,
182,da,"Boss Corridor")).fortress().connect(Lh),Nh=(new Location$$module$js$nodes(c,182,da,"Boss")).fortress().connect(Mh,Yb).boss(hf);(new Location$$module$js$nodes(c,182,da,"Behind Boss (stormBracelet)")).fortress().connect(Nh).chest(Ca,18);const ae=(new Location$$module$js$nodes(c,183,da,"Exit Stairs")).fortress(),Oh=(new Location$$module$js$nodes(c,184,S,"Entrance Back (behind river)")).cave().connect(ae).chest(ba,13,90);(new Location$$module$js$nodes(c,184,S,"Entrance Front")).cave().connect(Oh,
J).connectTo(ic).connectTo(Ib);const Ph=(new Location$$module$js$nodes(c,185,cb,"Boss")).fortress().connect(Hh).boss(gf);(new Location$$module$js$nodes(c,185,cb,"Asina")).fortress().connect(Ph).connectTo(mc);(new Location$$module$js$nodes(c,186,da,"Kensu")).fortress().connect($d).connectTo(ae).trigger(Ae,Sb);(new Location$$module$js$nodes(c,187,Ua,"House")).house().connect(qb).trigger(Ce,Qa,Sb);(new Location$$module$js$nodes(c,188,Ua,"Inn")).shop().connect(qb,Xb);(new Location$$module$js$nodes(c,
190,Ua,"Tool Shop")).shop(R,Z,fa,ba).connect(qb,Xb);(new Location$$module$js$nodes(c,191,Ua,"Tavern")).shop().connect(qb);(new Location$$module$js$nodes(c,192,qa,"Elder House")).house().connect(Ma).trigger(Hc);(new Location$$module$js$nodes(c,193,qa,"Rabbit Hut")).house().connect(Ma).trigger(Nc,Mc,Fa);(new Location$$module$js$nodes(c,194,qa,"Inn")).shop().connect(Ma);(new Location$$module$js$nodes(c,195,qa,"Tool Shop")).shop(R,Z,fa,ba).connect(Ma);(new Location$$module$js$nodes(c,196,qa,"Armor Shop")).shop(Pa,
Oa).connect(Ma);(new Location$$module$js$nodes(c,197,qa,"Student House")).house().connect(Ma).trigger(Ic);(new Location$$module$js$nodes(c,198,ab,"Tavern")).house().connect(pb);(new Location$$module$js$nodes(c,199,ab,"Pawn Shop")).shop().connect(pb);(new Location$$module$js$nodes(c,200,ab,"Inn")).shop().connect(pb);(new Location$$module$js$nodes(c,201,ab,"Armor Shop")).shop(Ea,Oa,Da).connect(pb);(new Location$$module$js$nodes(c,203,ab,"Tool Shop")).shop(R,Z,fa).connect(pb);(new Location$$module$js$nodes(c,
205,nb,"Elder House")).house().from(Bb,Fa).trigger(pe,Ub);(new Location$$module$js$nodes(c,206,nb,"Mother's House")).house().from(Bb,Fa).trigger(Lc,Fa).trigger(oe,Ub);(new Location$$module$js$nodes(c,207,nb,"Tool Shop")).shop(R,Z,ba).from(Bb,Fa);(new Location$$module$js$nodes(c,208,nb,"Inn")).shop().from(Bb,Fa);(new Location$$module$js$nodes(c,209,bb,"Inn")).shop().connect(Ab);(new Location$$module$js$nodes(c,210,bb,"Tool Shop")).shop(fa,ba,Ya).connect(Ab);(new Location$$module$js$nodes(c,211,bb,
"Armor Shop")).shop(oc,u,rb,U).connect(Ab);const Qh=(new Location$$module$js$nodes(c,212,bb,"Queen's House")).house().from(Ab,Se).trigger(ye,Qa,Bc);(new Location$$module$js$nodes(c,213,yb,"Nadare's")).house().connect(Cb).connectTo(Yf).connectTo(Zf).connectTo($f);(new Location$$module$js$nodes(c,214,H,"Fisherman's House")).house().connect(Ed).trigger(Vb,wc,Rb,Te);const nc=(new Location$$module$js$nodes(c,215,H,"Palace Entrance")).house().connect(Va);(new Location$$module$js$nodes(c,216,H,"Fortune Teller Front")).house().connect(Va).trigger(Pc,
Oc);(new Location$$module$js$nodes(c,216,H,"Fortune Teller Back")).house().connect(Eg).connect(Jd);(new Location$$module$js$nodes(c,217,H,"Pawn Shop")).shop().connect(Va);(new Location$$module$js$nodes(c,218,H,"Armor Shop")).shop(be,oc,u).connect(Va);(new Location$$module$js$nodes(c,220,H,"Inn")).shop().connect(Va);(new Location$$module$js$nodes(c,221,H,"Tool Shop")).shop(R,Ya,Kb,fa).connect(Va);(new Location$$module$js$nodes(c,222,H,"Palace Left")).house().connect(nc);(new Location$$module$js$nodes(c,
223,H,"Palace Throne Room")).house().connect(nc).to(Fb,Me).from(Fb).trigger(Oc).trigger(se,Pc,Qc);(new Location$$module$js$nodes(c,224,H,"Palace Right")).house().connect(nc);(new Location$$module$js$nodes(c,225,H,"Asina's Room")).house().connect(Kd).trigger(Tc,cd);(new Location$$module$js$nodes(c,226,bb,"Queen Downstairs")).house().connect(Qh).chest(na,13);(new Location$$module$js$nodes(c,227,Ja,"Elder's House")).house().connect(Gb).trigger(Wc);(new Location$$module$js$nodes(c,228,Ja,"Shed")).house().connect(Gb).to(Pg,
xc);(new Location$$module$js$nodes(c,229,Ja,"Tool Shop")).shop(R,Z,ba,Ya).connect(Gb);(new Location$$module$js$nodes(c,231,Ja,"Inn")).shop().connect(Gb);const Rh=(new Location$$module$js$nodes(c,232,V,"Zombie Town House")).house().connect(fc);(new Location$$module$js$nodes(c,233,V,"Zombie Town Basement")).house().connect(Rh).trigger(ue,kd);(new Location$$module$js$nodes(c,235,ra,"Tool Shop")).shop(R,Z,ba,fa).connect(Ba);(new Location$$module$js$nodes(c,236,ra,"Stom's Hut")).house().connect(Ba).trigger(Xc);
(new Location$$module$js$nodes(c,237,ra,"Inn")).shop().connect(Ba);(new Location$$module$js$nodes(c,238,ra,"Armor Shop")).shop(ce,pc,E,Q).connect(Ba);(new Location$$module$js$nodes(c,239,ra,"Tavern")).house().connect(Ba).trigger(Yc,Xc,lb);(new Location$$module$js$nodes(c,240,ra,"Pawn Shop")).shop().connect(Ba);(new Location$$module$js$nodes(c,241,ra,"Dance Hall")).house().connect(Ba).trigger(Zc,Yc,lb).trigger(xe,Zc,Ac);const Sh=(new Location$$module$js$nodes(c,242,La,"Temple (pre-massacre)")).fortress().connect(hb).from(Zb,
N,va).trigger(ze);(new Location$$module$js$nodes(c,242,La,"Temple (post-massacre)")).fortress().from(Sh,$c).boss(df);(new Location$$module$js$nodes(c,243,La,"Training Hall")).house().connect(hb);(new Location$$module$js$nodes(c,244,La,"Hospital")).house().connect(hb);(new Location$$module$js$nodes(c,245,La,"Armor Shop")).shop(pc,U,Q).connect(hb);(new Location$$module$js$nodes(c,246,La,"Tool Shop")).shop(R,Z,Kb,pa).connect(hb);(new Location$$module$js$nodes(c,247,La,"Inn")).shop().connect(hb);(new Location$$module$js$nodes(c,
248,ta,"Inn")).shop().connect(ib);(new Location$$module$js$nodes(c,249,ta,"Tool Shop")).shop(Z,fa,Lb,pa).connect(ib);(new Location$$module$js$nodes(c,250,ta,"Elder's House")).house().connect(ib);(new Location$$module$js$nodes(c,251,ta,"Pawn Shop")).house().connect(ib);const Th=[Ma,ob,md,eb,$b,fb,cc,yd,ec,Ba,Hb,hc,ic,Xd,jc];for(const a of Th)a.from(Zb,He);return c};var module$js$depgraph={};module$js$depgraph.generate=generate$$module$js$depgraph;class FetchReader$$module$js$fetchreader{constructor(a){this.path=void 0===a?"js/":a}read(a){const b=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){return a in STATIC$$module$js$fetchreader?STATIC$$module$js$fetchreader[a]:yield(yield fetch(b.path+a)).text()})}}const STATIC$$module$js$fetchreader={};var module$js$fetchreader={};module$js$fetchreader.FetchReader=FetchReader$$module$js$fetchreader;var Dir$$module$js$logic$dir;(function(a){a.name=function(a){switch(a){case 0:return"N";case 1:return"W";case 2:return"S";case 3:return"E"}throw Error(`Bad direction: ${a}`);};a.all=function(){return[0,1,2,3]};a.North=0;a.West=1;a.South=2;a.East=3})(Dir$$module$js$logic$dir||(Dir$$module$js$logic$dir={}));var module$js$logic$dir={};module$js$logic$dir.Dir=Dir$$module$js$logic$dir;class Graph$$module$js$logic$graph{constructor(a){var b;this.worlds=a;var c=new Set,d=new Set,e=new Map,f=new Map;for(var g=0;g<a.length;g++){const b=a[g],h=g<<24;for(const a of b.requirements){const [b,e]=a;c.add(h|b);for(const a of e)for(const b of a)d.add(h|b)}for(const a of b.items){const [b,c]=a;f.set(h|b,c)}for(const a of b.slots){const [b,c]=a;e.set(h|b,c)}}this.itemInfos=new Map(f);this.slotInfos=new Map(e);this.progression=new Set(d);for(const a of f.keys())d.add(a);e=new Set;f=new Set;g=
new Set;for(var h of d)(c.has(h)?e:g).add(h);for(var k of c)d.has(k)||f.add(k);this.common=e.size;this.slots=new ArrayMap$$module$js$util([...e,...f]);this.items=new ArrayMap$$module$js$util([...e,...g]);c=[];d=[];for(h=0;h<a.length;h++){const b=h<<24;for(var m of a[h].requirements){const [a,f]=m;k=this.slots.index(b|a);if(null==k)throw Error(`Provided a non-slot? ${hex$$module$js$rom$util(a)}`);for(var l of f){e=[...l].map((a)=>{var c;return c=this.items.index(b|a),null!==c&&void 0!==c?c:die$$module$js$assert()});
(c[k]||(c[k]=[])).push(Bits$$module$js$bits.from(e));for(const a of e)(d[a]||(d[a]=new Set)).add(k)}}}for(a=0;a<this.slots.length;a++)c[a]&&c[a].length||(m=(b=this.slots.get(a),null!==b&&void 0!==b?b:NaN),l=this.checkName(m),console.error(`Nothing provided $${hex$$module$js$rom$util(m)}: ${l} (index ${a})`));this.graph=new Keyed$$module$js$util(c);this.unlocks=new Keyed$$module$js$util(d.map(spread$$module$js$util))}shuffle(a,b,c,d,e){c=void 0===c?20:c;const f=this;return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){d&&
d.addTasks(Math.floor(c/100));for(var g=0;g<c;g++){d&&99===g%100&&(d.addCompleted(1),yield new Promise(requestAnimationFrame));var h=new MutableArrayBiMap$$module$js$util;f.prefill(h,b);const l=f.compressFill(h);var k=f.itemPool(l.values(),b),m=Bits$$module$js$bits.from(new Set(k));if(f.fillInternal(l,k,m,b,a,Math.floor(g/5))){m=e?[]:void 0;k=f.traverse((a)=>l.get(a),Bits$$module$js$bits.of(),m);if(e&&m)for(const a of m){const [b,...c]=a;(b<f.common||l.has(b))&&e.addCheck(f.slots.get(b),c.map((a)=>
f.items.get(a)))}if(k.size!==f.slots.length){h=new Set([...f.slots].map((a)=>a[0]));for(const a of k)h.delete(a);console.error(`Initial fill never filled slots:
  ${[...h].map((a)=>f.checkName(f.slots.get(a))).sort().join("\n  ")}`,k,f)}else if(f.expandFill(l,h),k=f.fillNonProgression(h,a,b),null!=k){d&&d.addCompleted(Math.floor((c-g)/100));if(e)for(const a of h){const [b,c]=a;g=f.checkName(b).replace(/^[0-9a-f]{3} /,"");e.addSlot(b,g,c)}return k}}}return null})}fillInternal(a,b,c,d,e,f){var g;const h=new Set(a.keys());for(var k=b.pop();null!=k;k=b.pop()){if(!Bits$$module$js$bits.has(c,k))continue;const l=this.itemInfoFromIndex(k);c=Bits$$module$js$bits.without(c,
k);var m=this.expandReachable(this.traverse((b)=>a.get(b),c),e);d.shuffle(m);let n=!1;const p=new Set(a.keys());for(const b of m){if(p.has(b))continue;p.add(b);const c=this.slotInfoFromIndex(b);if(c&&this.fits(c,l,e)){a.set(b,k);n=!0;break}}if(!n){p.clear();if(0<f--){for(const f of m)if(!p.has(f)&&a.has(f)&&!h.has(f)&&(p.add(f),(m=this.slotInfoFromIndex(f))&&this.fits(m,l,e))){k=(g=a.replace(f,k),null!==g&&void 0!==g?g:die$$module$js$assert());c=Bits$$module$js$bits.with(c,k);b.push(k);d.shuffle(b);
n=!0;break}if(n)continue}return!1}}return!0}expandReachable(a,b){const c=[];for(const d of a)a=this.slotInfoFromIndex(d),!a||b.preserveUniqueChecks()&&!a.unique||addCopies$$module$js$logic$graph(c,d,a.weight||1);return c}itemPool(a,b){a=new Set(a);const c=[];for(const b of this.itemInfos){const [d,f]=b;{const b=this.items.index(d);null!=b&&this.progression.has(d)&&(a.has(b)||addCopies$$module$js$logic$graph(c,b,f.weight||1))}}return b.shuffle(c)}fits(a,b,c){if(c.preserveUniqueChecks()&&b.unique&&
!a.unique)return!1;c=b.preventLoss||a.preventLoss;return a.lossy&&b.losable&&c?!1:!0}fillNonProgression(a,b,c){var d=[[],[],[]];const e=[[],[]];for(var f of this.itemInfos){const [c,e]=f;if(!a.hasValue(c)){var g=2;e.losable&&e.preventLoss&&(g=1);b.preserveUniqueChecks()&&e.unique&&(g=0);d[g].push(c)}}for(const b of this.slotInfos){const [c,d]=b;a.has(c)||e[d.lossy&&d.preventLoss?0:1].push(c)}for(const a of[...d,...e])c.shuffle(a);c=(a)=>this.checkName(a);f=module$js$util.iters.count(module$js$util.iters.concat(...e));
g=module$js$util.iters.count(module$js$util.iters.concat(...d));if(g>f)throw console.log(`Slots ${f}:\n  ${[...module$js$util.iters.concat(...e)].map(c).join("\n  ")}`),console.log(`Items ${g}:\n  ${[...module$js$util.iters.concat(...d)].map(c).join("\n  ")}`),Error("Too many items");for(const g of module$js$util.iters.concat(...d)){d=!1;for(const c of[...e]){if(d)break;for(f=0;f<c.length;f++)if(this.fits(this.slotInfos.get(c[f]),this.itemInfos.get(g),b)){a.set(c[f],g);d=!0;c.splice(f,1);break}}if(!d)return console.log(`Slots:\n  ${[...module$js$util.iters.concat(...e)].map(c).join("\n  ")}`),
console.error(`REROLL: Could not place item ${c(g)}`),null}return new Map(a)}traverse(a,b,c){b=Bits$$module$js$bits.clone(b);const d=new Set,e=new Set;for(var f=0;f<this.slots.length;f++){if(null==this.graph.get(f))throw console.dir(this),Error(`Unreachable slot ${f}`);e.add(f)}for(const g of e)if(e.delete(g),!d.has(g)){f=this.graph.get(g);if(null==f)throw Error(`Not in graph: ${g}`);for(let h=0,k=f.length;h<k;h++){if(!Bits$$module$js$bits.containsAll(b,f[h]))continue;c&&c.push([g,...Bits$$module$js$bits.bits(f[h])]);
d.add(g);f=[];g<this.common&&f.push(g);const k=a(g);null!=k&&f.push(k);for(const a of f){b=Bits$$module$js$bits.with(b,a);for(const b of this.unlocks.get(a)||[]){if(null==this.graph.get(b))throw console.dir(this),Error(`Adding bad node ${b} from unlock ${a}`);e.add(b)}}break}}return d}expandFill(a,b){for(const c of a){const [d,e]=c;{a=this.slots.get(d);const c=this.items.get(e);if(null==a||null==c)throw Error("missing");b.replace(a,c)}}}compressFill(a){const b=new MutableArrayBiMap$$module$js$util;
for(const c of a){const [d,e]=c;{a=this.slots.index(d);const c=this.items.index(e);if(null==a||null==c)throw Error(`Bad slot/item: ${d} ${a} ${e} ${c}`);b.set(a,c)}}return b}checkName(a){return this.worlds[a>>>24].checkName(a&16777215)}prefill(a,b){for(let c=0;c<this.worlds.length;c++){const d=c<<24,e=this.worlds[c].prefill(b);for(const b of e){const [c,e]=b;a.set(d|c,d|e)}}}itemInfoFromIndex(a){const b=this.items.get(a);if(null==b)throw Error(`Bad item: ${a}`);return this.itemInfoFromId(b)}itemInfoFromId(a){const b=
this.itemInfos.get(a);if(null==b)throw Error(`Missing info: ${hex$$module$js$rom$util(a)}`);return b}slotInfoFromIndex(a){const b=this.slots.get(a);if(null==b)throw Error(`Bad slot: ${a}`);return this.slotInfoFromId(b)}slotInfoFromId(a){a=this.slotInfos.get(a);if(null!=a)return a}}function addCopies$$module$js$logic$graph(a,b,c){for(let d=0;d<c;d++)a.push(b)}var module$js$logic$graph={};module$js$logic$graph.Graph=Graph$$module$js$logic$graph;function TileId$$module$js$logic$tileid(a){return a}
(function(a){a.from=function({id:a},{x:c,y:d}){return a<<16|d>>>8<<12|c>>>8<<8|(d>>>4&15)<<4|c>>>4&15};a.add=function(a,c,d){if(c){for(c=(a&240)+(c<<4);240<=c;){if(61440<=(a&61440))return-1;c-=240;a+=4096}for(;0>c;){if(!(a&61440))return-1;c+=240;a-=4096}a=a&-241|c}if(d){for(d=(a&15)+d;16<=d;){if(1792<=(a&3840))return-1;d-=16;a+=256}for(;0>d;){if(!(a&3840))return-1;d+=16;a-=256}a=a&-16|d}return a}})(TileId$$module$js$logic$tileid||(TileId$$module$js$logic$tileid={}));var module$js$logic$tileid={};
module$js$logic$tileid.TileId=TileId$$module$js$logic$tileid;var Hitbox$$module$js$logic$hitbox;
(function(a){a.trigger=function(a,c){return{*[Symbol.iterator](){let {x:b,y:e}=c;b+=8;for(const c of[-16,0]){const d=b+c;for(const b of[-16,0])yield module$js$logic$tileid.TileId.from(a,{x:d,y:e+b})}}}};a.adjust=function(a,...c){const b=new Set;a=[...a];for(const [d,f]of c)for(const c of a)b.add(module$js$logic$tileid.TileId.add(c,d,f));return b};a.screen=function(a){const b=[];for(let c=0;240>c;c++)b.push(a&-256|c);return b};a.atLocation=function(a,...c){const b=new Set;a=[...a];for(const d of c)for(const c of a)b.add(c&
65535|d.id<<16);return b}})(Hitbox$$module$js$logic$hitbox||(Hitbox$$module$js$logic$hitbox={}));var module$js$logic$hitbox={};module$js$logic$hitbox.Hitbox=Hitbox$$module$js$logic$hitbox;var Requirement$$module$js$logic$requirement;
(function(a){function b(a){return a instanceof c?[...module$js$util.iters.map(a,(a)=>[...a])]:a}a.and=function(...a){return[[].concat(...a.map(([a])=>a))]};a.or=function(...c){const d=[];for(const e of c){if(e===a.OPEN)return a.OPEN;e!==a.CLOSED&&d.push(...b(e))}return d.length?d:a.CLOSED};a.meet=function(d,e){if(d===a.OPEN)return b(e);if(e===a.OPEN)return b(d);if(d===a.CLOSED||e===a.CLOSED)return a.CLOSED;const f=new c;for(const a of d)for(const b of e)f.addList([...a,...b]);return b(f)};a.freeze=
b;a.label=function(a){return a instanceof c?a.label():a.map((a)=>a.join("&")).join("|")};a.isOpen=function(a){a=a[Symbol.iterator]();const {value:b,done:c}=a.next();return c||!a.next().done?!1:b[Symbol.iterator]().next().done};a.isClosed=function(a){return!!a[Symbol.iterator]().next().done};a.OPEN=[[]];a.CLOSED=[];class c{constructor(a){this.self=a;this.map=new Map}[Symbol.iterator](){return this.map.values()}addInternal(a,b){for(const a of b)if(Array.isArray(a))throw Error();if(b.has(this.self)||
this.map.has(a))return!1;for(const [a,c]of this.map){if(containsAll$$module$js$logic$requirement(b,c))return!1;containsAll$$module$js$logic$requirement(c,b)&&this.map.delete(a)}this.map.set(a,b);return!0}addRoute(a){return this.addInternal(a[DEPS_LABEL$$module$js$logic$requirement],a.deps)}addAll(a){for(const b of a)this.addList(b)}addList(a){a=[...new Set(a)].sort();const b=new Set(a);this.addInternal(a.join("&"),b)}restrict(a){const b=[...this.map.values()];this.map.clear();for(const c of b)for(const b of a)this.addList([...c,
...b])}label(){return[this.map.keys()].join("|")}}a.Builder=c})(Requirement$$module$js$logic$requirement||(Requirement$$module$js$logic$requirement={}));function containsAll$$module$js$logic$requirement(a,b){if(a.size<b.size)return!1;for(const c of b)if(!a.has(c))return!1;return!0}const DEPS_LABEL$$module$js$logic$requirement=Symbol("depsLabel");
class Route$$module$js$logic$requirement{constructor(a,b){this.target=a;a=[...new Set(b)].sort();this.deps=new Set(a);this[DEPS_LABEL$$module$js$logic$requirement]=a.join("&");this.label=`${this.target}:${this[DEPS_LABEL$$module$js$logic$requirement]}`}}var module$js$logic$requirement={};module$js$logic$requirement.Requirement=Requirement$$module$js$logic$requirement;module$js$logic$requirement.Route=Route$$module$js$logic$requirement;function ScreenId$$module$js$logic$screenid(a){return a}(function(a){a.from=(a,c)=>"number"!==typeof a&&c?a.id<<8|c.y>>>8<<4|c.x>>>8:Number(a)>>>8;a.fromTile=function(a){return a>>>8}})(ScreenId$$module$js$logic$screenid||(ScreenId$$module$js$logic$screenid={}));var module$js$logic$screenid={};module$js$logic$screenid.ScreenId=ScreenId$$module$js$logic$screenid;class Terrains$$module$js$logic$terrain{constructor(a){this.rom=a;this.tiles=new DefaultMap$$module$js$util((a)=>makeTile$$module$js$logic$terrain(this.rom,a));this.bosses=new DefaultMap$$module$js$util((a)=>new BossTerrain$$module$js$logic$terrain(a));this.statues=new Map;this.flags=new DefaultMap$$module$js$util((a)=>new DefaultMap$$module$js$util((b)=>new DefaultMap$$module$js$util((c)=>new FlagTerrain$$module$js$logic$terrain(a,b,c))));this.meets=new DefaultMap$$module$js$util((a)=>new DefaultMap$$module$js$util((b)=>
new MeetTerrain$$module$js$logic$terrain(a,b)));this._seamless=new DefaultMap$$module$js$util((a)=>new SeamlessTerrain$$module$js$logic$terrain(a))}tile(a){return a&4?void 0:this.tiles.get(a)}boss(a){return this.bosses.get(a)}statue(a){const b=module$js$logic$requirement.Requirement.label(a);let c=this.statues.get(b);c||this.statues.set(b,c=new StatueTerrain$$module$js$logic$terrain(a));return c}flag(a,b,c){a||(a=CLOSED$$module$js$logic$terrain);return this.flags.get(a).get(b).get(c)}meet(a,b){return this.meets.get(a).get(b)}seamless(a){return this._seamless.get(a)}label(a,
b){return a.label?a.label(b):"Terrain"}}var Terrain$$module$js$logic$terrain;(function(a){a.FLY=2;a.BLOCKED=4;a.SLOPE=32;a.BITS=38;a.SWAMP=256;a.BARRIER=512;a.SLOPE8=1024;a.SLOPE9=2048;a.DOLPHIN=4096;a.label=function(a,c){var b,e;return e=null===(b=a.label)||void 0===b?void 0:b.call(a,c),null!==e&&void 0!==e?e:"Terrain"}})(Terrain$$module$js$logic$terrain||(Terrain$$module$js$logic$terrain={}));
class SeamlessTerrain$$module$js$logic$terrain{constructor(a){this._delegate=a;this.enter=a.enter;this.exit=a.exit}label(a){return`Seamless(${Terrain$$module$js$logic$terrain.label(this._delegate,a)})`}}
class SimpleTerrain$$module$js$logic$terrain{constructor(a,b=module$js$logic$requirement.Requirement.OPEN){this.enter=a;this.exit=[[15,b]]}get kind(){return"Simple"}label(a){const b=[];module$js$logic$requirement.Requirement.isOpen(this.enter)||b.push(`enter = ${debugLabel$$module$js$logic$terrain(this.enter,a)}`);module$js$logic$requirement.Requirement.isOpen(this.exit[0][1])||b.push(`exit = ${debugLabel$$module$js$logic$terrain(this.exit[0][1],a)}`);return`${this.kind}(${b.join(", ")})`}}
class SouthTerrain$$module$js$logic$terrain{constructor(a,b){this.enter=a;this.exit=b?[[11,b],[4,module$js$logic$requirement.Requirement.OPEN]]:[[15,module$js$logic$requirement.Requirement.OPEN]]}get kind(){return"South"}label(a){if(1===this.exit.length)return SimpleTerrain$$module$js$logic$terrain.prototype.label.call(this,a);const b=[];module$js$logic$requirement.Requirement.isOpen(this.enter)||b.push(`enter = ${debugLabel$$module$js$logic$terrain(this.enter,a)}`);module$js$logic$requirement.Requirement.isOpen(this.exit[0][1])||
b.push(`other = ${debugLabel$$module$js$logic$terrain(this.exit[0][1],a)}`);module$js$logic$requirement.Requirement.isOpen(this.exit[1][1])||b.push(`south = ${debugLabel$$module$js$logic$terrain(this.exit[1][1],a)}`);return`${this.kind}(${b.join(", ")})`}}
function makeTile$$module$js$logic$terrain(a,b){let c=module$js$logic$requirement.Requirement.OPEN,d=void 0;b&Terrain$$module$js$logic$terrain.DOLPHIN&&b&Terrain$$module$js$logic$terrain.FLY?(b&Terrain$$module$js$logic$terrain.SLOPE&&(d=a.flags.ClimbWaterfall.r),c=[[a.flags.CurrentlyRidingDolphin.c],[a.flags.Flight.c]]):(b&Terrain$$module$js$logic$terrain.SLOPE9?d=a.flags.ClimbSlope9.r:b&Terrain$$module$js$logic$terrain.SLOPE8?d=a.flags.ClimbSlope8.r:b&Terrain$$module$js$logic$terrain.SLOPE&&(d=a.flags.Flight.r),
b&Terrain$$module$js$logic$terrain.FLY&&(c=a.flags.Flight.r));b&Terrain$$module$js$logic$terrain.SWAMP&&(c=c.map((b)=>[a.flags.TravelSwamp.c,...b]));b&Terrain$$module$js$logic$terrain.BARRIER&&(c=c.map((b)=>[a.flags.ShootingStatue.c,...b]));return new SouthTerrain$$module$js$logic$terrain(c,d)}class BossTerrain$$module$js$logic$terrain extends SimpleTerrain$$module$js$logic$terrain{constructor(a){super(module$js$logic$requirement.Requirement.OPEN,[[a]]);this._flag=a}get kind(){return"Boss"}}
class StatueTerrain$$module$js$logic$terrain extends SouthTerrain$$module$js$logic$terrain{constructor(a){super(module$js$logic$requirement.Requirement.OPEN,a);this._req=a}get kind(){return"Statue"}}
class FlagTerrain$$module$js$logic$terrain extends SimpleTerrain$$module$js$logic$terrain{constructor(a,b,c){if(1!==a.exit.length||1!==c.exit.length)throw Error("bad flag");const d=[[b]],e=0<=b?module$js$logic$requirement.Requirement.meet(c.enter,d):c.enter;b=0<=b?module$js$logic$requirement.Requirement.meet(c.exit[0][1],d):c.exit[0][1];super(module$js$logic$requirement.Requirement.or(a.enter,e),module$js$logic$requirement.Requirement.or(a.exit[0][1],b))}get kind(){return"Flag"}}
const CLOSED$$module$js$logic$terrain=new SimpleTerrain$$module$js$logic$terrain(module$js$logic$requirement.Requirement.CLOSED,module$js$logic$requirement.Requirement.CLOSED);function directionIndex$$module$js$logic$terrain(a){const b=[];for(var c=0;c<a.exit.length;c++)for(let d=0;4>d;d++)a.exit[c][0]&1<<d&&(b[d]=c);for(c=0;4>c;c++)if(null==b[c])throw Error(`Bad terrain: ${a.exit.map((a)=>a[0]).join(",")}`);return b}
class MeetTerrain$$module$js$logic$terrain{constructor(a,b){this.left=a;this.right=b;const c=directionIndex$$module$js$logic$terrain(a),d=directionIndex$$module$js$logic$terrain(b),e=new Set,f=[];for(let a=0;4>a;a++)e.add(c[a]<<2|d[a]);for(const c of e){const [d,e]=a.exit[c>>2],[g,l]=b.exit[c&3];f.push([d&g,module$js$logic$requirement.Requirement.meet(e,l)])}this.enter=module$js$logic$requirement.Requirement.meet(a.enter,b.enter);this.exit=f}get kind(){return"Terrain"}label(a){if(1===this.exit.length)return SimpleTerrain$$module$js$logic$terrain.prototype.label.call(this,
a);const b=[];module$js$logic$requirement.Requirement.isOpen(this.enter)||b.push(`enter = ${debugLabel$$module$js$logic$terrain(this.enter,a)}`);for(const [c,d]of this.exit){const e=[c&1?"N":"",c&2?"W":"",c&4?"S":"",c&8?"E":""].join("");b.push(`exit${e} = ${debugLabel$$module$js$logic$terrain(d,a)}`)}return`${this.kind}(${b.join(", ")})`}}
function debugLabel$$module$js$logic$terrain(a,b){a=[...a];const c=a.map((a)=>module$js$util.iters.isEmpty(a)?"open":[...a].map((a)=>{var c;return null===(c=b.flags[a])||void 0===c?void 0:c.debug}).join(" & ")).join(") | (");return 1<a.length?`(${c})`:a.length?c:"never"}Terrain$$module$js$logic$terrain.debugLabel=debugLabel$$module$js$logic$terrain;"object"===typeof window&&(window.debugLabel=debugLabel$$module$js$logic$terrain);var module$js$logic$terrain={};module$js$logic$terrain.Terrains=Terrains$$module$js$logic$terrain;
module$js$logic$terrain.Terrain=Terrain$$module$js$logic$terrain;module$js$logic$terrain.debugLabel=debugLabel$$module$js$logic$terrain;function TilePair$$module$js$logic$tilepair(a){return a}(function(a){a.of=function(a,c){return 16777216*a+c};a.split=function(a){return[Math.floor(a/16777216),a%16777216]}})(TilePair$$module$js$logic$tilepair||(TilePair$$module$js$logic$tilepair={}));var module$js$logic$tilepair={};module$js$logic$tilepair.TilePair=TilePair$$module$js$logic$tilepair;var WallType$$module$js$logic$walltype;(function(a){a[a.WIND=0]="WIND";a[a.FIRE=1]="FIRE";a[a.WATER=2]="WATER";a[a.THUNDER=3]="THUNDER"})(WallType$$module$js$logic$walltype||(WallType$$module$js$logic$walltype={}));var module$js$logic$walltype={};module$js$logic$walltype.WallType=WallType$$module$js$logic$walltype;class Canvas$$module$js$spoiler$canvas{constructor(a,b,c,d=1){this.rom=a;this._width=c;this._height=b;this.element=document.createElement("div");this.canvas=document.createElement("canvas");this.element.appendChild(this.canvas);this.canvas.width=c;this.canvas.height=b;this.ctx=this.canvas.getContext("2d")||die$$module$js$assert();this._minX=this._minY=Infinity;this._maxX=this._maxY=-Infinity;this.palettes=new Uint32Array(1024);this.layers=seq$$module$js$rom$util(d,()=>new Uint32Array(c*b));this.data=
this.layers[0];for(d=0;256>d;d++)for(let b=0;4>b;b++){const c=COLORS$$module$js$spoiler$canvas[a.palettes[d].color(b)];this.palettes[d<<2|b]=c|4278190080}}useLayer(a){this.data=this.layers[a]||die$$module$js$assert(`Bad layer: ${a}`)}resizeWidth(a,b){const c=new Uint32Array(b*this._height),d=Math.min(b,this._width);for(let e=0;e<this._height;e++)c.subarray(e*b,e+b+d).set(a.subarray(e*this._width,e*this._width+d));return c}resizeHeight(a,b){const c=new Uint32Array(this._width*b);b=this._width*Math.min(b,
this._height);c.subarray(0,b).set(a.subarray(0,b));return c}get width(){return this._width}set width(a){for(let b=0;b<this.layers.length;b++)this.layers[b]=this.resizeWidth(this.layers[b],a);this._width=a;this.canvas.width=a}get height(){return this._height}set height(a){for(let b=0;b<this.layers.length;b++)this.layers[b]=this.resizeHeight(this.layers[b],a);this._height=a;this.canvas.height=a}get minX(){return this._minX}get maxX(){return this._maxX}get minY(){return this._minY}get maxY(){return this._maxY}fill(a){this.data.fill(a)}clear(a){a=
null!=a?this.palettes[a<<2]:0;this._minX=this._minY=Infinity;this._maxX=this._maxY=-Infinity;this.layers[0].fill(a);for(a=1;a<this.layers.length;a++)this.layers[a].fill(0)}toDataUrl(a){return this.canvas.toDataURL("image/png")}render(){let a=this.canvas,b=this.ctx;for(let c=0;c<this.layers.length;c++){c&&(a=document.createElement("canvas"),a.width=this.canvas.width,a.height=this.canvas.height,b=a.getContext("2d")||die$$module$js$assert());const d=new Uint8Array(this.layers[c].buffer),e=b.getImageData(0,
0,this._width,this._height);e.data.set(d);b.putImageData(e,0,0);c&&this.ctx.drawImage(a,0,0)}}rect(a,b,c,d,e){const f=Math.max(0,b);c=Math.min(this._height,a+c);d=Math.min(this._width,b+d);for(a=Math.max(0,a);a<c;a++)for(b=f;b<d;b++)this.data[a*this._width+b]=e}tile(a,b,c,d){if(!(0>b||0>a||b+8>=this._width||a+8>=this._height)){c=this.rom.patterns[c].flip(d<<6);for(let e=0;8>e;e++){let f=c.pixels[8|e]<<1,g=c.pixels[e];for(let c=7;0<=c;c--){const h=f&2|g&1;f>>>=1;g>>>=1;h&&(this.data[(a+e)*this._width+
b+c]=this.palettes[d&1020|h])}}this._minX=Math.min(this._minX,b);this._maxX=Math.max(this._maxX,b+8);this._minY=Math.min(this._minY,a);this._maxY=Math.max(this._maxY,a+8)}}metatile(a,b,c,d,e=0){var f=this.rom.locations[d];d=[...f.tilePatterns];f.animation&&(d[1]=this.rom.tileAnimations[f.animation].pages[e&7]);var g=[...f.tilePalettes,127];e=this.rom.tilesets[(f.tileset&127)>>>2];f=g[e.attrs[c]];for(g=0;2>g;g++)for(let h=0;2>h;h++){const k=e.tiles[g<<1|h][c];this.tile(a+(g<<3),b+(h<<3),d[k&128?1:
0]<<6|k&127,f<<2)}}metasprite(a,b,c,d,e=0,f=0){d=this.rom.locations[d];var g=this.rom.metasprites[c];c=[64,66,...d.spritePatterns];d=[0,1,...d.spritePalettes];let h=!1;null!=g.mirrored&&(g=this.rom.metasprites[g.mirrored],h=!0);if(g&&g.used){f&=g.frameMask;for(let [k,m,l,n]of g.sprites[f]){if(128==k)break;k=signed$$module$js$spoiler$canvas(k);m=signed$$module$js$spoiler$canvas(m);n=n+e&255;f=d[l&3]+176&255;g=c[n>>6]<<6|n&63;h&&(k=-8-k,l^=64);this.tile(a+m,b+k,g,f<<2|l>>6)}}}text(a,b,c,d=18){for(let e=
0;e<c.length;e++)this.tile(a,b+8*e,c.charCodeAt(e)|3840,d<<2)}}
const COLORS$$module$js$spoiler$canvas=[5395026,11796480,10485760,11599933,7602281,91,95,6208,12048,543240,26368,1196544,7153664,0,0,0,12899815,16728064,14421538,16729963,14090399,6818519,6588,21681,27227,35843,43776,2918400,10777088,0,0,0,16316664,16755516,16742785,16735173,16730354,14633471,4681215,46327,57599,58229,259115,7911470,15065624,7895160,0,0,16777215,16773822,16300216,16300248,16758527,16761855,13095423,10148607,8973816,8650717,12122296,16119980,16777136,16308472,0,0];
function signed$$module$js$spoiler$canvas(a){return 128>a?a:a-256}var module$js$spoiler$canvas={};module$js$spoiler$canvas.Canvas=Canvas$$module$js$spoiler$canvas;const DATA$$module$js$spoiler$locationmap=Symbol("[LocationMap data]");
class LocationMap$$module$js$spoiler$locationmap extends Canvas$$module$js$spoiler$canvas{constructor(a,b=0){super(a,1,1,4);this.rom=a;this.flags=new Set;this._maxWidth=Infinity;a=a.locations[b];this.width=256*(a.used?a.width:1);this.height=240*(a.used?a.height:1);this.location=a;a=(a)=>{let b=a.offsetX,c=a.offsetY;for(var f=a.target;f&&f!==this.element;)f=f.parentElement;if(f){f=b>>8;var g=Math.floor(c/240);LocationMap$$module$js$spoiler$locationmap.setData(a,{tile:this.location.id<<16|g<<12|f<<
8|c-240*g>>4<<4|b-256*f>>4,target:this})}};this.element.addEventListener("mousemove",a);this.element.addEventListener("mousedown",a);this.element.addEventListener("mouseup",a);this.element.addEventListener("click",a);this.redraw()}static getData(a){return a[DATA$$module$js$spoiler$locationmap]}static setData(a,b){a[DATA$$module$js$spoiler$locationmap]=b}get id(){return this.location.id}set id(a){this.location=this.rom.locations[a];this.height=240*(this.location.used?this.location.height:1);this.width=
256*(this.location.used?this.location.width:1);this.ensureWidth();this.redraw()}get maxWidth(){return this._maxWidth}set maxWidth(a){this._maxWidth=a;this.ensureWidth()}ensureWidth(){if(this.width<=this._maxWidth)this.element.style.transform="",this.element.style.width="",this.element.style.height="";else{var a=this._maxWidth/this.width,b=50*(1-a);this.element.style.transform=`translate(-${b}%,-${b}%) scale(${a})`;this.element.style.width=`${this.width*a}px`;this.element.style.height=`${this.height*
a}px`}}clearOverlay(){this.useLayer(1);this.fill(0);this.useLayer(3);this.fill(0);this.render()}overlayShade(a){this.useLayer(3);this.fill(a)}overlayArea(a,b,c){for(const d of a){if(d>>>16!==this.location.id)continue;const e=240*(d>>>12&15)+16*(d>>>4&15),f=256*(d>>>8&15)+16*(d&15);null!=c&&(this.useLayer(3),this.rect(e-1,f-1,18,18,0));this.useLayer(1);a.has(module$js$logic$tileid.TileId.add(d,-1,0))||this.rect(e-1,f-1,2,18,b);a.has(module$js$logic$tileid.TileId.add(d,0,-1))||this.rect(e-1,f-1,18,
2,b);a.has(module$js$logic$tileid.TileId.add(d,1,0))||this.rect(e+15,f-1,2,18,b);a.has(module$js$logic$tileid.TileId.add(d,0,1))||this.rect(e-1,f+15,18,2,b)}}redraw(){this.useLayer(0);this.clear(this.location.tilePalettes[0]);for(var a=0;a<this.location.height;a++)for(var b=0;b<this.location.width;b++)this.drawScreen(this.rom.screens[this.location.screens[a][b]|this.location.screenPage],a,b);this.useLayer(2);for(const c of this.location.spawns){a=0;let {x:d,y:e}=c;e-=c.yt&240;let f;if(c.isNpc()){b=
this.rom.npcs[c.id];if(!b||!b.data)continue;d+=8;e+=12;f=2|b.data[3]}else if(c.isChest())f=170;else if(c.isMonster()){b=this.rom.objects[c.monsterId];if(!b)continue;f=b.metasprite;41==b.action?f=104:[42,94].includes(b.action)&&(f=2|b.data[31])}c.patternBank&&(a+=64);null!=f&&this.metasprite(e,d,f,this.location.id,a)}this.render()}drawScreen(a,b,c){var d;const e=240*b,f=256*c,g=this.rom.tileset(this.location.tileset);let h,k=!1;for(const a of this.location.flags)if(a.xs===c&&a.ys===b){h=a.flag;if(null===
(d=this.rom.flags[h])||void 0===d?0:d.logic.assumeTrue)k=!0;break}for(b=0;240>b;b+=16)for(c=0;16>c;c++)d=a.tiles[b|c],32>d&&(this.flags.has(h)||k)&&(d=g.alternates[d]),this.metatile(e+b,f+16*c,d,this.location.id,0)}}var module$js$spoiler$locationmap={};module$js$spoiler$locationmap.LocationMap=LocationMap$$module$js$spoiler$locationmap;class Area$$module$js$spoiler$area{constructor(a,b){this.rom=a;this.world=b;this.element=document.createElement("div");this.element.addEventListener("click",(a)=>this.click(a));this.element.addEventListener("mousemove",(a)=>this.move(a));this.renderArea(0)}click(a){if(a=LocationMap$$module$js$spoiler$locationmap.getData(a))if(a=this.world.tiles.get(a.tile),null!=a){if(a.area===this.area){const b=null!=a.exit?this.world.tiles.get(a.exit):null;b&&b.area!==this.area&&(a=b)}a.area&&a.area!==this.area&&
this.renderArea(a.area.id)}}move(a){if(a=LocationMap$$module$js$spoiler$locationmap.getData(a)){var b=this.world.tiles.get(a.tile);null!=b&&(b=null!=b.exit&&!this.area.tiles.has(b.exit),a.target.element.style.cursor=b?"pointer":"default")}}clear(){for(;this.element.childNodes.length;)this.element.childNodes[0].remove()}renderArea(a){var b;this.clear();const c=document.createElement("select");c.appendChild(document.createElement("option"));c.children[0].textContent="Select location";for(const a of this.rom.locations){if(!a.used)continue;
const d=null===(b=this.world.locations[a.id])||void 0===b?void 0:b.areas[Symbol.iterator]().next().value;if(null==d)continue;const f=document.createElement("option");f.textContent=`${hex$$module$js$rom$util(a.id)} ${a.name}`;f.value=String(d.id);c.appendChild(f)}c.addEventListener("change",()=>{this.renderArea(Number(c.value))});this.element.appendChild(c);this.area=this.world.areas[a];b=document.createElement("pre");b.textContent=`Area ${a}
Locations: ${this.area.locations.size}
Tiles: ${this.area.tiles.size}
Terrain: ${module$js$logic$terrain.Terrain.label(this.area.terrain,this.rom)}
Checks:
  ${[...new Set(this.area.checks.map(([a,b])=>`${a.debug}: ${debugLabel$$module$js$logic$terrain(b,this.rom)}`))].join("\n  ")}
Routes:
  ${debugLabel$$module$js$logic$terrain(this.area.routes,this.rom).split(" | ").join("\n  ").replace(/[()]/g,"")}`;this.element.appendChild(b);for(const c of this.area.locations)a=this.rom.locations[c],b=document.createElement("h2"),b.textContent=a.name,this.element.appendChild(b),this.element.appendChild(this.makeLocation(this.area,a))}makeLocation(a,b){const c=new LocationMap$$module$js$spoiler$locationmap(this.rom,b.id);c.maxWidth=574;c.overlayShade(1426063360);for(const d of this.world.locations[b.id].areas)d!==
a&&c.overlayArea(d.tiles,4294901760);c.overlayArea(a.tiles,4278255615,0);c.render();return c.element}}var module$js$spoiler$area={};module$js$spoiler$area.Area=Area$$module$js$spoiler$area;class Entity$$module$js$rom$entity{constructor(a,b){this.rom=a;this.id=b}write(){return[]}toString(){return`${this.constructor.name} $${hex$$module$js$rom$util(this.id)}`}}class EntityArray$$module$js$rom$entity extends Array{static get [Symbol.species](){return Array}}var module$js$rom$entity={};module$js$rom$entity.Entity=Entity$$module$js$rom$entity;module$js$rom$entity.EntityArray=EntityArray$$module$js$rom$entity;class Shops$$module$js$rom$shop extends EntityArray$$module$js$rom$entity{constructor(a){super(44);this.rom=a;this.innBasePrice=20;this.toolShopScaling=Array(48).fill(0);this.armorShopScaling=Array(48).fill(0);for(let b=0;44>b;b++)this[b]=new Shop$$module$js$rom$shop(a,b);if(null!=a.shopDataTablesAddress){const b=a.shopDataTablesAddress+21*a.shopCount+2*a.scalingLevels;this.basePrices=seq$$module$js$rom$util(73,(c)=>13<=c&&39>c?readLittleEndian$$module$js$rom$util(a.prg,b+2*(c-13)):0)}else this.basePrices=
seq$$module$js$rom$util(73,(b)=>2*readLittleEndian$$module$js$rom$util(a.prg,VANILLA_PAWN_PRICE_TABLE$$module$js$rom$shop+2*b))}armorShops(){return seq$$module$js$rom$util(11,(a)=>this[4*a])}toolShops(){return seq$$module$js$rom$util(11,(a)=>this[4*a+1])}inns(){return seq$$module$js$rom$util(11,(a)=>this[4*a+2])}pawnShops(){return seq$$module$js$rom$util(11,(a)=>this[4*a+3])}write(){var a,b,c,d,e,f,g,h;const k=this.rom.assembler();if(this.rescale){var m=function(a){k.export(a);k.label(a)};k.segment("10",
"fe","ff");k.org(40356);m("ShopData");m("ArmorShopIdTable");for(const b of this.armorShops())for(var l=0;4>l;l++)k.byte((a=b.contents[l],null!==a&&void 0!==a?a:255));m("ToolShopIdTable");for(const a of this.toolShops())for(l=0;4>l;l++)k.byte((b=a.contents[l],null!==b&&void 0!==b?b:255));m("ArmorShopPriceTable");for(const a of this.armorShops())for(l=0;4>l;l++)k.byte(Math.round(32*(c=a.prices[l],null!==c&&void 0!==c?c:0)));m("ToolShopPriceTable");for(const a of this.toolShops())for(c=0;4>c;c++)k.byte(Math.round(32*
(d=a.prices[c],null!==d&&void 0!==d?d:0)));m("InnPrices");for(const a of this.inns())k.byte(Math.round(32*(e=a.prices[0],null!==e&&void 0!==e?e:0)));m("ShopLocations");for(const a of this)k.byte(a.location);m("ToolShopScaling");k.byte(...this.toolShopScaling);m("ArmorShopScaling");k.byte(...this.armorShopScaling);m("BasePrices");k.word(...this.basePrices.slice(13,39).map((a)=>null!==a&&void 0!==a?a:0));m("InnBasePrice");k.word(this.innBasePrice)}else{k.segment("10");k.org(40356);for(const a of this.armorShops())for(d=
0;4>d;d++)k.byte((f=a.contents[d],null!==f&&void 0!==f?f:255));for(const a of this.armorShops())for(d=0;4>d;d++)k.word((g=a.prices[d],null!==g&&void 0!==g?g:0));for(const a of this.toolShops())for(d=0;4>d;d++)k.byte((h=a.contents[d],null!==h&&void 0!==h?h:255));for(l of this.toolShops())for(d=0;4>d;d++)k.word((m=l.prices[d],null!==m&&void 0!==m?m:0))}return[k.module()]}}var ShopType$$module$js$rom$shop;
(function(a){a[a.ARMOR=0]="ARMOR";a[a.TOOL=1]="TOOL";a[a.INN=2]="INN";a[a.PAWN=3]="PAWN"})(ShopType$$module$js$rom$shop||(ShopType$$module$js$rom$shop={}));
const SHOP_TYPES$$module$js$rom$shop=[ShopType$$module$js$rom$shop.ARMOR,ShopType$$module$js$rom$shop.TOOL,ShopType$$module$js$rom$shop.INN,ShopType$$module$js$rom$shop.PAWN],CONTENTS_ADDRESSES$$module$js$rom$shop=[(a,b)=>a?a:VANILLA_ARMOR_SHOP_ITEMS$$module$js$rom$shop,(a,b)=>a?a+4*b:VANILLA_TOOL_SHOP_ITEMS$$module$js$rom$shop,(a,b)=>0,(a,b)=>0],CONTENTS_COUNTS$$module$js$rom$shop=[4,4,0,0],PRICES_ADDRESSES$$module$js$rom$shop=[(a,b)=>a?a+8*b:VANILLA_ARMOR_SHOP_PRICES$$module$js$rom$shop,(a,b)=>
a?a+12*b:VANILLA_TOOL_SHOP_PRICES$$module$js$rom$shop,(a,b)=>a?a+16*b:VANILLA_INN_PRICES$$module$js$rom$shop,(a,b)=>0],PRICES_COUNTS$$module$js$rom$shop=[4,4,1,0];
class Shop$$module$js$rom$shop extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.type=SHOP_TYPES$$module$js$rom$shop[b&3];this.index=b>>>2;if(a.shopDataTablesAddress)this.location=a.prg[a.shopDataTablesAddress+17*a.shopCount+b];else{b=255;for(let d=0;33>d&&255===b;d++){if(a.prg[VANILLA_SHOP_INDICES$$module$js$rom$shop+d]!==this.index)continue;const e=a.prg[VANILLA_SHOP_LOCATIONS$$module$js$rom$shop+d];for(var c of a.locations[e].spawns)if(4===c.type&&a.objects[c.id].data[25]===
32+this.type){b=e;break}}this.location=b}c=a.shopDataTablesAddress?(b)=>a.prg[this.pricesAddress+b]/32:(b)=>readLittleEndian$$module$js$rom$util(a.prg,this.pricesAddress+2*b);this.contents=tuple$$module$js$rom$util(a.prg,this.contentsAddress,CONTENTS_COUNTS$$module$js$rom$shop[this.type]);this.prices=seq$$module$js$rom$util(PRICES_COUNTS$$module$js$rom$shop[this.type],c);this.used=255!==this.location}get contentsAddress(){return CONTENTS_ADDRESSES$$module$js$rom$shop[this.type](this.rom.shopDataTablesAddress,
this.rom.shopCount)+4*this.index}get pricesAddress(){const a=this.rom.shopDataTablesAddress;return PRICES_ADDRESSES$$module$js$rom$shop[this.type](a,this.rom.shopCount)+(a?1:2)*PRICES_COUNTS$$module$js$rom$shop[this.type]*this.index}updateShopkeeper(){throw Error("not implemented");}}
const VANILLA_SHOP_LOCATIONS$$module$js$rom$shop=139092,VANILLA_SHOP_INDICES$$module$js$rom$shop=139125,VANILLA_ARMOR_SHOP_ITEMS$$module$js$rom$shop=138660,VANILLA_ARMOR_SHOP_PRICES$$module$js$rom$shop=138704,VANILLA_TOOL_SHOP_ITEMS$$module$js$rom$shop=138792,VANILLA_TOOL_SHOP_PRICES$$module$js$rom$shop=138836,VANILLA_INN_PRICES$$module$js$rom$shop=138924,VANILLA_PAWN_PRICE_TABLE$$module$js$rom$shop=138946;var module$js$rom$shop={};module$js$rom$shop.Shops=Shops$$module$js$rom$shop;
module$js$rom$shop.ShopType=ShopType$$module$js$rom$shop;module$js$rom$shop.Shop=Shop$$module$js$rom$shop;class UnionFind$$module$js$unionfind{constructor(){this.data=new Map;this.sizes=new Map}find(a){if(a!==a)throw"nan";this.data.has(a)||(this.data.set(a,a),this.sizes.set(a,1));let b;for(;!Object.is(b=this.data.get(a),a);)this.data.set(a,a=this.data.get(b));return a}union(a){this.find(a[0]);for(let b=1;b<a.length;b++){if(a[b]!==a[b])throw"nan";this.unionInternal(a[0],a[b])}}unionInternal(a,b){a=this.find(a);b=this.find(b);if(a!==b){var c=this.sizes.get(a),d=this.sizes.get(b);c<d?(this.sizes.set(b,c+
d),this.data.set(a,b)):(this.sizes.set(a,c+d),this.data.set(b,a))}}sets(){const a=new Map;for(const b of this.data.keys()){const c=this.find(b);let d=a.get(c);d||a.set(c,d=new Set);d.add(b)}return[...a.values()]}map(){const a=new DefaultMap$$module$js$util(()=>new Set);for(const b of this.data.keys()){let c=a.get(this.find(b));a.set(b,c);c.add(b)}return a}roots(){const a=new Set;for(const b of this.data.keys())a.add(this.find(b));return[...a]}}var module$js$unionfind={};
module$js$unionfind.UnionFind=UnionFind$$module$js$unionfind;class World$$module$js$logic$world{constructor(a,b,c=!1){this.rom=a;this.flagset=b;this.tracker=c;this.terrainFactory=new Terrains$$module$js$logic$terrain(this.rom);this.terrains=new Map;this.checks=new DefaultMap$$module$js$util(()=>new Set);this.slots=new Map;this.items=new Map;this.itemUses=new DefaultMap$$module$js$util(()=>[]);this.exits=new Map;this.exitSet=new Set;this.seamlessExits=new Set;this.tiles=new UnionFind$$module$js$unionfind;this.neighbors=new DefaultMap$$module$js$util(()=>0);
this.routes=new DefaultMap$$module$js$util(()=>new module$js$logic$requirement.Requirement.Builder);this.routeEdges=new DefaultMap$$module$js$util(()=>new LabeledSet$$module$js$util);this.requirementMap=new DefaultMap$$module$js$util((a)=>new module$js$logic$requirement.Requirement.Builder(a));for(const b of a.items)for(const a of b.itemUseData)"expect"===a.kind?this.itemUses.get(a.want).push([b,a]):"location"===a.kind&&this.itemUses.get(~a.want).push([b,a]);this.aliases=new Map([[a.flags.ChangeAkahana,
a.flags.Change],[a.flags.ChangeSoldier,a.flags.Change],[a.flags.ChangeStom,a.flags.Change],[a.flags.ChangeWoman,a.flags.Change],[a.flags.ParalyzedKensuInDanceHall,a.flags.Paralysis],[a.flags.ParalyzedKensuInTavern,a.flags.Paralysis]]);for(const b of a.locations)this.processLocation(b);this.addExtraChecks();this.unionNeighbors();this.recordExits();this.buildNeighbors();this.addAllRoutes();this.consolidateChecks();this.buildRequirementMap()}addExtraChecks(){const {locations:{Leaf_ToolShop:a,MezameShrine:b,
Oak:c,Shyron_ToolShop:d},flags:{AbleToRideDolphin:e,BallOfFire:f,BallOfThunder:g,BallOfWater:h,BallOfWind:k,Barrier:m,BlizzardBracelet:l,BowOfMoon:n,BowOfSun:p,BreakStone:q,BreakIce:v,BreakIron:z,BrokenStatue:w,BuyHealing:A,BuyWarp:D,ClimbWaterfall:O,ClimbSlope8:t,ClimbSlope9:r,CurrentlyRidingDolphin:W,Flight:G,FlameBracelet:Na,FormBridge:jb,GasMask:ua,GlowingLamp:va,InjuredDolphin:wa,LeadingChild:Wa,LeatherBoots:Xa,Money:X,OpenedCrypt:kb,RabbitBoots:T,Refresh:P,RepairedStatue:I,RescuedChild:M,ShellFlute:N,
ShieldRing:ka,ShootingStatue:aa,StormBracelet:xa,Sword:Y,SwordOfFire:la,SwordOfThunder:ma,SwordOfWater:na,SwordOfWind:ea,TornadoBracelet:Ca,TravelSwamp:Oa,WildWarp:Da},items:{MedicalHerb:u,WarpBoots:rb}}=this.rom,E=this.entrance(b);var U=this.entrance(c);this.addCheck([E],and$$module$js$logic$world(n,p),[kb.id]);this.addCheck([E],and$$module$js$logic$world(e,N),[W.id]);this.addCheck([U],and$$module$js$logic$world(Wa),[M.id]);this.addItemCheck([E],and$$module$js$logic$world(va,w),I.id,{lossy:!0,unique:!0});
for(var Q of this.rom.shops)if(Q.location!==a.id&&Q.location!==d.id&&Q.used&&Q.type===module$js$rom$shop.ShopType.TOOL){U=[module$js$logic$tileid.TileId(Q.location<<16|136)];for(var oa of Q.contents)oa===u.id?this.addCheck(U,X.r,[A.id]):oa===rb.id&&this.addCheck(U,X.r,[D.id])}Q=ea.r;oa=la.r;U=na.r;let Pa=ma.r;if(!this.flagset.orbsOptional()){var Ea=or$$module$js$logic$world(k,Ca);const a=or$$module$js$logic$world(f,Na),b=or$$module$js$logic$world(h,l),c=or$$module$js$logic$world(g,xa);Q=module$js$logic$requirement.Requirement.meet(Q,
Ea);oa=module$js$logic$requirement.Requirement.meet(oa,a);U=module$js$logic$requirement.Requirement.meet(U,b);Pa=module$js$logic$requirement.Requirement.meet(Pa,c);if(this.flagset.assumeSwordChargeGlitch()){Ea=function(b){return a.map((a)=>a[0]===b.c?a:[b.c,...a])};const a=module$js$logic$requirement.Requirement.or(Q,oa,U,Pa);Q=Ea(ea);oa=Ea(la);U=Ea(na);Pa=Ea(ma)}}this.addCheck([E],Q,[q.id]);this.addCheck([E],oa,[v.id]);this.addCheck([E],U,[jb.id]);this.addCheck([E],Pa,[z.id]);this.addCheck([E],or$$module$js$logic$world(ea,
la,na,ma),[Y.id,X.id]);this.addCheck([E],G.r,[O.id]);this.addCheck([E],or$$module$js$logic$world(G,T),[t.id]);this.addCheck([E],or$$module$js$logic$world(G,T),[r.id]);this.addCheck([E],m.r,[aa.id]);this.addCheck([E],ua.r,[Oa.id]);this.flagset.leatherBootsGiveSpeed()&&this.addCheck([E],Xa.r,[t.id]);this.flagset.assumeGhettoFlight()&&this.addCheck([E],and$$module$js$logic$world(W,T),[O.id]);this.flagset.fogLampNotRequired()&&(Q=this.flagset.requireHealedDolphinToRide(),this.addCheck([E],Q?wa.r:[[]],
[e.id]));this.flagset.guaranteeBarrier()||this.addCheck([E],[[X.c,A.c],[X.c,ka.c],[X.c,P.c]],[aa.id]);this.flagset.assumeFlightStatueSkip()||this.addCheck([E],[[X.c,G.c]],[aa.id]);this.flagset.guaranteeGasMask()||this.addCheck([E],[[X.c,A.c],[X.c,P.c]],[Oa.id]);this.flagset.assumeWildWarp()&&this.addCheck([E],module$js$logic$requirement.Requirement.OPEN,[Da.id])}addExtraRoutes(){var a;const {flags:{BuyWarp:b,SwordOfThunder:c,Teleport:d,WildWarp:e},locations:{MezameShrine:f}}=this.rom;this.addRoute(new Route$$module$js$logic$requirement(this.entrance(f),
[]));if(this.flagset.teleportOnThunderSword()){var g=this.rom.townWarp.thunderSwordWarp;this.addRoute(new Route$$module$js$logic$requirement(this.entrance(g[0],g[1]&31),[c.c,b.c]));this.addRoute(new Route$$module$js$logic$requirement(this.entrance(g[0],g[1]&31),[c.c,d.c]))}if(this.flagset.assumeWildWarp())for(const b of this.rom.wildWarp.locations){if(b===this.rom.locations.UndergroundChannel.id)continue;g=this.entrance(b);const c=(a=this.terrains.get(g),null!==a&&void 0!==a?a:die$$module$js$assert("bad entrance"));
for(const a of c.enter)this.addRoute(new Route$$module$js$logic$requirement(g,[e.c,...a]))}}consolidateChecks(){for(const [a,b]of this.checks){const c=this.tiles.find(a);if(a!==c){for(const a of b)this.checks.get(c).add(a);this.checks.delete(a)}}}buildRequirementMap(){for(const [c,d]of this.checks)for(const {checks:e,requirement:f}of d)for(var a of e){var b=this.requirementMap.get(a);for(const a of f)for(const d of this.routes.get(c)||[])b.addList([...a,...d])}if(DEBUG$$module$js$logic$world){a=[];
for(const [c,d]of this.requirementMap){b=(a)=>this.rom.flags[a].name;for(const e of d)a.push(`${b(c)}: ${[...e].map(b).join(" & ")}\n`)}a.sort((a,b)=>a<b?-1:a>b?1:0);console.log(a.join(""))}}getLocationList(a="Crystalis"){const b=DEBUG$$module$js$logic$world?(a)=>a.debug:(a)=>a.name;return{worldName:a,requirements:this.requirementMap,items:this.items,slots:this.slots,checkName:(a)=>b(this.rom.flags[a]),prefill:(a)=>{const {Crystalis:b,MesiaInTower:c,LeafElder:f}=this.rom.flags,g=new Map([[c.id,b.id]]);
this.flagset.guaranteeSword()&&g.set(f.id,512|a.nextInt(4));return g}}}processLocation(a){a.used&&(this.processLocationTiles(a),this.processLocationSpawns(a),this.processLocationItemUses(a))}unionNeighbors(){for(const [b,c]of this.terrains){var a=module$js$logic$tileid.TileId.add(b,0,1);this.terrains.get(a)===c&&this.tiles.union([b,a]);a=module$js$logic$tileid.TileId.add(b,1,0);this.terrains.get(a)===c&&this.tiles.union([b,a])}}addAllRoutes(){this.addExtraRoutes();for(const [b,c]of this.neighbors){const [d,
e]=module$js$logic$tilepair.TilePair.split(b);var a=this.terrains.get(d);const f=this.terrains.get(e);if(!a||!f)throw Error(`missing terrain ${hex$$module$js$rom$util(a?d:e)}`);for(const [b,h]of a.exit)if(b&c)for(const a of h)for(const b of f.enter)this.addRoute(new Route$$module$js$logic$requirement(e,[...a,...b]),d)}"object"===typeof document&&(a=document.getElementById("debug"))&&a.appendChild((new Area$$module$js$spoiler$area(this.rom,this.getWorldData())).element)}getWorldData(){var a=0;const b=
new DefaultMap$$module$js$util(()=>({})),c=seq$$module$js$rom$util(256,()=>({areas:new Set,tiles:new Set})),d=[];for(var e of this.tiles.sets()){var f=this.tiles.find(module$js$util.iters.first(e)),g=this.terrains.get(f);if(g&&(f=this.routes.has(f)?module$js$logic$requirement.Requirement.freeze(this.routes.get(f)):[],f.length)){g={checks:[],id:a++,locations:new Set,routes:f,terrain:g,tiles:new Set};d.push(g);for(const a of e)f=a>>>16,g.locations.add(f),g.tiles.add(a),c[f].areas.add(g),c[f].tiles.add(a),
b.get(a).area=g}}for(const [a,c]of this.exits)b.has(a)&&(b.get(a).exit=c);for(const [c,d]of this.checks)if(a=b.get(c).area)for(const {checks:b,requirement:c}of d)for(const d of b)e=this.rom.flags[d]||die$$module$js$assert(),a.checks.push([e,c]);return{tiles:b,areas:d,locations:c}}addRoute(a,b){if(null!=b){this.routeEdges.get(b).add(a);for(var c of this.routes.get(b))this.addRoute(new Route$$module$js$logic$requirement(a.target,[...c,...a.deps]))}else for(b=new LabeledSet$$module$js$util,c=new LabeledSet$$module$js$util,
b.add(a),a=b[Symbol.iterator]();;){const {value:d,done:e}=a.next();if(e)break;c.add(d);b.delete(d);const f=new LabeledSet$$module$js$util,g=d.target;if(this.routes.get(g).addRoute(d))for(const a of this.routeEdges.get(g))f.add(new Route$$module$js$logic$requirement(a.target,[...d.deps,...a.deps]));for(const a of f)c.has(a)||(b.delete(a),b.add(a))}}recordExits(){for(const [a,b]of this.exits)this.exitSet.add(module$js$logic$tilepair.TilePair.of(this.tiles.find(a),this.tiles.find(b)));for(const a of this.exitSet){const [b,
c]=module$js$logic$tilepair.TilePair.split(a);if(this.terrains.get(b)!==this.terrains.get(c))continue;const d=module$js$logic$tilepair.TilePair.of(c,b);this.exitSet.has(d)&&(this.tiles.union([b,c]),this.exitSet.delete(a),this.exitSet.delete(d))}}buildNeighbors(){for(const [c,d]of this.terrains)if(d){var a=module$js$logic$tileid.TileId.add(c,1,0),b=this.terrains.get(a);b&&b!==d&&this.handleAdjacentNeighbors(c,a,module$js$logic$dir.Dir.North);a=module$js$logic$tileid.TileId.add(c,0,1);(b=this.terrains.get(a))&&
b!==d&&this.handleAdjacentNeighbors(c,a,module$js$logic$dir.Dir.West)}for(const b of this.exitSet){const [c,e]=module$js$logic$tilepair.TilePair.split(b);this.terrains.has(c)&&this.terrains.has(e)&&(a=module$js$logic$tilepair.TilePair.of(this.tiles.find(c),this.tiles.find(e)),this.neighbors.set(a,this.neighbors.get(a)|1))}}handleAdjacentNeighbors(a,b,c){var d=this.tiles.find(a);const e=this.tiles.find(b);this.seamlessExits.has(b)||(b=module$js$logic$tilepair.TilePair.of(e,d),this.neighbors.set(b,
this.neighbors.get(b)|1<<c));this.seamlessExits.has(a)||(a=c^2,d=module$js$logic$tilepair.TilePair.of(d,e),this.neighbors.set(d,this.neighbors.get(d)|1<<a))}processLocationTiles(a){var b,c,d,e=new Map;const f=new Set,g=88===(a.id&248);for(var h of a.spawns)h.isWall()?e.set(module$js$logic$screenid.ScreenId.from(a,h),h.id&3):h.isMonster()&&63===h.id&&f.add(module$js$logic$screenid.ScreenId.from(a,h));const k=a.screenPage;h=this.rom.tileset(a.tileset);const m=this.rom.tileEffects[a.tileEffects-179],
l=(b)=>m.effects[this.rom.screens[a.screens[(b&61440)>>>12][(b&3840)>>>8]|k].tiles[b&255]],n=(b,c,d)=>{b&=module$js$logic$terrain.Terrain.BITS;26===a.id&&(b|=module$js$logic$terrain.Terrain.SWAMP);if(96===a.id||104===a.id)b|=module$js$logic$terrain.Terrain.DOLPHIN;100===a.id&&4144>(c&61680)&&(b|=module$js$logic$terrain.Terrain.DOLPHIN);d&&(b|=module$js$logic$terrain.Terrain.BARRIER);if(!(b&module$js$logic$terrain.Terrain.DOLPHIN)&&b&module$js$logic$terrain.Terrain.SLOPE){for(d=0;l(c)&module$js$logic$terrain.Terrain.SLOPE;)c=
module$js$logic$tileid.TileId.add(c,1,0),d++;6>d?b&=~module$js$logic$terrain.Terrain.SLOPE:9>d?b|=module$js$logic$terrain.Terrain.SLOPE8:10>d&&(b|=module$js$logic$terrain.Terrain.SLOPE9)}return this.terrainFactory.tile(b)};for(let l=0,w=a.height;l<w;l++){const w=a.screens[l],z=a.id<<8|l<<4;for(let l=0,A=a.width;l<A;l++){const A=this.rom.screens[w[l]|k],t=module$js$logic$screenid.ScreenId(z|l),G=f.has(t),Na=t&255;var p=e.get(t);p=g?this.rom.flags.AlwaysTrue.id:null!=p?this.wallCapability(p):null===
(b=a.flags.find((a)=>a.yx===Na))||void 0===b?void 0:b.flag;const D=(d=null===(c=this.rom.flags[p])||void 0===c?void 0:c.logic,null!==d&&void 0!==d?d:{});for(let b=0;240>b;b++){const c=module$js$logic$tileid.TileId(t<<8|b);var q=A.tiles[b];D.assumeTrue&&32>q&&(q=h.alternates[q]);var v=a.isShop()?0:m.effects[q]&38;v=n(v,c,G);32>q&&h.alternates[q]!==q&&null!=p&&!D.assumeTrue&&!D.assumeFalse&&(q=n(m.effects[h.alternates[q]],c,G))&&(v=this.terrainFactory.flag(v,D.track?p:-1,q));v&&this.terrains.set(c,
v)}}}for(const f of a.exits){const {dest:g,entrance:h}=f;b=module$js$logic$tileid.TileId.from(a,f);f.isSeamless()?(c=module$js$logic$tileid.TileId(b&65535|g<<16),d=module$js$logic$tileid.TileId.from(a,f),this.seamlessExits.add(d),(e=this.terrains.get(d))&&this.terrains.set(d,this.terrainFactory.seamless(e))):c=this.entrance(this.rom.locations[g],h&31);this.exits.set(b,c)}}processLocationSpawns(a){for(const b of a.spawns)b.isTrigger()?this.processTrigger(a,b):b.isNpc()?this.processNpc(a,b):b.isBoss()?
this.processBoss(a,b):b.isChest()?this.processChest(a,b):b.isMonster()?this.processMonster(a,b):3===b.type&&224===b.id&&this.processKeyUse(module$js$logic$hitbox.Hitbox.screen(module$js$logic$tileid.TileId.from(a,b)),this.rom.flags.UsedWindmillKey.r)}processTrigger(a,b){var c;const d=this.rom.trigger(b.id);if(!d)throw Error(`Missing trigger ${b.id.toString(16)}`);const e=this.filterRequirements(d.conditions);let f=this.filterAntiRequirements(d.conditions);const g=module$js$logic$tileid.TileId.from(a,
b);let h=module$js$logic$hitbox.Hitbox.trigger(a,b);const k=[];for(const a of d.flags){const b=this.flag(a);(null===(c=b)||void 0===c?0:c.logic.track)&&k.push(b.id)}k.length&&this.addCheck(h,e,k);switch(d.message.action){case 25:134!==d.id||this.flagset.assumeRabbitSkip()?186!==d.id||this.flagset.assumeTeleportSkip()||this.flagset.disableTeleportSkip()||(h=module$js$logic$hitbox.Hitbox.atLocation(h,this.rom.locations.CordelPlainEast,this.rom.locations.CordelPlainWest)):h=module$js$logic$hitbox.Hitbox.adjust(h,
[0,-1],[0,1]);this.addTerrain(h,this.terrainFactory.statue(f));break;case 29:this.addBossCheck(h,this.rom.bosses.Mado1,e);break;case 8:case 11:case 12:case 13:case 15:this.addItemGrantChecks(h,e,d.id);break;case 24:c=this.flagset.chargeShotsOnly()?module$js$logic$requirement.Requirement.meet(e,and$$module$js$logic$world(this.rom.flags.WarpBoots)):e;this.addItemCheck(h,c,this.rom.flags.StomFightReward.id,{lossy:!0,unique:!0});break;case 30:this.addItemCheck(h,e,this.rom.flags.MesiaInTower.id,{lossy:!0,
unique:!0});break;case 31:this.handleBoat(g,a,e);break;case 27:a===this.rom.locations.PortoaPalace_Entrance&&(h=module$js$logic$hitbox.Hitbox.adjust(h,[-2,0]),f=this.rom.flags.TalkedToFortuneTeller.r),this.handleMovingGuard(h,a,f)}for(const [c,d]of this.itemUses.get(b.type<<8|b.id))this.processItemUse([module$js$logic$tileid.TileId.from(a,b)],module$js$logic$requirement.Requirement.OPEN,c,d)}processNpc(a,b){var c,d,e,f,g,h;const k=this.rom.npcs[b.id];if(!k||!k.used)throw Error(`Unknown npc: ${hex$$module$js$rom$util(b.id)}`);
const m=k.spawnConditions.get(a.id)||[];var l=this.filterRequirements(m),n=module$js$logic$tileid.TileId.from(a,b);n=[this.terrains.has(n)?n:(c=this.walkableNeighbor(n),null!==c&&void 0!==c?c:n)];for(const [a,c]of this.itemUses.get(b.type<<8|b.id))this.processItemUse(n,l,a,c);k===this.rom.npcs.SaberaDisguisedAsMesia&&this.addBossCheck(n,this.rom.bosses.Sabera1,l);k.data[2]&4&&!this.flagset.assumeStatueGlitch()&&(b=this.filterAntiRequirements(m),k===this.rom.npcs.Rage?(n=module$js$logic$hitbox.Hitbox.adjust(n,
[2,-1],[2,0],[2,1],[2,2]),n=module$js$logic$hitbox.Hitbox.adjust(n,[0,-6],[0,-2],[0,2],[0,6]),this.flagset.assumeRageSkip()&&(b=void 0)):k===this.rom.npcs.PortoaThroneRoomBackDoorGuard&&(b=or$$module$js$logic$world(this.rom.flags.MesiaRecording,this.rom.flags.Paralysis)),b&&this.addTerrain(n,this.terrainFactory.statue(b)));k===this.rom.npcs.FortuneTeller&&(n=module$js$logic$hitbox.Hitbox.adjust(n,[0,0],[2,0]));if(!module$js$logic$requirement.Requirement.isClosed(l)){[[...l]]=l;for(const a of k.globalDialogs)b=
this.flag(~a.condition),null!==(d=b)&&void 0!==d&&d.logic.track&&l.push(b.id);a=(f=(e=k.localDialogs.get(a.id),null!==e&&void 0!==e?e:k.localDialogs.get(-1)),null!==f&&void 0!==f?f:[]);for(const b of a)e=[...l],f=this.flag(b.condition),(null===(g=f)||void 0===g?0:g.logic.track)&&e.push(f.id),this.processDialog(n,k,e,b),e=this.flag(~b.condition),(null===(h=e)||void 0===h?0:h.logic.track)&&l.push(e.id)}}processDialog(a,b,c,d){this.addCheckFromFlags(a,[c],d.flags);const e={lossy:!0,unique:!0};switch(d.message.action){case 8:this.processKeyUse(a,
[c]);break;case 20:this.addItemCheck(a,[c],this.rom.flags.SlimedKensu.id,e);break;case 16:this.addItemCheck(a,[c],this.rom.flags.AsinaInBackRoom.id,e);break;case 17:this.addItemCheck(a,[c],256|b.data[1],e);break;case 3:case 10:this.addItemCheck(a,[c],256|b.data[0],e);break;case 9:b=b.data[1];255!==b&&this.addItemCheck(a,[c],256|b,e);break;case 25:this.addItemCheck(a,[c],this.rom.flags.AkahanaFluteOfLimeTradein.id,e);break;case 26:this.addItemCheck(a,[c],this.rom.flags.Rage.id,e)}}processLocationItemUses(a){for(const [b,
c]of this.itemUses.get(~a.id))this.processItemUse([this.entrance(a)],module$js$logic$requirement.Requirement.OPEN,b,c)}handleMovingGuard(a,b,c){if(!this.flagset.assumeStatueGlitch()){var d=[];for(const a of b.spawns.slice(0,2))if(a.isNpc()&&this.rom.npcs[a.id].isParalyzable()){d.push([this.rom.flags.Paralysis.id]);break}this.addTerrain(a,this.terrainFactory.statue([...c,...d].map(spread$$module$js$util)))}}handleBoat(a,b,c){const d=this.walkableNeighbor(a);if(null==d)throw Error("Could not find walkable neighbor.");
const e=a>>8&240|a>>4&15;a=a>>4&240|a&15;var f;for(const c of b.exits)c.yt===e&&c.xt<a&&(f=c);if(!f)throw Error("Could not find boat exit");b=this.rom.locations[f.dest];if(!b)throw Error("Bad destination");for(b=module$js$logic$tileid.TileId.from(b,b.entrances[f.entrance]);;)if(b=module$js$logic$tileid.TileId.add(b,0,-1),f=this.walkableNeighbor(b),null!=f){c={enter:module$js$logic$requirement.Requirement.freeze(c),exit:[[15,module$js$logic$requirement.Requirement.OPEN]]};this.addTerrain([d],c);this.exits.set(d,
f);this.exitSet.add(module$js$logic$tilepair.TilePair.of(d,f));break}}addItemGrantChecks(a,b,c){const d=this.itemGrant(c),e=256|d;if(null==d)throw Error(`missing item grant for ${c.toString(16)}`);this.addItemCheck(a,b,e,{lossy:!0,unique:!0,preventLoss:128<=c})}addTerrain(a,b){for(const c of a)a=this.terrains.get(c),null!=a&&this.terrains.set(c,this.terrainFactory.meet(a,b))}addCheck(a,b,c){if(!module$js$logic$requirement.Requirement.isClosed(b)){b={requirement:module$js$logic$requirement.Requirement.freeze(b),
checks:c};for(const c of a)this.terrains.has(c)&&this.checks.get(c).add(b)}}addItemCheck(a,b,c,d){this.addCheck(a,b,[c]);this.slots.set(c,d);a=this.rom.itemGets[c&255];b=this.rom.items[a.itemId];c=null===b||void 0===b?void 0:b.unique;d=a.isLosable();const e=c||b===this.rom.items.OpelStatue;let f=1;b===this.rom.items.SwordOfWind&&(f=5);b===this.rom.items.SwordOfFire&&(f=5);b===this.rom.items.SwordOfWater&&(f=10);b===this.rom.items.SwordOfThunder&&(f=15);b===this.rom.items.Flight&&(f=15);this.items.set(512|
a.id,{unique:c,losable:d,preventLoss:e,weight:f})}addCheckFromFlags(a,b,c){var d;const e=[];for(const a of c)c=this.flag(a),(null===(d=c)||void 0===d?0:d.logic.track)&&e.push(c.id);e.length&&this.addCheck(a,b,e)}walkableNeighbor(a){if(this.isWalkable(a))return a;for(let b of[-1,1]){const c=module$js$logic$tileid.TileId.add(a,b,0),d=module$js$logic$tileid.TileId.add(a,0,b);if(this.isWalkable(c))return c;if(this.isWalkable(d))return d}}isWalkable(a){return!(this.getEffects(a)&module$js$logic$terrain.Terrain.BITS)}ensurePassable(a){var b;
return this.isWalkable(a)?a:(b=this.walkableNeighbor(a),null!==b&&void 0!==b?b:a)}getEffects(a){const b=this.rom.locations[a>>>16];return this.rom.tileEffects[b.tileEffects-179].effects[this.rom.screens[b.screens[(a&61440)>>>12][(a&3840)>>>8]|b.screenPage].tiles[a&255]]}processBoss(a,b){if(201!==b.id&&202!==b.id){var c=195===b.id?this.rom.bosses.Rage:this.rom.bosses.fromLocation(a.id);b=module$js$logic$tileid.TileId.from(a,b);if(!c||!c.flag)throw Error(`Bad boss at ${a.name}`);var d=b&-256;a=this.terrainFactory.boss(c.flag.id);
b=seq$$module$js$rom$util(240,(a)=>d|a);this.addTerrain(b,a);this.addBossCheck(b,c)}}addBossCheck(a,b,c=module$js$logic$requirement.Requirement.OPEN){if(null==b.flag)throw Error(`Expected a flag: ${b}`);c=module$js$logic$requirement.Requirement.meet(c,this.bossRequirements(b));b===this.rom.bosses.Draygon2?this.addCheck(a,c,[b.flag.id]):this.addItemCheck(a,c,b.flag.id,{lossy:!1,unique:!0})}processChest(a,b){if(!(112<=this.rom.slots[b.id])){var c=256|b.id,d=this.rom.items[b.id];d=this.flagset.preserveUniqueChecks()?
!(null===d||void 0===d||!d.unique):!0;this.addItemCheck([module$js$logic$tileid.TileId.from(a,b)],module$js$logic$requirement.Requirement.OPEN,c,{lossy:!1,unique:d})}}processMonster(a,b){}processItemUse(a,b,c,d){a=new Set([...a].map((a)=>{var b;return b=this.walkableNeighbor(a),null!==b&&void 0!==b?b:a}));const e=[[512|c.id]];c.id===this.rom.prg[251061]+28&&e[0].push(this.rom.flags.Change.c);c===this.rom.items.MedicalHerb&&(e[0][0]=this.rom.flags.BuyHealing.c);b=module$js$logic$requirement.Requirement.meet(b,
e);this.addCheckFromFlags(a,b,d.flags);switch(d.message.action){case 16:this.processKeyUse(a,b);break;case 8:case 11:case 12:case 13:case 15:case 28:this.addItemGrantChecks(a,b,c.id);break;case 2:this.addItemCheck(a,b,256|this.rom.npcs[d.want&255].data[1],{lossy:!0,unique:!0})}}processKeyUse(a,b){const [c,...d]=new Set([...a].map((a)=>module$js$logic$screenid.ScreenId.from(a)));if(null==c||d.length)throw Error("Expected one screen");const e=this.rom.locations[c>>>8].flags.find((a)=>a.screen===(c&
255));if(null==e)throw Error("Expected flag on screen");this.addCheck(a,b,[e.flag])}bossRequirements(a){if(a===this.rom.bosses.Rage)return this.tracker&&this.flagset.randomizeTrades()?this.rom.flags.Sword.r:[[this.rom.npcs.Rage.dialog()[0].condition]];var b=a.object;const c=new module$js$logic$requirement.Requirement.Builder;if(this.tracker&&this.flagset.shuffleBossElements()||!this.flagset.guaranteeMatchingSword())c.addAll(this.rom.flags.Sword.r);else{var d=this.flagset.guaranteeSwordMagic()?a.swordLevel:
1;b=this.rom.objects[b];for(let a=0;4>a;a++)b.isVulnerable(a)&&c.addAll(this.swordRequirement(a,d))}d=[];null!=a.npc&&null!=a.location&&(b=a.npc.spawns(this.rom.locations[a.location]),d.push(...this.filterRequirements(b)[0]));a===this.rom.bosses.Insect?d.push(this.rom.flags.InsectFlute.c,this.rom.flags.GasMask.c):a===this.rom.bosses.Draygon2&&d.push(this.rom.flags.BowOfTruth.c);this.flagset.guaranteeRefresh()&&d.push(this.rom.flags.Refresh.c);c.restrict([d]);return module$js$logic$requirement.Requirement.freeze(c)}swordRequirement(a,
b){const c=[this.rom.flags.SwordOfWind,this.rom.flags.SwordOfFire,this.rom.flags.SwordOfWater,this.rom.flags.SwordOfThunder][a];if(1===b)return c.r;a=[[this.rom.flags.BallOfWind,this.rom.flags.TornadoBracelet],[this.rom.flags.BallOfFire,this.rom.flags.FlameBracelet],[this.rom.flags.BallOfWater,this.rom.flags.BlizzardBracelet],[this.rom.flags.BallOfThunder,this.rom.flags.StormBracelet]][a];return 3===b?and$$module$js$logic$world(c,...a):a.map((a)=>[c.c,a.c])}itemGrant(a){for(const [b,c]of this.rom.itemGets.actionGrants)if(b===
a)return c;throw Error(`Could not find item grant ${a.toString(16)}`);}filterRequirements(a){var b,c,d,e;const f=[];for(const g of a)if(0>g){if(null===(c=null===(b=this.flag(~g))||void 0===b?void 0:b.logic)||void 0===c?0:c.assumeTrue)return module$js$logic$requirement.Requirement.CLOSED}else{a=this.flag(g);if(null===(d=a)||void 0===d?0:d.logic.assumeFalse)return module$js$logic$requirement.Requirement.CLOSED;(null===(e=a)||void 0===e?0:e.logic.track)&&f.push(a.id)}return[f]}filterAntiRequirements(a){var b,
c,d,e;const f=[];for(const g of a)if(0<=g){if(null===(c=null===(b=this.flag(~g))||void 0===b?void 0:b.logic)||void 0===c?0:c.assumeFalse)return module$js$logic$requirement.Requirement.OPEN}else{a=this.flag(~g);if(null===(d=a)||void 0===d?0:d.logic.assumeTrue)return module$js$logic$requirement.Requirement.OPEN;(null===(e=a)||void 0===e?0:e.logic.track)&&f.push([a.id])}return f}flag(a){var b;a=this.rom.flags[a];return b=this.aliases.get(a),null!==b&&void 0!==b?b:a}entrance(a,b=0){"number"===typeof a&&
(a=this.rom.locations[a]);return this.tiles.find(module$js$logic$tileid.TileId.from(a,a.entrances[b]))}wallCapability(a){switch(a){case module$js$logic$walltype.WallType.WIND:return this.rom.flags.BreakStone.id;case module$js$logic$walltype.WallType.FIRE:return this.rom.flags.BreakIce.id;case module$js$logic$walltype.WallType.WATER:return this.rom.flags.FormBridge.id;case module$js$logic$walltype.WallType.THUNDER:return this.rom.flags.BreakIron.id;default:throw Error(`bad wall type: ${a}`);}}}
function and$$module$js$logic$world(...a){return[a.map((a)=>a.id)]}function or$$module$js$logic$world(...a){return a.map((a)=>[a.id])}const DEBUG$$module$js$logic$world=!1;var module$js$logic$world={};module$js$logic$world.World=World$$module$js$logic$world;var Path$$module$js$maze$types;(function(a){a.generate=function*(a,c,d){for(;;)yield generatePath$$module$js$maze$types(a,c,d)}})(Path$$module$js$maze$types||(Path$$module$js$maze$types={}));
function*generatePath$$module$js$maze$types(a,b,c){function d(){b--;return 0}function e(){[b,c]=[-c,b-1];return-1}function f(){[b,c]=[c,1-b];return 1}for(;1!==b||0!==c;)0<b&&.5>a.next()?(yield d(),2<b&&.5>a.next()&&(yield d())):a.next()<(0>b?.1:.5)?yield d():0<c?yield f():0>c?yield e():yield.5>a.next()?e():f()}var DirMask$$module$js$maze$types;(function(a){a.of=function(...a){let b=0;for(let c of a)b|=1<<c;return b}})(DirMask$$module$js$maze$types||(DirMask$$module$js$maze$types={}));var Dir$$module$js$maze$types;
(function(a){a.ALL=[0,1,2,3];a.DELTA=[-16,1,16,-1];a.inv=function(a){return a^2};a.edgeMask=function(a){return 15<<(a<<2)};a.shift=function(a){return a<<2};a.turn=function(a,c){return a+c&3};a.allEdge=function*(b,c,d){const e=b?c<<4:d,f=b&1?16:1;for(b=b===a.RIGHT?d-1:b===a.DOWN?c-1<<4:0;b<e;b+=f)yield b};a.UP=0;a.RIGHT=1;a.DOWN=2;a.LEFT=3})(Dir$$module$js$maze$types||(Dir$$module$js$maze$types={}));var Pos$$module$js$maze$types;
(function(a){a.plus=function(a,c){return a+Dir$$module$js$maze$types.DELTA[c]};a.relative=function(a,c,d){const b=(d>>>4)-(a>>>4);a=(d&15)-(a&15);if(0===c)return[-b,a];if(1===c)return[a,b];if(2===c)return[b,-a];if(3===c)return[-a,-b];throw Error(`impossible: ${c}`);}})(Pos$$module$js$maze$types||(Pos$$module$js$maze$types={}));var Scr$$module$js$maze$types;
(function(a){a.edge=function(a,c){return a>>>(c<<2)&15};a.numExits=function(a){let b=0;for(let c=0;4>c;c++)a&15&&b++,a>>>=4;return b};a.fromExits=function(a,c){let b=0;for(let d=0;4>d;d++)b<<=4,a&8&&(b|=c),a=(a&7)<<1;return b}})(Scr$$module$js$maze$types||(Scr$$module$js$maze$types={}));var module$js$maze$types={};module$js$maze$types.Path=Path$$module$js$maze$types;module$js$maze$types.DirMask=DirMask$$module$js$maze$types;module$js$maze$types.Dir=Dir$$module$js$maze$types;
module$js$maze$types.Pos=Pos$$module$js$maze$types;module$js$maze$types.Scr=Scr$$module$js$maze$types;function Spec$$module$js$maze$spec(a,b,c,...d){const e=[],f=[],g=[];let h=!1,k=!1,m=!1,l=void 0,n=!1;for(let a of d)"string"===typeof a?"fixed"===a?k=!0:"flag"===a?m=!0:"pit"===a?n=!0:"deadend"===a?h=!0:assertNever$$module$js$util(a):"number"===typeof a?e.push(connection$$module$js$maze$spec(a)):a instanceof Stair$$module$js$maze$spec?g.push(a):a instanceof Wall$$module$js$maze$spec?l=a:a instanceof Poi$$module$js$maze$spec?f.push(a):assertNever$$module$js$util(a);return{edges:a,tile:b,icon:c,connections:e,
deadEnd:h,fixed:k,flag:m,wall:l,pit:n,poi:f,stairs:g}}class Stair$$module$js$maze$spec{constructor(a,b,c){this.dir=a;this.entrance=b;this.exit=c}static up(a,b){return new Stair$$module$js$maze$spec(module$js$maze$types.Dir.UP,a,b)}static down(a,b){return new Stair$$module$js$maze$spec(module$js$maze$types.Dir.DOWN,a,b)}}
class Wall$$module$js$maze$spec{constructor(a,b,c,d){this.type=a;this.tile=b;this.a=c;this.b=d}connections(a){if(!a)return[connection$$module$js$maze$spec(this.a),connection$$module$js$maze$spec(this.b)];a=this.b;let b=this.a;for(;a;)a>>=4,b<<=4;return[connection$$module$js$maze$spec(b|this.b)]}}function wall$$module$js$maze$spec(a,[b,c]){return new Wall$$module$js$maze$spec("wall",a,b,c)}function bridge$$module$js$maze$spec(a,[b,c]){return new Wall$$module$js$maze$spec("bridge",a,b,c)}
class Poi$$module$js$maze$spec{constructor(a,b,c){this.priority=a;this.dy=b;this.dx=c}}function poi$$module$js$maze$spec(a,b=112,c=120){return new Poi$$module$js$maze$spec(a,b,c)}function connection$$module$js$maze$spec(a){const b=[];for(;a;)b.push((a&3)<<(a&4)|(a&8?a&4?256:4096:0)),a>>>=4;return b}
const EDGE_TYPES$$module$js$maze$spec={1:{[module$js$maze$types.Dir.DOWN]:{entrance:57216,exits:[230,231,232,233]},[module$js$maze$types.Dir.UP]:{entrance:12416,exits:[38,39,40,41]}},6:{[module$js$maze$types.Dir.DOWN]:{entrance:57216,exits:[231,232]},[module$js$maze$types.Dir.UP]:{entrance:12416,exits:[39,40]}}},EMPTY_CAVE_SCREEN$$module$js$maze$spec=Spec$$module$js$maze$spec(0,128," "),BASIC_CAVE_SCREENS$$module$js$maze$spec=[Spec$$module$js$maze$spec(257,129,"\u2502",42,poi$$module$js$maze$spec(4)),
Spec$$module$js$maze$spec(4112,130,"\u2500",110,poi$$module$js$maze$spec(4)),Spec$$module$js$maze$spec(272,131,"\u250c",174,poi$$module$js$maze$spec(2)),Spec$$module$js$maze$spec(4352,132,"\u2510",106,poi$$module$js$maze$spec(2)),Spec$$module$js$maze$spec(17,133,"\u2514",46,poi$$module$js$maze$spec(2)),Spec$$module$js$maze$spec(4097,134,"\u2518",38,poi$$module$js$maze$spec(2)),Spec$$module$js$maze$spec(273,135,"\u251c",686,poi$$module$js$maze$spec(3)),Spec$$module$js$maze$spec(4369,136,"\u253c",9902,
poi$$module$js$maze$spec(3)),Spec$$module$js$maze$spec(4353,137,"\u2524",618,poi$$module$js$maze$spec(3)),Spec$$module$js$maze$spec(4368,138,"\u252c",1710,poi$$module$js$maze$spec(3)),Spec$$module$js$maze$spec(4113,139,"\u2534",622,poi$$module$js$maze$spec(3)),Spec$$module$js$maze$spec(131329,140,"\u250b",42),Spec$$module$js$maze$spec(1048833,141,"\u256b","fixed",42),Spec$$module$js$maze$spec(1052688,142,"\u256b","fixed",110),Spec$$module$js$maze$spec(65793,143,"\u2506",wall$$module$js$maze$spec(135,
[2,10])),Spec$$module$js$maze$spec(69648,144,"\u2504",wall$$module$js$maze$spec(103,[2,10])),Spec$$module$js$maze$spec(69649,148,"\u2538",wall$$module$js$maze$spec(55,[2,110])),Spec$$module$js$maze$spec(135184,149,"\u2538",110,Stair$$module$js$maze$spec.up(16512,55)),Spec$$module$js$maze$spec(69632,150,"\u251a",6,Stair$$module$js$maze$spec.up(16432,50)),Spec$$module$js$maze$spec(135168,151,"\u2512",6,Stair$$module$js$maze$spec.down(44848,178)),Spec$$module$js$maze$spec(65552,152,"\u2516",14,Stair$$module$js$maze$spec.up(16592,
60)),Spec$$module$js$maze$spec(131088,153,"\u250e",14,Stair$$module$js$maze$spec.down(45008,188)),Spec$$module$js$maze$spec(131073,154,"\u2579",2,Stair$$module$js$maze$spec.down(8064,39)),Spec$$module$js$maze$spec(131328,154,"\u257b",10,Stair$$module$js$maze$spec.up(53376,199)),Spec$$module$js$maze$spec(262401,155," ",2,10,"deadend"),Spec$$module$js$maze$spec(1,155,"\u2575",2,poi$$module$js$maze$spec(0,-48,120),"deadend"),Spec$$module$js$maze$spec(256,155,"\u2577",10,poi$$module$js$maze$spec(0,272,
120),"deadend"),Spec$$module$js$maze$spec(266256,156," ",6,14,"deadend"),Spec$$module$js$maze$spec(16,156,"\u2576",14,poi$$module$js$maze$spec(0,112,264),"deadend"),Spec$$module$js$maze$spec(4096,156,"\u2574",6,poi$$module$js$maze$spec(0,112,-40),"deadend"),Spec$$module$js$maze$spec(1537,158,"\u257d",42)],BOSS_CAVE_SCREENS$$module$js$maze$spec=[Spec$$module$js$maze$spec(29046,145,"\u2564","fixed",42,poi$$module$js$maze$spec(1,96,120)),Spec$$module$js$maze$spec(459009,145,"\u2564","fixed",42,poi$$module$js$maze$spec(1,
96,120)),Spec$$module$js$maze$spec(94582,146,"\u2564","fixed",wall$$module$js$maze$spec(39,[2,10]),poi$$module$js$maze$spec(1,96,120)),Spec$$module$js$maze$spec(112,128,"\u2558"),Spec$$module$js$maze$spec(28672,128,"\u255b")],RIVER_SCREENS$$module$js$maze$spec=[Spec$$module$js$maze$spec(13107,211,"\u256c",21,61,bridge$$module$js$maze$spec(182,[121,191]),poi$$module$js$maze$spec(4,0,152)),Spec$$module$js$maze$spec(771,212,"\u2551",25,59),Spec$$module$js$maze$spec(12336,213,"\u2550",93,127),Spec$$module$js$maze$spec(66307,
214,"\u2551",bridge$$module$js$maze$spec(135,[25,59])),Spec$$module$js$maze$spec(77872,215,"\u2550",bridge$$module$js$maze$spec(134,[93,127])),Spec$$module$js$maze$spec(816,216,"\u2554",157,191),Spec$$module$js$maze$spec(13056,217,"\u2557",91,121),Spec$$module$js$maze$spec(51,218,"\u255a",31,61),Spec$$module$js$maze$spec(12291,219,"\u255d",21,55),Spec$$module$js$maze$spec(12337,220,"\u2567",605,127),Spec$$module$js$maze$spec(12592,221,"\u2564",93,1967),Spec$$module$js$maze$spec(4867,222,"\u2562",
361,59),Spec$$module$js$maze$spec(787,223,"\u255f",25,958),Spec$$module$js$maze$spec(525059,240," ",1,3,9,11,"deadend"),Spec$$module$js$maze$spec(3,240," ",1,3,poi$$module$js$maze$spec(1,-48,72),poi$$module$js$maze$spec(1,-48,152),"deadend"),Spec$$module$js$maze$spec(768,240," ",9,11,poi$$module$js$maze$spec(1,272,72),poi$$module$js$maze$spec(1,272,152),"deadend"),Spec$$module$js$maze$spec(536624,241," ",5,7,13,15,"deadend"),Spec$$module$js$maze$spec(48,241," ",13,15,poi$$module$js$maze$spec(1,96,
264),poi$$module$js$maze$spec(1,160,264),"deadend"),Spec$$module$js$maze$spec(12288,241," ",5,7,poi$$module$js$maze$spec(1,96,-40),poi$$module$js$maze$spec(1,160,-40),"deadend"),Spec$$module$js$maze$spec(65539,242,"\u2568",bridge$$module$js$maze$spec(23,[1,3])),Spec$$module$js$maze$spec(66304,242,"\u2565",bridge$$module$js$maze$spec(198,[9,11])),Spec$$module$js$maze$spec(13104,243,"\u2566",93,121,191),Spec$$module$js$maze$spec(12339,244,"\u2569",21,61,127),Spec$$module$js$maze$spec(131843,245,"\u2560",
25,3,11,poi$$module$js$maze$spec(1,192,152),poi$$module$js$maze$spec(1,64,152)),Spec$$module$js$maze$spec(262915,246,"\u2563",1,9,59,poi$$module$js$maze$spec(1,176,72),poi$$module$js$maze$spec(1,48,72))],WIDE_SCREENS$$module$js$maze$spec=[Spec$$module$js$maze$spec(2,113,"\u253b",2,Stair$$module$js$maze$spec.down(53120,215)),Spec$$module$js$maze$spec(514,114,"\u2503",42),Spec$$module$js$maze$spec(34,224,"\u2516",46),Spec$$module$js$maze$spec(8194,225,"\u251a",38),Spec$$module$js$maze$spec(544,226,
"\u250e",174),Spec$$module$js$maze$spec(8704,227,"\u2512",106),Spec$$module$js$maze$spec(66050,229,"\u254f","fixed",2,10),Spec$$module$js$maze$spec(8738,230,"\u2542",9902),Spec$$module$js$maze$spec(8226,231,"\u2538",622),Spec$$module$js$maze$spec(8736,232,"\u2530",1710),Spec$$module$js$maze$spec(513,233,"\u257d","fixed",wall$$module$js$maze$spec(55,[2,10])),Spec$$module$js$maze$spec(8224,234,"\u2500",110),Spec$$module$js$maze$spec(66049,253,"\u257d","fixed",42)],WIDE_SET$$module$js$maze$spec=new Set([128,
...WIDE_SCREENS$$module$js$maze$spec.map((a)=>a.tile)]),PIT_SCREENS$$module$js$maze$spec=[Spec$$module$js$maze$spec(528400,235,"\u2508","pit",110),Spec$$module$js$maze$spec(524545,236,"\u250a","pit",42)],SPIKE_SCREENS$$module$js$maze$spec=[Spec$$module$js$maze$spec(260,237,"\u257f",42),Spec$$module$js$maze$spec(1025,238,"\u257d",42),Spec$$module$js$maze$spec(5140,239,"\u2542",9902),Spec$$module$js$maze$spec(1028,247,"\u2503",42)],SWAMP_SCREENS$$module$js$maze$spec=[Spec$$module$js$maze$spec(0,127,
" "),Spec$$module$js$maze$spec(1,-1,"\u2575",1),Spec$$module$js$maze$spec(16,118,"\u2576",13),Spec$$module$js$maze$spec(17,121,"\u2514",29),Spec$$module$js$maze$spec(256,-2,"\u2577",9),Spec$$module$js$maze$spec(257,-3,"\u2502",25),Spec$$module$js$maze$spec(272,-4,"\u250c",157),Spec$$module$js$maze$spec(273,-5,"\u251c",413),Spec$$module$js$maze$spec(4096,123,"\u2574",5),Spec$$module$js$maze$spec(4097,117,"\u2518",21),Spec$$module$js$maze$spec(4112,-6,"\u2500",93),Spec$$module$js$maze$spec(4113,125,
"\u2534",349),Spec$$module$js$maze$spec(4352,126,"\u2510",89),Spec$$module$js$maze$spec(4353,120,"\u2524",345),Spec$$module$js$maze$spec(4368,122,"\u252c",1437),Spec$$module$js$maze$spec(4369,119,"\u253c",5533),Spec$$module$js$maze$spec(61936,124,"\u2564","fixed",9),Spec$$module$js$maze$spec(61440,127,"\u255d","fixed"),Spec$$module$js$maze$spec(240,127,"\u255a","fixed"),Spec$$module$js$maze$spec(65552,118,"\u2576","fixed","flag",13),Spec$$module$js$maze$spec(65792,-2,"\u2577","fixed","flag",9),Spec$$module$js$maze$spec(65808,
-4,"\u250c","fixed","flag",157),Spec$$module$js$maze$spec(69632,123,"\u2574","fixed","flag",5),Spec$$module$js$maze$spec(69648,-6,"\u2500","fixed","flag",93),Spec$$module$js$maze$spec(69888,126,"\u2510","fixed","flag",89),Spec$$module$js$maze$spec(69904,122,"\u252c","fixed","flag",1437)],GOA1_SCREENS$$module$js$maze$spec=[Spec$$module$js$maze$spec(0,128," "),Spec$$module$js$maze$spec(17,224,"\u2514","flag",31,46,61),Spec$$module$js$maze$spec(257,228,"\u2502","flag",1194411),Spec$$module$js$maze$spec(272,
226,"\u250c","flag",157,174,191),Spec$$module$js$maze$spec(4097,225,"\u2518","flag",21,38,55),Spec$$module$js$maze$spec(4112,234,"\u2500",93,110,127),Spec$$module$js$maze$spec(4113,231,"\u2534","flag",21,622,61,127),Spec$$module$js$maze$spec(4352,227,"\u2510","flag",91,106,121),Spec$$module$js$maze$spec(4368,232,"\u252c","flag",93,1710,121,191),Spec$$module$js$maze$spec(4369,230,"\u253c","flag",21,9902,61,121,191),Spec$$module$js$maze$spec(65553,224,"\u2514","fixed",46,61),Spec$$module$js$maze$spec(65793,
228,"\u2502","fixed",4779),Spec$$module$js$maze$spec(65808,226,"\u250c","fixed",174,191),Spec$$module$js$maze$spec(69633,225,"\u2518","fixed",21,38),Spec$$module$js$maze$spec(69649,231,"\u2534","fixed",622,127),Spec$$module$js$maze$spec(69888,227,"\u2510","fixed",106,121),Spec$$module$js$maze$spec(69904,232,"\u252c","fixed",93,1710),Spec$$module$js$maze$spec(69905,230,"\u253c","fixed",21,9902,191),Spec$$module$js$maze$spec(131329,229,"\u250a","fixed","flag",5019),Spec$$module$js$maze$spec(196865,
229,"\u250a","fixed",57),Spec$$module$js$maze$spec(61681,113,"\u257d","fixed",42),Spec$$module$js$maze$spec(240,128,"\u2588","fixed"),Spec$$module$js$maze$spec(61440,128,"\u2588","fixed"),Spec$$module$js$maze$spec(65520,115,"\u2550","fixed"),Spec$$module$js$maze$spec(61951,114,"\u2564","fixed"),Spec$$module$js$maze$spec(4080,128,"\u2554","fixed"),Spec$$module$js$maze$spec(65280,128,"\u2557","fixed"),Spec$$module$js$maze$spec(255,128,"\u255a","fixed"),Spec$$module$js$maze$spec(61455,128,"\u255d","fixed")],
ALL_CAVE_SCREENS$$module$js$maze$spec=[BASIC_CAVE_SCREENS$$module$js$maze$spec,BOSS_CAVE_SCREENS$$module$js$maze$spec,RIVER_SCREENS$$module$js$maze$spec,WIDE_SCREENS$$module$js$maze$spec,PIT_SCREENS$$module$js$maze$spec,SPIKE_SCREENS$$module$js$maze$spec],RIVER_TILES$$module$js$maze$spec=new Set(RIVER_SCREENS$$module$js$maze$spec.map((a)=>a.tile)),BITCOUNT$$module$js$maze$spec=[0,1,1,2,1,2,2,3,1,2,2,3,2,3,3,4];
class SpecSet$$module$js$maze$spec{constructor(a,b){this.specSets=a;this.empty=b;this.fixedTiles=new Map;this.deadEndTiles=new Set;this.edgesByTile=new Map;this.stairsByTile=new Map;this.stairScreens=new Map;this.walls=new Map;for(const b of module$js$util.iters.concat(...a)){for(const c of module$js$maze$types.Dir.ALL)(a=b.edges>>module$js$maze$types.Dir.shift(c)&15)&&7!=(a&7)&&this.edgesByTile.set(b.tile,(this.edgesByTile.get(b.tile)||0)|1<<c);for(const a of b.stairs)this.stairsByTile.set(b.tile<<
8|(a.entrance&61440)>>8|(a.entrance&240)>>4,a.dir),this.stairScreens.set(b.edges,[a.dir,{entrance:a.entrance,exits:[a.exit,a.exit+1]}]);b.wall&&this.walls.set(b.tile,b.wall.type);128!=b.tile&&b.fixed&&(this.fixedTiles.has(b.tile)||this.fixedTiles.set(b.tile,b));b.deadEnd&&this.deadEndTiles.add(b.tile)}}survey(a){let b=0,c=0,d=0,e=0,f=0,g=0,h=!0,k=!1;const m=new Map,l=new Map,n=new Map,p=new Multiset$$module$js$util,q=[];this.empty&&q.push(this.empty);var v=new Set([].concat(...a.screens));for(var z of this.specSets)for(var w of z)if(128!==
w.tile&&v.has(w.tile)){q.push(...z);break}if(164===a.tileset)for(v=q.length-1;0<=v;v--)69648===q[v].edges&&q.splice(v,1);v=new Set([...a.reachableTiles(!0).keys()].map((a)=>a>>>8));if(!v.size)throw Error("No reachable tiles");z=new Map(a.entrances.map((b,c)=>{for(const d of a.exits)if(20>Math.abs(d.x-b.x)&&20>Math.abs(d.y-b.y))return[c,d.dest<<8|d.entrance];return null}).filter(isNonNull$$module$js$util));for(w=0;w<a.entrances.length;w++){var A=a.entrances[w],D=this.stairsByTile.get(a.screens[A.screen>>>
4][A.screen&15]<<8|A.tile);if(null!=D){var O=z.get(w);if(null==O)throw Error("Could not find exit");m.set(A.screen,{entrance:w,exit:O,dir:D})}}for(w=0;w<a.height;w++)for(A=0,w||(A|=1),w===a.height-1&&(A|=4),D=0;D<a.width;D++){O=w<<4|D;if(!v.has(O))continue;A&=-11;D||(A|=8);D===a.width-1&&(A|=2);var t=a.screens[w][D];p.add(t);if(128===t)continue;WIDE_SET$$module$js$maze$spec.has(t)?k=!0:h=!1;b++;RIVER_TILES$$module$js$maze$spec.has(t)&&g++;let q=this.edgesByTile.get(t);if(null==q)throw Error(`Bad tile: ${hex$$module$js$rom$util(t)}`);
var r=BITCOUNT$$module$js$maze$spec[q]+(m.has(O)?1:0);154===t&&(r=2);if(155===t||156==t||240==t||241==t)r=1;1===r&&c++;2<r&&(d+=r-2);r=this.walls.get(t);"wall"===r&&e++;"bridge"===r&&f++;r=this.fixedTiles.get(t);this.deadEndTiles.has(t)&&(q=0);for(var W of module$js$maze$types.Dir.ALL)if(q&A&1<<W){t=null;for(var G=0;G<a.entrances.length;G++)if(a.entrances[G].screen===O&&matchesDir$$module$js$maze$spec(a.entrances[G].tile,W)){t=G;break}if(null!=t){G=z.get(t);if(null==G)throw Error("Could not find exit");
l.set(O,{entrance:t,exit:G,dir:W})}}null!=r&&n.set(O,r)}if(g)for(const [a,b]of n)29046===b.edges&&(W=q.find((a)=>459009===a.edges))&&n.set(a,W);if(h!=k)throw Error("Found inconsistent use of wide tiles");return{size:b,rivers:g,deadEnds:c,branches:d,walls:e,bridges:f,stairs:m,edges:l,fixed:n,tiles:p,wide:h,specs:q,specSet:this}}}SpecSet$$module$js$maze$spec.CAVE=new SpecSet$$module$js$maze$spec(ALL_CAVE_SCREENS$$module$js$maze$spec,EMPTY_CAVE_SCREEN$$module$js$maze$spec);
function matchesDir$$module$js$maze$spec(a,b){return 0===b?4>a>>>4:1===b?13<(a&15):2===b?12<a>>>4:3===b?2>(a&15):!1}function readScreen$$module$js$maze$spec(a){const b=a.split(/ +/g).map((a)=>parseInt(a,16));for(const c of b)if("number"!=typeof c||isNaN(c))throw Error(`Bad screen: ${c} in ${a}`);return b}function write2d$$module$js$maze$spec(a,b,c){for(let d=0;d<c.length;d++)for(let e=0;e<c[d].length;e++){const f=c[d][e];null!=f&&(a[b+(d<<4|e)]=f)}}var module$js$maze$spec={};
module$js$maze$spec.Spec=Spec$$module$js$maze$spec;module$js$maze$spec.Stair=Stair$$module$js$maze$spec;module$js$maze$spec.Wall=Wall$$module$js$maze$spec;module$js$maze$spec.wall=wall$$module$js$maze$spec;module$js$maze$spec.bridge=bridge$$module$js$maze$spec;module$js$maze$spec.Poi=Poi$$module$js$maze$spec;module$js$maze$spec.poi=poi$$module$js$maze$spec;module$js$maze$spec.EDGE_TYPES=EDGE_TYPES$$module$js$maze$spec;module$js$maze$spec.SWAMP_SCREENS=SWAMP_SCREENS$$module$js$maze$spec;
module$js$maze$spec.GOA1_SCREENS=GOA1_SCREENS$$module$js$maze$spec;module$js$maze$spec.SpecSet=SpecSet$$module$js$maze$spec;module$js$maze$spec.readScreen=readScreen$$module$js$maze$spec;module$js$maze$spec.write2d=write2d$$module$js$maze$spec;const {$0a:$0a$$module$js$rom$location,$0b:$0b$$module$js$rom$location,$0c:$0c$$module$js$rom$location,$0d:$0d$$module$js$rom$location}=Segment$$module$js$rom$util,CAVE$$module$js$rom$location={subArea:"cave",music:(a)=>`${a.name}-Cave`,palette:(a)=>`${a.name}-Cave`},HOUSE$$module$js$rom$location={subArea:"house",palette:()=>Symbol()},FORTUNE_TELLER$$module$js$rom$location={subArea:"house",palette:()=>Symbol(),music:(a)=>`${a.name}-FortuneTeller`},MESIA$$module$js$rom$location={name:"mesia",music:(a)=>
`${a.name}-Mesia`,palette:(a)=>"Tower"===a.name?a.name:`${a.name}-Mesia`},DYNA$$module$js$rom$location={name:"dyna",music:(a)=>`${a.name}-Dyna`,palette:(a)=>`${a.name}-Dyna`},KELBESQUE$$module$js$rom$location={name:"goa 1",music:"goa 1",palette:"goa 1"},SABERA$$module$js$rom$location={name:"goa 2",music:"goa 2",palette:"goa 2"},MADO_LOWER$$module$js$rom$location={name:"goa 3",music:"goa 3",palette:"goa 3"},MADO_UPPER$$module$js$rom$location=Object.assign({},MADO_LOWER$$module$js$rom$location,{palette:"goa 3 upper"}),
KARMINE_UPPER$$module$js$rom$location={name:"goa 4",music:"goa 4",palette:"goa 4"},KARMINE_LOWER$$module$js$rom$location=Object.assign({},KARMINE_UPPER$$module$js$rom$location,{palette:"goa 4 lower"}),$$$module$js$rom$location=(()=>{function a(a,e){e=void 0===e?{}:e;e=Object.assign({},e);c=e.area=e.area||c;return b(a,e)}const b=initializer$$module$js$rom$util();let c;a.commit=(a)=>{const c=a.rom.areas;b.commit(a,(b,d,e)=>{b=upperCamelToSpaces$$module$js$rom$util(b);const f=e.area(c),g="function"===
typeof e.music?e.music(f):null!=e.music?e.music:f.name,h="function"===typeof e.palette?e.palette(f):e.palette||f.name;b={area:f,name:b,music:g,palette:h};null!=e.subArea&&(b.subArea=e.subArea);null!=e.bossScreen&&(b.bossScreen=e.bossScreen);e=new Location$$module$js$rom$location(a.rom,d,b);0<=d&&(a[d]=e);return e})};return a})();
class Locations$$module$js$rom$location extends Array{constructor(a){super(256);this.rom=a;this.MezameShrine=$$$module$js$rom$location(0,{area:(a)=>a.Mezame});this.Leaf_OutsideStart=$$$module$js$rom$location(1,{music:1});this.Leaf=$$$module$js$rom$location(2,{area:(a)=>a.Leaf});this.ValleyOfWind=$$$module$js$rom$location(3,{area:(a)=>a.ValleyOfWind});this.SealedCave1=$$$module$js$rom$location(4,{area:(a)=>a.SealedCave});this.SealedCave2=$$$module$js$rom$location(5);this.SealedCave6=$$$module$js$rom$location(6);
this.SealedCave4=$$$module$js$rom$location(7);this.SealedCave5=$$$module$js$rom$location(8);this.SealedCave3=$$$module$js$rom$location(9);this.SealedCave7=$$$module$js$rom$location(10,{bossScreen:145});this.SealedCave8=$$$module$js$rom$location(12);this.WindmillCave=$$$module$js$rom$location(14,{area:(a)=>a.WindmillCave});this.Windmill=$$$module$js$rom$location(15,{area:(a)=>a.Windmill,music:0});this.ZebuCave=$$$module$js$rom$location(16,{area:(a)=>a.ZebuCave});this.MtSabreWest_Cave1=$$$module$js$rom$location(17,
Object.assign({},{area:(a)=>a.MtSabreWest},CAVE$$module$js$rom$location));this.CordelPlainWest=$$$module$js$rom$location(20,{area:(a)=>a.CordelPlain});this.CordelPlainEast=$$$module$js$rom$location(21);this.Brynmaer=$$$module$js$rom$location(24,{area:(a)=>a.Brynmaer});this.OutsideStomHouse=$$$module$js$rom$location(25,{area:(a)=>a.StomHouse,music:0});this.Swamp=$$$module$js$rom$location(26,{area:(a)=>a.Swamp,bossScreen:124});this.Amazones=$$$module$js$rom$location(27,{area:(a)=>a.Amazones,fixed:[13,
14]});this.Oak=$$$module$js$rom$location(28,{area:(a)=>a.Oak});this.StomHouse=$$$module$js$rom$location(30,{area:(a)=>a.StomHouse});this.MtSabreWest_Lower=$$$module$js$rom$location(32,{area:(a)=>a.MtSabreWest});this.MtSabreWest_Upper=$$$module$js$rom$location(33);this.MtSabreWest_Cave2=$$$module$js$rom$location(34,CAVE$$module$js$rom$location);this.MtSabreWest_Cave3=$$$module$js$rom$location(35,CAVE$$module$js$rom$location);this.MtSabreWest_Cave4=$$$module$js$rom$location(36,CAVE$$module$js$rom$location);
this.MtSabreWest_Cave5=$$$module$js$rom$location(37,CAVE$$module$js$rom$location);this.MtSabreWest_Cave6=$$$module$js$rom$location(38,CAVE$$module$js$rom$location);this.MtSabreWest_Cave7=$$$module$js$rom$location(39,CAVE$$module$js$rom$location);this.MtSabreNorth_Main=$$$module$js$rom$location(40,{area:(a)=>a.MtSabreNorth,bossScreen:181});this.MtSabreNorth_Middle=$$$module$js$rom$location(41);this.MtSabreNorth_Cave2=$$$module$js$rom$location(42,CAVE$$module$js$rom$location);this.MtSabreNorth_Cave3=
$$$module$js$rom$location(43,CAVE$$module$js$rom$location);this.MtSabreNorth_Cave4=$$$module$js$rom$location(44,CAVE$$module$js$rom$location);this.MtSabreNorth_Cave5=$$$module$js$rom$location(45,CAVE$$module$js$rom$location);this.MtSabreNorth_Cave6=$$$module$js$rom$location(46,CAVE$$module$js$rom$location);this.MtSabreNorth_PrisonHall=$$$module$js$rom$location(47,CAVE$$module$js$rom$location);this.MtSabreNorth_LeftCell=$$$module$js$rom$location(48,CAVE$$module$js$rom$location);this.MtSabreNorth_LeftCell2=
$$$module$js$rom$location(49,CAVE$$module$js$rom$location);this.MtSabreNorth_RightCell=$$$module$js$rom$location(50,CAVE$$module$js$rom$location);this.MtSabreNorth_Cave8=$$$module$js$rom$location(51,CAVE$$module$js$rom$location);this.MtSabreNorth_Cave9=$$$module$js$rom$location(52,CAVE$$module$js$rom$location);this.MtSabreNorth_SummitCave=$$$module$js$rom$location(53,CAVE$$module$js$rom$location);this.MtSabreNorth_Cave1=$$$module$js$rom$location(56,CAVE$$module$js$rom$location);this.MtSabreNorth_Cave7=
$$$module$js$rom$location(57,CAVE$$module$js$rom$location);this.Nadare_Inn=$$$module$js$rom$location(60,Object.assign({},{area:(a)=>a.Nadare},HOUSE$$module$js$rom$location));this.Nadare_ToolShop=$$$module$js$rom$location(61,HOUSE$$module$js$rom$location);this.Nadare_BackRoom=$$$module$js$rom$location(62,HOUSE$$module$js$rom$location);this.WaterfallValleyNorth=$$$module$js$rom$location(64,{area:(a)=>a.WaterfallValley});this.WaterfallValleySouth=$$$module$js$rom$location(65);this.LimeTreeValley=$$$module$js$rom$location(66,
{area:(a)=>a.LimeTreeValley,music:0});this.LimeTreeLake=$$$module$js$rom$location(67,{area:(a)=>a.LimeTreeLake,music:0});this.KirisaPlantCave1=$$$module$js$rom$location(68,{area:(a)=>a.KirisaPlantCave});this.KirisaPlantCave2=$$$module$js$rom$location(69);this.KirisaPlantCave3=$$$module$js$rom$location(70);this.KirisaMeadow=$$$module$js$rom$location(71,{area:(a)=>a.KirisaMeadow});this.FogLampCave1=$$$module$js$rom$location(72,{area:(a)=>a.FogLampCave});this.FogLampCave2=$$$module$js$rom$location(73);
this.FogLampCave3=$$$module$js$rom$location(74);this.FogLampCaveDeadEnd=$$$module$js$rom$location(75);this.FogLampCave4=$$$module$js$rom$location(76);this.FogLampCave5=$$$module$js$rom$location(77);this.FogLampCave6=$$$module$js$rom$location(78);this.FogLampCave7=$$$module$js$rom$location(79);this.Portoa=$$$module$js$rom$location(80,{area:(a)=>a.Portoa});this.Portoa_FishermanIsland=$$$module$js$rom$location(81,{area:(a)=>a.FishermanHouse,music:0});this.MesiaShrine=$$$module$js$rom$location(82,Object.assign({},
{area:(a)=>a.LimeTreeLake},MESIA$$module$js$rom$location));this.WaterfallCave1=$$$module$js$rom$location(84,{area:(a)=>a.WaterfallCave});this.WaterfallCave2=$$$module$js$rom$location(85);this.WaterfallCave3=$$$module$js$rom$location(86);this.WaterfallCave4=$$$module$js$rom$location(87);this.TowerEntrance=$$$module$js$rom$location(88,{area:(a)=>a.Tower});this.Tower1=$$$module$js$rom$location(89);this.Tower2=$$$module$js$rom$location(90);this.Tower3=$$$module$js$rom$location(91);this.TowerOutsideMesia=
$$$module$js$rom$location(92);this.TowerOutsideDyna=$$$module$js$rom$location(93);this.TowerMesia=$$$module$js$rom$location(94,MESIA$$module$js$rom$location);this.TowerDyna=$$$module$js$rom$location(95,DYNA$$module$js$rom$location);this.AngrySea=$$$module$js$rom$location(96,{area:(a)=>a.AngrySea});this.BoatHouse=$$$module$js$rom$location(97);this.JoelLighthouse=$$$module$js$rom$location(98,{area:(a)=>a.Lighthouse,music:0});this.UndergroundChannel=$$$module$js$rom$location(100,{area:(a)=>a.UndergroundChannel});
this.ZombieTown=$$$module$js$rom$location(101,{area:(a)=>a.ZombieTown});this.EvilSpiritIsland1=$$$module$js$rom$location(104,{area:(a)=>a.EvilSpiritIslandEntrance,music:1});this.EvilSpiritIsland2=$$$module$js$rom$location(105,{area:(a)=>a.EvilSpiritIsland});this.EvilSpiritIsland3=$$$module$js$rom$location(106);this.EvilSpiritIsland4=$$$module$js$rom$location(107);this.SaberaPalace1=$$$module$js$rom$location(108,{area:(a)=>a.SaberaFortress,bossScreen:253});this.SaberaPalace2=$$$module$js$rom$location(109);
this.SaberaPalace3=$$$module$js$rom$location(110,{bossScreen:253});this.JoelSecretPassage=$$$module$js$rom$location(112,{area:(a)=>a.JoelPassage});this.Joel=$$$module$js$rom$location(113,{area:(a)=>a.Joel});this.Swan=$$$module$js$rom$location(114,{area:(a)=>a.Swan,music:1});this.SwanGate=$$$module$js$rom$location(115,{area:(a)=>a.SwanGate,music:1});this.GoaValley=$$$module$js$rom$location(120,{area:(a)=>a.GoaValley});this.MtHydra=$$$module$js$rom$location(124,{area:(a)=>a.MtHydra});this.MtHydra_Cave1=
$$$module$js$rom$location(125,CAVE$$module$js$rom$location);this.MtHydra_OutsideShyron=$$$module$js$rom$location(126,{fixed:[13,14]});this.MtHydra_Cave2=$$$module$js$rom$location(127,CAVE$$module$js$rom$location);this.MtHydra_Cave3=$$$module$js$rom$location(128,CAVE$$module$js$rom$location);this.MtHydra_Cave4=$$$module$js$rom$location(129,CAVE$$module$js$rom$location);this.MtHydra_Cave5=$$$module$js$rom$location(130,CAVE$$module$js$rom$location);this.MtHydra_Cave6=$$$module$js$rom$location(131,CAVE$$module$js$rom$location);
this.MtHydra_Cave7=$$$module$js$rom$location(132,CAVE$$module$js$rom$location);this.MtHydra_Cave8=$$$module$js$rom$location(133,CAVE$$module$js$rom$location);this.MtHydra_Cave9=$$$module$js$rom$location(134,CAVE$$module$js$rom$location);this.MtHydra_Cave10=$$$module$js$rom$location(135,CAVE$$module$js$rom$location);this.Styx1=$$$module$js$rom$location(136,{area:(a)=>a.Styx});this.Styx2=$$$module$js$rom$location(137);this.Styx3=$$$module$js$rom$location(138);this.Shyron=$$$module$js$rom$location(140,
{area:(a)=>a.Shyron});this.Goa=$$$module$js$rom$location(142,{area:(a)=>a.Goa});this.GoaFortressBasement=$$$module$js$rom$location(143,{area:(a)=>a.FortressBasement,music:0});this.Desert1=$$$module$js$rom$location(144,{area:(a)=>a.Desert1});this.OasisCaveMain=$$$module$js$rom$location(145,{area:(a)=>a.OasisCave});this.DesertCave1=$$$module$js$rom$location(146,{area:(a)=>a.DesertCave1,music:0});this.Sahara=$$$module$js$rom$location(147,{area:(a)=>a.Sahara});this.SaharaOutsideCave=$$$module$js$rom$location(148,
{music:0});this.DesertCave2=$$$module$js$rom$location(149,{area:(a)=>a.DesertCave2,music:1});this.SaharaMeadow=$$$module$js$rom$location(150,{area:(a)=>a.SaharaMeadow,music:0});this.Desert2=$$$module$js$rom$location(152,{area:(a)=>a.Desert2});this.Pyramid_Entrance=$$$module$js$rom$location(156,{area:(a)=>a.Pyramid});this.Pyramid_Branch=$$$module$js$rom$location(157);this.Pyramid_Main=$$$module$js$rom$location(158);this.Pyramid_Draygon=$$$module$js$rom$location(159);this.Crypt_Entrance=$$$module$js$rom$location(160,
{area:(a)=>a.Crypt});this.Crypt_Hall1=$$$module$js$rom$location(161);this.Crypt_Branch=$$$module$js$rom$location(162);this.Crypt_DeadEndLeft=$$$module$js$rom$location(163);this.Crypt_DeadEndRight=$$$module$js$rom$location(164);this.Crypt_Hall2=$$$module$js$rom$location(165);this.Crypt_Draygon2=$$$module$js$rom$location(166);this.Crypt_Teleporter=$$$module$js$rom$location(167,{music:"Crypt-Teleporter"});this.GoaFortress_Entrance=$$$module$js$rom$location(168,{area:(a)=>a.GoaFortress,music:1});this.GoaFortress_Kelbesque=
$$$module$js$rom$location(169,Object.assign({},{bossScreen:115},KELBESQUE$$module$js$rom$location));this.GoaFortress_Zebu=$$$module$js$rom$location(170,Object.assign({},KELBESQUE$$module$js$rom$location,{palette:1}));this.GoaFortress_Sabera=$$$module$js$rom$location(171,SABERA$$module$js$rom$location);this.GoaFortress_Tornel=$$$module$js$rom$location(172,Object.assign({},{bossScreen:145},SABERA$$module$js$rom$location,{palette:1}));this.GoaFortress_Mado1=$$$module$js$rom$location(173,MADO_LOWER$$module$js$rom$location);
this.GoaFortress_Mado2=$$$module$js$rom$location(174,MADO_UPPER$$module$js$rom$location);this.GoaFortress_Mado3=$$$module$js$rom$location(175,MADO_UPPER$$module$js$rom$location);this.GoaFortress_Karmine1=$$$module$js$rom$location(176,KARMINE_UPPER$$module$js$rom$location);this.GoaFortress_Karmine2=$$$module$js$rom$location(177,KARMINE_UPPER$$module$js$rom$location);this.GoaFortress_Karmine3=$$$module$js$rom$location(178,KARMINE_UPPER$$module$js$rom$location);this.GoaFortress_Karmine4=$$$module$js$rom$location(179,
KARMINE_UPPER$$module$js$rom$location);this.GoaFortress_Karmine5=$$$module$js$rom$location(180,KARMINE_UPPER$$module$js$rom$location);this.GoaFortress_Karmine6=$$$module$js$rom$location(181,KARMINE_LOWER$$module$js$rom$location);this.GoaFortress_Karmine7=$$$module$js$rom$location(182,Object.assign({},{bossScreen:253},KARMINE_LOWER$$module$js$rom$location));this.GoaFortress_Exit=$$$module$js$rom$location(183,{music:0});this.OasisCave_Entrance=$$$module$js$rom$location(184,{area:(a)=>a.OasisEntrance,
music:2});this.GoaFortress_Asina=$$$module$js$rom$location(185,Object.assign({},{area:(a)=>a.GoaFortress},MADO_UPPER$$module$js$rom$location,{bossScreen:145}));this.GoaFortress_Kensu=$$$module$js$rom$location(186,KARMINE_UPPER$$module$js$rom$location);this.Goa_House=$$$module$js$rom$location(187,Object.assign({},{area:(a)=>a.Goa},HOUSE$$module$js$rom$location));this.Goa_Inn=$$$module$js$rom$location(188,HOUSE$$module$js$rom$location);this.Goa_ToolShop=$$$module$js$rom$location(190,HOUSE$$module$js$rom$location);
this.Goa_Tavern=$$$module$js$rom$location(191,HOUSE$$module$js$rom$location);this.Leaf_ElderHouse=$$$module$js$rom$location(192,Object.assign({},{area:(a)=>a.Leaf},HOUSE$$module$js$rom$location));this.Leaf_RabbitHut=$$$module$js$rom$location(193,HOUSE$$module$js$rom$location);this.Leaf_Inn=$$$module$js$rom$location(194,HOUSE$$module$js$rom$location);this.Leaf_ToolShop=$$$module$js$rom$location(195,HOUSE$$module$js$rom$location);this.Leaf_ArmorShop=$$$module$js$rom$location(196,HOUSE$$module$js$rom$location);
this.Leaf_StudentHouse=$$$module$js$rom$location(197,HOUSE$$module$js$rom$location);this.Brynmaer_Tavern=$$$module$js$rom$location(198,Object.assign({},{area:(a)=>a.Brynmaer},HOUSE$$module$js$rom$location));this.Brynmaer_PawnShop=$$$module$js$rom$location(199,HOUSE$$module$js$rom$location);this.Brynmaer_Inn=$$$module$js$rom$location(200,HOUSE$$module$js$rom$location);this.Brynmaer_ArmorShop=$$$module$js$rom$location(201,HOUSE$$module$js$rom$location);this.Brynmaer_ItemShop=$$$module$js$rom$location(203,
HOUSE$$module$js$rom$location);this.Oak_ElderHouse=$$$module$js$rom$location(205,Object.assign({},{area:(a)=>a.Oak},HOUSE$$module$js$rom$location));this.Oak_MotherHouse=$$$module$js$rom$location(206,HOUSE$$module$js$rom$location);this.Oak_ToolShop=$$$module$js$rom$location(207,HOUSE$$module$js$rom$location);this.Oak_Inn=$$$module$js$rom$location(208,HOUSE$$module$js$rom$location);this.Amazones_Inn=$$$module$js$rom$location(209,Object.assign({},{area:(a)=>a.Amazones},HOUSE$$module$js$rom$location));
this.Amazones_ItemShop=$$$module$js$rom$location(210,HOUSE$$module$js$rom$location);this.Amazones_ArmorShop=$$$module$js$rom$location(211,HOUSE$$module$js$rom$location);this.Amazones_Elder=$$$module$js$rom$location(212,HOUSE$$module$js$rom$location);this.Nadare=$$$module$js$rom$location(213,{area:(a)=>a.Nadare});this.Portoa_FishermanHouse=$$$module$js$rom$location(214,Object.assign({},{area:(a)=>a.FishermanHouse},HOUSE$$module$js$rom$location,{music:0}));this.PortoaPalace_Entrance=$$$module$js$rom$location(215,
{area:(a)=>a.PortoaPalace,fixed:[13,14]});this.Portoa_FortuneTeller=$$$module$js$rom$location(216,Object.assign({},{area:(a)=>a.Portoa},FORTUNE_TELLER$$module$js$rom$location));this.Portoa_PawnShop=$$$module$js$rom$location(217,HOUSE$$module$js$rom$location);this.Portoa_ArmorShop=$$$module$js$rom$location(218,HOUSE$$module$js$rom$location);this.Portoa_Inn=$$$module$js$rom$location(220,HOUSE$$module$js$rom$location);this.Portoa_ToolShop=$$$module$js$rom$location(221,HOUSE$$module$js$rom$location);
this.PortoaPalace_Left=$$$module$js$rom$location(222,Object.assign({},{area:(a)=>a.PortoaPalace},HOUSE$$module$js$rom$location));this.PortoaPalace_ThroneRoom=$$$module$js$rom$location(223,HOUSE$$module$js$rom$location);this.PortoaPalace_Right=$$$module$js$rom$location(224,HOUSE$$module$js$rom$location);this.Portoa_AsinaRoom=$$$module$js$rom$location(225,Object.assign({},{area:(a)=>a.UndergroundChannel},HOUSE$$module$js$rom$location,{music:"asina"}));this.Amazones_ElderDownstairs=$$$module$js$rom$location(226,
Object.assign({},{area:(a)=>a.Amazones},HOUSE$$module$js$rom$location));this.Joel_ElderHouse=$$$module$js$rom$location(227,Object.assign({},{area:(a)=>a.Joel},HOUSE$$module$js$rom$location));this.Joel_Shed=$$$module$js$rom$location(228,HOUSE$$module$js$rom$location);this.Joel_ToolShop=$$$module$js$rom$location(229,HOUSE$$module$js$rom$location);this.Joel_Inn=$$$module$js$rom$location(231,HOUSE$$module$js$rom$location);this.ZombieTown_House=$$$module$js$rom$location(232,Object.assign({},{area:(a)=>
a.ZombieTown},HOUSE$$module$js$rom$location));this.ZombieTown_HouseBasement=$$$module$js$rom$location(233,HOUSE$$module$js$rom$location);this.Swan_ToolShop=$$$module$js$rom$location(235,Object.assign({},{area:(a)=>a.Swan},HOUSE$$module$js$rom$location));this.Swan_StomHut=$$$module$js$rom$location(236,HOUSE$$module$js$rom$location);this.Swan_Inn=$$$module$js$rom$location(237,HOUSE$$module$js$rom$location);this.Swan_ArmorShop=$$$module$js$rom$location(238,HOUSE$$module$js$rom$location);this.Swan_Tavern=
$$$module$js$rom$location(239,HOUSE$$module$js$rom$location);this.Swan_PawnShop=$$$module$js$rom$location(240,HOUSE$$module$js$rom$location);this.Swan_DanceHall=$$$module$js$rom$location(241,HOUSE$$module$js$rom$location);this.Shyron_Temple=$$$module$js$rom$location(242,{area:(a)=>a.ShyronTemple,bossScreen:112});this.Shyron_TrainingHall=$$$module$js$rom$location(243,Object.assign({},{area:(a)=>a.Shyron},HOUSE$$module$js$rom$location));this.Shyron_Hospital=$$$module$js$rom$location(244,HOUSE$$module$js$rom$location);
this.Shyron_ArmorShop=$$$module$js$rom$location(245,HOUSE$$module$js$rom$location);this.Shyron_ToolShop=$$$module$js$rom$location(246,HOUSE$$module$js$rom$location);this.Shyron_Inn=$$$module$js$rom$location(247,HOUSE$$module$js$rom$location);this.Sahara_Inn=$$$module$js$rom$location(248,Object.assign({},{area:(a)=>a.Sahara},HOUSE$$module$js$rom$location));this.Sahara_ToolShop=$$$module$js$rom$location(249,HOUSE$$module$js$rom$location);this.Sahara_ElderHouse=$$$module$js$rom$location(250,HOUSE$$module$js$rom$location);
this.Sahara_PawnShop=$$$module$js$rom$location(251,HOUSE$$module$js$rom$location);this.EastCave1=$$$module$js$rom$location(-1,{area:(a)=>a.EastCave});this.EastCave2=$$$module$js$rom$location(-1);this.EastCave3=$$$module$js$rom$location(-1);this.FishermanBeach=$$$module$js$rom$location(-1,Object.assign({},{area:(a)=>a.FishermanHouse},HOUSE$$module$js$rom$location));$$$module$js$rom$location.commit(this);for(let b=0;256>b;b++)this[b]||(this[b]=new Location$$module$js$rom$location(a,b,{area:a.areas.Empty,
name:"",music:"",palette:""}))}allocate(a){for(const b of this)if(!b.used)return a.id=b.id,a.used=!0,this[b.id]=a;throw Error("No unused location");}write(){const a=this.rom.assembler();free$$module$js$rom$util(a,$0a$$module$js$rom$location,34040,40960);free$$module$js$rom$util(a,$0b$$module$js$rom$location,40960,48640);free$$module$js$rom$util(a,$0c$$module$js$rom$location,37881,40960);free$$module$js$rom$util(a,$0d$$module$js$rom$location,40960,44032);free$$module$js$rom$util(a,$0d$$module$js$rom$location,
44544,48384);for(const b of this)b.assemble(a);return[a.module()]}}
class Location$$module$js$rom$location extends Entity$$module$js$rom$entity{constructor(a,b,c){super(a,b);this.data=c;var d=0<=b?readLittleEndian$$module$js$rom$util(a.prg,this.mapDataPointer)+49152:0;if(this.used=49152<d&&!!this.name){var e=readLittleEndian$$module$js$rom$util(a.prg,d)+49152;b=readLittleEndian$$module$js$rom$util(a.prg,d+2)+49152;c=readLittleEndian$$module$js$rom$util(a.prg,d+4)+49152;var f=readLittleEndian$$module$js$rom$util(a.prg,d+6)+49152,g=readLittleEndian$$module$js$rom$util(a.prg,
d+8)+49152,h=this.used&&e!==d+10,k=f-c;this.exits=(()=>{const b=[];let c=f;for(;!(a.prg[c]&128);)255!=a.prg[c+2]&&b.push(Exit$$module$js$rom$location.from(a.prg,c)),c+=4;255!==a.prg[c]&&(h=!!(a.prg[c]&64),k=(a.prg[c]&31)<<2);return b})();d=h?readLittleEndian$$module$js$rom$util(a.prg,d+10)+49152:0;this.bgm=this.originalBgm=a.prg[e];this.layoutWidth=a.prg[e+1];this.layoutHeight=a.prg[e+2];this.animation=a.prg[e+3];this.extended=a.prg[e+4];this.screens=seq$$module$js$rom$util(this.height,(b)=>tuple$$module$js$rom$util(a.prg,
e+5+b*this.width,this.width));this.tilePalettes=tuple$$module$js$rom$util(a.prg,b,3);this.originalTilePalettes=tuple$$module$js$rom$util(this.tilePalettes,0,3);this.tileset=a.prg[b+3];this.tileEffects=a.prg[b+4];this.tilePatterns=tuple$$module$js$rom$util(a.prg,b+5,2);this.entrances=group$$module$js$rom$util(4,a.prg.slice(c,c+k),(a)=>Entrance$$module$js$rom$location.from(a));this.flags=varSlice$$module$js$rom$util(a.prg,g,2,255,Infinity,(a)=>Flag$$module$js$rom$location.from(a));this.pits=d?varSlice$$module$js$rom$util(a.prg,
d,4,255,Infinity,(a)=>Pit$$module$js$rom$location.from(a)):[];b=readLittleEndian$$module$js$rom$util(a.prg,this.npcDataPointer)+65536;this.spritePalettes=(c=65536!==b)?tuple$$module$js$rom$util(a.prg,b+1,2):[0,0];this.spritePatterns=c?tuple$$module$js$rom$util(a.prg,b+3,2):[0,0];this.spawns=c?varSlice$$module$js$rom$util(a.prg,b+5,4,255,Infinity,(a)=>Spawn$$module$js$rom$location.from(a)):[]}else this.extended=this.animation=this.layoutHeight=this.layoutWidth=this.bgm=this.originalBgm=0,this.screens=
[[0]],this.tilePalettes=[36,1,38],this.originalTilePalettes=[36,1,38],this.tileset=128,this.tileEffects=179,this.tilePatterns=[2,4],this.exits=[],this.entrances=[],this.flags=[],this.pits=[],this.spawns=[],this.spritePalettes=[0,0],this.spritePatterns=[0,0]}get name(){return this.data.name}get mapDataPointer(){if(0>this.id)throw Error(`no mapdata pointer for ${this.name}`);return 82688+(this.id<<1)}get npcDataPointer(){if(0>this.id)throw Error(`no npcdata pointer for ${this.name}`);return 102913+
(this.id<<1)}get hasSpawns(){return 0<this.spawns.length}get screenPage(){return this.rom.compressedMapData?this.extended<<8:this.extended?256:0}isShop(){return 0<=this.rom.shops.findIndex((a)=>a.location===this.id)}spawn(a){const b=this.spawns[a-13];if(!b)throw Error(`Expected spawn $${hex$$module$js$rom$util(a)}`);return b}get width(){return this.layoutWidth+1}set width(a){this.layoutWidth=a-1}get height(){return this.layoutHeight+1}set height(a){this.layoutHeight=a-1}assemble(a){if(this.used){var b=
this.id.toString(16).padStart(2,"0"),c=this.spawns.length?this.spritePalettes:[255,255],d=[],e=[0,...c,...this.spawns.length?this.spritePatterns:[255,255],...concatIterables$$module$js$rom$util(this.spawns),255];a.segment("0c","0d");a.reloc(`NpcData_${b}`);var f=a.pc();a.byte(...e);a.org(37377+(this.id<<1),`NpcDataPtr_${b}`);a.word(f);a.segment("0a","0b");e=this.rom.compressedMapData?[this.bgm,this.layoutHeight<<4|this.layoutWidth,this.extended<<2|this.animation,...concatIterables$$module$js$rom$util(this.screens)]:
[this.bgm,this.layoutWidth,this.layoutHeight,this.animation,this.extended,...concatIterables$$module$js$rom$util(this.screens)];a.reloc(`MapData_${b}_Layout`);f=a.pc();a.byte(...e);d.push(f);a.reloc(`MapData_${b}_Graphics`);e=a.pc();a.byte(...this.tilePalettes,this.tileset,this.tileEffects,...this.tilePatterns);d.push(e);if(1===this.height){for(var g of this.entrances)g.used&&191<g.y&&(g.y=191);for(var h of this.exits)12<h.yt&&(h.yt=12)}a.reloc(`MapData_${b}_Entrances`);g=a.pc();a.byte(...concatIterables$$module$js$rom$util(this.entrances));
d.push(g);a.reloc(`MapData_${b}_Exits`);g=a.pc();a.byte(...concatIterables$$module$js$rom$util(this.exits),128|(this.pits.length?64:0)|this.entrances.length);d.push(g);a.reloc(`MapData_${b}_Flags`);g=a.pc();a.byte(...concatIterables$$module$js$rom$util(this.flags),255);d.push(g);g=concatIterables$$module$js$rom$util(this.pits);g.length&&(a.reloc(`MapData_${b}_Pits`),h=a.pc(),a.byte(...g),d.push(h));a.reloc(`MapData_${b}`);g=a.pc();a.word(...d);a.org(33536+(this.id<<1),`MapDataPtr_${b}`);a.word(g);
b=this.bossId();if(null!=b&&95!==this.id){d=this.rom.bossKills[b].base;g=[,,,166===this.id?0:this.bgm,,...this.tilePalettes,,,,this.spritePalettes[0],,,,,,,,this.animation];a.segment("0f");for(h=0;h<g.length;h++)e=g[h],null!=e&&(a.org(d+h,`Boss_${b}_${h}`),a.byte(e));a.org(47041+5*b,`Boss_${b}_Post`);a.byte(c[1])}}}allScreens(){const a=new Set,b=this.screenPage;for(const c of this.screens)for(const d of c)a.add(this.rom.screens[d+b]);return a}bossId(){for(let a=0;14>a;a++)if(this.rom.prg[129373+a]===
this.id)return a}hasDolphin(){return 96===this.id||100===this.id||104===this.id}reachableTiles(a){a=void 0===a?!1:a;this.hasDolphin()&&(a=!0);const b=new Set(this.exits.map((a)=>a.screen<<8|a.tile));var c=new UnionFind$$module$js$unionfind;const d=this.rom.tileset(this.tileset),e=this.rom.tileEffects[this.tileEffects-179];var f=new Set;for(let c=0;c<this.height;c++){const h=this.screens[c];for(let k=0;k<this.width;k++){const l=this.rom.screens[h[k]|this.screenPage],m=c<<4|k,q=this.flags.find((a)=>
a.screen===m);for(let c=0;240>c;c++){const h=m<<8|c;if(b.has(h))continue;let k=l.tiles[c];var g=e.effects[k];g=a?g&4:g&6;q&&g&&32>k&&d.alternates[k]!=k&&(k=d.alternates[k],g=e.effects[k],g=a?g&4:g&6);g||f.add(h)}}}for(let b of f)a=15===(b&15)?b+241:b+1,f.has(a)&&c.union([b,a]),a=224===(b&240)?b+3872:b+16,f.has(a)&&c.union([b,a]);f=c.map();c=new Set;for(var h of this.entrances)h.used&&c.add(f.get(h.screen<<8|h.tile)||new Set);h=new Map;for(const a of c)for(const b of a)h.set(b,e.effects[this.rom.screens[this.screens[b>>>
12][b>>>8&15]|this.screenPage].tiles[b&255]]);return h}screenMover(){const a=new DefaultMap$$module$js$util(()=>[]),b=module$js$util.iters.concat(this.spawns,this.exits,this.entrances);for(const c of b)a.get(c.screen).push(c);return(b,d)=>{for(const c of a.get(b))c.screen=d}}moveScreen(a,b){const c=module$js$util.iters.concat(this.spawns,this.exits,this.entrances);for(const d of c)d.screen===a&&(d.screen=b)}monsterPlacer(a){const b=this.data.bossScreen,c=this.reachableTiles(!1),d=new Map([...c.keys()].map((a)=>
[a,0])),e=[],f=[],g=[],h=[],k=[],m=this.hasDolphin()?37:39;for(const a of d){const [k,l]=a;{const a=this.screens[k>>>12][k>>>8&15];if(a!==b){for(const a of neighbors$$module$js$rom$location(k,this.width,this.height))d.has(a)||d.set(a,l+1);l||c.get(k)&m||e.push(k);26===this.id?240===this.rom.screens[a].tiles[k&255]&&h.push(k):2<=l&&4>=l&&h.push(k);3<=l&&7>=l&&f.push(k);12<=l&&g.push(k)}}}return(b)=>{var c=b.placement();c=[..."normal"===c?e:"moth"===c?f:"bird"===c?g:"plant"===c?h:assertNever$$module$js$util(c)];
a:for(;c.length;){var d=a.nextInt(c.length),[l]=c.splice(d,1);d=(l&3840)>>>4|l&15;l=(l&61440)>>>8|(l&240)>>>4;const e=b.clearance();for(const a of k){const [,b,c,f]=a;if(Math.pow(l-c,2)+Math.pow(d-b,2)<Math.pow(e+f,2))continue a}for(const a of this.entrances){const {x:b,y:c,used:f}=a;if(f&&Math.pow(l-(c>>4),2)+Math.pow(d-(b>>4),2)<Math.pow(e+1,2))continue a}k.push([b,d,l,e]);return(l&240|(d&240)>>>4)<<8|(l&15)<<4|d&15}}}resizeScreens(a,b,c,d,e){e=void 0===e?0:e;const f=this.width+b+d;c=this.height+
a+c;d=Array.from({length:c},(c,d)=>{d-=a;return Array.from({length:f},(a,c)=>{c-=b;return 0>d||0>c||d>=this.height||c>=this.width?e:this.screens[d][c]})});this.width=f;this.height=c;this.screens=d;for(const c of this.flags)c.xs+=b,c.ys+=a;for(const c of this.pits)c.fromXs+=b,c.fromYs+=a;for(const c of[...this.spawns,...this.exits])c.xt+=16*b,c.yt+=16*a;for(const c of this.entrances)c.used&&(c.x+=256*b,c.y+=256*a)}writeScreens2d(a,b){const c=a&15;a>>>=4;for(let d=0;d<b.length;d++){const e=b[d];for(let b=
0;b<e.length;b++){let f=e[b];null!=f&&(0>f&&(f=~f,this.flags.push(Flag$$module$js$rom$location.of({screen:a+d<<4|c+b,flag:this.rom.flags.AlwaysTrue.id}))),this.screens[a+d][c+b]=f)}}}connect(a,b,c){var d=0>a?256:0,e=0>c?256:0;a=0>a?~a:a;c=0>c?~c:c;const f=a>>>4,g=a&15,h=c>>>4,k=c&15,[m,l]=screenExits$$module$js$rom$location[d|this.screens[f][g]],[n,p]=screenExits$$module$js$rom$location[e|b.screens[h][k]];d=this.entrances.length;e=b.entrances.length;this.entrances.push(Entrance$$module$js$rom$location.of({y:f<<
8|m>>>8,x:g<<8|m&255}));b.entrances.push(Entrance$$module$js$rom$location.of({y:h<<8|n>>>8,x:k<<8|n&255}));for(const c of l)this.exits.push(Exit$$module$js$rom$location.of({screen:a,tile:c,dest:b.id,entrance:e}));for(const a of p)b.exits.push(Exit$$module$js$rom$location.of({screen:c,tile:a,dest:this.id,entrance:d}))}neighborForEntrance(a){const b=this.entrances[a];if(!b)throw Error(`no entrance ${hex$$module$js$rom$util(this.id)}:${a}`);for(const a of this.exits){if(a.screen!==b.screen)continue;
const c=Math.abs(a.y-b.y);if(24>Math.abs(a.x-b.x)&&24>c)return this.rom.locations[a.dest]}throw Error(`no exit found near ${hex$$module$js$rom$util(this.id)}:${a}`);}}function neighbors$$module$js$rom$location(a,b,c){const d=[],e=a&61680,f=a&3855;e<(c-1<<12|224)&&d.push(224===(a&240)?a+3872:a+16);e&&d.push(0===(a&240)?a-3872:a-16);f<(b-1<<8|15)&&d.push(15===(a&15)?a+241:a+1);f&&d.push(0===(a&15)?a-241:a-1);return d}
const Entrance$$module$js$rom$location=DataTuple$$module$js$rom$util.make(4,{x:DataTuple$$module$js$rom$util.prop([0],[1,255,-8]),y:DataTuple$$module$js$rom$util.prop([2],[3,255,-8]),screen:DataTuple$$module$js$rom$util.prop([3,15,-4],[1,15]),tile:DataTuple$$module$js$rom$util.prop([2,240],[0,240,4]),coord:DataTuple$$module$js$rom$util.prop([2,255,-8],[0,255]),used:{get(){return 255!=this.data[1]}},toString(){return`Entrance ${this.hex()}: (${hex$$module$js$rom$util(this.x)}, ${hex$$module$js$rom$util(this.y)})`}}),
Exit$$module$js$rom$location=DataTuple$$module$js$rom$util.make(4,{x:DataTuple$$module$js$rom$util.prop([0,255,-4]),xt:DataTuple$$module$js$rom$util.prop([0]),y:DataTuple$$module$js$rom$util.prop([1,255,-4]),yt:DataTuple$$module$js$rom$util.prop([1]),screen:DataTuple$$module$js$rom$util.prop([1,240],[0,240,4]),tile:DataTuple$$module$js$rom$util.prop([1,15,-4],[0,15]),dest:DataTuple$$module$js$rom$util.prop([2]),entrance:DataTuple$$module$js$rom$util.prop([3]),isSeamless(){return!!(this.entrance&32)},
toString(){return`Exit ${this.hex()}: (${hex$$module$js$rom$util(this.x)}, ${hex$$module$js$rom$util(this.y)}) => ${this.dest}:${this.entrance}`}}),Flag$$module$js$rom$location=DataTuple$$module$js$rom$util.make(2,{flag:{get(){return this.data[0]|512},set(a){if(512!==(a&-256))throw Error(`bad flag: ${hex$$module$js$rom$util(a)}`);this.data[0]=a&255}},x:DataTuple$$module$js$rom$util.prop([1,7,-8]),xs:DataTuple$$module$js$rom$util.prop([1,7]),y:DataTuple$$module$js$rom$util.prop([1,240,-4]),ys:DataTuple$$module$js$rom$util.prop([1,
240,4]),yx:DataTuple$$module$js$rom$util.prop([1]),screen:DataTuple$$module$js$rom$util.prop([1]),toString(){return`Flag ${this.hex()}: (${hex$$module$js$rom$util(this.xs)}, ${hex$$module$js$rom$util(this.ys)}) @ ${hex$$module$js$rom$util(this.flag)}`}}),Pit$$module$js$rom$location=DataTuple$$module$js$rom$util.make(4,{fromXs:DataTuple$$module$js$rom$util.prop([1,112,4]),toXs:DataTuple$$module$js$rom$util.prop([1,7]),fromYs:DataTuple$$module$js$rom$util.prop([3,240,4]),toYs:DataTuple$$module$js$rom$util.prop([3,
15]),dest:DataTuple$$module$js$rom$util.prop([0]),toString(){return`Pit ${this.hex()}: (${hex$$module$js$rom$util(this.fromXs)}, ${hex$$module$js$rom$util(this.fromYs)}) => ${hex$$module$js$rom$util(this.dest)}:(${hex$$module$js$rom$util(this.toXs)}, ${hex$$module$js$rom$util(this.toYs)})`}}),Spawn$$module$js$rom$location=DataTuple$$module$js$rom$util.make(4,{y:DataTuple$$module$js$rom$util.prop([0,255,-4]),yt:DataTuple$$module$js$rom$util.prop([0]),timed:DataTuple$$module$js$rom$util.booleanProp([1,
128,7]),x:DataTuple$$module$js$rom$util.prop([1,127,-4],[2,64,3]),xt:DataTuple$$module$js$rom$util.prop([1,127]),screen:DataTuple$$module$js$rom$util.prop([0,240],[1,112,4]),tile:DataTuple$$module$js$rom$util.prop([0,15,-4],[1,15]),patternBank:DataTuple$$module$js$rom$util.prop([2,128,7]),type:DataTuple$$module$js$rom$util.prop([2,7]),id:DataTuple$$module$js$rom$util.prop([3]),used:{get(){return 254!==this.data[0]},set(a){this.data[0]=a?0:254}},monsterId:{get(){return this.id+80&255},set(a){this.id=
a-80&255}},isChest(){return 2===this.type&&128>this.id},isInvisible(){return this.isChest()&&!!(this.data[2]&32)},isTrigger(){return 2===this.type&&128<=this.id},isNpc(){return 1===this.type&&192>this.id},isBoss(){return 1===this.type&&192<=this.id},isMonster(){return 0===this.type},isWall(){return!(3!==this.type||!(4>this.id||this.data[2]&32))},isShootingWall(a){return this.isWall()&&!!(this.data[2]&32?this.data[2]&16:143===a.id||168===a.id)},wallType(){if(3!==this.type)return"";const a=this.data[2]&
32?this.id>>>4:this.id;return 4<=a?"":2===a?"bridge":"wall"},wallElement(){return this.isWall()?this.id&3:-1},toString(){return`Spawn ${this.hex()}: (${hex$$module$js$rom$util(this.x)}, ${hex$$module$js$rom$util(this.y)}) ${this.timed?"timed":"fixed"} ${this.type}:${hex$$module$js$rom$util(this.id)}`}}),screenExits$$module$js$rom$location={21:[37024,[137,138]],25:[24720,[88,89]],150:[16432,[50,51]],151:[44848,[178,179]],152:[16592,[60,61]],153:[45008,[188,189]],154:[8064,[39,40]],158:[57216,[231,
232]],193:[20640,[73,74]],194:[24752,[90,91]],410:[53376,[199,200]]};var module$js$rom$location={};module$js$rom$location.Locations=Locations$$module$js$rom$location;module$js$rom$location.Location=Location$$module$js$rom$location;module$js$rom$location.Entrance=Entrance$$module$js$rom$location;module$js$rom$location.Exit=Exit$$module$js$rom$location;module$js$rom$location.Flag=Flag$$module$js$rom$location;module$js$rom$location.Pit=Pit$$module$js$rom$location;module$js$rom$location.Spawn=Spawn$$module$js$rom$location;const EMPTY_ITERATOR$$module$js$rom$constraint={next(){return{done:!0}}},NONE$$module$js$rom$constraint={get size(){return 0},has(){return!1},[Symbol.iterator](){return EMPTY_ITERATOR$$module$js$rom$constraint}},ALL$$module$js$rom$constraint={get size(){return Infinity},has(){return!0},[Symbol.iterator](){throw Error("cannot iterate");}};
class Bit$$module$js$rom$constraint{constructor(a){this.bit=a}get size(){return 1}has(a){return a===this.bit}[Symbol.iterator](){return[this.bit][Symbol.iterator]()}}function bit$$module$js$rom$constraint(a){return new Bit$$module$js$rom$constraint(a)}var CSet$$module$js$rom$constraint;
(function(a){a.intersect=function(a,c){if(a===ALL$$module$js$rom$constraint||!c.size)return c;if(c===ALL$$module$js$rom$constraint||!a.size)return a;const b=new Set;for(const d of a)c.has(d)&&b.add(d);return b.size?b:NONE$$module$js$rom$constraint};a.union=function(a,c){if(a===ALL$$module$js$rom$constraint||!c.size)return a;if(c===ALL$$module$js$rom$constraint||!a.size)return c;a=new Set(a);for(const b of c)a.add(b);return a};a.isSubset=function(a,c){if(c===ALL$$module$js$rom$constraint||!a.size)return!0;
if(a.size>c.size)return!1;for(const b of a)if(!c.has(b))return!1;return!0};a.label=function(a){return a===ALL$$module$js$rom$constraint?"all":[...a].sort().join(" ")}})(CSet$$module$js$rom$constraint||(CSet$$module$js$rom$constraint={}));
class Constraint$$module$js$rom$constraint{constructor(a,b,c){this.fixed=a;this.float=b;this.shift=c}get pat0(){return this.fixed[0]}get pat1(){return this.fixed[1]}get pal2(){return this.fixed[2]}get pal3(){return this.fixed[3]}static get ALL(){return new Constraint$$module$js$rom$constraint([ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint],[],0)}static get NONE(){return new Constraint$$module$js$rom$constraint([NONE$$module$js$rom$constraint,
NONE$$module$js$rom$constraint,NONE$$module$js$rom$constraint,NONE$$module$js$rom$constraint],[],0)}static get MIMIC(){return new Constraint$$module$js$rom$constraint([ALL$$module$js$rom$constraint,bit$$module$js$rom$constraint(108),ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint],[],2)}static get TREASURE_CHEST(){return new Constraint$$module$js$rom$constraint([ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint],[TREASURE_CHEST_BANKS$$module$js$rom$constraint],
0)}static get BOSS(){return new Constraint$$module$js$rom$constraint([TREASURE_CHEST_BANKS$$module$js$rom$constraint,ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint],[],0)}static get COIN(){return new Constraint$$module$js$rom$constraint([COIN_BANKS$$module$js$rom$constraint,ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint],[],0)}static get STOM_FIGHT(){return new Constraint$$module$js$rom$constraint([ALL$$module$js$rom$constraint,
new Set([77]),ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint],[],0)}static get GUARDIAN_STATUE(){return new Constraint$$module$js$rom$constraint([new Set([116]),new Set([98]),ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint],[],0)}static get SHOOTING_WALL(){return new Constraint$$module$js$rom$constraint([new Set([97]),ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint],[],0)}static get KENSU_CHEST(){return new Constraint$$module$js$rom$constraint([new Set([81]),
ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint],[],0)}static forLocation(a){switch(a){case 3:return new Constraint$$module$js$rom$constraint([ALL$$module$js$rom$constraint,bit$$module$js$rom$constraint(96),ALL$$module$js$rom$constraint,bit$$module$js$rom$constraint(32)],[],0);case 96:case 100:case 104:return new Constraint$$module$js$rom$constraint([ALL$$module$js$rom$constraint,bit$$module$js$rom$constraint(82),ALL$$module$js$rom$constraint,bit$$module$js$rom$constraint(8)],
[],0)}return Constraint$$module$js$rom$constraint.ALL}static fromSpawn(a,b,c,d,e){const [f,...g]=b;(e=e&&2===f&&!g.length)&&d.patternBank&&(b=new Set([3]));const h=e||!b.has(2)?ALL$$module$js$rom$constraint:bit$$module$js$rom$constraint(c.spritePatterns[0]);b=e||!b.has(3)?ALL$$module$js$rom$constraint:bit$$module$js$rom$constraint(c.spritePatterns[1]);d=e?[bit$$module$js$rom$constraint(c.spritePatterns[d.patternBank])]:[];e=a.has(2)?bit$$module$js$rom$constraint(c.spritePalettes[0]):ALL$$module$js$rom$constraint;
a=a.has(3)?bit$$module$js$rom$constraint(c.spritePalettes[1]):ALL$$module$js$rom$constraint;return new Constraint$$module$js$rom$constraint([h,b,e,a],d,0)}ignorePalette(){return new Constraint$$module$js$rom$constraint([this.fixed[0],this.fixed[1],ALL$$module$js$rom$constraint,ALL$$module$js$rom$constraint],this.float,this.shift)}shufflePalette(a,b){const c=[...this.fixed];for(let d=2;4>d;d++){if(c[d]===ALL$$module$js$rom$constraint)continue;const e=Math.floor(5-Math.log2(a.nextInt(15)+2)),f=c[d]=
new Set;for(let c=0;c<e;c++)f.add(a.pick(b))}return new Constraint$$module$js$rom$constraint(c,this.float,this.shift)}shifted(){return new Constraint$$module$js$rom$constraint(this.fixed,this.float,this.shift|2)}join(a){const b=seq$$module$js$rom$util(4,(b)=>CSet$$module$js$rom$constraint.union(this.fixed[b],a.fixed[b]));if(this.float.length!==a.float.length)throw console.dir(this),console.dir(a),Error(`incompatible float: ${this.float} ${a.float}`);const c=seq$$module$js$rom$util(this.float.length,
(b)=>CSet$$module$js$rom$constraint.union(this.float[b],a.float[b]));return new Constraint$$module$js$rom$constraint(b,c,this.shift|a.shift)}fix(a,b){var c=b?(a)=>b.nextInt(a):()=>0;const d=b?(a)=>b.pick([...a]):(a)=>a[Symbol.iterator]().next().value,e=[...this.fixed];if(this.float.length){c=c(2);const a=1-c;c<this.float.length&&(e[0]=CSet$$module$js$rom$constraint.intersect(e[0],this.float[c]));a<this.float.length&&(e[1]=CSet$$module$js$rom$constraint.intersect(e[1],this.float[a]))}e[0]!==ALL$$module$js$rom$constraint&&
(a.spritePatterns[0]=d([...e[0]]));e[1]!==ALL$$module$js$rom$constraint&&(a.spritePatterns[1]=d([...e[1]]));e[2]!==ALL$$module$js$rom$constraint&&(a.spritePalettes[0]=d([...e[2]]));e[3]!==ALL$$module$js$rom$constraint&&(a.spritePalettes[1]=d([...e[3]]))}meet(a,b=!1){a=this.tryMeet(a,b);if(!a)throw Error("Could not reconcile patterns");return a}tryMeet(a,b=!1){const c=[];let d=this.shift|a.shift;for(var e=0;4>e;e++){var f=CSet$$module$js$rom$constraint.intersect(this.fixed[e],a.fixed[e]);if(!f.size){if(!b||
2>e)return;f=CSet$$module$js$rom$constraint.union(this.fixed[e],a.fixed[e])}c.push(f)}e=new Map;b=[];for(var g of module$js$util.iters.concat(this.float,a.float)){if(g===ALL$$module$js$rom$constraint)throw Error("Unexpected unconstrained float");a=!1;for(var h of g)if(f=e.get(h),null!=f){for(var k of b[f])e.delete(k);b[f]=CSet$$module$js$rom$constraint.intersect(b[f],g);for(const a of b[f])e.set(a,f);a=!0;break}if(a)break;for(const a of g)e.set(a,b.length);b.push(g);if(2<b.length)return}for(g=0;g<
b.length;g++)for(h=0;2>h;h++)if(!CSet$$module$js$rom$constraint.intersect(b[g],c[h]).size){k=c[1-h]=CSet$$module$js$rom$constraint.intersect(b[g],c[1-h]);d|=1<<1-h;if(!k.size)return;b.splice(g,1);g=-1;break}return new Constraint$$module$js$rom$constraint(c,b,d)}}
const TREASURE_CHEST_BANKS$$module$js$rom$constraint=new Set([94,95,96,97,100,101,102,103,104,105,106,108,109,110,111,112,116,117,118,119]),COIN_BANKS$$module$js$rom$constraint=new Set([94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119]);var module$js$rom$constraint={};module$js$rom$constraint.Constraint=Constraint$$module$js$rom$constraint;class ObjectData$$module$js$rom$objectdata extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.used=!0;this.name="";this.base=readLittleEndian$$module$js$rom$util(a.prg,this.pointer)+65536;this.sfx=a.prg[this.base];this.data=[];b=this.base+1;let c=0;for(let d=0;32>d;d++)d&7||(c=a.prg[b++]),this.data.push(c&128?a.prg[b++]:0),c<<=1}get pointer(){return 109568+(this.id<<1)}serialize(){const a=[this.sfx];for(let b=0;4>b;b++){const c=a.length;a.push(0);for(let d=0;8>d;d++)this.data[8*
b+d]&&(a[c]|=128>>>d,a.push(this.data[8*b+d]))}return a}write(){const a=this.rom.assembler(),b=`Object_${this.id.toString(16).padStart(2,"0")}`;a.segment("0d");a.reloc();a.label(b);a.byte(...this.serialize());a.org(44032+(this.id<<1));a.word({op:"sym",sym:b});return[a.module()]}get(a){return this.data[a-768>>>5]}parents(){return[]}locations(){return this.rom.locations.filter((a)=>a.used&&a.spawns.some((a)=>a.isMonster()&&a.monsterId===this.id))}palettes(a=!1){if(34===this.action)return[3];let b=this.data[0];
42===this.action&&(b=this.data[31]|1);41===this.action&&(b=107);38===this.action&&(b=156);a=a&&this.child?this.rom.metasprites[this.rom.objects[this.rom.adHocSpawns[this.child].objectId].data[0]]:null;return[...new Set([...this.rom.metasprites[b].palettes(),...a?a.palettes():[]])]}isVulnerable(a){return!(this.elements&1<<a)}isShadow(){return 123===this.id||140===this.id}get metasprite(){return METASPRITE$$module$js$rom$objectdata.get(this.data)}set metasprite(a){METASPRITE$$module$js$rom$objectdata.set(this.data,
a)}get speed(){return SPEED$$module$js$rom$objectdata.get(this.data)}set speed(a){SPEED$$module$js$rom$objectdata.set(this.data,a)}get collisionPlane(){return COLLISION_PLANE$$module$js$rom$objectdata.get(this.data)}set collisionPlane(a){COLLISION_PLANE$$module$js$rom$objectdata.set(this.data,a)}get hitbox(){return HITBOX$$module$js$rom$objectdata.get(this.data)}set hitbox(a){HITBOX$$module$js$rom$objectdata.set(this.data,a)}get hp(){return HP$$module$js$rom$objectdata.get(this.data)}set hp(a){HP$$module$js$rom$objectdata.set(this.data,
a)}get atk(){return ATK$$module$js$rom$objectdata.get(this.data)}set atk(a){ATK$$module$js$rom$objectdata.set(this.data,a)}get def(){return DEF$$module$js$rom$objectdata.get(this.data)}set def(a){DEF$$module$js$rom$objectdata.set(this.data,a)}get level(){return LEVEL$$module$js$rom$objectdata.get(this.data)}set level(a){LEVEL$$module$js$rom$objectdata.set(this.data,a)}get poison(){return!!POISON$$module$js$rom$objectdata.get(this.data)}set poison(a){POISON$$module$js$rom$objectdata.set(this.data,
a?1:0)}get child(){return CHILD$$module$js$rom$objectdata.get(this.data)}set child(a){CHILD$$module$js$rom$objectdata.set(this.data,a)}get terrainSusceptibility(){return TERRAIN_SUSCEPTIBILITY$$module$js$rom$objectdata.get(this.data)}set terrainSusceptibility(a){TERRAIN_SUSCEPTIBILITY$$module$js$rom$objectdata.set(this.data,a)}get immobile(){return!!IMMOBILE$$module$js$rom$objectdata.get(this.data)}set immobile(a){IMMOBILE$$module$js$rom$objectdata.set(this.data,a?1:0)}get action(){return ACTION$$module$js$rom$objectdata.get(this.data)}set action(a){ACTION$$module$js$rom$objectdata.set(this.data,
a)}get replacement(){return REPLACEMENT$$module$js$rom$objectdata.get(this.data)}set replacement(a){REPLACEMENT$$module$js$rom$objectdata.set(this.data,a)}get goldDrop(){return GOLD_DROP$$module$js$rom$objectdata.get(this.data)}set goldDrop(a){GOLD_DROP$$module$js$rom$objectdata.set(this.data,a)}get elements(){return ELEMENTS$$module$js$rom$objectdata.get(this.data)}set elements(a){ELEMENTS$$module$js$rom$objectdata.set(this.data,a)}get expReward(){return EXP_REWARD$$module$js$rom$objectdata.get(this.data)}set expReward(a){EXP_REWARD$$module$js$rom$objectdata.set(this.data,
a)}get attackType(){return ATTACK_TYPE$$module$js$rom$objectdata.get(this.data)}set attackType(a){ATTACK_TYPE$$module$js$rom$objectdata.set(this.data,a)}get statusEffect(){return STATUS_EFFECT$$module$js$rom$objectdata.get(this.data)}set statusEffect(a){STATUS_EFFECT$$module$js$rom$objectdata.set(this.data,a)}}function prop$$module$js$rom$objectdata(...a){return new Stat$$module$js$rom$objectdata(...a)}
class Stat$$module$js$rom$objectdata{constructor(...a){this.spec=a}get(a){let b=0;for(const [c,d=255,e=0]of this.spec)b|=(a[c-768>>>5]&d)>>>(0>e?0:e)<<(0>e?-e:0);return b}set(a,b){for(const [c,d=255,e=0]of this.spec){const f=c-768>>>5;a[f]=a[f]&~d|b>>>(0>e?-e:0)<<(0>e?0:e)&d}}}
const METASPRITE$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([768]),SPEED$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([832,15]),COLLISION_PLANE$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([928,240,4]),HITBOX$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1056,64,2],[928,15]),HP$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([960]),ATK$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([992]),DEF$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1024]),
LEVEL$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1056,31]),POISON$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1056,128,7]),CHILD$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1088]),TERRAIN_SUSCEPTIBILITY$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1120]),IMMOBILE$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1184,128,7]),ACTION$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1184,127]),REPLACEMENT$$module$js$rom$objectdata=
prop$$module$js$rom$objectdata([1216]),GOLD_DROP$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1280,240,4]),ELEMENTS$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1280,15]),EXP_REWARD$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1312]),ATTACK_TYPE$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1344]),STATUS_EFFECT$$module$js$rom$objectdata=prop$$module$js$rom$objectdata([1376,15]);var module$js$rom$objectdata={};module$js$rom$objectdata.ObjectData=ObjectData$$module$js$rom$objectdata;class Monster$$module$js$rom$monster extends ObjectData$$module$js$rom$objectdata{constructor(a,b){var [c,d,e,f={}]=b;super(a,d);this.constraint=Constraint$$module$js$rom$constraint.ALL;this.name=c;a=(level$$module$js$rom$monster(e)+this.level)/2;b=a+playerSword$$module$js$rom$monster(e,this.elements);this.hits=(this.hp+1)/(b-this.def);this.sdef=this.def/b;a=Math.min(255,Math.max(16,32+16*a));this.satk=(this.atk-expectedPlayerDefense$$module$js$rom$monster(e,this.attackType))/a;this.extraDifficulty=
f.difficulty||0;this.monsterClass=f.monsterClass;a=processExpReward$$module$js$rom$monster(this.expReward)/baselineExp$$module$js$rom$monster(e);this.wealth=(b=VANILLA_GOLD_DROPS$$module$js$rom$monster[this.goldDrop]/baselineGold$$module$js$rom$monster(e))&&b/(a+b)}placement(){const a=ACTION_SCRIPTS$$module$js$rom$monster.get(this.action);return a&&a.placement||"normal"}clearance(){const a=ACTION_SCRIPTS$$module$js$rom$monster.get(this.action);return a&&a.large?6:3}totalDifficulty(){return this.toughness()+
this.attack()+this.statusDifficulty()+this.immunities()+this.movement()}collectDifficulty(a,b){let c=a(this);var d=this.spawnedChild();d&&(c=b(c,d.collectDifficulty(a,b)));(d=this.spawnedReplacement())&&(c=b(c,d.collectDifficulty(a,b)));return c}toughness(){return this.collectDifficulty((a)=>lookup$$module$js$rom$monster(a.hits,0,[2,1],[3,2],[5,3],[7,4],[10,5],[13,6]),Math.max)}attack(){return this.collectDifficulty((a)=>a.attackType&&a.statusEffect?0:lookup$$module$js$rom$monster(a.satk,0,[.04,1],
[.08,2],[.13,3],[.18,4],[.25,5],[.33,6]),Math.max)}addStatusEffects(a){this.attackType&&this.statusEffect?a.add(this.statusEffect):!this.attackType&&this.poison&&a.add(0);var b=this.spawnedReplacement();b&&b.addStatusEffects(a);(b=this.spawnedChild())&&b.addStatusEffects(a)}statusDifficulty(){const a=new Set;this.addStatusEffects(a);let b=0;for(const c of a)b+=STATUS_DIFFICULTY$$module$js$rom$monster[c];return b}immunities(){let a=0,b=this.elements;for(;b;)b&1&&a++,b>>>=1;return a&&1<<a-1}movement(){return this.collectDifficulty((a)=>
{const b=ACTION_SCRIPTS$$module$js$rom$monster.get(a.action),c=a.spawnedChild();a=a.extraDifficulty;b&&(a+=b.movement||0,b.large&&a++,c&&!c.statusEffect&&(a+=b.projectile||0));167===this.metasprite&&(a+=2);return a},(a,b)=>a+b)}spawnedChild(){var a=ACTION_SCRIPTS$$module$js$rom$monster.get(this.action);if(a&&a.child&&(a=(a=this.rom.adHocSpawns[this.child])&&a.objectId,null!=a))return a=this.rom.objects[a],a instanceof Monster$$module$js$rom$monster?a:void 0}spawnedReplacement(){if(this.replacement){var a=
this.rom.objects[this.replacement];return a instanceof Monster$$module$js$rom$monster?a:void 0}}totalReward(){return this.totalDifficulty()/4}normalizedGold(){if(!this.wealth)return 0;const a=this.totalDifficulty()*this.wealth*.6;return Math.max(1,Math.min(15,Math.round(a)))}normalizedExp(){if(1===this.wealth)return 0;const a=.488+this.totalDifficulty()*(1-this.wealth)*.256;return Math.max(1,Math.min(255,Math.round(32*a)))}}
function processExpReward$$module$js$rom$monster(a){return 128>a?a:(a&127)<<4}function baselineExp$$module$js$rom$monster(a){return Math.pow(2,a/5-1)}const STATUS_DIFFICULTY$$module$js$rom$monster=[2,1,3,2,4],VANILLA_GOLD_DROPS$$module$js$rom$monster=[0,1,2,4,8,16,30,50,100,200,400,50,100,200,400,500];function baselineGold$$module$js$rom$monster(a){return Math.pow(2,a/7-1)}
const ACTION_SCRIPTS$$module$js$rom$monster=new Map([[16,{}],[17,{}],[22,{}],[23,{}],[27,{}],[29,{child:!0}],[30,{}],[31,{}],[32,{movement:1}],[33,{child:!0,large:!0,movement:2}],[34,{child:!0,movement:3}],[36,{movement:3}],[37,{movement:3}],[38,{child:!0,projectile:1,movement:3}],[39,{child:!0,projectile:1,movement:3}],[40,{child:!0,projectile:2,movement:3,metasprites:()=>[101,145]}],[41,{child:!0,movement:5,metasprites:()=>[107,104]}],[42,{child:!0,projectile:1,movement:4,metasprites:(a)=>[0,1,
2,3].map((b)=>b+a.data[31])}],[43,{movement:4}],[44,{child:!0}],[46,{child:!0,large:!0,projectile:2,movement:3}],[47,{}],[52,{child:!0}],[56,{}],[60,{}],[64,{child:!0,moth:!0,movement:4,placement:"moth"}],[65,{child:!0,movement:3}],[68,{movement:3}],[69,{child:!0,bird:!0,projectile:2,movement:5,placement:"bird"}],[76,{child:!0,stationary:!0,projectile:3,placement:"plant"}],[77,{child:!0,stationary:!0,projectile:3}],[78,{child:!0,stationary:!0}],[87,{}],[88,{}],[92,{child:!0,projectile:3,movement:1}],
[93,{bird:!0,movement:6,placement:"bird"}],[94,{child:!0,projectile:1,movement:4,metasprites:(a)=>[0,1,2,3].map((b)=>b+a.data[31])}],[96,{boss:!0}],[97,{}],[99,{boss:!0}],[100,{boss:!0}],[102,{boss:!0}],[103,{boss:!0}],[104,{boss:!0}],[106,{boss:!0}],[107,{boss:!0}],[112,{boss:!0}],[127,{boss:!0}]]);function level$$module$js$rom$monster(a){return 24>a?1+a/3:(a+12)/4}
function playerSword$$module$js$rom$monster(a,b){b=void 0===b?0:b;a=10>a?1:18>a?2:38>a?4:8;for(let c=a;c;c>>>=1)if(!(c&b))return c<<1;return a<<1}function expectedPlayerDefense$$module$js$rom$monster(a,b){return level$$module$js$rom$monster(a)+playerArmor$$module$js$rom$monster(a,b)}
function playerArmor$$module$js$rom$monster(a,b){return b?lookup$$module$js$rom$monster(a,2,[6,6],[18,8],[25,12],[30,18],[37,24],[42,32]):lookup$$module$js$rom$monster(a,2,[6,6],[18,10],[25,14],[30,18],[40,24],[46,32])}function lookup$$module$js$rom$monster(a,b,...c){for(let b=c.length-1;0<=b;b--){const [d,f]=c[b];if(a>=d)return f}return b}var module$js$rom$monster={};module$js$rom$monster.Monster=Monster$$module$js$rom$monster;module$js$rom$monster.ACTION_SCRIPTS=ACTION_SCRIPTS$$module$js$rom$monster;class Maze$$module$js$maze$maze{constructor(a,b,c,d,e){this.random=a;this.height=b;this.width=c;this.extraTiles=e;this.extraTilesMap=[];this.map=Array(b<<4).fill(void 0);this.screens=new Map(d.map((a)=>[a.edges,a]));this.allPos=new Set([].concat(...seq$$module$js$rom$util(b,(a)=>seq$$module$js$rom$util(c,(b)=>a<<4|b))));this.allPosArray=[...this.allPos];a=new DefaultMap$$module$js$util(()=>[]);for(const b of this.screens){const [c,e]=b;if(!e.fixed)for(const b of module$js$maze$types.Dir.ALL)d=15<<
(b<<2),c&d&&a.get(c&~d&65535).push([b,c])}this.screenExtensions=a;this.border=Array(b<<4).fill(0);e&&(this.counts=new Multiset$$module$js$util)}*alternates(){for(const a of this.allPos){const b=this.map[a];if(null!=b)for(let c=65536;2097152>c;c<<=1){const d=b|c,e=this.screens.get(d);b&c||!e||(yield[a,c,d,e])}}}saveExcursion(a){let b=[...this.map],c=this.counts?[...this.counts]:null,d=[...this.border];try{if(a())return!0}catch(e){throw this.map=b,this.border=d,c&&(this.counts=new Multiset$$module$js$util(c)),
e;}this.map=b;this.border=d;c&&(this.counts=new Multiset$$module$js$util(c));return!1}*extensions(){const a=new UnionFind$$module$js$unionfind,b=[];for(const d of this.allPos){var c=this.map[d];if(null==c)for(const b of[d-1,d-16])this.empty(b)&&a.union([d,b]);else for(const a of this.screenExtensions.get(c&65535)){const [e,g]=a;c=module$js$maze$types.Pos.plus(d,e);!this.map[c]&&this.inBounds(c)&&b.push([d,g,e,0])}}for(const c of b){const [b,,d]=c;c[3]=a.find(module$js$maze$types.Pos.plus(b,d))<<4|
module$js$maze$types.Scr.edge(c[1],c[2]);yield c}}*eligible(a,b){b=void 0===b?{}:b;const {allowed:c,skipAlternates:d,maxExits:e,edge:f,fuzzy:g,stair:h}=b;var k=null!=f?f|f<<4|f<<8|f<<12:void 0;let m=b=0,l=0;for(var n of module$js$maze$types.Dir.ALL){var p=module$js$maze$types.Dir.edgeMask(n),q=module$js$maze$types.Dir.edgeMask(module$js$maze$types.Dir.inv(n));let c=this.get(a,n);null==c&&(c=k);null!=c&&(l|=((c&q)>>>8|(c&q)<<8)&65535,b|=p,g&&this.isFixed(module$js$maze$types.Pos.plus(a,n))&&(m|=p))}g||
(m=b);a=l&m;n=[];k=Infinity;p=c?module$js$util.iters.map(c,(a)=>[a,this.screens.get(a)]):this.screens;for(const c of p){const [f,w]=c;if(!w)throw Error("Bad Scr in 'allowed'!");if(!(w.fixed||d&&w.edges&-65536||null!=h&&!w.stairs.some((a)=>a.dir===h)||null==h&&w.stairs.length||(f&m)!==a||e&&module$js$maze$types.Scr.numExits(f)>e))if(g){p=0;q=f&b^l;for(const a of module$js$maze$types.Dir.ALL)q&15<<module$js$maze$types.Dir.shift(a)&&p++;p<k?(k=p,n=[f]):p===k&&n.push(f)}else yield f}g&&(yield*n)}fill(a,
b){b=void 0===b?{}:b;if(b.force&&b.fuzzy)throw Error("invalid");const c=[...this.eligible(a,b)];if(!c.length){if(b.deleteNeighbors)for(const c of module$js$maze$types.Dir.ALL)b=module$js$maze$types.Pos.plus(a,c),this.isFixed(b)||this.setInternal(b,null);return!1}if(b.fuzzy)return this.setAndUpdate(a,this.random.pick(c),b);this.set(a,this.random.pick(c),b);return!0}fillPath(a,b,c,d,e){e=void 0===e?{}:e;return this.saveExcursion(()=>{var f=[...c];for(const c of f){f=module$js$maze$types.Dir.turn(b,
c);a=module$js$maze$types.Pos.plus(a,b);let g=module$js$maze$types.Scr.fromExits(module$js$maze$types.DirMask.of(module$js$maze$types.Dir.inv(b),f),d);const k=e.pathAlternatives&&e.pathAlternatives.get(g);k&&(g|=this.random.pick(k)<<16);if(!this.trySet(a,g,e))return!1;b=f}return this.fill(module$js$maze$types.Pos.plus(a,b),Object.assign({},e,{maxExits:2}))})}fillAll(a){a=void 0===a?{}:a;const b=a.shuffleOrder?this.random.shuffle([...this.allPos]):this.allPos;for(const c of b)if(null==this.map[c]&&
!this.fill(c,a)){a.print&&console.log(`Could not fill ${hex$$module$js$rom$util(c)}\n${this.show()}`);if(a.fuzzy)return!1;throw Error(`Could not fill ${hex$$module$js$rom$util(c)}`);}return!0}randomPos(){return this.random.pick(this.allPosArray)}addScreen(a){for(const b of this.random.shuffle([...this.allPos]))if(null==this.map[b]&&this.trySet(b,a))return b}addDeadEnd(){return!1}addLoop(a){a=void 0===a?{}:a;var b=new DefaultMap$$module$js$util(()=>[]);for(var c of this.extensions()){const [a,d,e,
f]=c;b.get(f).push([a,d,e,f&15])}b=[...b.values()];this.random.shuffle(b);do if(c=b.pop(),!c)return!1;while(2>c.length);this.random.shuffle(c);const [[d,e,f,g],[h,k,m]]=c;return this.saveExcursion(()=>{this.replace(d,e);this.replace(h,k);var b=module$js$maze$types.Pos.plus(h,m);if(module$js$maze$types.Pos.plus(d,f)===b)return this.fill(b,Object.assign({},a,{maxExits:2,replace:!0}));const [c,p]=module$js$maze$types.Pos.relative(d,f,b);b=0;for(const e of module$js$maze$types.Path.generate(this.random,
c,p)){if(this.fillPath(d,f,e,g,Object.assign({},a,{replace:!0})))break;if(20<++b)return!1}return!0})}connect(a,b,c,d,e){null==b&&(b=this.findEmptyDir(a));if(null==b)return!1;const f=module$js$maze$types.Scr.edge(this.map[a]||0,b);if(null==c){c=[];for(var g of this.extensions()){const [a,b,,d]=g;(d&15)===f&&c.push([a,b,0])}if(!c.length)return!1;g=this.random.pick(c);this.replace(c=g[0],g[1])}null==d&&(d=this.findEmptyDir(c));if(null==b||null==d)return!1;if(f!==module$js$maze$types.Scr.edge(this.map[c]||
0,d))throw Error("Incompatible exit types");c=module$js$maze$types.Pos.plus(c,d);const [h,k]=module$js$maze$types.Pos.relative(a,b,c);d=0;for(const c of module$js$maze$types.Path.generate(this.random,h,k)){if(this.fillPath(a,b,c,f,e))break;if(20<++d)return!1}return!0}findEmptyDir(a){const b=this.map[a];if(null==b)return null;const c=[];for(const d of module$js$maze$types.Dir.ALL)module$js$maze$types.Scr.edge(b,d)&&this.empty(module$js$maze$types.Pos.plus(a,d))&&c.push(d);return 1===c.length?c[0]:
null}inBounds(a){return 0<=a&&(a&15)<this.width&&a>>>4<this.height}isFixed(a){if(!this.inBounds(a))return!0;a=this.map[a];if(null==a)return!1;a=this.screens.get(a);return!(null==a||!a.fixed&&!a.stairs.length)}density(){return this.allPosArray.filter((a)=>this.map[a]).length/(this.width*this.height)}size(){return this.allPosArray.filter((a)=>this.map[a]).length}trim(){const a=new Set;for(var b of this.screens.values())b.edges||a.add(b.tile);b=(b)=>!this.map[b]||a.has(this.screens.get(this.map[b]).tile);
for(const a=0;seq$$module$js$rom$util(this.width,(b)=>a<<4|b).every(b);)this.map.splice(0,16),this.border.splice(0,16),this.height--;for(let a=this.height-1;0<=a&&seq$$module$js$rom$util(this.width,(b)=>a<<4|b).every(b);a--)this.map.splice(this.height-1<<4,16),this.border.splice(this.height-1<<4,16),this.height--;for(const a=0;seq$$module$js$rom$util(this.height,(b)=>b<<4|a).every(b);){for(var c=this.height-1;0<=c;c--)delete this.map[c<<4|a],this.border[c<<4|a]=0;this.map.push(this.map.shift());this.width--}for(let a=
this.width-1;0<=a&&seq$$module$js$rom$util(this.height,(b)=>b<<4|a).every(b);a--){for(c=this.height-1;0<=c;c--)delete this.map[c<<4|a],this.border[c<<4|a]=0;this.width--}}*[Symbol.iterator](){for(const a of this.allPos){const b=this.map[a];null!=b&&(yield[a,b])}}get(a,b){const c=null!=b?module$js$maze$types.Pos.plus(a,b):a;return this.inBounds(c)?this.map[c]:this.border[a]&15<<((b^2)<<2)}getEdge(a,b){a=this.map[a];if(null!=a)return a>>module$js$maze$types.Dir.shift(b)&15}getSpec(a){a=this.map[a];
return null!=a?this.screens.get(a):a}setBorder(a,b,c){if(!this.inBounds(a)||this.inBounds(module$js$maze$types.Pos.plus(a,b)))throw Error(`Not on border: ${hex$$module$js$rom$util(a)}, ${b}`);if(null!=this.map[a])throw Error("Must set border first.");b=(b^2)<<2;if(this.border[a]&15<<b)throw Error("Border already set");this.border[a]|=c<<b}replaceEdge(a,b,c){const d=module$js$maze$types.Pos.plus(a,b);if(!this.inBounds(a))throw Error(`Out of bounds ${hex$$module$js$rom$util(a)}`);if(!this.inBounds(d))throw Error(`Out of bounds ${hex$$module$js$rom$util(d)}`);
let e=this.map[a],f=this.map[d];if(null==e)throw Error(`No screen for ${hex$$module$js$rom$util(a)}`);if(null==f)throw Error(`No screen for ${hex$$module$js$rom$util(d)}`);const g=module$js$maze$types.Dir.edgeMask(b),h=c<<module$js$maze$types.Dir.shift(b),k=module$js$maze$types.Dir.edgeMask(module$js$maze$types.Dir.inv(b));b=c<<module$js$maze$types.Dir.shift(module$js$maze$types.Dir.inv(b));e=e&~g|h;f=f&~k|b;if(!this.screens.has(e)||!this.screens.has(f))return!1;this.setInternal(a,e);this.setInternal(d,
f);return!0}setAndUpdate(a,b,c){c=void 0===c?{}:c;return this.saveExcursion(()=>{const d="function"===typeof c.fuzzy?c.fuzzy(c):Object.assign({},c,{fuzzy:c.fuzzy&&c.fuzzy-1,replace:!0});this.setInternal(a,b);for(const b of module$js$maze$types.Dir.ALL)if(!this.checkFit(a,b)){const c=module$js$maze$types.Pos.plus(a,b);if(this.isFixed(c)||!this.fill(c,d))return!1}return!0})}set(a,b,c){c=void 0===c?{}:c;if(!(c.force||(c.replace?this.fits(a,b):this.fitsAndEmpty(a,b))))throw c=this.map[a],c=null!=c?hex5$$module$js$rom$util(c):
"empty",Error(`Cannot overwrite ${hex$$module$js$rom$util(a)} (${c}) with ${hex5$$module$js$rom$util(b)}`);if(!this.screens.has(b))throw Error(`No such screen ${hex5$$module$js$rom$util(b)}`);this.inBounds(a)&&this.setInternal(a,b)}trySet(a,b,c){c=void 0===c?{}:c;if(!(c.force||(c.replace?this.fits(a,b):this.fitsAndEmpty(a,b))))return!1;if(!this.screens.has(b))throw Error(`No such screen ${hex5$$module$js$rom$util(b)}`);this.setInternal(a,b);return!0}replace(a,b){if(!this.fits(a,b)||!this.inBounds(a))throw Error(`Cannot place ${hex5$$module$js$rom$util(b)} at ${hex$$module$js$rom$util(a)}`);
if(!this.screens.has(b))throw Error(`No such screen ${hex5$$module$js$rom$util(b)}`);this.setInternal(a,b)}delete(a){this.setInternal(a,null)}setInternal(a,b){const c=this.map[a];null==b?(this.map[a]=void 0,this.counts&&null!=c&&this.counts.delete(c)):(this.map[a]=b,this.counts&&(null!=c&&this.counts.delete(c),this.counts.add(b)))}fitsAndEmpty(a,b){return this.empty(a)&&this.fits(a,b)}empty(a){return null==this.map[a]&&this.inBounds(a)}fits(a,b){for(const c of module$js$maze$types.Dir.ALL){const d=
this.get(a,c);if(null!=d&&module$js$maze$types.Scr.edge(b,c)!==module$js$maze$types.Scr.edge(d,module$js$maze$types.Dir.inv(c)))return!1}return!0}checkFit(a,b){const c=this.get(a);a=this.get(a,b);return null==c||null==a?!0:module$js$maze$types.Scr.edge(c,b)!==module$js$maze$types.Scr.edge(a,module$js$maze$types.Dir.inv(b))?!1:!0}traverse(a){a=void 0===a?{}:a;var b=new Set(a.without||[]),c=!a.noFlagged,d=new UnionFind$$module$js$unionfind;for(const f of this.allPos)if(!b.has(f)){var e=this.map[f];
if(null!=e&&(e=this.screens.get(e),null!=e)){for(const a of e.connections)d.union(a.map((a)=>(f<<8)+a));if(e.wall)for(const a of e.wall.connections(c))d.union(a.map((a)=>(f<<8)+a));a.flight&&e.connections.length&&!e.deadEnd&&d.union(e.connections.map((a)=>(f<<8)+a[0]))}}a=new Map;d=d.sets();for(b=0;b<d.length;b++){c=d[b];for(const b of c)a.set(b,c)}return a}consolidate(a,b,c){if(!this.counts||!this.extraTiles)throw Error("Cannot run consolidate without counts.");var d=new Set(a);const e=new Set;for(var f of this.screens.values())f.fixed||
(0>f.tile||d.has(f.tile))&&e.add(f.edges);d=new Set;for(var g of this.counts)[f]=g,e.has(f)||d.add(f);g=d.size+a.length;for(d=1E3;this.counts.unique()>g&&--d;){var h=[...this.counts].filter((a)=>e.has(a[0])).sort((a,b)=>b[1]-a[1]).map((a)=>a[0]);f=new Set(h.slice(0,a.length));h=new Set(h.slice(a.length));const c=this.random.shuffle([...this.allPos]);for(var k of c)if(h.has(this.map[k])&&this.tryConsolidate(k,f,h,b))break}if(!d)return!1;b=new Set([...this.counts].filter((a)=>e.has(a[0])).map((a)=>
a[0]));a=[];for(var m of e){k=this.screens.get(m);if(!k)throw Error("missing spec");0<=k.tile&&(b.has(m)?b.delete(m):a.push(k.tile))}for(const d of b){m=a.pop();b=this.screens.get(d);if(null==m||!b)throw Error("No available screen");c.screens[m].tiles.splice(0,240,...this.extraTiles[~b.tile]);this.extraTilesMap[~b.tile]=m}return!0}tryConsolidate(a,b,c,d){const e=this.map[a];if(null==e)throw Error("Expected defined");for(const g of this.random.shuffle([...b])){const h=e^g;for(const e of module$js$maze$types.Dir.ALL){var f=
module$js$maze$types.Dir.edgeMask(e);if(h&~f)continue;const k=module$js$maze$types.Pos.plus(a,e);f=this.map[k];if(null==f)break;if(!c.has(f)&&!b.has(f))break;const l=g>>>module$js$maze$types.Dir.shift(e)&15,n=module$js$maze$types.Dir.inv(e),p=module$js$maze$types.Dir.edgeMask(n),q=f&~p|l<<module$js$maze$types.Dir.shift(n);if(c.has(q)&&!c.has(f))break;if(this.saveExcursion(()=>{this.setInternal(a,g);this.setInternal(k,q);return d()}))return!0}}return!1}show(a){a=void 0===a?!1:a;const b=" "+seq$$module$js$rom$util(this.width).join("")+
"\n",c=seq$$module$js$rom$util(this.height,(b)=>b.toString(16)+seq$$module$js$rom$util(this.width,(c)=>{c=this.map[b<<4|c];if(a)return" "+(c||0).toString(16).padStart(5,"0");if(null==c)return" ";var d=this.screens.get(c);if(d)return d.icon;d=0;for(const a of module$js$maze$types.Dir.ALL)c&15<<(a<<2)&&(d|=1<<(a<<2));return UNICODE_TILES$$module$js$maze$maze[d]||" "}).join("")).join("\n");return b+c}write(a,b){for(var c of a.flags)b.add(c.flag);c=0;const d={wall:[],bridge:[]};for(var e of a.spawns){var f=
e.wallType();f&&d[f].push(e);"wall"===f&&(c=e.wallElement())}a.flags=[];a.width=this.width;a.height=this.height;for(e=0;e<this.height;e++)for(a.screens[e]=[],f=0;f<this.width;f++){const h=e<<4|f;var g=this.map[h];if(null==g)throw Error(`Missing screen at pos ${hex$$module$js$rom$util(h)}`);const k=this.screens.get(g);if(!k)throw Error(`Missing spec for ${hex5$$module$js$rom$util(g)} at ${hex$$module$js$rom$util(h)}`);a.screens[e].push(0>k.tile?this.extraTilesMap[~k.tile]:k.tile);k.flag&&a.flags.push(Flag$$module$js$rom$location.of({screen:h,
flag:752}));k.wall&&(a.flags.push(Flag$$module$js$rom$location.of({screen:h,flag:pop$$module$js$maze$maze(b)})),(g=d[k.wall.type].pop())||(g=Spawn$$module$js$rom$location.of({screen:h,tile:k.wall.tile,type:3,id:"wall"===k.wall.type?c:2}),a.spawns.push(g)),g.screen=h,g.tile=k.wall.tile)}}finish(a,b){this.trim();a=new MazeFinisher$$module$js$maze$maze(this,b,a,this.random);if(!a.shuffleFixed())return fail$$module$js$maze$maze("could not shuffle fixed",this);if(!a.placeExits())return fail$$module$js$maze$maze("could not place exits",
this);this.write(b,new Set);a.placeNpcs();b.rom.spoiler&&b.rom.spoiler.addMaze(b.id,b.name,this.show());return!0}}const DEBUG$$module$js$maze$maze=!1;function fail$$module$js$maze$maze(a,b){DEBUG$$module$js$maze$maze&&console.error(`Reroll: ${a}`);b&&DEBUG$$module$js$maze$maze&&console.log(b.show());return!1}
class MazeFinisher$$module$js$maze$maze{constructor(a,b,c,d){this.maze=a;this.loc=b;this.survey=c;this.random=d;this.poi=new DefaultMap$$module$js$util(()=>[]);this.fixedPos=new DefaultMap$$module$js$util(()=>[]);this.posMapping=new Map;this.allEdges=[[],[],[],[]];this.fixedEdges=[[],[],[],[]];this.allStairs=[[],[],[],[]];this.stairDisplacements=new Map;for(var e of a){const [a,c]=e;b=this.maze.getSpec(a);b.fixed&&this.fixedPos.get(c).push(a);for(const c of b.poi){const {priority:b,dy:d,dx:e}=c;this.poi.get(b).push([((a&
240)<<4)+d,((a&15)<<8)+e])}}for(const b of module$js$maze$types.Dir.ALL)for(const c of module$js$maze$types.Dir.allEdge(b,a.height,a.width))(e=a.get(c))&&(e=module$js$maze$types.Scr.edge(e,b))&&7!=e&&(a.getSpec(c).fixed?this.fixedEdges[b].push(c):this.allEdges[b].push(c));for(const b of a){const [d,e]=b;a=c.specSet.stairScreens.get(e);null!=a&&this.allStairs[a[0]].push([d,a[1]])}}shuffleFixed(){for(var a of this.fixedPos.values())this.random.shuffle(a);for(const b of this.survey.fixed){const [c,d]=
b;a=this.fixedPos.get(d.edges).pop();if(null==a)return!1;this.posMapping.set(c,a)}return!0}placeExits(){this.loc.exits=[];for(var a of module$js$maze$types.Dir.ALL)this.random.shuffle(this.allEdges[a]),this.random.shuffle(this.fixedEdges[a]);this.random.shuffle(this.allStairs[module$js$maze$types.Dir.UP]);this.random.shuffle(this.allStairs[module$js$maze$types.Dir.DOWN]);for(var b of this.survey.edges){const [e,f]=b;a=(this.survey.fixed.has(e)?this.fixedEdges:this.allEdges)[f.dir].pop();if(null==
a)return!1;this.posMapping.set(e,a);var c=module$js$maze$types.Scr.edge(this.maze.get(a),f.dir);c=EDGE_TYPES$$module$js$maze$spec[c][f.dir];this.loc.entrances[f.entrance]=Entrance$$module$js$rom$location.of({screen:a,coord:c.entrance});for(var d of c.exits)this.loc.exits.push(Exit$$module$js$rom$location.of({screen:a,tile:d,dest:f.exit>>>8,entrance:f.exit&255}))}for(const e of this.survey.stairs){const [f,g]=e;b=this.allStairs[g.dir].pop();if(null==b)throw Error("missing stair");this.posMapping.set(f,
b[0]);d=this.loc.entrances[g.entrance];a=d.tile&15;c=d.tile>>>4;d.screen=b[0];d.coord=b[1].entrance;this.stairDisplacements.set(f,[(d.tile>>>4)-c,(d.tile&15)-a]);for(const a of b[1].exits)this.loc.exits.push(Exit$$module$js$rom$location.of({screen:b[0],tile:a,dest:g.exit>>>8,entrance:g.exit&255}))}return!0}placeMonster(a,b){const c=this.loc.rom.objects[a.monsterId];c instanceof Monster$$module$js$rom$monster&&(b=b(c),null==b?(console.error(`no valid location for ${hex$$module$js$rom$util(c.id)} in ${hex$$module$js$rom$util(this.loc.id)}`),
a.used=!1):(a.screen=b>>>8,a.tile=b&255))}placeNpcs(){const a=new Map,b=this.loc.monsterPlacer(this.random);for(const e of this.loc.spawns)if(3!==e.type)if(e.isMonster())this.placeMonster(e,b);else{var c=a.get(e.y<<12|e.x);if(null!=c)e.y=c>>>12,e.x=c&4095;else{c=e.screen;var d=this.posMapping.get(c);if(null!=d){if(e.screen=d,c=this.stairDisplacements.get(c),null!=c){const [a,b]=c;e.yt+=a;e.xt+=b}}else if(e.isTrigger())140===e.id?e.screen=this.posMapping.get(33)-16:console.error(`unhandled trigger: ${e.id}`);
else{c=[...this.poi.keys()].sort((a,b)=>a-b);if(!c.length)throw Error("no poi");for(const b of c){c=this.poi.get(b);if(!c.length)continue;d=e.y<<12|e.x;const f=this.random.nextInt(c.length);[[e.y,e.x]]=c.splice(f,1);a.set(d,e.y<<12|e.x);c.length||this.poi.delete(b);break}}}}}}function pop$$module$js$maze$maze(a){for(const b of a)return a.delete(b),b;throw Error("cannot pop from empty set");}
const UNICODE_TILES$$module$js$maze$maze={4112:"\u2500",257:"\u2502",272:"\u250c",4352:"\u2510",17:"\u2514",4097:"\u2518",273:"\u251c",4353:"\u2524",4368:"\u252c",4113:"\u2534",4369:"\u253c",4096:"\u2574",1:"\u2575",16:"\u2576",256:"\u2577"};var module$js$maze$maze={};module$js$maze$maze.Maze=Maze$$module$js$maze$maze;const DEBUG$$module$js$maze$cave=!0,ATTEMPTS$$module$js$maze$cave=100;
class BasicCaveShuffle$$module$js$maze$cave{constructor(a,b){this.loc=a;this.random=b;this.survey=SpecSet$$module$js$maze$spec.CAVE.survey(a)}shuffle(){for(let b=0;b<ATTEMPTS$$module$js$maze$cave;b++){const b=this.w=Math.max(1,Math.min(8,this.pickWidth()));var a=this.h=Math.max(1,Math.min(16,this.pickHeight()));this.allPos=seq$$module$js$rom$util(b*a,(a)=>a%b|Math.floor(a/b)<<4);this.density=this.survey.size/b/a;this.walls=this.survey.walls;this.bridges=this.survey.bridges;this.fixed=new Set;a=new Maze$$module$js$maze$maze(this.random,
this.h,this.w,this.survey.specs);if(this.tryShuffle(a))return}throw Error(`Could not shuffle ${hex$$module$js$rom$util(this.loc.id)} ${this.loc.name}`);}check(a){a=a.traverse();return 2<a.size&&a.values().next().value.size===a.size}pickWidth(){return this.loc.width+Math.floor(this.random.nextInt(5)/3)}pickHeight(){return this.loc.height+Math.floor(this.random.nextInt(5)/3)}tryShuffle(a){DEBUG$$module$js$maze$cave&&console.log(`Shuffle ${this.loc.name}`);if(!this.initializeFixedScreens(a))return!1;
DEBUG$$module$js$maze$cave&&console.log(`Initialized\n${a.show()}`);if(!this.initialFillMaze(a))return!1;DEBUG$$module$js$maze$cave&&console.log(`Initial fill\n${a.show()}`);if(!this.refineMaze(a))return!1;DEBUG$$module$js$maze$cave&&console.log(`Refined\n${a.show()}`);if(!this.addFeatures(a))return!1;DEBUG$$module$js$maze$cave&&console.log(`Features\n${a.show()}`);return this.finish(a)}initializeFixedScreens(a){for(var b of this.survey.edges){const [e,g]=b;for(var c of this.random.ishuffle(this.edges(g.dir)))if(!this.fixed.has(c)){this.fixed.add(c);
var d=this.survey.fixed.get(e);if(null==d)a.setBorder(c,g.dir,6);else{if(1===this.h)return!1;a.setBorder(c,g.dir,d.edges>>>module$js$maze$types.Dir.shift(g.dir)&15);fixBorders$$module$js$maze$cave(a,c,d.edges);a.set(c,d.edges);d.wall&&this.walls--}break}}for(var e of this.survey.fixed){const [b,c]=e;if(!this.survey.edges.has(b))for(const b of this.random.ishuffle(this.allPos))if(!this.fixed.has(b)&&a.saveExcursion(()=>{fixBorders$$module$js$maze$cave(a,b,c.edges);return a.trySet(b,c.edges)})){this.fixed.add(b);
c.wall&&this.walls--;break}}b=[...this.survey.stairs.values()];c=0;for(d=0;10>c&&d<b.length;c++)e=a.randomPos(),!this.fixed.has(e)&&a.fill(e,{stair:b[d].dir})&&(this.fixed.add(e),c=0,d++);return 10<=c?fail$$module$js$maze$cave("could not add all stairs"):!0}initialFillMaze(a,b){b=void 0===b?{}:b;b=Object.assign({},{edge:1,fuzzy:1,shuffleOrder:!0,skipAlternates:!0},b);return a.fillAll(b)?!0:fail$$module$js$maze$cave("could not fill open",a)}refineMaze(a,b){b=void 0===b?{}:b;if(!this.check(a))return fail$$module$js$maze$cave("check failed after initial setup",
a);const c=Object.assign({},{skipAlternates:!0},b.fill||{});for(const b of this.random.shuffle([...a])){const [d]=b;if(a.density()<=this.density)break;a.isFixed(d)||this.fixed.has(d)||!a.saveExcursion(()=>a.setAndUpdate(d,0,c)&&this.check(a))||this.postRefine(a,d)}return this.removeTightCycles(a)}postRefine(a,b){}removeTightCycles(a){for(let b=1;b<this.h;b++)for(let c=1;c<this.w;c++){const d=b<<4|c;if(!isTightCycle$$module$js$maze$cave(a,d))continue;let e=!1;for(const b of this.random.ishuffle(module$js$maze$types.Dir.ALL)){const c=
2>b?d-1:d-16;a.saveExcursion(()=>a.replaceEdge(c,b,0)&&this.check(a))&&(e=!0)}if(!e)return fail$$module$js$maze$cave("failed to remove tight cycle")}return!0}addFeatures(a){const b=new Set,c=[...a.alternates()];for(const f of[140])if(this.survey.tiles.count(f)){var d=this.random.shuffle(c.filter((a)=>a[3].tile===f));if(d.length<this.survey.tiles.count(f))return fail$$module$js$maze$cave("could not add stair hallway");for(var e=this.survey.tiles.count(f)-1;0<=e;e--)a.replace(d[e][0],d[e][2]),b.add(d[e][0])}for(const f of["wall",
"bridge"]){d=this.random.shuffle(c.filter((a)=>a[3].wall&&a[3].wall.type===f));e="wall"===f?this.walls:this.bridges;for(let c=0;c<e;c++){const e=d.pop();if(null==e)return fail$$module$js$maze$cave(`could not add ${f} ${c}`);b.has(e[0])?c--:(a.replace(e[0],e[2]),b.add(e[0]))}}return!0}finish(a){DEBUG$$module$js$maze$cave&&console.log(`finish:\n${a.show()}`);return a.finish(this.survey,this.loc)}edges(a){const b=a===module$js$maze$types.Dir.RIGHT?this.w-1:a===module$js$maze$types.Dir.DOWN?this.h-1:
0;return a&1?seq$$module$js$rom$util(this.h,(a)=>a<<4|b):seq$$module$js$rom$util(this.w,(a)=>b<<4|a)}randomEdge(a){const b=this.random.nextInt(a&1?this.h:this.w),c=a===module$js$maze$types.Dir.RIGHT?this.w-1:a===module$js$maze$types.Dir.DOWN?this.h-1:0;return a&1?b<<4|c:c<<4|b}retry(a,b,c){for(let d=0;d<c;d++)if(a.saveExcursion(b))return!0;return!1}}
class WideCaveShuffle$$module$js$maze$cave extends BasicCaveShuffle$$module$js$maze$cave{initialFillMaze(a){const b=[...this.fixed];if(!a.connect(b[0],null,b[1],null))return!1;for(let c=2;c<b.length;c++)if(!a.connect(b[c]))return!1;a.fillAll({edge:0});return!0}refineMaze(){return!0}addFeatures(){return!0}}
class WaterfallRiverCaveShuffle$$module$js$maze$cave extends BasicCaveShuffle$$module$js$maze$cave{initializeFixedScreens(a){const b=(b,c)=>{this.fixed.add(b);a.set(b,c)},c=1+this.random.nextInt(this.w-2);var d=this.random.nextInt(c),e=this.w-1-this.random.nextInt(this.w-c-1);const f=this.h-1<<4;b(f+d,131073);b(f+e,131073);b(f+c,3);b(c,768);d=[];for(e=1;e<this.h-1;e+=2)d.push(4867),d.push(787);this.random.shuffle(d);for(e=1;e<this.h-1;e++)b((e<<4)+c,d.pop());return!0}check(a){a=a.traverse();const b=
[...new Set(a.values())].map((a)=>a.size);return 2===b.length&&b[0]+b[1]===a.size&&2<b[0]&&2<b[1]}}class CycleCaveShuffle$$module$js$maze$cave extends BasicCaveShuffle$$module$js$maze$cave{check(a){const b=[...a].filter((b)=>{b=[...a.traverse({without:[b[0]]})];return b.length&&b[0][1].size===b.length});if(!b.length)return!1;for(let c=0;c<b.length;c++)for(let d=0;d<c;d++){const e=[...a.traverse({without:[b[c][0],b[d][0]]})];if(e.length&&e[0][1].size!==e.length)return!0}return!1}}
class TightCycleCaveShuffle$$module$js$maze$cave extends CycleCaveShuffle$$module$js$maze$cave{removeTightCycles(){return!0}}
class RiverCaveShuffle$$module$js$maze$cave extends BasicCaveShuffle$$module$js$maze$cave{constructor(){super(...arguments);this.addBridge=new Map([[12336,77872],[771,66307],[3,65539],[768,66304]]);this.removeBridge=new Map([[77872,[0,8]],[66307,[0,2,2,2,4,4,4,8]],[65539,[0]],[66304,[0]]]);this.stairScreens=new Map([[module$js$maze$types.Dir.DOWN,[135168,131088,131073]],[module$js$maze$types.Dir.UP,[135184,69632,65552,131328]]]);this.riverPathAlternatives=new Map([[771,[1]],[12336,[1]]]);this.initialRiverAllowed=
[66307,77872,51,816,13056,12291];this.riverLoopAllowed=[66307,77872,66307,77872,525059,536624,51,816,13056,12291,12339,13104,13107]}tryShuffle(a){this.landPartitions=[];this.river=new Set;if(!this.retry(a,()=>this.makeInitialRiver(a),5))return!1;DEBUG$$module$js$maze$cave&&console.log(`Initial river:\n${a.show()}`);if(!this.retry(a,()=>this.branchRiver(a),5))return!1;DEBUG$$module$js$maze$cave&&console.log(`Branched river:\n${a.show()}`);if(!this.retry(a,()=>this.connectLand(a),3))return!1;DEBUG$$module$js$maze$cave&&
console.log(`Connected land:\n${a.show()}`);if(!this.retry(a,()=>this.removeBridges(a),5))return!1;DEBUG$$module$js$maze$cave&&console.log(`Removed bridges:\n${a.show(!0)}`);if(!this.retry(a,()=>this.addStairs(a),3))return!1;DEBUG$$module$js$maze$cave&&console.log(`Added stairs:\n${a.show()}`);for(const a of this.river)this.fixed.add(a);if(!this.refineMaze(a))return!1;for(const a of this.river)this.fixed.delete(a);this.bridges=0;if(!this.addFeatures(a))return!1;DEBUG$$module$js$maze$cave&&console.log(`Features\n${a.show()}\n${a.show(!0)}`);
a.fillAll({edge:0});return this.finish(a)}makeInitialRiver(a){var b=this.random.nextInt(this.h-2)+1;const c=b<this.h/2?66304:65539;var d=this.random.nextInt(this.h-2)+1;const e=d<this.h/2?66304:65539;b<<=4;d=d<<4|this.w-1;a.set(b,c);a.set(d,e);return a.connect(b,null,d,null,{allowed:this.initialRiverAllowed,pathAlternatives:this.riverPathAlternatives})?!0:!1}branchRiver(a){const b=this.survey.rivers/this.w/this.h;for(let c=0;10>c&&a.density()<b;c++)a.addLoop({allowed:this.riverLoopAllowed,pathAlternatives:this.riverPathAlternatives})&&
(c=0);for(const b of this.allPos)a.get(b)&&this.river.add(b);return!0}connectLand(a){if(!this.initialFillMaze(a))return!1;var b=a.traverse();b=[...new Set(b.values())];a:for(const d of b){b=new Set;for(const a of d){var c=a>>8;if(this.river.has(c))continue a;b.add(c);a&15?a&240||b.add(c-16):b.add(c-1)}this.landPartitions.push(b);c=!1;for(const d of this.random.ishuffle([...b]))for(const b of module$js$maze$types.Dir.ALL){const e=module$js$maze$types.Pos.plus(d,b);if((a.get(e)&65535)===(b&1?771:12336)){c=
1<<(b<<2);a.setAndUpdate(d,a.get(d)|c,{replace:!0});c=!0;if(this.random.nextInt(2))break;continue a}}if(c)continue a;if(2<b.size)return!1;for(const c of b)a.delete(c),this.landPartitions.pop()}return this.check(a)}removeBridges(a){for(const b of this.random.ishuffle([...this.river])){const c=a.get(b);if(null==c)throw Error(`expected a screen at ${hex$$module$js$rom$util(b)}`);for(const d of this.random.ishuffle(this.removeBridge.get(c)||[]))if(a.saveExcursion(()=>{a.replace(b,c&65535|d<<16);return this.check(a)}))break}return module$js$util.iters.count(module$js$util.iters.filter(this.river,
(b)=>(b=a.getSpec(b).wall)?"bridge"===b.type:!1))<=this.survey.bridges}addStairs(a){if(this.survey.edges.size)throw Error(`Unexpected edge: ${this.survey.edges}`);a:for(const b of this.survey.fixed.values()){for(const c of this.random.ishuffle(this.allPos))if(!this.fixed.has(c)&&!this.river.has(c)&&a.saveExcursion(()=>a.setAndUpdate(c,b.edges,{replace:!0,skipAlternates:!0})&&this.check(a))){this.fixed.add(c);continue a}return fail$$module$js$maze$cave(`Could not place fixed screen ${hex$$module$js$rom$util(b.edges)}`)}const b=
new Map;for(var c of this.landPartitions)for(var d of c)b.set(d,c);c=[...this.survey.stairs];d=new Set;for(const e of this.random.ishuffle([...b.keys()])){if(!c.length)break;const f=b.get(e);if(!d.has(f)&&!this.fixed.has(e))for(const b of this.stairScreens.get(c[0][1].dir))if(a.saveExcursion(()=>a.setAndUpdate(e,b,{replace:!0,skipAlternates:!0})&&this.check(a))){c.shift();this.fixed.add(e);d.add(f);break}}return c.length?!1:!0}}
class EvilSpiritRiverCaveShuffle_old$$module$js$maze$cave extends BasicCaveShuffle$$module$js$maze$cave{constructor(){super(...arguments);this.goodScrs=new Set([3,48,768,12288,51,771,12291,816,12336,13056,12339,13104,13107]);this.badScrs=new Set([13059,771])}initializeFixedScreens(a){this.density=this.survey.rivers/this.w/this.h;this.phase="river";this.fixedRiver=new Set;if(!this.initializeRiver(a)||!this.refineMaze(a))return!1;for(var b of this.allPos){var c=a.get(b);if(c){var d=13059===c?module$js$maze$types.Dir.LEFT:
819===c?module$js$maze$types.Dir.RIGHT:null;if(null!=d){d=module$js$maze$types.Pos.plus(b,d);if(a.get(d))return!1;a.replace(d,c^13107)}}}for(const b of this.allPos)a.get(b)?this.fixed.add(b):a.delete(b);for(const d of this.allPos){b=a.get(d);if(!b)continue;if(b!==((b<<8|b>>8)&65535))continue;c=(b<<4|b>>4)&this.random.pick([4352,17]);const e=b|c;a.saveExcursion(()=>a.setAndUpdate(d,e))}if(!super.initializeFixedScreens(a))return!1;this.density=this.survey.size/this.w/this.h;this.phase="cave";return!0}postRefine(a,
b){if("river"===this.phase)for(const c of module$js$maze$types.Dir.ALL){const d=a.get(b,c);null!=d&&this.badScrs.has(d)&&a.saveExcursion(()=>a.tryConsolidate(module$js$maze$types.Pos.plus(b,c),this.goodScrs,this.badScrs,()=>this.check(a)))}}initializeRiver(a){for(let b=0;b<this.h;b++)for(let c=0;c<this.w;c++){let d=13107;const e=b<<4|c;0===b&&(d&=65520);b===this.h-1&&(d&=61695);0===c&&(d&=4095);c===this.w-1&&(d&=65295);a.set(e,d)}for(const b of[0,this.w-1])for(const c of this.random.ishuffle(seq$$module$js$rom$util(this.h-
3,(a)=>a+2)))if(a=c<<4|b,this.fixed.add(a),this.fixedRiver.add(a),this.random.nextInt(2))break;return!0}check(a){if("cave"===this.phase)return super.check(a);if([...this.fixedRiver].some((b)=>!a.get(b)))return!1;const b=a.traverse({flight:!0}),c=[...new Set(b.values())].map((a)=>a.size);return 1===c.length&&c[0]===b.size}}function fail$$module$js$maze$cave(a,b){console.error(`Reroll: ${a}`);b&&DEBUG$$module$js$maze$cave&&console.log(b.show());return!1}
function isTightCycle$$module$js$maze$cave(a,b){const c=a.get(b-17)||0;a=a.get(b)||0;return!!(c&3840&&c&240&&a&61440&&a&15)}function fixBorders$$module$js$maze$cave(a,b,c){try{for(const d of module$js$maze$types.Dir.ALL)a.inBounds(module$js$maze$types.Pos.plus(b,d))||7!==(c>>module$js$maze$types.Dir.shift(d)&7)||a.setBorder(b,d,7)}catch(d){}}
const STRATEGIES$$module$js$maze$cave=new Map([[39,CycleCaveShuffle$$module$js$maze$cave],[75,TightCycleCaveShuffle$$module$js$maze$cave],[84,CycleCaveShuffle$$module$js$maze$cave],[86,WideCaveShuffle$$module$js$maze$cave],[87,WaterfallRiverCaveShuffle$$module$js$maze$cave],[105,RiverCaveShuffle$$module$js$maze$cave],[132,WideCaveShuffle$$module$js$maze$cave],[171,RiverCaveShuffle$$module$js$maze$cave]]);
function shuffleCave$$module$js$maze$cave(a,b){(new (STRATEGIES$$module$js$maze$cave.get(a.id)||BasicCaveShuffle$$module$js$maze$cave)(a,b)).shuffle()}var module$js$maze$cave={};module$js$maze$cave.shuffleCave=shuffleCave$$module$js$maze$cave;function shuffleGoa1$$module$js$maze$goa(a,b,c=1500){extendGoaScreens$$module$js$maze$goa(a);const d=a.locations.GoaFortress_Kelbesque;var e=d.width;const f=d.height;a:for(let m=0;m<c;m++){var g=function(a,b=65536){const c=l.get(a);if(null==c)throw Error(`Cannot flag empty screen ${hex$$module$js$rom$util(a)}`);l.replace(a,c|b);if(h())return!0;l.replace(a,c);return!1},h=function(){const a=l.traverse(),b=a.get(q);return!b||!v.filter((a)=>b.has(a)).length||b.size<.8*a.size?!1:!0},k=function(a,b){l.set(a,
b,{force:!0})};const l=new Maze$$module$js$maze$maze(b,f,e,GOA1_SCREENS$$module$js$maze$spec),m=f-1<<4|b.nextInt(e),p=b.nextInt(e),q=m<<8|2,v=[p+32<<8|1,p+32<<8|3];k(m,61681);k(m-1,240);k(m+1,61440);k(p,65520);k(p-1,4080);k(p+1,65280);k(p+16,61951);k(p+15,255);k(p+17,61455);if(!l.connect(m,module$js$maze$types.Dir.UP,p+16,module$js$maze$types.Dir.DOWN))continue a;if(257===l.get(p+32)||257===l.get(m-16))continue a;for(k=0;10>k&&.65>l.density();k++)l.addLoop()&&(k=0);if(.45>l.density())continue a;if(!h())continue a;
for(const [a,c]of l)if(257===c&&257===l.get(a+16)&&(k=b.shuffle([0,16]),!g(a+k[0],131072)&&!g(a+k[1],131072)))continue a;for(const [a,c]of b.shuffle([...l.alternates()]))g(a,c);l.fillAll({edge:0});d.moveScreen(6,p);d.moveScreen(131,m);l.write(d,new Set);b=d.monsterPlacer(b);for(const f of d.spawns)f.isMonster()&&(c=a.objects[f.monsterId],c instanceof Monster$$module$js$rom$monster&&(e=b(c),null==e?(console.error(`no valid location for ${hex$$module$js$rom$util(c.id)} in ${hex$$module$js$rom$util(d.id)}`),
f.used=!1):(f.screen=e>>>8,f.tile=e&255)));a.spoiler&&a.spoiler.addMaze(d.id,d.name,l.show());return}throw Error(`unable to shuffle goa1 after ${c} attempts`);}
function extendGoaScreens$$module$js$maze$goa(a){for(var b of[140,164,168]){const c=a.tileset(b);c.alternates[25]=25;c.alternates[27]=27}a.swapMetatiles([164,140],[43,[25,197],-199],[186,[27,197],-197]);a.swapMetatiles([168],[[23,84],-26],[[24,88],-28]);a.swapMetatiles([136],[25,-198],[27,-198]);b=[[25,25],[27,27]];write2d$$module$js$maze$spec(a.screens[224].tiles,97,b);write2d$$module$js$maze$spec(a.screens[225].tiles,109,b);write2d$$module$js$maze$spec(a.screens[226].tiles,145,b);write2d$$module$js$maze$spec(a.screens[227].tiles,
157,b);write2d$$module$js$maze$spec(a.screens[228].tiles,65,b);write2d$$module$js$maze$spec(a.screens[228].tiles,141,b);write2d$$module$js$maze$spec(a.screens[229].tiles,97,b);write2d$$module$js$maze$spec(a.screens[229].tiles,173,b);write2d$$module$js$maze$spec(a.screens[230].tiles,13,b);write2d$$module$js$maze$spec(a.screens[230].tiles,209,b);write2d$$module$js$maze$spec(a.screens[231].tiles,1,b);write2d$$module$js$maze$spec(a.screens[231].tiles,13,b);write2d$$module$js$maze$spec(a.screens[232].tiles,
209,b);write2d$$module$js$maze$spec(a.screens[232].tiles,221,b);a.locations[169].flags.push(Flag$$module$js$rom$location.of({screen:16,flag:751}),Flag$$module$js$rom$location.of({screen:32,flag:751}),Flag$$module$js$rom$location.of({screen:33,flag:751}),Flag$$module$js$rom$location.of({screen:36,flag:751}),Flag$$module$js$rom$location.of({screen:37,flag:751}),Flag$$module$js$rom$location.of({screen:48,flag:751}),Flag$$module$js$rom$location.of({screen:49,flag:751}),Flag$$module$js$rom$location.of({screen:51,
flag:751}),Flag$$module$js$rom$location.of({screen:52,flag:751}),Flag$$module$js$rom$location.of({screen:65,flag:751}),Flag$$module$js$rom$location.of({screen:84,flag:751}),Flag$$module$js$rom$location.of({screen:98,flag:751}),Flag$$module$js$rom$location.of({screen:100,flag:751}),Flag$$module$js$rom$location.of({screen:114,flag:751}),Flag$$module$js$rom$location.of({screen:116,flag:512}));a.locations.WaterfallCave3.tileset=136}var module$js$maze$goa={};module$js$maze$goa.shuffleGoa1=shuffleGoa1$$module$js$maze$goa;
module$js$maze$goa.extendGoaScreens=extendGoaScreens$$module$js$maze$goa;function shufflePyramid$$module$js$maze$pyramid(a,b){function c(a,b,c){d.exits[2*a].dest=d.exits[2*a+1].dest=b;d.exits[2*a].entrance=d.exits[2*a+1].entrance=c}const d=a.locations.Pyramid_Main,e="dudududuudududduu".split("");let f="u";.5>b.next()&&(d.screens[0][3]=132,d.screens[0][2]=153,e[16]=f="d",d.entrances[12].screen=d.entrances[16].screen,d.entrances[12].coord=d.entrances[16].coord,d.exits[24].screen=d.exits[32].screen,d.exits[24].tile=d.exits[32].tile,d.exits[25].screen=d.exits[33].screen,d.exits[25].tile=
d.exits[33].tile,d.entrances[16].screen=2,d.entrances[16].coord=45008,d.exits[32].screen=d.exits[33].screen=2,d.exits[32].tile=188,d.exits[33].tile=189,a=a.locations.Pyramid_Draygon,a.width=2,a.screens[0].push(154),a.screens[1].push(253),a.screens[2]=[224,225],a.exits[0].screen=a.exits[1].screen=1,a.exits[0].tile=199,a.exits[1].tile=200,a.entrances[0].screen=1,a.entrances[0].coord=53376);a={u:[],d:[]};for(var g=0;g<e.length;g++)a[e[g]].push(g);b.shuffle(a.u);b.shuffle(a.d);var h=a[f].pop();g=[];g[16]=
d.entrances[h];c(h,159,0);var k=a.u.pop();g[1]=d.entrances[k];c(k,157,2);var m=a.d.pop();"u"===f&&14===m&&12===k?[m]=a.d.splice(0,1,m):"d"===f&&(14===m&&16===h||16===m&&14===h)&&([m]=a.d.splice(0,1,m));g[0]=d.entrances[m];c(m,157,1);do{h={u:[...a.u],d:[...a.d]};k={u:[...a.u],d:[...a.d]};b.shuffle(k.u);b.shuffle(k.d);m={u:"d",d:"u"};for(let a=2;16>a;a++){const b=h[e[a]].pop(),f=k[m[e[a]]].pop();if(null==b||null==f)throw Error("impossible");g[a]=d.entrances[b];c(f,158,a)}h=d.exits[24];k=d.exits[28];
if("u"!==f||h.dest!==k.dest||d.entrances[14]!==g[h.entrance]||d.entrances[12]!==g[k.entrance])break}while(1);d.entrances=g}var module$js$maze$pyramid={};module$js$maze$pyramid.shufflePyramid=shufflePyramid$$module$js$maze$pyramid;function shuffleSwamp$$module$js$maze$swamp(a,b,c=100){extendSwampScreens$$module$js$maze$swamp(a);const d=a.locations.Swamp,e=d.width,f=d.height,g=[SCR_U$$module$js$maze$swamp,SCR_D$$module$js$maze$swamp,SCR_UD$$module$js$maze$swamp,SCR_DR$$module$js$maze$swamp,SCR_URD$$module$js$maze$swamp,SCR_LR$$module$js$maze$swamp],h=[117,118,119,120,121,122,123,125,126];for(let k=0;k<c;k){const c=new Maze$$module$js$maze$maze(b,f,e,SWAMP_SCREENS$$module$js$maze$spec,g);if(tryShuffleSwamp$$module$js$maze$swamp(a,
b,d,c,h))return}console.error(`Failed to shuhffle swamp after ${c} attempts.`)}
function tryShuffleSwamp$$module$js$maze$swamp(a,b,c,d,e){function f(){const a=d.traverse(),b=a.get(l);return b&&b.size===a.size||!1}const g=d.width,h=d.height,[k,m]=(()=>{let a,c;do a=b.nextInt(g),c=b.nextInt(h);while(2>a||2>c);return[a,c<<4]})();d.setBorder(m,module$js$maze$types.Dir.LEFT,1);d.set(k,61936,{force:!0});d.set(k-1,240,{force:!0});d.set(k+1,61440,{force:!0});d.fillAll({edge:1});const l=m<<8|16;var n=[...d].map((a)=>a[0]);for(var p=Math.floor(.6*g*h);p;p--){const a=b.pick(n),c=b.pick(module$js$maze$types.Dir.ALL),
e=module$js$maze$types.Pos.plus(a,c);!d.isFixed(a)&&!d.isFixed(e)&&d.get(a)&module$js$maze$types.Dir.edgeMask(c)?d.saveExcursion(()=>d.replaceEdge(a,c,0)?!!(d.get(a)&&d.get(e)&&f()):!1):p++}if(!d.consolidate(e,f,a))return!1;const [q,v]=b.pick([...d.alternates()]);if(65536!=v)throw Error(`unexpected alt: ${hex$$module$js$rom$util(v)}`);d.replace(q,d.get(q)|v);c.moveScreen(48,m);c.moveScreen(4,k);d.write(c,new Set);e=[];n=[];for(const [a,b]of d)a!==k&&a!==q&&(1!==b&&16!==b&&256!==b&&4096!==b||e.push(a),
17!==b&&272!==b&&4352!==b&&4097!==b||n.push(a));var z=a.screens[c.screens[q>>4][q&15]].tiles;p=0;for(let a=0;240>a;a++)if(3===z[a]){p=a;break}c.entrances[1].screen=q;c.entrances[1].tile=p+17;for(z=0;2>z;z++)c.exits[5+z].screen=q,c.exits[5+z].tile=p+z;e=b.pick(e.length?e:n);c.spawns[1].screen=e;e=c.monsterPlacer(b);for(const b of c.spawns)b.isMonster()&&(n=a.objects[b.monsterId],n instanceof Monster$$module$js$rom$monster&&(p=e(n),null==p?(console.error(`no valid location for ${hex$$module$js$rom$util(n.id)} in ${hex$$module$js$rom$util(c.id)}`),
b.used=!1):(b.screen=p>>>8,b.tile=p&255)));a.spoiler&&a.spoiler.addMaze(c.id,c.name,d.show());return!0}
const SCR_U$$module$js$maze$swamp=readScreen$$module$js$maze$spec("c8 c8 c8 c8 cf f6 c7 ad c4 b7 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f6 b8 b9 c3 b7 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f6 b7 b8 ad ad d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 c2 c3 b7 b8 d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 b6 c2 b7 b7 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 ad ad b9 b7 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 ad ad ad ad d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 b9 b8 ad ad d2 e2 c8 c8 c8 c8\n     c8 c8 c8 c8 e3 f6 c3 c3 b8 b6 d2 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 e3 fd ad ad fc e2 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 c8 ff fb fb fa c8 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8"),SCR_D$$module$js$maze$swamp=
readScreen$$module$js$maze$spec("c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 c8 cd c9 c9 ca c8 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 cd eb a0 a0 cb ca c8 c8 c8 c8 c8\n     c8 c8 c8 c8 cf a0 f9 f5 f7 f8 cb cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf a0 ed 08 09 a0 a0 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf db ee 0c 0b ef a0 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d0 d1 03 03 d8 db cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f6 c7 ad ad ae d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 ad b9 b7 b7 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 c2 c3 c3 b7 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f6 c5 c3 c3 b7 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 b6 c2 c3 c3 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f6 b8 b6 b6 b6 d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f6 b7 b7 b7 b7 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f6 b7 b7 b8 b6 d2 cc c8 c8 c8 c8"),
SCR_UD$$module$js$maze$swamp=readScreen$$module$js$maze$spec("c8 c8 c8 c8 cf d3 b6 b6 c6 b6 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 b6 c3 c7 b6 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f5 c3 c7 b6 b6 d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 b6 b6 c6 c5 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d9 b6 c6 c3 c7 d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f5 c3 c3 c3 c3 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d9 ad c2 c3 c3 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d9 c4 c5 c3 c3 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f5 b7 b7 b8 b6 d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d9 c2 b8 b6 b6 d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d9 b6 c2 b7 b7 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d9 b6 b6 b6 b6 d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f6 b7 b7 b8 b6 d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 b9 b7 b7 b7 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f6 b7 b7 c7 b6 d2 cc c8 c8 c8 c8"),
SCR_DR$$module$js$maze$swamp=readScreen$$module$js$maze$spec("c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 c8 cd c9 c9 c9 c9 c9 c9 c9 c9 c9\n     c8 c8 c8 c8 c8 cd a0 a0 a0 e8 04 a0 e8 a0 a0 e4\n     c8 c8 c8 c8 cf f8 a0 f0 f1 f5 f5 f7 e9 f4 f7 e5\n     c8 c8 c8 c8 cf f6 f7 f8 f2 ea 06 aa e9 f0 f1 e6\n     c8 c8 c8 c8 cf a0 dd e0 f3 e0 07 0c ea db f3 e7\n     c8 c8 c8 c8 cf db d5 d0 d1 d1 03 03 d0 d1 da da\n     c8 c8 c8 c8 cf d5 af c4 c4 ad ad ad ad ad c4 ad\n     c8 c8 c8 c8 cf d3 b9 c3 c3 b8 ad ad ad c2 b7 b8\n     c8 c8 c8 c8 cf f6 c3 c3 c3 c3 b8 ad ad ad ad ad\n     c8 c8 c8 c8 cf f6 c7 ad c2 c3 c7 fc fb fb fb fb\n     c8 c8 c8 c8 cf d3 ad ad ad ad d6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 b9 b8 ad b9 f6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf f6 c7 ad b9 c7 d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 b6 b9 c3 b8 d2 cc c8 c8 c8 c8"),
SCR_URD$$module$js$maze$swamp=readScreen$$module$js$maze$spec("c8 c8 c8 c8 cf d3 c4 c3 c3 c3 f7 f8 ca c8 c8 c8\n     c8 c8 c8 c8 cf f5 c3 c3 c3 c3 f7 f7 a0 ca c9 c9\n     c8 c8 c8 c8 cf f6 c3 c3 b8 b6 d2 cf cf e8 e4 a0\n     c8 c8 c8 c8 cf f5 b7 c3 b7 b8 d2 f0 f1 e9 e5 cf\n     c8 c8 c8 c8 cf d3 c2 b8 c2 b8 d8 db cf ea e6 cf\n     c8 c8 c8 c8 cf d3 ad ad ad ad ae d4 f3 dd e7 cf\n     c8 c8 c8 c8 cf d3 ad ad ad ad ad ae d0 d1 d0 d1\n     c8 c8 c8 c8 cf d3 c2 c3 c3 b7 b8 ad ad ad ad ad\n     c8 c8 c8 c8 cf d3 ad ad c2 b7 b7 b7 b8 c4 ad ad\n     c8 c8 c8 c8 cf d3 ad ad b6 b9 b7 b7 b7 b7 b8 ad\n     c8 c8 c8 c8 cf d3 ad c4 c3 b7 b8 fc fb fb fb fb\n     c8 c8 c8 c8 cf d3 b6 ad ad ad d6 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 ad ad ad ad d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 c4 c3 b7 b8 d2 cc c8 c8 c8 c8\n     c8 c8 c8 c8 cf d3 b6 b9 b7 b7 f6 cc c8 c8 c8 c8"),
SCR_LR$$module$js$maze$swamp=readScreen$$module$js$maze$spec("c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8\n     c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9\n     a0 e4 e8 eb e4 a0 a0 a0 eb eb e8 f0 f1 a0 e4 a0\n     a0 e5 e9 f9 f5 f6 f6 f7 ec f9 f7 f8 f2 a0 e5 a0\n     a0 e6 f0 f1 e6 e0 08 09 ed de ea de f2 a0 e6 a0\n     db e7 db f3 e7 e1 0c 0b dd df e0 df f3 db e7 e0\n     d0 d1 da da d0 d1 03 03 d0 d1 d0 d1 da da da da\n     ad c4 ad ad ad ad ad ad ad ad ad ad ad ad ad ad\n     c2 c5 b8 c6 c4 c4 b9 c7 c4 c5 c5 c7 ad ad ad ad\n     ad ad ad ad c2 c3 c3 c3 c3 c3 c7 ad ad ad ad ad\n     fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n     c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8\n     c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8 c8");
function extendSwampScreens$$module$js$maze$swamp(a){a.swapMetatiles([160],[[3,172],-219],[[4,170],-229],[[5,170],-230],[[6,170],-231],[[7,170],-232],[[8,170],-241],[[9,170],-242],[[10,170],-243],[[11,170],-244],[[12,170],-221],[[13,170],-222]);write2d$$module$js$maze$spec(a.screens[127].tiles,0,[[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[210,204],[210,204],[210,204],[210,226],[226,200]]);write2d$$module$js$maze$spec(a.screens[118].tiles,76,[[8,9],[12,
11],[3,3]]);write2d$$module$js$maze$spec(a.screens[122].tiles,37,[[,,4],[8,9,5],[,10,6],[,11,7],[,3,3]]);write2d$$module$js$maze$spec(a.screens[123].tiles,36,[[4],[],[6],[7,13],[3,3]]);write2d$$module$js$maze$spec(a.screens[126].tiles,71,[[8,9],[12,11],[3,3]])}var module$js$maze$swamp={};module$js$maze$swamp.shuffleSwamp=shuffleSwamp$$module$js$maze$swamp;module$js$maze$swamp.extendSwampScreens=extendSwampScreens$$module$js$maze$swamp;function compressMapData$$module$js$pass$compressmapdata(a){if(!a.compressedMapData){a.compressedMapData=!0;for(const b of a.locations)b.extended&&(b.extended=7);a.screens[1792]=a.screens[256];a.screens[1793]=a.screens[257];a.screens[1794]=a.screens[258];delete a.screens[256];delete a.screens[257];delete a.screens[258]}}var module$js$pass$compressmapdata={};module$js$pass$compressmapdata.compressMapData=compressMapData$$module$js$pass$compressmapdata;function crumblingPlatforms$$module$js$pass$crumblingplatforms(a,b){var c=a.objects[159],d=a.objects[127];const e=a.objects[141];e.used=!0;e.name="Crumbling Horizontal Platform";e.sfx=c.sfx;c.data.forEach((a,b)=>e.data[b]=a);e.data[3]=d.data[3];c=new Set([47,61]);d=new Set([46,79]);for(const e of a.locations)if(e.pits.length){a=1>b.nextInt(3);for(const b of e.spawns)b.isMonster()&&(d.has(b.id)&&(b.id=(a?159:126)-80),c.has(b.id)&&(b.id=(a?141:127)-80))}}var module$js$pass$crumblingplatforms={};
module$js$pass$crumblingplatforms.crumblingPlatforms=crumblingPlatforms$$module$js$pass$crumblingplatforms;const MessageId$$module$js$rom$messageid=DataTuple$$module$js$rom$util.make(2,{action:DataTuple$$module$js$rom$util.prop([0,248,3]),part:DataTuple$$module$js$rom$util.prop([0,7,-3],[1,224,5]),index:DataTuple$$module$js$rom$util.prop([1,31]),toString(){const a=this.action?` (action ${hex$$module$js$rom$util(this.action)})`:"";return`MessageId ${this.hex()}: (${hex$$module$js$rom$util(this.part)}:${hex$$module$js$rom$util(this.index)}${a}`},mid(){return`${hex$$module$js$rom$util(this.part)}:${hex$$module$js$rom$util(this.index)}`},
nonzero(){return!(!this.part&&!this.index)}});var module$js$rom$messageid={};module$js$rom$messageid.MessageId=MessageId$$module$js$rom$messageid;const {$04:$04$$module$js$rom$npc,$05:$05$$module$js$rom$npc,$0e:$0e$$module$js$rom$npc}=Segment$$module$js$rom$util;
class Npcs$$module$js$rom$npc extends EntityArray$$module$js$rom$entity{constructor(a){super(205);this.rom=a;this.GoaSoldier=new Npc$$module$js$rom$npc(this,11);this.LeafElder=new Npc$$module$js$rom$npc(this,13);this.LeafElderDaughter=new Npc$$module$js$rom$npc(this,17);this.LeafRabbit=new Npc$$module$js$rom$npc(this,19);this.WindmillGuard=new Npc$$module$js$rom$npc(this,20);this.SleepingWindmillGuard=new Npc$$module$js$rom$npc(this,21);this.Akahana=new Npc$$module$js$rom$npc(this,22);this.OakElder=
new Npc$$module$js$rom$npc(this,29);this.OakMother=new Npc$$module$js$rom$npc(this,30);this.OakChild=new Npc$$module$js$rom$npc(this,31);this.Aryllis=new Npc$$module$js$rom$npc(this,35);this.AmazonesGuard=new Npc$$module$js$rom$npc(this,37);this.AryllisRightAttendant=new Npc$$module$js$rom$npc(this,38);this.AryllisLeftAttendant=new Npc$$module$js$rom$npc(this,39);this.Nadare=new Npc$$module$js$rom$npc(this,40);this.SoldierGuard=new Npc$$module$js$rom$npc(this,45);this.PortoaThroneRoomBackDoorGuard=
new Npc$$module$js$rom$npc(this,51);this.PortoaPalaceFrontGuard=new Npc$$module$js$rom$npc(this,52);this.PortoaQueen=new Npc$$module$js$rom$npc(this,56);this.FortuneTeller=new Npc$$module$js$rom$npc(this,57);this.WaterfallCaveAdventurers=new Npc$$module$js$rom$npc(this,58);this.JoelElder=new Npc$$module$js$rom$npc(this,61);this.Clark=new Npc$$module$js$rom$npc(this,68);this.ShyronGuard=new Npc$$module$js$rom$npc(this,78);this.Brokahana=new Npc$$module$js$rom$npc(this,84);this.SaharaBunny=new Npc$$module$js$rom$npc(this,
89);this.Deo=new Npc$$module$js$rom$npc(this,90);this.SaharaElder=new Npc$$module$js$rom$npc(this,91);this.SaharaElderDaughter=new Npc$$module$js$rom$npc(this,92);this.Zebu=new Npc$$module$js$rom$npc(this,94);this.Tornel=new Npc$$module$js$rom$npc(this,95);this.Stom=new Npc$$module$js$rom$npc(this,96);this.MesiaRecording=new Npc$$module$js$rom$npc(this,97);this.Asina=new Npc$$module$js$rom$npc(this,98);this.HurtDolphin=new Npc$$module$js$rom$npc(this,99);this.Fisherman=new Npc$$module$js$rom$npc(this,
100);this.KensuInCabin=new Npc$$module$js$rom$npc(this,104);this.Dolphin=new Npc$$module$js$rom$npc(this,105);this.SleepingKensu=new Npc$$module$js$rom$npc(this,107);this.KensuDisguisedAsDancer=new Npc$$module$js$rom$npc(this,108);this.KensuDisguisedAsSoldier=new Npc$$module$js$rom$npc(this,109);this.AztecaInShyron=new Npc$$module$js$rom$npc(this,110);this.DeadAkahana=new Npc$$module$js$rom$npc(this,112);this.DeadStomsGirlfriend=new Npc$$module$js$rom$npc(this,113);this.DeadStom=new Npc$$module$js$rom$npc(this,
114);this.KensuInSwan=new Npc$$module$js$rom$npc(this,116);this.SlimedKensu=new Npc$$module$js$rom$npc(this,117);this.FishermanDaughter=new Npc$$module$js$rom$npc(this,123);this.Kensu=new Npc$$module$js$rom$npc(this,126);this.AkahanaInBrynmaer=new Npc$$module$js$rom$npc(this,130);this.AztecaInPyramid=new Npc$$module$js$rom$npc(this,131);this.SaberaDisguisedAsMesia=new Npc$$module$js$rom$npc(this,132);this.StonedWaterfallCaveAdventurers=new Npc$$module$js$rom$npc(this,133);this.StonedAkahana=new Npc$$module$js$rom$npc(this,
136);this.Mesia=new Npc$$module$js$rom$npc(this,142);this.Vampire1=new Npc$$module$js$rom$npc(this,192);this.Insect=new Npc$$module$js$rom$npc(this,193);this.Kelbesque1=new Npc$$module$js$rom$npc(this,194);this.Rage=new Npc$$module$js$rom$npc(this,195);this.Kelbesque2=new Npc$$module$js$rom$npc(this,197);this.Sabera2=new Npc$$module$js$rom$npc(this,198);this.Mado2=new Npc$$module$js$rom$npc(this,199);this.Karmine=new Npc$$module$js$rom$npc(this,200);this.StatueOfMoon=new Npc$$module$js$rom$npc(this,
201);this.StatueOfSun=new Npc$$module$js$rom$npc(this,202);this.Draygon=new Npc$$module$js$rom$npc(this,203);this.Vampire2=new Npc$$module$js$rom$npc(this,204);for(var b in this)a=this[b],this.hasOwnProperty(b)&&a instanceof Npc$$module$js$rom$npc&&(this[a.id]=a,a.name=upperCamelToSpaces$$module$js$rom$util(b));for(b=0;205>b;b++)this[b]||(this[b]=new Npc$$module$js$rom$npc(this,b))}}
class Npc$$module$js$rom$npc extends Entity$$module$js$rom$entity{constructor(a,b){super(a.rom,b);this.npcs=a;this.spawnConditions=new Map;this.localDialogs=new Map;a=a.rom;if(204<b)throw Error(`Unavailable: ${b}`);this._used=!UNUSED_NPCS$$module$js$rom$npc.has(b)&&(143>b||192<=b);(b=196>b?this.dialogPointer.readAddress(a.prg):null)&&35641===b.org&&(b=null);this.data=tuple$$module$js$rom$util(a.prg,this.dataBase.offset,4);for(var c=this.spawnPointer.readAddress(a.prg).offset,d;this.used&&255!==(d=
a.prg[c++]);){const b=SPAWN_CONDITION_FLAGS$$module$js$rom$util.read(a.prg,c);c+=2*b.length;this.spawnConditions.set(d,b)}this.globalDialogs=[];if(b){for(d=b.offset;;){const [b,c]=GlobalDialog$$module$js$rom$npc.parse(a.prg,d);d+=4;b.condition&&this.globalDialogs.push(b);if(c)break}for(b=[];;){c=a.prg[d++];if(255===c)break;b.push([c,a.prg[d++]])}b.length||b.push([-1,0]);c=d;for(const [e,f]of b)for(b=[],this.localDialogs.set(e,b),d=c+f;;){const [c,e]=LocalDialog$$module$js$rom$npc.parse(a.prg,d);d+=
c.byteLength();b.push(c);if(e)break}}}get dataBase(){return Address$$module$js$rom$util.of(this.id&128?$05$$module$js$rom$npc:$04$$module$js$rom$npc,33008|(this.id&252)<<6|(this.id&3)<<2)}get spawnPointer(){return Address$$module$js$rom$util.of($0e$$module$js$rom$npc,34272+(this.id<<1))}get dialogPointer(){return Address$$module$js$rom$util.of($0e$$module$js$rom$npc,35165+(this.id<<1))}get used(){return this._used}set used(a){if(a&&136<this.id&&192>this.id&&142!==this.id)throw Error(`invalid: ${this.id}`);
this._used=a}spawnConditionsBytes(){const a=[];for(const [b,c]of this.spawnConditions)a.push(b,...SPAWN_CONDITION_FLAGS$$module$js$rom$util.bytes(c));a.push(255);return a}dialog(a){a=a?a.id:-1;const b=this.localDialogs.get(a);if(b)return b;throw Error(`No local dialog for NPC ${hex$$module$js$rom$util(this.id)} at ${hex$$module$js$rom$util(a)}`);}spawns(a){const b=a.id;if(a=this.spawnConditions.get(a.id))return a;throw Error(`No spawn condition for NPC ${hex$$module$js$rom$util(this.id)} at ${hex$$module$js$rom$util(b)}`);
}hasDialog(){const a=!(!this.globalDialogs.length&&!this.localDialogs.size);if(142<this.id&&195!==this.id&&a)throw Error(`invalid: ${this.id}`);return a}*allDialogs(){yield*this.globalDialogs;for(const a of this.localDialogs.values())yield*a}dialogBytes(){function a(a){const b=[];for(let c=0;c<a.length;c++)b.push(...a[c].bytes(c===a.length-1));return b}if(!this.hasDialog())return[];const b=[];this.globalDialogs.length?b.push(...a(this.globalDialogs)):b.push(128,0,0,0);const c=[],d=new Map;for(const [e,
f]of this.localDialogs){const g=a(f),h=g.join(","),k=d.get(h);null!=k?b.push(e,k):(d.set(h,c.length),-1!==e&&b.push(e,c.length),c.push(...g))}c.length&&b.push(255,...c);return b}link(a){this.spawnConditions=this.rom.npcs[a].spawnConditions;this.linkDialog(a)}linkDialog(a){a=this.rom.npcs[a];this.globalDialogs=a.globalDialogs;this.localDialogs=a.localDialogs}localDialog(a,b){null==b&&(b=a,a=-1);const c=this.localDialogs.get(a);if(null==c||b>=c.length)throw Error(`No local dialog ${b} for location ${hex$$module$js$rom$util(a)}`);
return c[b]}isParalyzable(){for(let a=217176;217196>a;a++)if(this.rom.prg[a]===this.id)return!1;return!0}write(){if(!this.used)return[];const a=hex$$module$js$rom$util(this.id),b=this.rom.assembler();this.dataBase.loc(b);b.byte(...this.data);b.segment("0e","fe","ff");b.reloc(`SpawnCondition_${a}`);var c=b.pc();b.byte(...this.spawnConditionsBytes());this.spawnPointer.loc(b,`SpawnCondition_${a}_Pointer`);b.word(c);this.hasDialog()&&(b.segment("0e","fe","ff"),b.reloc(`Dialog_${a}`),c=b.pc(),b.byte(...this.dialogBytes()),
this.dialogPointer.loc(b,`Dialog_${a}_Pointer`),b.word(c));return[b.module()]}}
class GlobalDialog$$module$js$rom$npc{constructor(a,b){this.condition=a;this.message=b}static of(a,b){const [c,d,e=0]=b;return new GlobalDialog$$module$js$rom$npc(a,MessageId$$module$js$rom$messageid.of({part:c,index:d,action:e}))}static parse(a,b=0){const c=readBigEndian$$module$js$rom$util(a,b);a=MessageId$$module$js$rom$messageid.from(a,b+2);b=c&1023;const d=!!(c&32768);c&8192&&(b=~b);return[new GlobalDialog$$module$js$rom$npc(b,a),d]}bytes(a){let b=this.condition;0>b&&(b=~b|8192);a&&(b|=32768);
return[b>>>8,b&255,...this.message.data]}}
class LocalDialog$$module$js$rom$npc{constructor(a,b,c,d){this.condition=a;this.message=b;this.update=c;this.flags=d}clone(){return LocalDialog$$module$js$rom$npc.parse(this.bytes(!1))[0]}static parse(a,b=0){const c=readBigEndian$$module$js$rom$util(a,b),d=MessageId$$module$js$rom$messageid.from(a,b+2),e=a[b+4];let f=c&1023;const g=!!(c&32768);c&8192&&(f=~f);a=c&16384?DIALOG_FLAGS$$module$js$rom$util.read(a,b+5):[];return[new LocalDialog$$module$js$rom$npc(f,d,e,a),g]}static of(a,b,c=[]){const [d,
e,f=0]=b;return new LocalDialog$$module$js$rom$npc(a,MessageId$$module$js$rom$messageid.of({part:d,index:e,action:f}),0,c)}byteLength(){return 5+2*this.flags.length}bytes(a){let b=this.condition;0>b&&(b=~b|8192);a&&(b|=32768);this.flags.length&&(b|=16384);return[b>>>8,b&255,...this.message.data,this.update,...DIALOG_FLAGS$$module$js$rom$util.bytes(this.flags)]}}const UNUSED_NPCS$$module$js$rom$npc=new Set([49,59,60,102,103,106,115,116,130,134,135,137,138,139,140,141,196]);
class PortoaQueen$$module$js$rom$npc extends Npc$$module$js$rom$npc{constructor(){super(...arguments);this.id=56;this.name="Portoa Queen"}get expectedSword(){return this.localDialog(3).condition&255}set expectedSword(a){this.localDialog(3).condition=512|a}}var module$js$rom$npc={};module$js$rom$npc.Npcs=Npcs$$module$js$rom$npc;module$js$rom$npc.Npc=Npc$$module$js$rom$npc;module$js$rom$npc.GlobalDialog=GlobalDialog$$module$js$rom$npc;module$js$rom$npc.LocalDialog=LocalDialog$$module$js$rom$npc;
module$js$rom$npc.PortoaQueen=PortoaQueen$$module$js$rom$npc;function write$$module$js$pass$deterministic(a,b,...c){for(let d=0;d<c.length;d++)a[b+d]=c[d]}
function deterministicPreParse$$module$js$pass$deterministic(a){a[107924]=255;a[118213]=168;a[106870]=255;a[108620]=255;a[120899]=160;a[122987]&=7;a[122991]&=7;a[122995]&=7;a[122999]&=7;a[123003]&=7;a[123012]&=7;a[123035]&=7;a[123065]&=7;a[123141]=47;a[123511]=0;a[123750]=64;a[123761]=0;a[123783]=0;a[123793]=0;write$$module$js$pass$deterministic(a,106856,51,51);write$$module$js$pass$deterministic(a,107662,51,51);a[105393]=112;a[105397]=113;a[105079]=114;a[105963]=115;a[106565]=116;a[106721]=117;a[106725]=
118;a[106729]=119;a[108037]=120;a[107457]=121;a[107461]=122;a[107465]=123;write$$module$js$pass$deterministic(a,123063,192,0);write$$module$js$pass$deterministic(a,123690,192,0);write$$module$js$pass$deterministic(a,123696,192,0);write$$module$js$pass$deterministic(a,123702,192,0);write$$module$js$pass$deterministic(a,123104,192,0);write$$module$js$pass$deterministic(a,123110,192,0);a[116739]=0;write$$module$js$pass$deterministic(a,116749,162,179);a[109190]=254;write$$module$js$pass$deterministic(a,
251605,37,41,57,58,59,71,60,62,132,70,178,66,180,65,255)}
function deterministic$$module$js$pass$deterministic(a,b){addZombieWarp$$module$js$pass$deterministic(a);consolidateItemGrants$$module$js$pass$deterministic(a);addMezameTrigger$$module$js$pass$deterministic(a);normalizeSwords$$module$js$pass$deterministic(a,b);fixOpelStatue$$module$js$pass$deterministic(a);fixCoinSprites$$module$js$pass$deterministic(a);fixChests$$module$js$pass$deterministic(a);preventBossSoftlocks$$module$js$pass$deterministic(a);makeBraceletsProgressive$$module$js$pass$deterministic(a);
adjustGoaFortressTriggers$$module$js$pass$deterministic(a);preventNpcDespawns$$module$js$pass$deterministic(a,b);leafElderInSabreHeals$$module$js$pass$deterministic(a);b.requireHealedDolphinToRide()&&requireHealedDolphin$$module$js$pass$deterministic(a);b.saharaRabbitsRequireTelepathy()&&requireTelepathyForDeo$$module$js$pass$deterministic(a);adjustItemNames$$module$js$pass$deterministic(a,b);alarmFluteIsKeyItem$$module$js$pass$deterministic(a,b);brokahanaWantsMado1$$module$js$pass$deterministic(a);
b.teleportOnThunderSword()?(teleportOnThunderSword$$module$js$pass$deterministic(a),a.townWarp.thunderSwordWarp=[a.locations.Shyron.id,65]):noTeleportOnThunderSword$$module$js$pass$deterministic(a);undergroundChannelLandBridge$$module$js$pass$deterministic(a);b.fogLampNotRequired()&&fogLampNotRequired$$module$js$pass$deterministic(a,b);evilSpiritIslandRequiresDolphin$$module$js$pass$deterministic(a);simplifyInvisibleChests$$module$js$pass$deterministic(a);addCordelWestTriggers$$module$js$pass$deterministic(a,
b);b.disableRabbitSkip()&&fixRabbitSkip$$module$js$pass$deterministic(a);b.disableRageSkip()&&patchLimeTreeLake$$module$js$pass$deterministic(a);fixReverseWalls$$module$js$pass$deterministic(a);b.chargeShotsOnly()&&disableStabs$$module$js$pass$deterministic(a);b.orbsOptional()&&orbsOptional$$module$js$pass$deterministic(a);b.noBowMode()&&noBowMode$$module$js$pass$deterministic(a);patchTooManyItemsMessage$$module$js$pass$deterministic(a)}
function consolidateItemGrants$$module$js$pass$deterministic(a){a.items.GlowingLamp.itemUseData[0].message.action=11}function addMezameTrigger$$module$js$pass$deterministic(a){const b=a.nextFreeTrigger();b.used=!0;b.conditions=[~a.flags.AlwaysTrue.id];b.message=MessageId$$module$js$rom$messageid.of({action:4});b.flags=[a.flags.AlwaysTrue.id];a.locations.MezameShrine.spawns.push(Spawn$$module$js$rom$location.of({tile:136,type:2,id:b.id}))}
function normalizeSwords$$module$js$pass$deterministic(a,b){a.objects[16].atk=3;a.objects[17].atk=6;a.objects[18].atk=8;a.objects[24].atk=3;a.objects[19].atk=5;a.objects[25].atk=5;a.objects[23].atk=7;a.objects[26].atk=7;a.objects[20].atk=3;a.objects[21].atk=6;a.objects[22].atk=8;a.objects[28].atk=3;a.objects[29].atk=3;a.objects[30].atk=5;a.objects[27].atk=7;a.objects[31].atk=7;b.slowDownTornado()&&(a=a.objects[18],a.speed=7,a.data[12]=96)}
function preventBossSoftlocks$$module$js$pass$deterministic(a){const b=a.trigger(160);b.used=!0;b.conditions=[];b.flags=[];b.message=MessageId$$module$js$rom$messageid.of({part:0,index:0,action:21});a.objects[94].data[13]=254;a.items.InsectFlute.itemUseData[0].flags=[a.flags.UsedInsectFlute.id]}function fixOpelStatue$$module$js$pass$deterministic(a){a.items.OpelStatue.selectedItemValue=0}
function fixCoinSprites$$module$js$pass$deterministic(a){for(const b of[96,100,101,102,103,104,105,106,107,108,109,111])for(const c of[0,1,2])a.patterns[b<<6|c].pixels=a.patterns[6016|c].pixels;a.objects[12].metasprite=169}function fixReverseWalls$$module$js$pass$deterministic(a){for(const b in[4,5,8,9])a.tileEffects[9].effects[b]=24,a.tileEffects[2].effects[b]=24}
function undergroundChannelLandBridge$$module$js$pass$deterministic(a){({tiles:a}=a.screens[161]);a[40]=159;a[55]=35;a[56]=35;a[57]=33;a[71]=141;a[72]=143;a[86]=153;a[87]=154;a[88]=140}
function fogLampNotRequired$$module$js$pass$deterministic(a,b){const {flags:{AlwaysTrue:c,InjuredDolphin:d,FogLamp:e,KensuInCabin:f,ReturnedFogLamp:g},items:{ShellFlute:h},locations:{BoatHouse:k,Portoa_FishermanHouse:m},npcs:l}=a;b=b.requireHealedDolphinToRide();h.itemUseData[0].want=b?d.id:c.id;l.KensuInCabin.data[0]=103;l.KensuInCabin.localDialogs.get(-1)[0].message.action=10;l.KensuInCabin.localDialogs.get(-1)[0].flags=[];l.KensuInCabin.spawnConditions.set(k.id,[g.id,~f.id]);l.Fisherman.spawnConditions.set(m.id,
[e.id]);a.itemGets[100].flags=[];a.itemGets[103].copyFrom(a.itemGets[100])}function fixChests$$module$js$pass$deterministic(a){for(const b of a.locations)for(const a of b.spawns)a.isChest()&&(a.timed=!1)}
function adjustGoaFortressTriggers$$module$js$pass$deterministic(a){a=a.locations;a.GoaFortress_Kelbesque.spawns[0].x-=16;a.GoaFortress_Zebu.spawns.splice(1,1);a.GoaFortress_Tornel.spawns.splice(2,1);a.GoaFortress_Asina.spawns.splice(2,1);a.GoaFortress_Kensu.spawns.splice(3,1);a.GoaFortress_Kensu.spawns.splice(1,1)}
function alarmFluteIsKeyItem$$module$js$pass$deterministic(a,b){const {items:{AlarmFlute:c},locations:{WaterfallCave4:d},npcs:{WindmillGuard:e}}=a;a.itemGets[49].inventoryRowStart=32;c.unique=!0;c.basePrice=0;e.data[1]=49;b=[[33,.72],[31,.9]];let f=0;for(const c of a.shops)if(c.type===module$js$rom$shop.ShopType.TOOL)for(let d=0,e=c.contents.length;d<e;d++){if(49!==c.contents[d])continue;const [e,g]=b[f++%b.length];c.contents[d]=e;a.shopDataTablesAddress&&(c.prices[d]=Math.round(c.prices[d]*g))}a.itemGets[91].itemId=
29;d.spawn(25).id=16}function brokahanaWantsMado1$$module$js$pass$deterministic(a){const {flags:{Karmine:b,Mado1:c},npcs:{Brokahana:d}}=a;a=assert$$module$js$util(d.localDialogs.get(-1))[0];if(a.condition!==~b.id)throw Error(`Bad brokahana condition: ${a.condition}`);a.condition=~c.id}
function requireHealedDolphin$$module$js$pass$deterministic(a){const {flags:{InjuredDolphin:b,ShellFlute:c},npcs:{Fisherman:d,FishermanDaughter:e}}=a;d.spawnConditions.set(214,[c.id,b.id]);a=e.localDialogs.get(-1);a.unshift(a[0].clone());a[0].condition=~b.id;a[1].condition=~c.id}
function requireTelepathyForDeo$$module$js$pass$deterministic(a){const {flags:{Telepathy:b},npcs:{Deo:c,SaharaBunny:d}}=a;d.globalDialogs.push(GlobalDialog$$module$js$rom$npc.of(~b.id,[26,18]));c.globalDialogs.push(GlobalDialog$$module$js$rom$npc.of(~b.id,[26,19]))}function teleportOnThunderSword$$module$js$pass$deterministic(a){const {flags:{WarpShyron:b}}=a;a.itemGets[3].flags.push(b.id)}
function noTeleportOnThunderSword$$module$js$pass$deterministic(a){a.itemGets[3].acquisitionAction.action=22}
function adjustItemNames$$module$js$pass$deterministic(a,b){if(b.leatherBootsGiveSpeed()){const c=a.items[47];c.menuName="Speed Boots";c.messageName="Speed Boots";b.changeGasMaskToHazmatSuit()&&(b=a.items[41],b.menuName="Hazmat Suit",b.messageName="Hazmat Suit")}for(b=5;12>b;b+=2)a.items[b].menuName=a.items[b].menuName.replace("Ball","Orb"),a.items[b].messageName=a.items[b].messageName.replace("Ball","Orb")}
function makeBraceletsProgressive$$module$js$pass$deterministic(a){const {flags:{BallOfWind:b,TornadoBracelet:c},npcs:{Tornel:d}}=a;a=d.localDialogs.get(33);a=[a[0],a[2],a[2].clone(),a[1]];a[1].condition=~c.id;a[2].condition=~b.id;a[3].condition=-1;d.localDialogs.set(33,a)}function simplifyInvisibleChests$$module$js$pass$deterministic(a){const {CordelPlainEast:b,KirisaMeadow:c,UndergroundChannel:d}=a.locations;for(const a of[b,c,d])for(const b of a.spawns)b.isChest()&&(b.data[2]|=32)}
function addCordelWestTriggers$$module$js$pass$deterministic(a,b){const {CordelPlainEast:c,CordelPlainWest:d}=a.locations;for(const a of c.spawns)(a.isChest()||b.disableTeleportSkip()&&a.isTrigger())&&d.spawns.push(a.clone())}function fixRabbitSkip$$module$js$pass$deterministic(a){for(const b of a.locations.MtSabreNorth_Main.spawns)b.isTrigger()&&134===b.id&&1856===b.x&&(b.x+=16,b.y+=16)}
function patchTooManyItemsMessage$$module$js$pass$deterministic(a){a.messages.parts[32][15].text+="\nItem: [:ITEM:]"}
function addZombieWarp$$module$js$pass$deterministic(a){const {flags:{WarpZombie:b},locations:{ZombieTown:c}}=a;a.flags.insertZombieWarpFlag();a.messages.parts[33][0].text=" {1a:Leaf}      {16:Brynmaer} {1d:Oak} \n{0c:Nadare}'s  {1e:Portoa}   {14:Amazones} \n{19:Joel}      Zombie   {20:Swan} \n{23:Shyron}    {18:Goa}      {21:Sahara}";const d=a.nextFreeTrigger();d.used=!0;d.conditions=[];d.message=MessageId$$module$js$rom$messageid.of({});d.flags=[b.id];for(const a of c.spawns)a.isTrigger()&&138===
a.id&&(a.id=d.id);a.townWarp.locations.splice(7,0,c.id);if(255!==a.townWarp.locations.pop())throw Error("unexpected");}function evilSpiritIslandRequiresDolphin$$module$js$pass$deterministic(a){a.trigger(138).conditions=[~a.flags.CurrentlyRidingDolphin.id];a.messages.parts[29][16].text="The cave entrance appears\nto be underwater. You'll\nneed to swim."}function leafElderInSabreHeals$$module$js$pass$deterministic(a){a.npcs[13].localDialogs.get(53)[0].message.action=23}
function patchLimeTreeLake$$module$js$pass$deterministic(a){a.screens[116].setTiles(144,[[124,127,124,127,124,127,124,125,126,124,127,124,127,124,127,124],[48,48,48,48,48,48,48,null,null,48,48,48,48,48,48,48],[48,48,48,48,48,48,48,null,null,48,48,48,48,48,48,48]])}
function preventNpcDespawns$$module$js$pass$deterministic(a,b){function c(a,b){const c=a.indexOf(b);if(0>c)throw Error(`Could not find element ${b} in ${a}`);a.splice(c,1)}function d(a){a.reverse();for(let b=0;b<a.length;b++){const c=a[b+1];a[b].condition=c?~c.condition:-1}}const {locations:{BoatHouse:e,Brynmaer:f,Crypt_Draygon2:g,Joel_Shed:h,MtSabreNorth_SummitCave:k,MtSabreWest_Upper:m,PortoaPalace_ThroneRoom:l,Portoa_AsinaRoom:n,Portoa_FortuneTeller:p,Shyron_Temple:q,StomHouse:v,Swan_DanceHall:z,
Swan_Tavern:w,WindmillCave:A,WaterfallCave4:D,WaterfallValleyNorth:O,ZebuCave:t,ZombieTown_HouseBasement:r},items:{GlowingLamp:W,KeyToPrison:G,LovePendant:Na,StatueOfOnyx:jb},npcs:{Akahana:ua,AkahanaInBrynmaer:va,Asina:wa,AztecaInShyron:Wa,Clark:Xa,Draygon:X,FortuneTeller:kb,Kensu:T,KensuInCabin:P,KensuInSwan:I,LeafRabbit:M,OakChild:N,OakElder:ka,OakMother:aa,PortoaPalaceFrontGuard:xa,PortoaQueen:Y,PortoaThroneRoomBackDoorGuard:la,Rage:ma,Stom:na,StonedAkahana:ea,Tornel:Ca,WindmillGuard:Oa,Zebu:Da},
flags:u}=a;T.localDialogs.delete(w.id);I.link(T.id);I.used=!0;I.data=[...T.data];T.data[0]=W.id;z.spawns.find((a)=>a.isNpc()&&a.id===T.id).id=I.id;Na.itemUseData[0].want=256|I.id;ea.linkDialog(ua.id);va.used=!0;va.link(ua.id);va.data=[...ua.data];f.spawns.find((a)=>a.isNpc()&&a.id===ua.id).id=va.id;jb.itemUseData[0].want=256|va.id;M.dialog()[2].condition=u.RescuedLeafElder.id;M.dialog()[2].flags.push(u.TalkedToLeafRabbit.id);M.dialog()[3].flags.push(u.TalkedToLeafRabbit.id);Oa.spawns(A)[1]=~u.WindmillGuardAlarmFluteTradein.id;
c(ua.spawns(D),~u.BehindWhirlpool.id);c(ea.spawns(D),~u.BehindWhirlpool.id);ka.dialog()[0].message.action=3;ka.dialog()[1].message.action=3;ka.dialog()[2].message.action=3;ka.dialog()[3].message.action=3;(()=>{const [a,b,c,d]=aa.dialog();d.condition=~u.RescuedChild.id;b.condition=-1;aa.dialog().splice(0,4,d,c,a,b)})();for(const b of[32,33,34,124,125])d(a.npcs[b].dialog());N.dialog().unshift(...N.dialog().splice(1,1));la.spawnConditions.set(l.id,[~u.QueenNotInThroneRoom.id,~u.MesiaRecording.id]);xa.dialog()[1].condition=
u.MesiaRecording.id;Y.dialog()[3].condition=u.SwordOfWater.id;Y.dialog()[3].message.action=3;Y.dialog()[4].flags.push(u.PortoaQueenGoingAway.id);Y.spawns(l)[1]=~u.MesiaRecording.id;Y.spawns(n)[0]=u.MesiaRecording.id;Y.dialog()[1].condition=u.MesiaRecording.id;kb.spawns(p)[1]=~u.MesiaRecording.id;Xa.spawnConditions.set(r.id,[~u.Clark.id]);Xa.spawnConditions.set(h.id,[u.Clark.id]);Da.localDialogs.set(t.id,[LocalDialog$$module$js$rom$npc.of(~u.TalkedToZebuInCave.id,[0,26],[u.TalkedToZebuInCave.id]),
LocalDialog$$module$js$rom$npc.of(u.LeafVillagersRescued.id,[0,29]),LocalDialog$$module$js$rom$npc.of(u.LeafAbduction.id,[0,28]),LocalDialog$$module$js$rom$npc.of(u.ZebuAtWindmill.id,[0,29]),LocalDialog$$module$js$rom$npc.of(u.UsedWindmillKey.id,[0,27,3]),LocalDialog$$module$js$rom$npc.of(-1,[0,29])]);c(Da.spawns(t),~u.BehindWhirlpool.id);Ca.spawnConditions.delete(m.id);na.spawnConditions.delete(v.id);wa.data[1]=a.items.FluteOfLime.id;wa.dialog(n)[0].message.action=17;wa.dialog(n)[2].message.action=
17;c(wa.spawns(n),~u.CalmedAngrySea.id);P.spawnConditions.set(e.id,[~u.AbleToRideDolphin.id,u.ReturnedFogLamp.id]);P.dialog()[0].message.action=2;Wa.spawns(q).push(~u.ShyronMassacre.id);a.trigger(130).conditions.push(~u.ShyronMassacre.id);ma.dialog()[0].condition=u.SwordOfWater.id;X.spawnConditions.set(g.id,[~u.Draygon2.id]);Da.dialog(q).unshift(...Da.dialog(q).splice(1,1));a.trigger(128).conditions=[~u.ShyronMassacre.id,u.TalkedToZebuInShyron.id,u.SwordOfThunder.id];a.trigger(129).conditions=[];
b.barrierRequiresCalmSea()&&a.trigger(132).conditions.push(u.CalmedAngrySea.id);a.trigger(140).conditions.push(u.TalkedToZebuInCave.id);a.trigger(141).used=!1;for(const a of k.spawns)a.isTrigger()&&141===a.id&&(a.id=178);(function(a,b){b=a.findIndex(b);if(0>b)throw Error(`Could not find element in ${a}`);a.splice(b,1)})(O.spawns,(a)=>a.isTrigger()&&141===a.id);a.trigger(178).conditions.push(u.Kelbesque1.id);a.trigger(178).flags.push(~u.LeafVillagersCurrentlyAbducted.id,~u.LeafElderCurrentlyAbducted.id,
u.LeafVillagersRescued.id);a.trigger(140).conditions.push(~u.Kelbesque1.id);a.trigger(134).conditions.push(~u.Kelbesque1.id);c(G.itemUseData[0].flags,~u.LeafVillagersCurrentlyAbducted.id);replace$$module$js$pass$deterministic(a.trigger(187).conditions,~u.Rage.id,~u.MesiaRecording.id)}function disableStabs$$module$js$pass$deterministic(a){for(const b of[8,9,39])a.objects[b].collisionPlane=0;a.npcs.Brokahana.data[0]=a.items.FruitOfLime.id}
function orbsOptional$$module$js$pass$deterministic(a){for(const b of[16,20,24,29])a.objects[b].terrainSusceptibility&=-5,a.objects[b].level=2}
function noBowMode$$module$js$pass$deterministic(a){const {flags:{UsedBowOfTruth:b},locations:{Crypt_Draygon2:c,Crypt_Hall2:d,MezameShrine:e}}=a;let f;for(const b of e.spawns)b.isTrigger()&&136===b.tile&&(f=a.trigger(b.id));if(!f)throw Error("Could not find start trigger");f.flags.push(b.id);a.tileEffects[6].effects[88]=0;e.exits.push(Exit$$module$js$rom$location.of({tile:104,dest:c.id,entrance:0}));for(let a of c.exits)a.dest===d.id&&(a.dest=e.id,a.entrance=1);for(let a of d.exits)a.dest===c.id&&
(a.dest=e.id,a.entrance=0)}function replace$$module$js$pass$deterministic(a,b,c){for(let d=0;d<a.length;d++)if(a[d]===b){a[d]=c;return}throw Error(`Could not find ${b} in ${a.join(",")}`);}var module$js$pass$deterministic={};module$js$pass$deterministic.deterministicPreParse=deterministicPreParse$$module$js$pass$deterministic;module$js$pass$deterministic.deterministic=deterministic$$module$js$pass$deterministic;const {$0e:$0e$$module$js$rom$item,$0f:$0f$$module$js$rom$item,$10:$10$$module$js$rom$item,$1a:$1a$$module$js$rom$item}=Segment$$module$js$rom$util,ITEM_USE_JUMP_TABLE$$module$js$rom$item=Address$$module$js$rom$util.of($0e$$module$js$rom$item,33689),ITEM_USE_DATA_TABLE$$module$js$rom$item=Address$$module$js$rom$util.of($0e$$module$js$rom$item,39906),ITEM_DATA_TABLE$$module$js$rom$item=Address$$module$js$rom$util.of($10$$module$js$rom$item,36848),SELECTED_ITEM_TABLE$$module$js$rom$item=Address$$module$js$rom$util.of($10$$module$js$rom$item,
36923),MENU_NAME_TABLE$$module$js$rom$item=Address$$module$js$rom$util.of($10$$module$js$rom$item,36998),ARMOR_DEFENSE_TABLE$$module$js$rom$item=Address$$module$js$rom$util.of($1a$$module$js$rom$item,35776),SHIELD_DEFENSE_TABLE$$module$js$rom$item=Address$$module$js$rom$util.of($1a$$module$js$rom$item,35785),UNIQUE_ITEM_SCALING_TABLE$$module$js$rom$item=Address$$module$js$rom$util.of($0f$$module$js$rom$item,41232),MENU_NAME_ENCODE$$module$js$rom$item=[["Sword","\n\x0B\f"],[" of ","\\]"],["Bracelet",
"<=>["],["Shield","\r\u000e\u000f"],["Armor","{\u0011\u0012"],["Magic","#%("],["Power","\u0013\u0014\u0015"],["Item","\u0016\u0017^"]];
class Item$$module$js$rom$item extends Entity$$module$js$rom$entity{constructor(a,b,c={}){super(a.rom,b);this.items=a;const d=this.rom;a[b]=this;this.itemUseData=[];this.trades=c.trades||[];this.use=c.use||!1;this.weight=c.weight||1;this.valueAddr=null!=c.valueAddr?Address$$module$js$rom$util.of($0e$$module$js$rom$item,c.valueAddr):void 0;null!=this.valueAddr&&(this.value=this.valueAddr.read(d.prg));if(this.use){this.itemUseJump=this.itemUseJumpPointer.readAddress(d.prg,$0e$$module$js$rom$item,$0f$$module$js$rom$item);
b=a.itemUseJumps[this.itemUseJump.org];if(!b)throw Error(`Bad ItemUseJump: ${this.itemUseJump}`);a=this.itemUseDataPointer.readAddress(d.prg,$0e$$module$js$rom$item,$0f$$module$js$rom$item);for(var e of b)b=ItemUse$$module$js$rom$item.from(e,d.prg,a),this.itemUseData.push(b),a=a.plus(b.length)}this.itemDataValue=this.itemDataPointer.read(d.prg);this.selectedItemValue=this.selectedItemPointer.read(d.prg);e=this.menuNamePointer.readAddress(d.prg);this.menuName=MENU_NAME_ENCODE$$module$js$rom$item.reduce((a,
[b,c])=>a.replace(c,b),readString$$module$js$rom$util(d.prg,e.offset,255))}get messageName(){return this.rom.messages.itemNames[this.id]}set messageName(a){this.rom.messages.itemNames[this.id]=a}get basePrice(){return this.rom.shops.basePrices[this.id]}set basePrice(a){this.rom.shops.basePrices[this.id]=a}get itemUseJumpPointer(){return ITEM_USE_JUMP_TABLE$$module$js$rom$item.plus(this.id<<1)}get itemUseDataPointer(){return ITEM_USE_DATA_TABLE$$module$js$rom$item.plus(this.id<<1)}get itemDataPointer(){return ITEM_DATA_TABLE$$module$js$rom$item.plus(this.id)}get selectedItemPointer(){return SELECTED_ITEM_TABLE$$module$js$rom$item.plus(this.id)}get menuNamePointer(){return MENU_NAME_TABLE$$module$js$rom$item.plus(this.id<<
1)}itemUseMessages(){const a=new Map;for(const {message:b}of this.itemUseData)a.set(b.mid(),b);return[...a.values()]}setName(a){this.messageName=this.menuName=a}get palette(){return this.itemDataValue&3}set palette(a){this.itemDataValue=this.itemDataValue&-4|a&3}get unique(){return!!(this.itemDataValue&64)}set unique(a){this.itemDataValue=this.itemDataValue&-65|(a?64:0)}get worn(){return!!(this.itemDataValue&32)}set worn(a){this.itemDataValue=this.itemDataValue&-33|(a?32:0)}get solid(){return!!(this.itemDataValue&
128)}set solid(a){this.itemDataValue=this.itemDataValue&-129|(a?128:0)}assemble(a){this.itemDataPointer.loc(a);a.byte(this.itemDataValue);this.selectedItemPointer.loc(a);a.byte(this.selectedItemValue);var b=MENU_NAME_ENCODE$$module$js$rom$item.reduce((a,[b,c])=>a.replace(b,c),this.menuName);a.segment($10$$module$js$rom$item);a.reloc(`ItemMenuName_${hex$$module$js$rom$util(this.id)}`);const c=a.pc();a.byte(b,255);this.menuNamePointer.loc(a);a.word(c);if(this.itemUseJump){this.itemUseJumpPointer.loc(a);
a.word(this.itemUseJump.org);b=[];for(var d of this.itemUseData)b.push(...d.bytes());a.segment($0e$$module$js$rom$item.name,$0f$$module$js$rom$item.name);a.reloc(`ItemUseData_${hex$$module$js$rom$util(this.id)}`);d=a.pc();a.byte(...b);this.itemUseDataPointer.loc(a);a.word(d)}this.valueAddr&&(this.valueAddr.loc(a),a.byte(this.value))}isMagic(){return 65<=this.id&&72>=this.id}}
class ItemUse$$module$js$rom$item{constructor(a,b,c,d){this.kind=a;this.want=b;this.message=c;this.flags=d}static from(a,b,c){({offset:c}=c);var d=0;if("expect"===a||"screen"===a)d=b[c+1]<<8|b[c],c+=2;else if("flag"===a){d=ITEM_CONDITION_FLAGS$$module$js$rom$util.read(b,c);d.length||d.push(-1);if(1<d.length)throw Error(`Flag list too long: ${d}`);d=d[0];c+=2}else"location"===a?d=b[c++]:"empty"!==a&&assertNever$$module$js$util(a);const e=MessageId$$module$js$rom$messageid.from(b,c);b=ITEM_USE_FLAGS$$module$js$rom$util.read(b,
c+2);return new ItemUse$$module$js$rom$item(a,d,e,b)}bytes(){const a=[];if("expect"===this.kind||"screen"===this.kind)a.push(this.want&255,this.want>>>8&255);else if("flag"===this.kind){const b=ITEM_CONDITION_FLAGS$$module$js$rom$util.bytes([this.want]);if(2!==b.length)throw Error(`bad data: ${b}`);a.push(...b)}else"location"===this.kind?a.push(this.want):"empty"!==this.kind&&assertNever$$module$js$util(this.kind);a.push(...this.message.data);a.push(...ITEM_USE_FLAGS$$module$js$rom$util.bytes(this.flags));
return a}tradeNpc(){return"expect"!==this.kind||1!==this.want>>>8?null:this.want&255}get length(){return 2*(1+Math.max(1,this.flags.length))+("empty"===this.kind?0:"location"===this.kind?1:2)}}class Shield$$module$js$rom$item extends Item$$module$js$rom$item{get defense(){return this.items.shieldDefense[this.id-12]}set defense(a){this.items.shieldDefense[this.id-12]=a}}
class Armor$$module$js$rom$item extends Item$$module$js$rom$item{get defense(){return this.items.armorDefense[this.id-20]}set defense(a){this.items.armorDefense[this.id-20]=a}}
class Items$$module$js$rom$item extends EntityArray$$module$js$rom$entity{constructor(a){super(73);this.rom=a;this.itemUseJumps=DEFAULT_ITEM_USE_JUMPS$$module$js$rom$item;this.SwordOfWind=new Item$$module$js$rom$item(this,0);this.SwordOfFire=new Item$$module$js$rom$item(this,1);this.SwordOfWater=new Item$$module$js$rom$item(this,2);this.SwordOfThunder=new Item$$module$js$rom$item(this,3);this.Crystalis=new Item$$module$js$rom$item(this,4);this.BallOfWind=new Item$$module$js$rom$item(this,5);this.TornadoBracelet=
new Item$$module$js$rom$item(this,6);this.BallOfFire=new Item$$module$js$rom$item(this,7);this.FlameBracelet=new Item$$module$js$rom$item(this,8);this.BallOfWater=new Item$$module$js$rom$item(this,9);this.BlizzardBracelet=new Item$$module$js$rom$item(this,10);this.BallOfThunder=new Item$$module$js$rom$item(this,11);this.StormBracelet=new Item$$module$js$rom$item(this,12);this.CarapaceShield=new Shield$$module$js$rom$item(this,13);this.BronzeShield=new Shield$$module$js$rom$item(this,14);this.PlatinumShield=
new Shield$$module$js$rom$item(this,15);this.MirroredShield=new Shield$$module$js$rom$item(this,16);this.CeramicShield=new Shield$$module$js$rom$item(this,17);this.SacredShield=new Shield$$module$js$rom$item(this,18);this.BattleShield=new Shield$$module$js$rom$item(this,19);this.PsychoShield=new Shield$$module$js$rom$item(this,20);this.TannedHide=new Armor$$module$js$rom$item(this,21);this.LeatherArmor=new Armor$$module$js$rom$item(this,22);this.BronzeArmor=new Armor$$module$js$rom$item(this,23);
this.PlatinumArmor=new Armor$$module$js$rom$item(this,24);this.SoldierSuit=new Armor$$module$js$rom$item(this,25);this.CeramicSuit=new Armor$$module$js$rom$item(this,26);this.BattleArmor=new Armor$$module$js$rom$item(this,27);this.PsychoArmor=new Armor$$module$js$rom$item(this,28);this.MedicalHerb=new Item$$module$js$rom$item(this,29,{use:!0,trades:[0],valueAddr:34026});this.Antidote=new Item$$module$js$rom$item(this,30,{use:!0});this.LysisPlant=new Item$$module$js$rom$item(this,31,{use:!0});this.FruitOfLime=
new Item$$module$js$rom$item(this,32,{use:!0});this.FruitOfPower=new Item$$module$js$rom$item(this,33,{use:!0,valueAddr:34060});this.MagicRing=new Item$$module$js$rom$item(this,34,{use:!0});this.FruitOfRepun=new Item$$module$js$rom$item(this,35,{use:!0});this.WarpBoots=new Item$$module$js$rom$item(this,36,{use:!0});this.StatueOfOnyx=new Item$$module$js$rom$item(this,37,{use:!0,trades:[0]});this.OpelStatue=new Item$$module$js$rom$item(this,38,{use:!0});this.InsectFlute=new Item$$module$js$rom$item(this,
39,{use:!0});this.FluteOfLime=new Item$$module$js$rom$item(this,40,{use:!0,trades:[0,1,2,3]});this.GasMask=new Item$$module$js$rom$item(this,41);this.PowerRing=new Item$$module$js$rom$item(this,42);this.WarriorRing=new Item$$module$js$rom$item(this,43);this.IronNecklace=new Item$$module$js$rom$item(this,44);this.DeosPendant=new Item$$module$js$rom$item(this,45);this.RabbitBoots=new Item$$module$js$rom$item(this,46);this.LeatherBoots=new Item$$module$js$rom$item(this,47);this.ShieldRing=new Item$$module$js$rom$item(this,
48);this.AlarmFlute=new Item$$module$js$rom$item(this,49,{use:!0,trades:[0,1]});this.WindmillKey=new Item$$module$js$rom$item(this,50,{use:!0});this.KeyToPrison=new Item$$module$js$rom$item(this,51,{use:!0});this.KeyToStyx=new Item$$module$js$rom$item(this,52,{use:!0});this.FogLamp=new Item$$module$js$rom$item(this,53,{use:!0,trades:[0]});this.ShellFlute=new Item$$module$js$rom$item(this,54,{use:!0});this.EyeGlasses=new Item$$module$js$rom$item(this,55,{use:!0});this.BrokenStatue=new Item$$module$js$rom$item(this,
56,{use:!0});this.GlowingLamp=new Item$$module$js$rom$item(this,57,{use:!0});this.StatueOfGold=new Item$$module$js$rom$item(this,58,{use:!0});this.LovePendant=new Item$$module$js$rom$item(this,59,{use:!0,trades:[0]});this.KirisaPlant=new Item$$module$js$rom$item(this,60,{use:!0,trades:[0]});this.IvoryStatue=new Item$$module$js$rom$item(this,61,{use:!0,trades:[0]});this.BowOfMoon=new Item$$module$js$rom$item(this,62,{use:!0});this.BowOfSun=new Item$$module$js$rom$item(this,63,{use:!0});this.BowOfTruth=
new Item$$module$js$rom$item(this,64,{use:!0});this.Refresh=new Item$$module$js$rom$item(this,65);this.Paralysis=new Item$$module$js$rom$item(this,66);this.Telepathy=new Item$$module$js$rom$item(this,67);this.Teleport=new Item$$module$js$rom$item(this,68);this.Recover=new Item$$module$js$rom$item(this,69);this.Barrier=new Item$$module$js$rom$item(this,70);this.Change=new Item$$module$js$rom$item(this,71);this.Flight=new Item$$module$js$rom$item(this,72);this.armorDefense=tuple$$module$js$rom$util(a.prg,
ARMOR_DEFENSE_TABLE$$module$js$rom$item.offset,9);this.shieldDefense=tuple$$module$js$rom$util(a.prg,SHIELD_DEFENSE_TABLE$$module$js$rom$item.offset,9)}write(){const a=this.rom.assembler();ARMOR_DEFENSE_TABLE$$module$js$rom$item.loc(a);a.byte(...this.armorDefense);SHIELD_DEFENSE_TABLE$$module$js$rom$item.loc(a);a.byte(...this.shieldDefense);const b=Array(10).fill(0);for(const c of this)c.assemble(a),c.unique&&(b[c.id>>>3]|=1<<(c.id&7));UNIQUE_ITEM_SCALING_TABLE$$module$js$rom$item.loc(a);a.byte(...b);
return[a.module()]}}const DEFAULT_ITEM_USE_JUMPS$$module$js$rom$item={33849:["expect"],33858:["screen"],33872:["empty"],33873:["screen"],33887:["location"],33937:["expect"],33961:["expect","expect"],33971:["location"],34E3:["expect"],34011:[],34016:["expect","empty"],34055:["empty"],34077:["empty"],34084:["empty"],34095:["empty"],34106:["empty"],34122:["empty"],34148:["empty"],34149:["expect"],34155:["flag"],34181:["empty"],34206:["expect","expect","expect","expect"]};var module$js$rom$item={};
module$js$rom$item.Item=Item$$module$js$rom$item;module$js$rom$item.ItemUse=ItemUse$$module$js$rom$item;module$js$rom$item.Items=Items$$module$js$rom$item;function shuffleTrades$$module$js$pass$shuffletrades(a,b,c){if(b.randomizeTrades()){var {StatueOfOnyx:d,FogLamp:e,LovePendant:f,KirisaPlant:g,IvoryStatue:h}=a.items,k=new Map,m=[[d,0,"Akahana"],[e,0,"Fisherman"],[f,0,"Kensu"],[g,0,"Aryllis"],[h,0,"Slimed Kensu"]],l=m.map(([a,b,c])=>{if(0>a.trades.indexOf(b)||b>=a.itemUseData.length)throw Error(`not a trade: ${a} ${b}`);return[a.itemUseData[b],a.id,c]});c.shuffle(l);for(const [c,d]of m){const [e,f,g]=l.pop();c.itemUseData[d]=e;a.spoiler&&a.spoiler.addTrade(c.id,
c.messageName,g);291===e.want?a.prg[251061]=c.id-28:356===e.want&&b.fogLampNotRequired()&&([...a.npcs[100].spawnConditions.values()][0][0]=512|c.id);k.set(f,c.id)}a.itemGets.actionGrants=new Map([...a.itemGets.actionGrants].map(([a,b])=>{var c;return[(c=k.get(a),null!==c&&void 0!==c?c:a),b]}));b=a.items[c.nextInt(4)];a.npcs[195].localDialogs.get(-1)[0].condition=512|b.id;a.spoiler&&a.spoiler.addTrade(b.id,b.messageName,"Rage");a.npcs[56].localDialogs.get(-1)[3].condition=512|b.id;c=a.items[2*c.nextInt(4)+
6];for(const d of a.npcs[95].localDialogs.values())for(b=2;b<d.length;b++)if(3===d[b].message.action){d[b-2].condition=~(512|c.id-1);d[b-1].condition=~(512|c.id);a.spoiler&&a.spoiler.addTrade(c.id,c.messageName,"Tornel");break}}}function buildTradeInMap$$module$js$pass$shuffletrades(a){const b=new Map;for(const c of a.items)for(const a of c.trades)b.set(c.itemUseData[a].want&255,c.id);return b}var module$js$pass$shuffletrades={};module$js$pass$shuffletrades.shuffleTrades=shuffleTrades$$module$js$pass$shuffletrades;
module$js$pass$shuffletrades.buildTradeInMap=buildTradeInMap$$module$js$pass$shuffletrades;function fixDialog$$module$js$pass$fixdialog(a){function b(b){const c=t.get(b.id);if(!c)throw Error(`No trade-in for ${b.name}`);return a.items[c]}function c(a){e(a,/teach\s+you\s+the\s+magic\s+of/,"bestow upon you the")}function d(b){"number"===typeof b?b=a.items[a.itemGets[b&255].itemId]:b instanceof Item$$module$js$rom$item||(b=b.item);return`[${hex$$module$js$rom$util(b.id)}:${b.messageName}]`}function e(b,c,d){const [e,f]=b.split(":").map((a)=>parseInt(a,16));b=a.messages.parts[e][f];b.text=
b.text.replace(c,d)}const {flags:{AkahanaStatueOfOnyxTradein:f,AsinaInBackRoom:g,BehindWhirlpool:h,KensuInSwan:k,MtSabreNorthSummit:m,MtSabreWestTornel:l,PortoaQueen:n,Rage:p,RepairedStatue:q,SlimedKensu:v,StomFightReward:z,ZebuAtWindmill:w},npcs:{AkahanaInBrynmaer:A,Aryllis:D,Fisherman:O}}=a;e("03:06",",","");const t=buildTradeInMap$$module$js$pass$shuffletrades(a);w.item.isMagic()||c("00:1b");e("00:1b","[41:Refresh]",d(w.item));var r=b(A);e("02:01","an unusual statue",vague$$module$js$pass$fixdialog(r));
e("02:02","a statue",`the ${commonNoun$$module$js$pass$fixdialog(r)}`);e("02:02","[29:Gas Mask]",d(f));z.item.isMagic()||c("03:01");e("03:01","[43:Telepathy]",d(z));r=findTornelTradeIn$$module$js$pass$fixdialog(a);e("03:01","[06:Tornado Bracelet]",d(r));e("05:0a","[06:Tornado Bracelet]",d(r));e("05:0a","[44:Teleport]",d(l));r=b(O);e("09:01","[35:Fog Lamp]",d(r));e("09:04","[35:Fog Lamp]",d(r));e("09:05","[35:Fog Lamp]",d(r));e("09:06","lamp",commonNoun$$module$js$pass$fixdialog(r));r=a.npcs.PortoaQueen.dialog()[3].condition;
e("0a:0c","[28:Flute of Lime]",d(n));e("0a:0d","[02:Sword of Water]",d(r));g.item.isMagic()||c("0b:01");e("0b:01","[45:Recover]",d(g));h.item.isMagic()||(c("0b:01"),c("1d:12"));e("0b:01","[46:Barrier]",d(h));e("1d:12","[46:Barrier]",d(h));(r=function(...b){var c=[(a)=>BOWS$$module$js$pass$fixdialog.has(a),(a)=>SWORD_OR_MAGIC$$module$js$pass$fixdialog.has(a),(b)=>a.items[a.itemGets[b].itemId].unique];for(const d of c)for(const e of b){c=a.locations[e];for(const b of c.spawns)if(b.isChest()&&(c=a.slots[b.id],
72>=c&&d(c)))return a.items[c]}}(79,78,77,76,71,70,69,68,75,74,73,72))?e("0d:00","[35:Fog Lamp]",d(r)):e("0d:00","that a [35:Fog Lamp] was","there was treasure");r=a.npcs.Rage.dialog()[0].condition;e("0e:03","[02:Sword of Water]",d(r));e("0e:03","[09:Ball of Water]",d(p));e("10:0c","that's","is");e("10:0c",/, is in the\+lighthouse/,"");r=b(D);e("12:05","[3c:Kirisa Plant]",d(r));e("12:10","the plant",`the ${commonNoun$$module$js$pass$fixdialog(r)}`);e("12:10","[3c:Kirisa Plant]",d(r));r=`Our illustrious chief seeks ${vague$$module$js$pass$fixdialog(r)}.`;
e("12:09",/[^]*/,r);e("12:0a",/[^]*/,r);r=b(a.npcs.KensuInSwan);e("13:02","[3b:Love Pendant]",d(r));e("13:00","pendant",commonNoun$$module$js$pass$fixdialog(r));k.item.isMagic()||c("13:02");e("13:02","[47:Change]",d(k));r=b(a.npcs.SlimedKensu);e("18:06","[3d:Ivory Statue]",d(r));e("18:07","[3d:Ivory Statue]",d(r));e("18:06","It's in a room","{0b:Karmine} is");v.item.isMagic()||e("18:07","teach","give");e("18:07","[48:Flight]",d(v));m.item.isMagic()||c("1c:10");e("1c:10","[42:Paralysis]",d(m));e("20:06",
"Statue of Gold",d(q))}const BOWS$$module$js$pass$fixdialog=new Set([62,63,64]),SWORD_OR_MAGIC$$module$js$pass$fixdialog=new Set([0,1,2,3,65,66,67,68,69,70,71,72]);function findTornelTradeIn$$module$js$pass$fixdialog(a){var {Tornel:b}=a.npcs;for(const c of b.localDialogs.values())for(b=2;b<c.length;b++){const d=~c[b].condition;if(516<d&&524>=d&&!(d&1))return a.items[d&255]}return a.items.TornadoBracelet}
function vague$$module$js$pass$fixdialog(a){const b=a.rom.items;switch(a){case b.StatueOfOnyx:return"an unusual statue";case b.FluteOfLime:return"a rare instrument";case b.FogLamp:return"a brilliant lamp";case b.LovePendant:return"a beautiful charm";case b.KirisaPlant:return"a fragrant plant";case b.IvoryStatue:return"an exotic statue"}fail$$module$js$assert();return"a valuable item"}
function commonNoun$$module$js$pass$fixdialog(a){const b=a.rom.items;switch(a){case b.StatueOfOnyx:return"statue";case b.FluteOfLime:return"instrument";case b.FogLamp:return"lamp";case b.LovePendant:return"pendant";case b.KirisaPlant:return"plant";case b.IvoryStatue:return"statue"}fail$$module$js$assert();return"item"}var module$js$pass$fixdialog={};module$js$pass$fixdialog.fixDialog=fixDialog$$module$js$pass$fixdialog;function randomizeThunderWarp$$module$js$pass$randomizethunderwarp(a,b){var c=[...a.townWarp.locations].filter((a)=>255!==a);b=b.nextInt(c.length);const d=c[b];let e=64;if(d===a.locations.Shyron.id||d===a.locations.Shyron_Temple.id)e=65;a.townWarp.thunderSwordWarp=[d,e];c=768-c.length+b;a=a.itemGets[3].flags;for(b=0;b<a.length;b++)if(765===a[b]){a[b]=c;return}a.push(c)}var module$js$pass$randomizethunderwarp={};module$js$pass$randomizethunderwarp.randomizeThunderWarp=randomizeThunderWarp$$module$js$pass$randomizethunderwarp;function rescaleMonsters$$module$js$pass$rescalemonsters(a,b,c){var d=new Set(seq$$module$js$rom$util(256,(a)=>a).filter((b)=>b in a.objects));for(var [e]of SCALED_MONSTERS$$module$js$pass$rescalemonsters)d.delete(e);for(const [b,c]of SCALED_MONSTERS$$module$js$pass$rescalemonsters)for(var f of d)a.objects[b].base===a.objects[f].base&&(SCALED_MONSTERS$$module$js$pass$rescalemonsters.set(f,c),d.delete(b));for(var g of[200,249,250])a.objects[g].attackType=240<g?254:255,a.objects[g].statusEffect=0;a.objects[125].elements|=
8;e=new Set([87,94,104,125,136,151,155,158]);d=new Set([80,83,95,105]);for(const [h,{sdef:k,swrd:m,hits:l,satk:n,dgld:p,sexp:q}]of SCALED_MONSTERS$$module$js$pass$rescalemonsters)f=a.objects[h].data,g=e.has(h)?1:0,f[2]|=128,f[6]=l,f[7]=n,f[8]=k|m<<4,f[16]=f[16]&15|p<<4,f[17]=q,(g?b.shuffleBossElements():b.shuffleMonsterElements())&&!d.has(h)&&(f=[...a.objects[h].elements.toString(2).padStart(4,"0")],c.shuffle(f),a.objects[h].elements=Number.parseInt(f.join(""),2));if(b.shuffleMonsterElements()){b=
c.nextInt(4);a.prg[217645]=b+1;for(const c of d)a.objects[c].elements=1<<b}}
const SCALED_MONSTERS$$module$js$pass$rescalemonsters=new Map([[63,"p","Sorceror shot",,,,19,,,],[75,"m","wraith??",2,,2,22,4,61],[79,"m","wraith",1,,2,20,4,61],[80,"m","Blue Slime",,,1,16,2,32],[81,"m","Weretiger",,,1,21,4,40],[82,"m","Green Jelly",4,,3,16,4,36],[83,"m","Red Slime",6,,4,16,4,48],[84,"m","Rock Golem",6,,11,24,6,85],[85,"m","Blue Bat",,,,4,,32],[86,"m","Green Wyvern",4,,4,24,6,52],[87,"b","Vampire",3,,12,18,,110],[88,"m","Orc",3,,4,21,4,57],[89,"m","Red Flying Swamp Insect",3,,1,21,
4,57],[90,"m","Blue Mushroom",2,,1,21,4,44],[91,"m","Swamp Tomato",3,,2,35,4,52],[92,"m","Flying Meadow Insect",3,,3,23,4,81],[93,"m","Swamp Plant",,,,,,36],[94,"b","Insect",,1,8,6,,100],[95,"m","Large Blue Slime",5,,3,20,4,52],[96,"m","Ice Zombie",5,,7,14,4,57],[97,"m","Green Living Rock",,,1,9,4,28],[98,"m","Green Spider",4,,4,22,4,44],[99,"m","Red/Purple Wyvern",3,,4,30,4,65],[100,"m","Draygonia Soldier",6,,11,36,4,89],[101,"m","Ice Entity",3,,2,24,4,52],[102,"m","Red Living Rock",,,1,13,4,40],
[103,"m","Ice Golem",7,2,11,28,4,81],[104,"b","Kelbesque",4,6,12,29,,120],[105,"m","Giant Red Slime",7,,40,90,4,102],[106,"m","Troll",2,,3,24,4,65],[107,"m","Red Jelly",2,,2,14,4,44],[108,"m","Medusa",3,,4,36,8,77],[109,"m","Red Crab",2,,1,21,4,44],[110,"m","Medusa Head",,,1,29,4,36],[111,"m","Evil Bird",,,2,30,6,65],[113,"m","Red/Purple Mushroom",3,,5,19,6,69],[114,"m","Violet Earth Entity",3,,3,18,6,61],[115,"m","Mimic",,,3,26,15,73],[116,"m","Red Spider",3,,4,22,6,48],[117,"m","Fishman",4,,6,19,
5,61],[118,"m","Jellyfish",,,3,14,3,48],[119,"m","Kraken",5,,11,25,7,73],[120,"m","Dark Green Wyvern",4,,5,21,5,61],[121,"m","Sand Monster",5,,8,6,4,57],[123,"m","Wraith Shadow 1",,,,9,7,44],[124,"m","Killer Moth",,,2,35,,77],[125,"b","Sabera",3,7,13,24,,110],[128,"m","Draygonia Archer",1,,3,20,6,61],[129,"m","Evil Bomber Bird",,,1,19,4,65],[130,"m","Lavaman/blob",3,,3,24,6,85],[132,"m","Lizardman (w/ flail(",2,,3,30,6,81],[133,"m","Giant Eye",3,,5,33,4,81],[134,"m","Salamander",2,,4,29,8,77],[135,
"m","Sorceror",2,,5,31,6,65],[136,"b","Mado",4,8,10,30,,110],[137,"m","Draygonia Knight",2,,3,24,4,77],[138,"m","Devil",,,1,18,4,52],[139,"b","Kelbesque 2",4,6,11,27,,110],[140,"m","Wraith Shadow 2",,,,17,4,48],[144,"b","Sabera 2",5,7,21,27,,120],[145,"m","Tarantula",3,,3,21,6,73],[146,"m","Skeleton",,,4,30,6,69],[147,"b","Mado 2",4,8,11,25,,120],[148,"m","Purple Giant Eye",4,,10,23,6,102],[149,"m","Black Knight (w/ flail)",3,,7,26,6,89],[150,"m","Scorpion",3,,5,29,2,73],[151,"b","Karmine",4,,14,
26,,110],[152,"m","Sandman/blob",3,,5,36,6,98],[153,"m","Mummy",5,,19,36,6,110],[154,"m","Tomb Guardian",7,,60,37,6,106],[155,"b","Draygon",5,6,16,41,,110],[158,"b","Draygon 2",7,6,28,40,,,],[160,"m","Ground Sentry (1)",4,,6,26,,73],[161,"m","Tower Defense Mech (2)",5,,8,36,,85],[162,"m","Tower Sentinel",,,1,,,32],[163,"m","Air Sentry",3,,2,26,,65],[165,"b","Vampire 2",3,,12,27,,100],[164,"b","Dyna",6,5,32,,,,],[180,"b","dyna pod",6,5,48,26,,,],[184,"p","dyna counter",15,,,42,,,],[185,"p","dyna laser",
15,,,42,,,],[186,"p","dyna bubble",,,,36,,,],[188,"m","vamp2 bat",,,,16,,15],[191,"p","draygon2 fireball",,,,26,,,],[193,"m","vamp1 bat",,,,16,,15],[195,"p","giant insect spit",,,,35,,,],[196,"m","summoned insect",4,,2,42,,98],[197,"p","kelby1 rock",,,,22,,,],[198,"p","sabera1 balls",,,,19,,,],[199,"p","kelby2 fireballs",,,,11,,,],[200,"p","sabera2 fire",,,1,6,,,],[201,"p","sabera2 balls",,,,17,,,],[202,"p","karmine balls",,,,25,,,],[203,"p","sun/moon statue fireballs",,,,39,,,],[204,"p","draygon1 lightning",
,,,37,,,],[205,"p","draygon2 laser",,,,36,,,],[206,"p","draygon2 breath",,,,36,,,],[224,"p","evil bomber bird bomb",,,,2,,,],[226,"p","summoned insect bomb",,,,47,,,],[227,"p","paralysis beam",,,,23,,,],[228,"p","stone gaze",,,,33,,,],[229,"p","rock golem rock",,,,24,,,],[230,"p","curse beam",,,,10,,,],[231,"p","mp drain web",,,,11,,,],[232,"p","fishman trident",,,,15,,,],[233,"p","orc axe",,,,24,,,],[234,"p","Swamp Pollen",,,,37,,,],[235,"p","paralysis powder",,,,17,,,],[236,"p","draygonia solider sword",
,,,28,,,],[237,"p","ice golem rock",,,,20,,,],[238,"p","troll axe",,,,27,,,],[239,"p","kraken ink",,,,24,,,],[240,"p","draygonia archer arrow",,,,12,,,],[241,"p","??? unused",,,,16,,,],[242,"p","draygonia knight sword",,,,9,,,],[243,"p","moth residue",,,,19,,,],[244,"p","ground sentry laser",,,,13,,,],[245,"p","tower defense mech laser",,,,23,,,],[246,"p","tower sentinel laser",,,,8,,,],[247,"p","skeleton shot",,,,11,,,],[248,"p","lavaman shot",,,,14,,,],[249,"p","black knight flail",,,,18,,,],[250,
"p","lizardman flail",,,,21,,,],[252,"p","mado shuriken",,,,36,,,],[253,"p","guardian statue missile",,,,23,,,],[254,"p","demon wall fire",,,,23,,,]].map(([a,b,c,d=0,e=0,f=0,g=0,h=0,k=0])=>[a,{id:a,type:b,name:c,sdef:d,swrd:e,hits:f,satk:g,dgld:h,sexp:k}]));var module$js$pass$rescalemonsters={};module$js$pass$rescalemonsters.rescaleMonsters=rescaleMonsters$$module$js$pass$rescalemonsters;module$js$pass$rescalemonsters.SCALED_MONSTERS=SCALED_MONSTERS$$module$js$pass$rescalemonsters;function shuffleGoa$$module$js$pass$shufflegoa(a,b){function c(a,b,c,d){b=a.exits[b];const e=[];for(const c of a.exits)c.dest===b.dest&&c.entrance===b.entrance&&e.push(c);for(const a of e)a.dest=c.id,a.entrance=d}var d=a.locations;a=[1,2,3,4];b.shuffle(a);b=[[d.GoaFortress_Exit,0,0],[d.GoaFortress_Kelbesque,0,0],[d.GoaFortress_Sabera,0,0],[d.GoaFortress_Mado1,0,0],[d.GoaFortress_Karmine1,0,0]];d=[[d.GoaFortress_Entrance,1,2],[d.GoaFortress_Zebu,1,4],[d.GoaFortress_Tornel,1,2],[d.GoaFortress_Asina,
1,2],[d.GoaFortress_Kensu,5,10]];var e=a[3];4!==e&&(flipKarmineExit$$module$js$pass$shufflegoa(...d[4]),flipNonKarmineExit$$module$js$pass$shufflegoa(...d[e]));for(e=0;4>=e;e++){const [f,g,h]=d[0===e?0:a[e-1]],[k,m,l]=b[4===e?0:a[e]];c(k,l,f,g);c(f,h,k,m)}for(const [b]of d)"number"===typeof b.data.music&&(b.bgm=b.neighborForEntrance(b.data.music).bgm),"number"===typeof b.data.palette&&(a=b.neighborForEntrance(b.data.palette).tilePalettes,b.tilePalettes=[a[0],a[1],a[2]])}
function flipKarmineExit$$module$js$pass$shufflegoa(a,b,c){a.writeScreens2d(1,[[154,128]]);a.entrances[b].screen=a.exits[c].screen=a.exits[c+1].screen=1;a.entrances[b].coord=53376;a.exits[c].tile=199;a.exits[c+1].tile=200}function flipNonKarmineExit$$module$js$pass$shufflegoa(a,b,c){2>a.width&&a.resizeScreens(0,0,0,1,128);a.writeScreens2d(0,[[131,151]]);a.entrances[b].screen=a.exits[c].screen=a.exits[c+1].screen=1;a.entrances[b].coord=44848;a.exits[c].tile=178;a.exits[c+1].tile=179}
var module$js$pass$shufflegoa={};module$js$pass$shufflegoa.shuffleGoa=shuffleGoa$$module$js$pass$shufflegoa;function shuffleMazes$$module$js$pass$shufflemazes(a,b,c){shufflePyramid$$module$js$maze$pyramid(a,c);shuffleSwamp$$module$js$maze$swamp(a,c);shuffleGoa1$$module$js$maze$goa(a,c);for(const b of SHUFFLED_CAVES$$module$js$pass$shufflemazes)shuffleCave$$module$js$maze$cave(a.locations[b],c);b.addEastCave()&&(shuffleCave$$module$js$maze$cave(a.locations.EastCave1,c),shuffleCave$$module$js$maze$cave(a.locations.EastCave2,c),a.locations.EastCave3.used&&shuffleCave$$module$js$maze$cave(a.locations.EastCave3,
c))}function prepareScreens$$module$js$pass$shufflemazes(a){extendGoaScreens$$module$js$maze$goa(a)}const SHUFFLED_CAVES$$module$js$pass$shufflemazes=[4,5,6,7,8,9,10,12,14,16,17,34,35,36,37,38,39,42,43,44,45,46,49,51,52,53,56,57,68,69,70,72,73,74,75,76,77,78,79,84,85,86,87,105,112,125,127,128,129,130,131,132,133,134,135,143,146,149,157,171,176,177,178,179];var module$js$pass$shufflemazes={};module$js$pass$shufflemazes.shuffleMazes=shuffleMazes$$module$js$pass$shufflemazes;
module$js$pass$shufflemazes.prepareScreens=prepareScreens$$module$js$pass$shufflemazes;function shuffleMimics$$module$js$pass$shufflemimics(a,b,c){var d,e;const f=[],g=[];for(const c of a.locations)for(const h of c.spawns)if(h.isChest()){const c=a.slots[h.id];112<=c&&g.push(h.id);b.preserveUniqueChecks()&&(null===(e=a.items[null===(d=a.itemGets[c])||void 0===d?void 0:d.itemId])||void 0===e?0:e.unique)||h.isInvisible()||f.push(h.id)}c.shuffle(f);module$js$util.iters.zip(g,f,a.slots.swap.bind(a))}var module$js$pass$shufflemimics={};module$js$pass$shufflemimics.shuffleMimics=shuffleMimics$$module$js$pass$shufflemimics;class Graphics$$module$js$rom$graphics{constructor(a){this.rom=a;this.monsterConstraints=new Map;this.npcConstraints=new Map;this.allSpritePalettes=new Set;var b=new DefaultMap$$module$js$util(()=>[]);for(var c of a.locations)if(c.used)for(var d=0;d<c.spawns.length;d++){const a=c.spawns[d];a.used&&(a.isMonster()?b.get(a.monsterId).push([c,d,a]):(a.isNpc()||a.isBoss())&&b.get(~a.id).push([c,d,a]))}for(const [e,f]of b)if(0>e){b=a.npcs[~e];c=[b.data[3]];if(!a.metasprites[c[0]])throw Error(`bad NPC: ${~e}`);
208===b.data[2]&&c.push(192);b=this.computeConstraint(c,f,!0,128>b.data[2]?b.data[2]&112:0);95===~e&&(b=b.ignorePalette());this.npcConstraints.set(~e,b)}else{c=Constraint$$module$js$rom$constraint.ALL;b=this.rom.objects[e];if(!(b instanceof Monster$$module$js$rom$monster))throw Error(`expected monster: ${b} from ${f}`);for(const g of allObjects$$module$js$rom$graphics(a,b)){d=ACTION_SCRIPTS$$module$js$rom$monster.get(g.action);d=this.computeConstraint((d&&d.metasprites||(()=>[g.metasprite]))(g),f,
g.id===e,g.data[1]);d=c.meet(d);if(!d)throw Error(`Bad meet for ${e} with ${g.id}`);d&&(c=d);if(g.data[4]&2&&(d=this.computeConstraint([g.data[20]],f,!1,g.data[1]),c=c.meet(d),!c))throw Error(`Bad meet for ${e} bonus ${g.id}`);}this.monsterConstraints.set(b.id,c);b.constraint=c}}getMonsterConstraint(a,b){const c=this.monsterConstraints.get(b)||Constraint$$module$js$rom$constraint.NONE;return 88!==(a&88)&&this.rom.objects[b].goldDrop?c.meet(Constraint$$module$js$rom$constraint.COIN)||Constraint$$module$js$rom$constraint.NONE:
c}getNpcConstraint(a,b){const c=this.npcConstraints.get(b)||Constraint$$module$js$rom$constraint.NONE;return 30===a&&96===b?c.meet(Constraint$$module$js$rom$constraint.STOM_FIGHT):160===a&&201===b?c.meet(Constraint$$module$js$rom$constraint.GUARDIAN_STATUE):c}shufflePalettes(a){const b=[...this.allSpritePalettes];for(const [c,d]of this.monsterConstraints)this.monsterConstraints.set(c,d.shufflePalette(a,b));for(const [c,d]of this.npcConstraints)this.npcConstraints.set(c,d.shufflePalette(a,b))}configure(a,
b){if(b.used){var c=b.isMonster()?this.monsterConstraints.get(b.monsterId):b.isNpc()?this.npcConstraints.get(b.id):b.isChest()?112>b.id?Constraint$$module$js$rom$constraint.TREASURE_CHEST:Constraint$$module$js$rom$constraint.MIMIC:void 0;if(c){if(3===c.shift||2<=c.float.length)throw Error("don't know what to do with two floats");if(!c.float.length)b.patternBank=Number(2===c.shift);else if(c.float[0].has(a.spritePatterns[0]))b.patternBank=0;else if(c.float[0].has(a.spritePatterns[1]))b.patternBank=
1;else if(b.isMonster())throw Error("no matching pattern bank");}}}computeConstraint(a,b,c,d=0){const e=new Set,f=new Set;for(const b of a.map((a)=>this.rom.metasprites[a])){for(const a of b.palettes())f.add(a);for(const a of b.patternBanks(d))e.add(a)}c=c&&1==e.size&&2===[...e][0];a=new Map;for(const [d,,e]of b)a.set(e.patternBank&&c?~d.id:d.id,e);b=void 0;for(let [d,h]of a){a=this.rom.locations[0>d?~d:d];for(const b of f)1<b&&this.allSpritePalettes.add(a.spritePalettes[b-2]);a=Constraint$$module$js$rom$constraint.fromSpawn(f,
e,a,h,c);b=b?b.join(a):a;!c&&h.patternBank&&(b=b.shifted())}if(!b)throw Error("Expected child to appear");return b}}function*allObjects$$module$js$rom$graphics(a,b){yield b;var c=b.spawnedReplacement();c&&(yield*allObjects$$module$js$rom$graphics(a,c));(c=b.spawnedChild())&&(yield*allObjects$$module$js$rom$graphics(a,c));80===b.id&&(yield a.objects[95]);83===b.id&&(yield a.objects[105])}var module$js$rom$graphics={};module$js$rom$graphics.Graphics=Graphics$$module$js$rom$graphics;function shuffleMonsters$$module$js$pass$shufflemonsters(a,b,c){const d=new Graphics$$module$js$rom$graphics(a);b.shuffleSpritePalettes()&&d.shufflePalettes(c);b=new MonsterPool$$module$js$pass$shufflemonsters(b,{});for(const c of a.locations)c.used&&b.populate(c);b.shuffle(c,d)}
class MonsterPool$$module$js$pass$shufflemonsters{constructor(a,b){this.flags=a;this.report=b;this.monsters=[];this.used=[];this.locations=[]}populate(a){var b=MONSTER_ADJUSTMENTS$$module$js$pass$shufflemonsters[a.id]||{},c=Object.assign({},b);const d=void 0===b.skip?!1:b.skip;b=void 0===b.tower?!1:b.tower;c=(delete c.maxFlyers,delete c.nonFlyers,delete c.skip,delete c.tower,delete c.fixedSlots,c);for(var e of Object.keys(c))throw Error(`Unexpected property '${e}' in MONSTER_ADJUSTMENTS[${a.id}]`);
var f=!0===d||!this.flags.shuffleTowerMonsters()&&b||!a.spritePatterns||!a.spritePalettes;e=[];c=[];b=12;for(const d of f?[]:a.spawns){++b;if(!d.used||!d.isMonster())continue;f=d.monsterId;if(f in UNTOUCHED_MONSTERS$$module$js$pass$shufflemonsters||!SCALED_MONSTERS$$module$js$pass$rescalemonsters.has(f)||"m"!==SCALED_MONSTERS$$module$js$pass$rescalemonsters.get(f).type)continue;var g=a.rom.objects[f];if(!g)continue;const k=d.patternBank,l=a.spritePatterns[k];var h=g.palettes(!0);g=h.includes(2)?a.spritePalettes[0]:
void 0;h=h.includes(3)?a.spritePalettes[1]:void 0;e.push({id:f,pat:l,pal2:g,pal3:h,patBank:k});(this.report[`start-${f.toString(16)}`]=this.report[`start-${f.toString(16)}`]||[]).push("$"+a.id.toString(16));c.push(b)}if(!e.length||d)c=[];this.locations.push({location:a,slots:c});this.monsters.push(...e)}shuffle(a,b){this.report["pre-shuffle locations"]=this.locations.map((a)=>a.location.id);this.report["pre-shuffle monsters"]=this.monsters.map((a)=>a.id);a.shuffle(this.locations);a.shuffle(this.monsters);
this.report["post-shuffle locations"]=this.locations.map((a)=>a.location.id);for(this.report["post-shuffle monsters"]=this.monsters.map((a)=>a.id);this.locations.length;){const {location:e,slots:f}=this.locations.pop(),g=this.report["$"+e.id.toString(16).padStart(2,"0")]=[],{maxFlyers:h=0,nonFlyers:k={},tower:m=!1}=MONSTER_ADJUSTMENTS$$module$js$pass$shufflemonsters[e.id]||{};if(m)continue;let l=h,n=Constraint$$module$js$rom$constraint.forLocation(e.id);e.bossId();for(const a of e.spawns)if(a.isChest()&&
!a.isInvisible())n=112>a.id?n.meet(Constraint$$module$js$rom$constraint.TREASURE_CHEST,!0):n.meet(Constraint$$module$js$rom$constraint.MIMIC,!0);else if(a.isNpc()||a.isBoss()){var c=b.getNpcConstraint(e.id,a.id);n=n.meet(c,!0);!a.isNpc()||107!==a.id&&104!==a.id||(n=n.meet(Constraint$$module$js$rom$constraint.KENSU_CHEST,!0))}else a.isMonster()&&UNTOUCHED_MONSTERS$$module$js$pass$shufflemonsters[a.monsterId]?(c=b.getMonsterConstraint(e.id,a.monsterId),n=n.meet(c,!0)):a.isShootingWall(e)&&(n=n.meet(Constraint$$module$js$rom$constraint.SHOOTING_WALL,
!0));g.push(`Initial pass: ${n.fixed.map((a)=>Infinity>a.size?"["+[...a].join(", ")+"]":"all")}`);const p=new Map;c=(a)=>{var c=e.rom.objects[a.id];if(c.monsterClass){var d=p.get(c.monsterClass);if(null!=d&&d!==a.id)return!1}d=FLYERS$$module$js$pass$shufflemonsters.has(a.id);var h=MOTHS_AND_BATS$$module$js$pass$shufflemonsters.has(a.id);if(d){if(!l)return!1;--l}const m=b.getMonsterConstraint(e.id,a.id);let v=n.tryMeet(m);!v&&Infinity>n.pal2.size&&Infinity>n.pal3.size&&this.flags.shuffleSpritePalettes()&&
(v=n.tryMeet(m,!0));if(!v)return!1;if(q){var t=e.rom.objects[a.id];if(!(t instanceof Monster$$module$js$rom$monster))throw Error(`non-monster: ${t}`);t=q(t);if(null==t)return!1}g.push(`  Adding ${a.id.toString(16)}: ${v}`);n=v;c.monsterClass&&p.set(c.monsterClass,a.id);c=0;if(d||h)for(d=0;d<f.length;d++){if(f[d]in k){c=d;break}}else for(d=0;d<f.length;d++)if(!(f[d]in k)){c=d;break}(this.report[`mon-${a.id.toString(16)}`]=this.report[`mon-${a.id.toString(16)}`]||[]).push("$"+e.id.toString(16));d=f[c];
h=e.spawns[d-13];q?(h.screen=t>>>8,h.tile=t&255):d in k&&(h.y+=16*k[d][0],h.x+=16*k[d][1]);h.monsterId=a.id;g.push(`    slot ${d.toString(16)}: ${h}`);f.splice(c,1);return!0};const q=f.length&&this.flags.randomizeMaps()?e.monsterPlacer(a):null;if(l&&f.length)for(var d=0;d<Math.min(40,this.monsters.length);d++)FLYERS$$module$js$pass$shufflemonsters.has(this.monsters[d].id)&&c(this.monsters[d])&&this.monsters.splice(d,1);for(d=0;d<this.monsters.length&&f.length;d++)if(c(this.monsters[d])){const [a]=
this.monsters.splice(d,1);FLYERS$$module$js$pass$shufflemonsters.has(a.id)||this.used.push(a);d--}for(d=0;d<this.used.length&&f.length;d++)c(this.used[d])&&(this.used.push(...this.used.splice(d,1)),d--);n.fix(e,a);if(f.length){console.error(`Failed to fill location ${e.id.toString(16)}: ${f.length} remaining`);for(const a of f)c=e.spawns[a-13],c.x=c.y=0,c.id=176,c.data[0]=254}for(const a of e.spawns)b.configure(e,a)}}}
const FLYERS$$module$js$pass$shufflemonsters=new Set([89,92,110,111,129,138,163,196]),MOTHS_AND_BATS$$module$js$pass$shufflemonsters=new Set([85,93,124,188,193]),MONSTER_ADJUSTMENTS$$module$js$pass$shufflemonsters={[3]:{fixedSlots:{pat1:96},maxFlyers:2},[7]:{nonFlyers:{[15]:[0,-3],[16]:[-10,0],[17]:[0,4]}},[20]:{maxFlyers:2},[21]:{maxFlyers:2},[26]:{fixedSlots:{pal3:35,pat1:79},maxFlyers:2,nonFlyers:{[16]:[4,0],[17]:[5,0],[18]:[4,0],[19]:[5,0],[20]:[4,0],[21]:[4,0]}},[27]:{skip:!0},[32]:{maxFlyers:1},
[33]:{fixedSlots:{pat1:80},maxFlyers:1},[39]:{nonFlyers:{[13]:[0,16]}},[40]:{maxFlyers:1},[41]:{maxFlyers:1},[43]:{nonFlyers:{[20]:[32,-8]}},[64]:{maxFlyers:2,nonFlyers:{[19]:[12,-16]}},[65]:{maxFlyers:2,nonFlyers:{[21]:[0,-6]}},[66]:{maxFlyers:2,nonFlyers:{[13]:[0,8],[14]:[-8,8]}},[71]:{maxFlyers:1,nonFlyers:{[13]:[-8,-8]}},[74]:{maxFlyers:1,nonFlyers:{[14]:[4,0],[15]:[0,-3],[16]:[0,4]}},[76]:{},[77]:{maxFlyers:1},[78]:{maxFlyers:1},[79]:{},[87]:{fixedSlots:{pat1:77}},[89]:{tower:!0},[90]:{tower:!0},
[91]:{tower:!0},[96]:{fixedSlots:{pal3:8,pat1:82},maxFlyers:2,skip:!0},[100]:{fixedSlots:{pal3:8,pat1:82},skip:!0},[104]:{fixedSlots:{pal3:8,pat1:82},skip:!0},[105]:{maxFlyers:1,nonFlyers:{[23]:[4,6]}},[106]:{maxFlyers:1,nonFlyers:{[21]:[0,24]}},[108]:{maxFlyers:1,nonFlyers:{[23]:[0,24]}},[109]:{maxFlyers:1,nonFlyers:{[17]:[16,0],[27]:[0,0],[28]:[6,0]}},[120]:{maxFlyers:1,nonFlyers:{[22]:[-8,-8]}},[124]:{maxFlyers:1,nonFlyers:{[21]:[-39,84]}},[132]:{nonFlyers:{[18]:[0,-4],[19]:[0,4],[20]:[-6,0],[21]:[14,
12]}},[136]:{maxFlyers:1},[137]:{maxFlyers:1},[138]:{maxFlyers:1,nonFlyers:{[13]:[7,0],[14]:[0,0],[15]:[7,3],[16]:[0,6],[17]:[11,-16]}},[143]:{skip:!0},[144]:{maxFlyers:2,nonFlyers:{[20]:[-11,-3],[21]:[0,16]}},[145]:{maxFlyers:2,nonFlyers:{[24]:[0,14],[25]:[4,-16]}},[152]:{maxFlyers:2,nonFlyers:{[20]:[-6,6],[21]:[0,-16]}},[158]:{maxFlyers:2},[162]:{maxFlyers:1,nonFlyers:{[18]:[0,11],[19]:[6,0]}},[165]:{nonFlyers:{[23]:[6,6],[24]:[-6,0],[25]:[-1,-7]}},[166]:{skip:!0},[168]:{skip:!0},[169]:{maxFlyers:2,
nonFlyers:{[22]:[26,-16],[23]:[0,32]}},[171]:{maxFlyers:2,nonFlyers:{[13]:[1,0],[14]:[2,-2]}},[173]:{maxFlyers:2,nonFlyers:{[24]:[0,8],[25]:[0,-8]}},[175]:{nonFlyers:{[13]:[0,0],[14]:[0,0],[19]:[59,-38]}},[180]:{maxFlyers:2,nonFlyers:{[17]:[6,0],[18]:[0,6]}},[215]:{skip:!0}},UNTOUCHED_MONSTERS$$module$js$pass$shufflemonsters={[126]:!0,[127]:!0,[131]:!0,[141]:!0,[142]:!0,[143]:!0,[159]:!0,[166]:!0};var module$js$pass$shufflemonsters={};module$js$pass$shufflemonsters.shuffleMonsters=shuffleMonsters$$module$js$pass$shufflemonsters;class TileEffects$$module$js$rom$tileeffects extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.effects=tuple$$module$js$rom$util(a.prg,this.base,256)}get base(){return this.id<<8&8191|73728}get org(){return this.id<<8&8191|40960}write(){const a=this.rom.assembler();a.segment("09","fe","ff");a.org(this.org);a.byte(...this.effects);return[a.module()]}}TileEffects$$module$js$rom$tileeffects.PIT=1;TileEffects$$module$js$rom$tileeffects.NO_WALK=2;
TileEffects$$module$js$rom$tileeffects.IMPASSIBLE=4;TileEffects$$module$js$rom$tileeffects.ALTERNATIVE=8;TileEffects$$module$js$rom$tileeffects.BEHIND=16;TileEffects$$module$js$rom$tileeffects.SLOPE=32;TileEffects$$module$js$rom$tileeffects.SLOW=64;TileEffects$$module$js$rom$tileeffects.PAIN=128;var module$js$rom$tileeffects={};module$js$rom$tileeffects.TileEffects=TileEffects$$module$js$rom$tileeffects;class MapScreen$$module$js$rom$mapscreen{constructor(a,b){function c(c){var d=OVERRIDE$$module$js$rom$mapscreen.get(c|f);if(null!=d)return d;c=a.tiles[c];d=e[c];32>c&&d&TileEffects$$module$js$rom$tileeffects.ALTERNATIVE&&(d=e[b.alternates[c]]);return!(d&(TileEffects$$module$js$rom$tileeffects.NO_WALK|TileEffects$$module$js$rom$tileeffects.IMPASSIBLE))}this.screen=a;this.tileset=b;this.partition=new Map;this.partitions=[];var d=new UnionFind$$module$js$unionfind;const e=b.effects().effects,f=a.id<<
8;for(let a=0;15>a;a++)for(let b=0;16>b;b++){const e=a<<4|b;c(e)&&(a&&c(e-16)&&d.union([e,e-16]),b&&c(e-1)&&d.union([e,e-1]))}for(var g of d.sets()){d=null;for(var h of g)if(isPerimeter$$module$js$rom$mapscreen(h)||136===h)d||this.partitions.push(d=new Set),d.add(h),this.partition.set(h,this.partitions.length-1)}g=[0,0,0,0];for(h=15;0<=h;h--)for(d=0;4>d;d++)g[d]<<=1,this.partition.has(2>d?d?h<<4|15:h:2===d?224|h:h<<4)&&(g[d]|=1);this.edges=g}}
function isPerimeter$$module$js$rom$mapscreen(a){const b=a&15;a&=240;return!a||224===a||!b||15===b}const OVERRIDE$$module$js$rom$mapscreen=new Map([...rows$$module$js$rom$mapscreen([[29184,4080],[29408,4080],[29664,4080],[39680,960],[39904,960],[64992,4080]]),...cols$$module$js$rom$mapscreen([[31744,0],[31759,0]])]);function*rows$$module$js$rom$mapscreen(a){for(const [b,c]of a)for(a=0;16>a;a++)yield[b|a,!!(c&1<<a)]}
function*cols$$module$js$rom$mapscreen(a){for(const [b,c]of a)for(a=0;15>a;a++)yield[b|a<<4,!!(c&1<<a)]}
class MapBuilder$$module$js$rom$mapscreen{constructor(a,b,c,d,e){this.tileset=a;this.random=c;this.height=d;this.width=e;this.screens=[];this.edges=new DefaultMap$$module$js$util(()=>new Set);this.eligible=[];this.constraints=[];this.inBounds=new Set;for(var f of b)for(b=0;4>b;b++)this.edges.get(b|a.screens[f].edges[b]<<2).add(f);for(a=0;a<d;a++)for(f=0;f<e;f++)this.inBounds.add(a<<4|f)}isInBounds(a){return 0<=a&&a>>>4<this.height&&(a&15)<this.width}reset(){this.eligible=[];this.constraints=[];for(const a of this.inBounds)0>
this.screens[a]||(this.screens[a]=void 0,delete this.constraints[a]);for(const a of this.inBounds)this.initConstraints(a)}initConstraints(a){delete this.constraints[a];for(let c of Dir$$module$js$rom$mapscreen){var b=a+DELTA$$module$js$rom$mapscreen[c];this.inBounds.has(b)?(b=this.screens[b],null!=b&&(b=0>b?~b:b,this.addConstraint(a,c,this.tileset.screens[b].edges[c^2]))):this.addConstraint(a,c,0)}}addConstraint(a,b,c){if(this.inBounds.has(a)&&null==this.screens[a]){var d=this.constraints[a];d||(this.constraints[a]=
d=[],this.eligible.push(a));d[b]=c}}deleteConstraint(a,b){if(a=this.constraints[a]){delete a[b];for(b=a.length-1;0<=b;b--)if(null!=a[b])return;b=this.eligible.findIndex((a)=>null!=a);0<=b&&this.eligible.splice(b,1)}}fill(a){let b;for(;null!=(b=this.findEmpty())&&0<=a;){const c=this.pickScreen(b);null!=c?this.setScreen(b,c):(this.deleteOneNeighbor(b),a--)}return null==b}findEmpty(){const a=this.random.shuffle([...this.inBounds]);for(const b of a)if(null==this.screens[b]&&(this.constraints[b]||[]).some((a)=>
null!=a))return b}deleteSomeScreens(){const a=[];for(var b of this.inBounds)0<=this.screens[b]&&a.push(b);this.random.shuffle(a);b=1+this.random.nextInt(a.length-1);for(const c of a.slice(0,b))this.deleteScreen(c)}traverse(){var a=new UnionFind$$module$js$unionfind;for(const d of this.inBounds){var b=this.screens[d];b=this.tileset.screens[0>b?~b:b].partitions.map((a)=>[...a].map((a)=>{a|=d<<8;224===(a&240)&&(a+=32);15===(a&15)&&(a+=1);return a}));for(var c of b)a.union(c)}a=a.sets();c=new Map;for(b=
0;b<a.length;b++)for(const d of a[b])c.set(d,b);return c}deleteOneNeighbor(a){var b=this.random.shuffle([...Dir$$module$js$rom$mapscreen]);for(const c of b)if(b=a+DELTA$$module$js$rom$mapscreen[c],this.inBounds.has(b)&&0<=this.screens[b]){this.deleteScreen(b);return}throw Error("Could not find a neighbor to delete!");}pickScreen(a){a=this.constraints[a];for(let d=0;d<a.length;d++){var b=a[d];if(null!=b){b=this.edges.get(d|b<<2);var c=c?intersect$$module$js$rom$mapscreen(c,b):b}}if(c&&c.size)return c=
[...c],this.random.pick(c)}setScreen(a,b){if(null!=this.screens[a])throw Error("screen already set");this.screens[a]=b;delete this.constraints[a];b=this.tileset.screens[b].edges;for(const c of Dir$$module$js$rom$mapscreen)this.addConstraint(a+DELTA$$module$js$rom$mapscreen[c],opposite$$module$js$rom$mapscreen(c),b[c])}deleteScreen(a){var b=this.screens[a];this.screens[a]=void 0;if(null!=b){if(0>b)throw Error("Cannot delete fixed screen");for(const c of Dir$$module$js$rom$mapscreen)b=a+DELTA$$module$js$rom$mapscreen[c],
this.inBounds.has(b)&&this.deleteConstraint(b,opposite$$module$js$rom$mapscreen(c));this.initConstraints(a)}}}const Dir$$module$js$rom$mapscreen=[0,1,2,3],DELTA$$module$js$rom$mapscreen=[-16,1,16,-1];function opposite$$module$js$rom$mapscreen(a){return a^2}function intersect$$module$js$rom$mapscreen(a,b){const c=new Set;for(const d of a)b.has(d)&&c.add(d);return c}var module$js$rom$mapscreen={};module$js$rom$mapscreen.MapScreen=MapScreen$$module$js$rom$mapscreen;
module$js$rom$mapscreen.MapBuilder=MapBuilder$$module$js$rom$mapscreen;class Tileset$$module$js$rom$tileset extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.tiles=seq$$module$js$rom$util(4,(b)=>tuple$$module$js$rom$util(a.prg,this.tileBase|b<<8,256));this.attrs=seq$$module$js$rom$util(256,(b)=>a.prg[this.attrBase|b>>2]>>((b&3)<<1)&3);this.alternates=tuple$$module$js$rom$util(a.prg,this.alternatesBase,32)}get map(){return this.id&63}get tileBase(){return 65536|this.map<<8}get attrBase(){return 77824|this.map<<4}get alternatesBase(){return 81408|this.map<<
3}get screens(){return this.lazyScreens?this.lazyScreens:this.lazyScreens=seq$$module$js$rom$util(256,(a)=>new MapScreen$$module$js$rom$mapscreen(this.rom.screens[a],this))}write(){const a=seq$$module$js$rom$util(64,(a)=>{a<<=2;return this.attrs[a]&3|(this.attrs[a+1]&3)<<2|(this.attrs[a+2]&3)<<4|(this.attrs[a+3]&3)<<6}),b=this.rom.assembler();b.segment("08","09");b.org(32768|this.map<<8);b.byte(...[].concat(...this.tiles));b.org(45056|this.map<<4);b.byte(...a);b.org(48640|this.map<<3);b.byte(...this.alternates);
return[b.module()]}effects(){let a=this.id>>>2&15;168===this.id&&(a=2);172===this.id&&a--;return this.rom.tileEffects[a]}}const NONE$$module$js$rom$tileset=0,TRIM$$module$js$rom$tileset=1,MAIN$$module$js$rom$tileset=2;
function paletteTypes$$module$js$rom$tileset(a,b){switch(b){case 26:return[MAIN$$module$js$rom$tileset,MAIN$$module$js$rom$tileset,TRIM$$module$js$rom$tileset,(a,b,e)=>a[3]===b[3]&&b[3]===e[3]];case 67:return[MAIN$$module$js$rom$tileset,TRIM$$module$js$rom$tileset,TRIM$$module$js$rom$tileset];case 87:return[MAIN$$module$js$rom$tileset,NONE$$module$js$rom$tileset,NONE$$module$js$rom$tileset];case 96:return[MAIN$$module$js$rom$tileset,MAIN$$module$js$rom$tileset,MAIN$$module$js$rom$tileset,(a,b,e)=>
a[2]===e[2]];case 100:case 104:return[MAIN$$module$js$rom$tileset,NONE$$module$js$rom$tileset,TRIM$$module$js$rom$tileset];case 124:return[MAIN$$module$js$rom$tileset,TRIM$$module$js$rom$tileset,TRIM$$module$js$rom$tileset]}switch(a){case 128:case 132:return[MAIN$$module$js$rom$tileset,MAIN$$module$js$rom$tileset,TRIM$$module$js$rom$tileset,(a,b)=>a[3]===b[3]];case 136:return[MAIN$$module$js$rom$tileset,TRIM$$module$js$rom$tileset,NONE$$module$js$rom$tileset];case 140:return[MAIN$$module$js$rom$tileset,
TRIM$$module$js$rom$tileset,MAIN$$module$js$rom$tileset];case 144:return[MAIN$$module$js$rom$tileset,MAIN$$module$js$rom$tileset,MAIN$$module$js$rom$tileset];case 148:return[MAIN$$module$js$rom$tileset,TRIM$$module$js$rom$tileset,TRIM$$module$js$rom$tileset,(a,b)=>a[3]===b[3]];case 152:return[TRIM$$module$js$rom$tileset,TRIM$$module$js$rom$tileset,TRIM$$module$js$rom$tileset];case 156:return[MAIN$$module$js$rom$tileset,TRIM$$module$js$rom$tileset,MAIN$$module$js$rom$tileset];case 160:return[TRIM$$module$js$rom$tileset,
TRIM$$module$js$rom$tileset,TRIM$$module$js$rom$tileset];case 164:return[MAIN$$module$js$rom$tileset,MAIN$$module$js$rom$tileset,TRIM$$module$js$rom$tileset];case 168:return[MAIN$$module$js$rom$tileset,MAIN$$module$js$rom$tileset,TRIM$$module$js$rom$tileset];case 172:return[MAIN$$module$js$rom$tileset,TRIM$$module$js$rom$tileset,MAIN$$module$js$rom$tileset]}throw Error(`unxpected: ${a}`);}
const ALLOWED_PALETTES$$module$js$rom$tileset=new Map([["path",[...r$$module$js$rom$tileset(0,18),...r$$module$js$rom$tileset(21,27),...r$$module$js$rom$tileset(30,37),...r$$module$js$rom$tileset(38,43),...r$$module$js$rom$tileset(44,48),...r$$module$js$rom$tileset(57,63),66,...r$$module$js$rom$tileset(68,72),...r$$module$js$rom$tileset(77,89),...r$$module$js$rom$tileset(128,132),135,...r$$module$js$rom$tileset(139,147)]],["mountain",[1,...r$$module$js$rom$tileset(3,7),...r$$module$js$rom$tileset(8,
11),12,13,14,...r$$module$js$rom$tileset(17,24),25,26,28,29,30,32,33,35,39,42,43,47,49,51,54,55,56,57,60,66,68,70,75,76,79,83,88,...r$$module$js$rom$tileset(128,133),135,136,139,142]],["trees",[1,2,4,6,...r$$module$js$rom$tileset(7,15),...r$$module$js$rom$tileset(20,24),26,28,30,32,35,39,41,42,43,46,47,49,51,55,56,57,60,61,67,68,70,73,74,75,79,82,87,110,...r$$module$js$rom$tileset(128,133),135,136,...r$$module$js$rom$tileset(139,144)]]]),TERRAIN_BY_PALETTE$$module$js$rom$tileset=new Map([[128,["path",
"mountain","trees"]],[132,["mountain-path","brick","trees"]],[136,["cave wall/ground","cave bridge",""]],[140,["floor","fire","accept"]],[144,["trees","mountain","grass"]],[148,["water/ground","mountain","shallows"]],[152,["door","room","rocks"]],[156,["mountain/ground","trees","desert"]],[160,["ground","trees","some haze"]],[164,["","",""]],[168,["","",""]],[172,["","",""]]]);function r$$module$js$rom$tileset(a,b){return Array(b-a).fill(0).map((b,d)=>d+a)}var module$js$rom$tileset={};
module$js$rom$tileset.Tileset=Tileset$$module$js$rom$tileset;module$js$rom$tileset.paletteTypes=paletteTypes$$module$js$rom$tileset;function shufflePalettes$$module$js$pass$shufflepalettes(a,b,c){(new Shuffle$$module$js$pass$shufflepalettes(a,b,c)).shuffle()}
class Shuffle$$module$js$pass$shufflepalettes{constructor(a,b,c){this.rom=a;this.flags=b;this.random=c}shuffle(){this.shuffleBackgrounds()}shuffleBackgrounds(){if(this.flags.shuffleTilePalettes()){var a=new DefaultMap$$module$js$util(()=>[]);for(var b of this.rom.locations)a.get(b.data.palette).push(b);b=[new Map,new Map];for(var c of a.values())for(var d of c)for(let a=0;2>a;a++)for(let c=0;2>c;c++){let e=b[a].get(d.tilePatterns[c]);e||b[a].set(d.tilePatterns[c],e=new Set);e.add(d.tilePalettes[a])}for(const e of a.values()){c=
e[0];a=[new Set,new Set];for(d=0;2>d;d++)a[d]=new Set([...b[d].get(c.tilePatterns[0]),...b[d].get(c.tilePatterns[1])]);c=this.random.pick([...a[0]]);a=this.random.pick([...a[1]]);for(const b of e)b.tilePalettes[0]=c,b.tilePalettes[1]=a}}}shuffleBackgrounds2(){if(this.flags.shuffleTilePalettes()){var a=[new Set,new Set];for(var b of this.rom.locations)if(b.used){var c=paletteTypes$$module$js$rom$tileset(this.rom.tilesets[(b.tileset&127)>>2].id,b.id);for(var d=0;3>d;d++)for(var e=0;e<c[e];e++)a[e].add(b.tilePalettes[e])}b=
[];var f=a.map((a)=>[...a]);for(const g of b){const h=g[1],k=paletteTypes$$module$js$rom$tileset(h.tileset,h.id);for(a=0;1E3>a;a++){b=seq$$module$js$rom$util(3,(a)=>k[a]?this.random.pick(f[k[a]-1]):h.tilePalettes[a]);c=b.map((a)=>this.rom.palettes[a].colors);d=!0;for(const a of g[0])if([,,,e]=paletteTypes$$module$js$rom$tileset(a.tileset,a.id),e&&!e(c[0],c[1],c[2])){d=!1;break}if(d)for(const a of g[0])a.tilePalettes=[b[0],b[1],b[2]]}}}}}var module$js$pass$shufflepalettes={};
module$js$pass$shufflepalettes.shufflePalettes=shufflePalettes$$module$js$pass$shufflepalettes;function standardMapEdits$$module$js$pass$standardmapedits(a,b){b.eastCave?eastCave$$module$js$pass$standardmapedits(a,b.eastCave):b.classicLimeTreeToLeaf&&connectLimeTreeToLeaf$$module$js$pass$standardmapedits(a);addTowerExit$$module$js$pass$standardmapedits(a);reversibleSwanGate$$module$js$pass$standardmapedits(a);closeCaveEntrances$$module$js$pass$standardmapedits(a)}
(function(a){a.generateOptions=function(a,c){const b={};if(a.addEastCave()){b.eastCave={};a=["cordel","lime","goa","desert"];let d=c.nextInt(4);[b.eastCave.exit1]=a.splice(d,1);b.eastCave.exit2=c.pick(a)}else a.connectLimeTreeToLeaf()&&(b.classicLimeTreeToLeaf=!0);return b}})(standardMapEdits$$module$js$pass$standardmapedits||(standardMapEdits$$module$js$pass$standardmapedits={}));
function eastCave$$module$js$pass$standardmapedits(a,b){const {locations:{EastCave1:c,EastCave2:d,EastCave3:e,SealedCave1:f,ValleyOfWind:g}}=a;a.locations.allocate(a.locations.EastCave1);a.locations.allocate(a.locations.EastCave2);b.exit2&&a.locations.allocate(a.locations.EastCave3);c.screens=[[156,132,128,131,156],[128,129,131,134,128],[131,136,137,128,128],[129,140,133,130,132],[158,133,156,152,134]];d.screens=[[156,132,155,128,155],[128,129,129,128,129],[128,135,139,138,134],[128,140,128,133,132],
[156,134,128,128,154]];for(const a of[c,d,e])a.bgm=a.originalBgm=23,a.entrances=[],a.exits=[],a.pits=[],a.spawns=[],a.flags=[],a.height=a.screens.length,a.width=a.screens[0].length,a.extended=0,a.tilePalettes=[26,27,5],a.originalTilePalettes=[26,27,5],a.tileset=136,a.tileEffects=181,a.tilePatterns=[20,2],a.spritePatterns=[...f.spritePatterns],a.spritePalettes=[...f.spritePalettes];g.writeScreens2d(35,[[17,13],[9,-195]]);a.tileEffects[0].effects[192]=0;c.connect(67,d,68);c.connect(64,g,52);b.exit1&&
(c.screens[0][4]=151,connectEastCaveExit$$module$js$pass$standardmapedits(c,4,b.exit1));b.exit2&&(a.locations.allocate(e),e.screens=[[154],[143],[158]],e.height=3,e.width=1,e.spawns.push(Spawn$$module$js$rom$location.from([24,7,35,0])),e.flags.push(Flag$$module$js$rom$location.of({screen:16,flag:a.flags.alloc(512)})),d.screens[4][0]=153,d.connect(64,e,-1),connectEastCaveExit$$module$js$pass$standardmapedits(e,32,b.exit2));c.spawns.push(Spawn$$module$js$rom$location.of({screen:33,tile:135,timed:!0,
id:2}),Spawn$$module$js$rom$location.of({screen:18,tile:136,timed:!1,id:2}),Spawn$$module$js$rom$location.of({screen:19,tile:137,timed:!0,id:2}),Spawn$$module$js$rom$location.of({screen:50,tile:104,timed:!1,id:2}),Spawn$$module$js$rom$location.of({screen:65,tile:136,timed:!0,id:2}),Spawn$$module$js$rom$location.of({screen:51,tile:152,timed:!0,id:2}),Spawn$$module$js$rom$location.of({screen:3,tile:136,timed:!0,id:2}));d.spawns.push(Spawn$$module$js$rom$location.of({screen:1,tile:136,timed:!0,id:2}),
Spawn$$module$js$rom$location.of({screen:17,tile:72,timed:!1,id:2}),Spawn$$module$js$rom$location.of({screen:18,tile:119,timed:!0,id:2}),Spawn$$module$js$rom$location.of({screen:20,tile:40,timed:!1,id:2}),Spawn$$module$js$rom$location.of({screen:35,tile:133,timed:!0,id:2}),Spawn$$module$js$rom$location.of({screen:49,tile:136,timed:!0,id:2}),Spawn$$module$js$rom$location.of({screen:51,tile:138,timed:!1,id:2}),Spawn$$module$js$rom$location.of({screen:52,tile:152,timed:!0,id:2}),Spawn$$module$js$rom$location.of({screen:65,
tile:130,timed:!0,id:2}),Spawn$$module$js$rom$location.of({y:272,x:1144,type:2,id:49}),Spawn$$module$js$rom$location.of({y:112,x:264,type:2,id:112}));a.npcs.WindmillGuard.data[1]=89}
function connectEastCaveExit$$module$js$pass$standardmapedits(a,b,c){let d,e;switch(c){case "lime":d=a.rom.locations.LimeTreeValley;e=16;d.resizeScreens(0,1,0,0);d.writeScreens2d(0,[[12,17],[-22,54],[14,15]]);break;case "cordel":d=a.rom.locations.CordelPlainEast;e=85;d.writeScreens2d(85,[[-22,54],[14,15]]);break;case "goa":d=a.rom.locations.GoaValley;e=17;d.writeScreens2d(1,[[12,13],[-22,53]]);break;case "desert":d=a.rom.locations.Desert2,e=83,d.writeScreens2d(83,[[-195]])}a.connect(b,d,e)}
function connectLimeTreeToLeaf$$module$js$pass$standardmapedits(a){const {ValleyOfWind:b,LimeTreeValley:c}=a.locations;b.screens[5][4]=16;c.screens[1][0]=26;c.screens[2][0]=12;a=b.entrances.push(Entrance$$module$js$rom$location.of({x:1263,y:1400}))-1;const d=c.entrances.push(Entrance$$module$js$rom$location.of({x:16,y:448}))-1;b.exits.push(Exit$$module$js$rom$location.of({x:1264,y:1376,dest:66,entrance:d}),Exit$$module$js$rom$location.of({x:1264,y:1392,dest:66,entrance:d}));c.exits.push(Exit$$module$js$rom$location.of({x:0,
y:432,dest:3,entrance:a}),Exit$$module$js$rom$location.of({x:0,y:448,dest:3,entrance:a}))}function addTowerExit$$module$js$pass$standardmapedits(a){const {TowerEntrance:b,Crypt_Teleporter:c}=a.locations;a=c.entrances.length;const d=c.id;c.entrances.push(Entrance$$module$js$rom$location.of({tile:104}));b.exits.push(Exit$$module$js$rom$location.of({tile:87,dest:d,entrance:a}));b.exits.push(Exit$$module$js$rom$location.of({tile:88,dest:d,entrance:a}))}
function reversibleSwanGate$$module$js$pass$standardmapedits(a){const {flags:{OpenedSwanGate:b},locations:{SwanGate:c},npcs:{SoldierGuard:d}}=a;c.spawns.push(Spawn$$module$js$rom$location.of({xt:10,yt:2,type:1,id:45}),Spawn$$module$js$rom$location.of({xt:11,yt:2,type:1,id:45}));d.localDialogs.get(c.id)[0].flags.push(b.id)}
function closeCaveEntrances$$module$js$pass$standardmapedits(a){const {flags:{AlwaysTrue:b,OpenedSealedCave:c,OpenedPrison:d},locations:{CordelPlainEast:e,CordelPlainWest:f,Desert2:g,KirisaMeadow:h,SaharaOutsideCave:k,ValleyOfWind:m,WaterfallValleyNorth:l,WaterfallValleySouth:n}}=a;m.entrances[1].y+=16;a.swapMetatiles([144],[7,[1,0],-194],[14,[2,0],-194],[32,[3,10],-216],[33,[4,10],-216]);a.swapMetatiles([148,156],[104,[1,0],-194],[131,[2,0],-194],[136,[3,10],-216],[137,[4,10],-216]);a.screens[10].tiles[56]=
1;a.screens[10].tiles[57]=2;a.screens[10].tiles[72]=3;a.screens[10].tiles[73]=4;a.screens[21].tiles[121]=1;a.screens[21].tiles[122]=2;a.screens[21].tiles[137]=3;a.screens[21].tiles[138]=4;a.screens[25].tiles[72]=1;a.screens[25].tiles[73]=2;a.screens[25].tiles[88]=3;a.screens[25].tiles[89]=4;a.screens[62].tiles[86]=1;a.screens[62].tiles[87]=2;a.screens[62].tiles[102]=3;a.screens[62].tiles[103]=4;a=[[m,48],[l,20],[n,116],[h,16],[k,0],[g,65]];for(const [c,d]of a)c.flags.push(Flag$$module$js$rom$location.of({yx:d,
flag:b.id}));f.flags.push(Flag$$module$js$rom$location.of({yx:48,flag:c.id}));e.flags.push(Flag$$module$js$rom$location.of({yx:48,flag:c.id}));l.flags.push(Flag$$module$js$rom$location.of({yx:0,flag:d.id}));a=Spawn$$module$js$rom$location.of({y:96,x:96,type:4,id:44});const p=Spawn$$module$js$rom$location.of({y:112,x:112,type:2,id:173});l.spawns.splice(1,0,a);l.spawns.push(p)}var module$js$pass$standardmapedits={};module$js$pass$standardmapedits.standardMapEdits=standardMapEdits$$module$js$pass$standardmapedits;function toggleMaps$$module$js$pass$togglemaps(a,b,c){}var module$js$pass$togglemaps={};module$js$pass$togglemaps.toggleMaps=toggleMaps$$module$js$pass$togglemaps;const KEY_NAMES$$module$js$pass$unidentifieditems="Curious Key;Bronze Key;Silver Key;Ancient Key;Small Key;Shiny Key;Mysterious Key;Magic Key;Piano Key".split(";"),FLUTE_NAMES$$module$js$pass$unidentifieditems="Wooden Flute;Metal Flute;Horn of Plenty;Ocarina;Pan Pipes;Bugle;Bagpipes;Kazoo;Magic Whistle;Dog Whistle;Recorder;Accordion;Harmonica;Sousaphone;Trombone;Violin;Cello".split(";"),LAMP_NAMES$$module$js$pass$unidentifieditems="Bronze Lamp;Magic Lamp;Dull Lamp;Shimmering Lamp;Oil Lamp;Broken Lamp;Frog Lamp;Smog Lamp".split(";"),
STATUE_NAMES$$module$js$pass$unidentifieditems="Rusty Statue;Forbidden Statue;Golden Idol;Strange Statue;Glass Statue;Burt Figurine;Draygon Figurine;Karmine Figurine;Mado Figurine;Sabera Figurine;Kelbesque Figurine;Copper Statue;White Statue;Invisible Statue;Mattrick Figurine;Dragondarch Statue;Overswarm Statue;Trueblue83 Statue;Flail Guy Trophy;Metroid Amiibo".split(";");
function unidentifiedItems$$module$js$pass$unidentifieditems(a,b,c){if(b.unidentifiedItems()){var d=(...b)=>b.map((b)=>a.items[b]);b=d(50,51,52);var e=d(39,40,49,54),f=d(53,57);d=d(37,56,58,61);for(const [g,[...h]]of[[b,KEY_NAMES$$module$js$pass$unidentifieditems],[e,FLUTE_NAMES$$module$js$pass$unidentifieditems],[f,LAMP_NAMES$$module$js$pass$unidentifieditems],[d,STATUE_NAMES$$module$js$pass$unidentifieditems]]){c.shuffle(h);b=c.shuffle([0,1,2,3]);for(const c of g)e=h.pop(),a.spoiler&&a.spoiler.addUnidentifiedItem(c.id,
c.messageName,e),c.menuName=c.messageName=e,c.palette=b.pop()}}}var module$js$pass$unidentifieditems={};module$js$pass$unidentifieditems.unidentifiedItems=unidentifiedItems$$module$js$pass$unidentifieditems;const IM1$$module$js$random=2147483563,IM2$$module$js$random=2147483399,AM$$module$js$random=1/IM1$$module$js$random,IMM1$$module$js$random=IM1$$module$js$random-1,IA1$$module$js$random=40014,IA2$$module$js$random=40692,IQ1$$module$js$random=53668,IQ2$$module$js$random=52774,IR1$$module$js$random=12211,IR2$$module$js$random=3791,NTAB$$module$js$random=32,NDIV$$module$js$random=1+Math.floor(IMM1$$module$js$random/NTAB$$module$js$random),EPS$$module$js$random=1.2E-7,RNMX$$module$js$random=1-EPS$$module$js$random;
class Random$$module$js$random{constructor(a=Math.floor(4294967296*Math.random())){this.iy=this.idum2=this.idum=0;this.iv=[];this.z1=null;this.seed(a)}static newSeed(){return Math.floor(4294967296*Math.random())}seed(a){this.idum2=this.idum=Math.max(1,Math.floor(a));this.iy=0;this.iv=Array(NTAB$$module$js$random).fill(0);for(a=NTAB$$module$js$random+7;0<=a;a--){const b=Math.floor(this.idum/IQ1$$module$js$random);this.idum=IA1$$module$js$random*(this.idum-b*IQ1$$module$js$random)-b*IR1$$module$js$random;
0>this.idum&&(this.idum+=IM1$$module$js$random);a<NTAB$$module$js$random&&(this.iv[a]=this.idum)}this.iy=this.iv[0]}next(){var a=Math.floor(this.idum/IQ1$$module$js$random);this.idum=IA1$$module$js$random*(this.idum-a*IQ1$$module$js$random)-a*IR1$$module$js$random;0>this.idum&&(this.idum+=IM1$$module$js$random);a=Math.floor(this.idum2/IQ2$$module$js$random);this.idum2=IA2$$module$js$random*(this.idum2-a*IQ2$$module$js$random)-a*IR2$$module$js$random;0>this.idum2&&(this.idum2+=IM2$$module$js$random);
a=Math.floor(this.iy/NDIV$$module$js$random);this.iy=this.iv[a]-this.idum2;this.iv[a]=this.idum;1>this.iy&&(this.iy+=IMM1$$module$js$random);return Math.min(AM$$module$js$random*this.iy,RNMX$$module$js$random)}nextInt(a){return Math.floor(this.next()*a)}nextNormal(a=0,b=1,c=-Infinity,d=Infinity){for(;;){let e=this.z1;if(null==e){const a=Math.sqrt(-2*Math.log(this.next())),b=TWOPI$$module$js$random*this.next();e=a*Math.cos(b);this.z1=a*Math.sin(b)}else this.z1=null;e=a+e*b;if(e>=c&&e<=d)return e}}shuffle(a){for(let b=
a.length;b;){const c=this.nextInt(b--);[a[b],a[c]]=[a[c],a[b]]}return a}*ishuffle(a){const b=[];if(!Array.isArray(a)){if(hasSize$$module$js$random(a)){var c=a[Symbol.iterator]();for(var d=0;d<a.size;d++){const e=this.nextInt(a.size-d),f=Math.max(d,e);for(;b.length<=f;)b.push(c.next().value);yield b[e];b[e]=b[d]}return}a=[...a]}if(!Array.isArray(a))throw Error("impossible");for(c=0;c<a.length;c++)d=c+this.nextInt(a.length-c),yield d in b?b[d]:a[d],b[d]=c in b?b[c]:a[c]}pick(a){if(!a.length)throw Error("empty array");
return a[this.nextInt(a.length)]}pickWeighted(a){if(!a.length)throw Error("empty array");var b=0;for(const [c]of a)b+=c;b*=this.next();for(const [c,d]of a){if(b<c)return d;b-=c}throw Error("bad weights");}bitGenerator(){let a=0,b=0;return()=>{a||(a=32,b=this.nextInt(4294967296));a--;const c=!(b&1);b>>>=1;return c}}}function hasSize$$module$js$random(a){return"size"in a}const TWOPI$$module$js$random=2*Math.PI;var module$js$random={};module$js$random.Random=Random$$module$js$random;class AdHocSpawn$$module$js$rom$adhocspawn extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.data=tuple$$module$js$rom$util(a.prg,this.base,4)}get base(){return(this.id<<2)+171008}get slotRangeLower(){return this.data[0]}set slotRangeLower(a){this.data[0]=a}get slotRangeUpper(){return this.data[1]}set slotRangeUpper(a){this.data[1]=a}get objectId(){return this.data[2]}set objectId(a){this.data[2]=a}get count(){return this.data[3]}set count(a){this.data[3]=a}write(){const a=this.rom.assembler();
a.segment("14");a.org(39936+(this.id<<2));a.byte(...this.data);return[a.module()]}}var module$js$rom$adhocspawn={};module$js$rom$adhocspawn.AdHocSpawn=AdHocSpawn$$module$js$rom$adhocspawn;const area$$module$js$rom$area=initializer$$module$js$rom$util();
class Areas$$module$js$rom$area{constructor(a){this.rom=a;this.Empty=area$$module$js$rom$area();this.ValleyOfWind=area$$module$js$rom$area({type:"overworld"});this.CordelPlain=area$$module$js$rom$area();this.WaterfallValley=area$$module$js$rom$area();this.AngrySea=area$$module$js$rom$area();this.GoaValley=area$$module$js$rom$area();this.Desert1=area$$module$js$rom$area();this.Desert2=area$$module$js$rom$area();this.Leaf=area$$module$js$rom$area();this.Brynmaer=area$$module$js$rom$area();this.Oak=
area$$module$js$rom$area();this.Amazones=area$$module$js$rom$area();this.Nadare=area$$module$js$rom$area();this.Portoa=area$$module$js$rom$area();this.Joel=area$$module$js$rom$area();this.ZombieTown=area$$module$js$rom$area();this.Swan=area$$module$js$rom$area();this.Shyron=area$$module$js$rom$area();this.Goa=area$$module$js$rom$area();this.Sahara=area$$module$js$rom$area();this.EastCave=area$$module$js$rom$area();this.WindmillCave=area$$module$js$rom$area();this.SealedCave=area$$module$js$rom$area();
this.ZebuCave=area$$module$js$rom$area();this.Swamp=area$$module$js$rom$area();this.MtSabreWest=area$$module$js$rom$area();this.MtSabreNorth=area$$module$js$rom$area();this.LimeTreeValley=area$$module$js$rom$area();this.PortoaPalace=area$$module$js$rom$area();this.FishermanHouse=area$$module$js$rom$area();this.UndergroundChannel=area$$module$js$rom$area();this.JoelPassage=area$$module$js$rom$area();this.EvilSpiritIslandEntrance=area$$module$js$rom$area();this.EvilSpiritIsland=area$$module$js$rom$area();
this.KirisaPlantCave=area$$module$js$rom$area();this.SwanGate=area$$module$js$rom$area();this.MtHydra=area$$module$js$rom$area();this.GoaFortress=area$$module$js$rom$area();this.OasisEntrance=area$$module$js$rom$area();this.OasisCave=area$$module$js$rom$area();this.DesertCave1=area$$module$js$rom$area();this.SaharaMeadow=area$$module$js$rom$area();this.DesertCave2=area$$module$js$rom$area();this.Mezame=area$$module$js$rom$area();this.Windmill=area$$module$js$rom$area();this.StomHouse=area$$module$js$rom$area();
this.WaterfallCave=area$$module$js$rom$area();this.KirisaMeadow=area$$module$js$rom$area();this.FogLampCave=area$$module$js$rom$area();this.LimeTreeLake=area$$module$js$rom$area();this.Lighthouse=area$$module$js$rom$area();this.SaberaFortress=area$$module$js$rom$area();this.ShyronTemple=area$$module$js$rom$area();this.Styx=area$$module$js$rom$area();this.FortressBasement=area$$module$js$rom$area();this.Pyramid=area$$module$js$rom$area();this.Crypt=area$$module$js$rom$area();this.Tower=area$$module$js$rom$area();
area$$module$js$rom$area.commit(this,(a,c)=>makeArea$$module$js$rom$area(this,a,c||{}))}}function makeArea$$module$js$rom$area(a,b,c){b=b.replace(/([a-z])([A-Z0-9])/g,"$1 $2").replace("Of","of");return new Area$$module$js$rom$area(a,b,c)}class Area$$module$js$rom$area{constructor(a,b,c){this.areas=a;this.name=b;this.opts=c}}var module$js$rom$area={};module$js$rom$area.Areas=Areas$$module$js$rom$area;module$js$rom$area.Area=Area$$module$js$rom$area;class BossKill$$module$js$rom$bosskill extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.base=readLittleEndian$$module$js$rom$util(a.prg,this.pointer);this.data=a.prg.slice(this.base+81920,this.base+81941);this.palettes=this.data.subarray(5,13);this.patterns=this.data.subarray(13,19)}get pointer(){return 129387+2*this.id}get routine(){const a=readLittleEndian$$module$js$rom$util(this.data,0);return a&&a+81920}set routine(a){writeLittleEndian$$module$js$rom$util(this.data,0,a?a-
81920:0)}get restoreMusic(){return this.data[3]}set restoreMusic(a){this.data[3]=a}get itemDrop(){return this.data[4]}set itemDrop(a){this.data[4]=a}get restoreAnimation(){return this.data[19]}set restoreAnimation(a){this.data[19]=a}get explode(){return!!this.data[20]}set explode(a){this.data[20]=a?1:0}write(){if(!this.base)return[];const a=this.rom.assembler();a.segment("0f");a.org(this.base);a.byte(this.data[0],this.data[1]);a.org(this.base+4);a.byte(this.data[4]);return[a.module()]}}
var module$js$rom$bosskill={};module$js$rom$bosskill.BossKill=BossKill$$module$js$rom$bosskill;const {$0f:$0f$$module$js$rom$bosses,$1b:$1b$$module$js$rom$bosses}=Segment$$module$js$rom$util;
class Bosses$$module$js$rom$bosses{constructor(a){this.rom=a;this.Vampire1=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.Vampire1,kill:0,npc:this.rom.npcs.Vampire1,shuffled:!0,sword:1});this.Insect=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.GiantInsect,kill:1,npc:this.rom.npcs.Insect,sword:1});this.Kelbesque1=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.Kelbesque1,kill:2,npc:this.rom.npcs.Kelbesque1,shuffled:!0});this.Rage=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.Rage,
kill:3,npc:this.rom.npcs.Rage});this.Sabera1=new Boss$$module$js$rom$bosses(this,{address:222574,flag:this.rom.flags.Sabera1,kill:4,npc:this.rom.npcs.SaberaDisguisedAsMesia,shuffled:!0});this.Vampire2=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.Vampire2,kill:12,npc:this.rom.npcs.Vampire2,shuffled:!0,sword:1});this.Mado1=new Boss$$module$js$rom$bosses(this,{address:251936,flag:this.rom.flags.Mado1,kill:5,shuffled:!0});this.Kelbesque2=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.Kelbesque2,
kill:6,npc:this.rom.npcs.Kelbesque2,shuffled:!0});this.Sabera2=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.Sabera2,kill:7,npc:this.rom.npcs.Sabera2,shuffled:!0});this.Mado2=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.Mado2,kill:8,npc:this.rom.npcs.Mado2,shuffled:!0});this.Karmine=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.Karmine,kill:9,npc:this.rom.npcs.Karmine,shuffled:!0,sword:2});this.Draygon1=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.Draygon1,
kill:10,npc:this.rom.npcs.Draygon,shuffled:!0,sword:2});this.StatueOfMoon=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.UsedBowOfMoon,npc:this.rom.npcs.StatueOfMoon});this.StatueOfSun=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.UsedBowOfSun,npc:this.rom.npcs.StatueOfSun});this.Draygon2=new Boss$$module$js$rom$bosses(this,{flag:this.rom.flags.Draygon2,kill:11,npc:this.rom.npcs.Draygon});this.Dyna=new Boss$$module$js$rom$bosses(this,{kill:13,object:164});this.musics=[new BossMusic$$module$js$rom$bosses($0f$$module$js$rom$bosses,
42168,[this.Vampire1,this.Vampire2]),new BossMusic$$module$js$rom$bosses($0f$$module$js$rom$bosses,42640,[this.Insect]),new BossMusic$$module$js$rom$bosses($0f$$module$js$rom$bosses,43419,[this.Kelbesque1,this.Kelbesque2]),new BossMusic$$module$js$rom$bosses($0f$$module$js$rom$bosses,44209,[this.Sabera1,this.Sabera2]),new BossMusic$$module$js$rom$bosses($0f$$module$js$rom$bosses,44559,[this.Mado1,this.Mado2]),new BossMusic$$module$js$rom$bosses($0f$$module$js$rom$bosses,44931,[this.Karmine]),new BossMusic$$module$js$rom$bosses($0f$$module$js$rom$bosses,
45447,[this.Draygon1]),new BossMusic$$module$js$rom$bosses($0f$$module$js$rom$bosses,45841,[this.Draygon2]),new BossMusic$$module$js$rom$bosses($1b$$module$js$rom$bosses,48176,[this.Dyna])];this.all=[];for(const b in this)this.hasOwnProperty(b)&&(a=this[b],a instanceof Boss$$module$js$rom$bosses&&(a.name=upperCamelToSpaces$$module$js$rom$util(b),this.all.push(a)))}isBossFlag(a){return(this.flags||(this.flags=(()=>{const a=new Set;for(const b of this.all)null!=b.flag&&a.add(b.flag.id);return a})())).has(a)}fromLocation(a){return this.all.find((b)=>
b.location===a)}fromBossKill(a){return this.all.find((b)=>b.kill===a)}fromObject(a){return this.all.find((b)=>b.object===a)}[Symbol.iterator](){return this.all[Symbol.iterator]()}write(){const a=this.rom.assembler();for(const b of this.musics)b.addr.loc(a),a.byte(b.bgm);return[a.module()]}}class BossMusic$$module$js$rom$bosses{constructor(a,b,c){this.bosses=c;this.addr=Address$$module$js$rom$util.of(a,b);this.bgm=this.addr.read(c[0].bosses.rom.prg)}}
class Boss$$module$js$rom$bosses{constructor(a,{flag:b,npc:c,kill:d,shuffled:e,address:f,sword:g=3,object:h}){this.bosses=a;({prg:a}=a.rom);this.flag=b;this.npc=c;this.object=f?a[f]:c?c.data[1]:null!==h&&void 0!==h?h:die$$module$js$assert("address, npc, or object is required");this.swordLevel=g;this.shuffled=!!e;this.kill=d;null!=d&&(b=81920+readLittleEndian$$module$js$rom$util(a,129387+2*d),b=a[b+4],255!==b&&(this.drop=b),this.location=a[129373+d])}}var module$js$rom$bosses={};
module$js$rom$bosses.Bosses=Bosses$$module$js$rom$bosses;module$js$rom$bosses.BossMusic=BossMusic$$module$js$rom$bosses;module$js$rom$bosses.Boss=Boss$$module$js$rom$bosses;class CoinDrops$$module$js$rom$coindrops{constructor(a){this.rom=a;this.values=tuple$$module$js$rom$util(a.prg,ADDRESS$$module$js$rom$coindrops.offset,COUNT$$module$js$rom$coindrops)}write(){const a=this.rom.assembler();ADDRESS$$module$js$rom$coindrops.loc(a);a.word(...this.values);return[a.module()]}}const ADDRESS$$module$js$rom$coindrops=Address$$module$js$rom$util.of(Segment$$module$js$rom$util.$1a,35806),COUNT$$module$js$rom$coindrops=16;var module$js$rom$coindrops={};
module$js$rom$coindrops.CoinDrops=CoinDrops$$module$js$rom$coindrops;const FLAG$$module$js$rom$flags=Symbol(),FALSE$$module$js$rom$flags={assumeFalse:!0},TRUE$$module$js$rom$flags={assumeTrue:!0},TRACK$$module$js$rom$flags={track:!0},IGNORE$$module$js$rom$flags={};
class Flag$$module$js$rom$flags{constructor(a,b,c,d){var e;this.flags=a;this.name=b;this.id=c;this.fixed=d.fixed||!1;this.obsolete=d.obsolete;this.logic=(e=d.logic,null!==e&&void 0!==e?e:TRACK$$module$js$rom$flags)}get c(){return this.id}get r(){return[[this.id]]}get debug(){return this.id.toString(16).padStart(3,"0")+" "+this.name}get item(){if(256>this.id||383<this.id)throw Error(`not a slot: ${this.id}`);const a=this.flags.rom.items[this.flags.rom.itemGets[this.flags.rom.slots[this.id&255]].itemId];
if(!a)throw Error("no item");return a}}function obsolete$$module$js$rom$flags(a){"number"===typeof a&&(a=((a)=>()=>a)(a));return{obsolete:a,[FLAG$$module$js$rom$flags]:!0}}function fixed$$module$js$rom$flags(a,b){b=void 0===b?IGNORE$$module$js$rom$flags:b;return{id:a,fixed:!0,[FLAG$$module$js$rom$flags]:!0,logic:b}}function tracked$$module$js$rom$flags(a){return fixed$$module$js$rom$flags(a,TRACK$$module$js$rom$flags)}
function movable$$module$js$rom$flags(a,b){b=void 0===b?IGNORE$$module$js$rom$flags:b;return{id:a,[FLAG$$module$js$rom$flags]:!0,logic:b}}function dialogProgression$$module$js$rom$flags(a,b){b=void 0===b?IGNORE$$module$js$rom$flags:b;return{name:a,[FLAG$$module$js$rom$flags]:!0,logic:b}}function dialogToggle$$module$js$rom$flags(a,b){b=void 0===b?IGNORE$$module$js$rom$flags:b;return{name:a,[FLAG$$module$js$rom$flags]:!0,logic:b}}
function pseudo$$module$js$rom$flags(a){const b=pseudoCounter$$module$js$rom$flags.get(a)||1024;pseudoCounter$$module$js$rom$flags.set(a,b+1);return{id:b,[FLAG$$module$js$rom$flags]:!0,logic:TRACK$$module$js$rom$flags}}const pseudoCounter$$module$js$rom$flags=new WeakMap;
class Flags$$module$js$rom$flags{constructor(a){this.rom=a;this[0]=fixed$$module$js$rom$flags(0,FALSE$$module$js$rom$flags);this[1]=fixed$$module$js$rom$flags(1);this[2]=fixed$$module$js$rom$flags(2);this[3]=fixed$$module$js$rom$flags(3);this[4]=fixed$$module$js$rom$flags(4);this[5]=fixed$$module$js$rom$flags(5);this[6]=fixed$$module$js$rom$flags(6);this[7]=fixed$$module$js$rom$flags(7);this[8]=fixed$$module$js$rom$flags(8);this[9]=fixed$$module$js$rom$flags(9);this.UsedWindmillKey=fixed$$module$js$rom$flags(10,
TRACK$$module$js$rom$flags);this[11]=obsolete$$module$js$rom$flags(256);this[12]=dialogToggle$$module$js$rom$flags("Leaf villager");this.LeafVillagersRescued=movable$$module$js$rom$flags(13);this[14]=obsolete$$module$js$rom$flags((a)=>{var b;return 133===(null===(b=a.trigger)||void 0===b?void 0:b.id)?323:579});this.WokeWindmillGuard=movable$$module$js$rom$flags(15,TRACK$$module$js$rom$flags);this.TurnedInKirisaPlant=movable$$module$js$rom$flags(16);this[17]=dialogProgression$$module$js$rom$flags("Welcomed to Amazones");
this[18]=dialogProgression$$module$js$rom$flags("Treasure hunter dead");this[19]=obsolete$$module$js$rom$flags(312);this[22]=dialogProgression$$module$js$rom$flags("Portoa queen Rage hint");this[23]=obsolete$$module$js$rom$flags(258);this.EnteredUndergroundChannel=movable$$module$js$rom$flags(24,TRACK$$module$js$rom$flags);this[25]=dialogToggle$$module$js$rom$flags("Portoa queen tired of talking");this[26]=dialogProgression$$module$js$rom$flags("Initial talk with Portoa queen");this.MesiaRecording=
movable$$module$js$rom$flags(27,TRACK$$module$js$rom$flags);this[28]=obsolete$$module$js$rom$flags(272);this.TalkedToFortuneTeller=movable$$module$js$rom$flags(29,TRACK$$module$js$rom$flags);this.QueenRevealed=movable$$module$js$rom$flags(30,TRACK$$module$js$rom$flags);this[31]=obsolete$$module$js$rom$flags(265);this.QueenNotInThroneRoom=movable$$module$js$rom$flags(32);this.ReturnedFogLamp=movable$$module$js$rom$flags(33,TRACK$$module$js$rom$flags);this[34]=dialogProgression$$module$js$rom$flags("Sahara elder");
this[35]=dialogProgression$$module$js$rom$flags("Sahara elder daughter");this[36]=obsolete$$module$js$rom$flags(317);this[37]=obsolete$$module$js$rom$flags(310);this[38]=obsolete$$module$js$rom$flags(765);this.ShyronMassacre=fixed$$module$js$rom$flags(39,TRACK$$module$js$rom$flags);this.ChangeWoman=fixed$$module$js$rom$flags(40);this.ChangeAkahana=fixed$$module$js$rom$flags(41);this.ChangeSoldier=fixed$$module$js$rom$flags(42);this.ChangeStom=fixed$$module$js$rom$flags(43);this[45]=dialogProgression$$module$js$rom$flags("Shyron sages");
this[46]=obsolete$$module$js$rom$flags(301);this.UsedBowOfTruth=fixed$$module$js$rom$flags(47);this[49]=dialogProgression$$module$js$rom$flags("Zombie town");this[50]=obsolete$$module$js$rom$flags(311);this[52]=dialogProgression$$module$js$rom$flags("Akahana in waterfall cave");this.CuredAkahana=movable$$module$js$rom$flags(53,TRACK$$module$js$rom$flags);this[54]=dialogProgression$$module$js$rom$flags("Akahana Shyron");this[55]=obsolete$$module$js$rom$flags(322);this.LeafAbduction=movable$$module$js$rom$flags(56,
TRACK$$module$js$rom$flags);this[57]=obsolete$$module$js$rom$flags(321);this.TalkedToZebuInCave=movable$$module$js$rom$flags(58,TRACK$$module$js$rom$flags);this.TalkedToZebuInShyron=movable$$module$js$rom$flags(59,TRACK$$module$js$rom$flags);this[60]=obsolete$$module$js$rom$flags(315);this[61]=dialogProgression$$module$js$rom$flags("Asina in Shyron temple");this.FoundKensuInDanceHall=movable$$module$js$rom$flags(62,TRACK$$module$js$rom$flags);this[63]=obsolete$$module$js$rom$flags((a)=>{var b;return 186===
(null===(b=a.trigger)||void 0===b?void 0:b.id)?580:324});this[64]=dialogProgression$$module$js$rom$flags("Tornel in Shyron temple");this[65]=obsolete$$module$js$rom$flags(263);this[68]=obsolete$$module$js$rom$flags(263);this.RescuedChild=fixed$$module$js$rom$flags(69,TRACK$$module$js$rom$flags);this.UsedInsectFlute=fixed$$module$js$rom$flags(70);this.RescuedLeafElder=movable$$module$js$rom$flags(71);this[72]=dialogProgression$$module$js$rom$flags("Treasure hunter embarked");this[73]=obsolete$$module$js$rom$flags(257);
this[74]=dialogProgression$$module$js$rom$flags("Boat owner");this[75]=dialogToggle$$module$js$rom$flags("Shyron sick men");this[76]=dialogToggle$$module$js$rom$flags("Shyron training men 1");this[77]=dialogToggle$$module$js$rom$flags("Shyron training men 2");this[78]=obsolete$$module$js$rom$flags(262);this[79]=obsolete$$module$js$rom$flags(299);this.GivenStatueToAkahana=movable$$module$js$rom$flags(80);this[81]=obsolete$$module$js$rom$flags(326);this.TalkedToDwarfMother=movable$$module$js$rom$flags(82,
TRACK$$module$js$rom$flags);this.LeadingChild=fixed$$module$js$rom$flags(83,TRACK$$module$js$rom$flags);this[85]=dialogProgression$$module$js$rom$flags("Zebu rescued");this[86]=dialogProgression$$module$js$rom$flags("Tornel rescued");this[87]=dialogProgression$$module$js$rom$flags("Asina rescued");this.MtSabreGuardsDespawned=movable$$module$js$rom$flags(91,TRUE$$module$js$rom$flags);this[94]=obsolete$$module$js$rom$flags(653);this[95]=obsolete$$module$js$rom$flags(515);this.TalkedToStomInSwan=movable$$module$js$rom$flags(97,
TRACK$$module$js$rom$flags);this[98]=obsolete$$module$js$rom$flags(337);this[99]=obsolete$$module$js$rom$flags(327);this.CuredKensu=movable$$module$js$rom$flags(101);this[103]=obsolete$$module$js$rom$flags(267);this[104]=obsolete$$module$js$rom$flags(260);this.StonedPeopleCured=movable$$module$js$rom$flags(106,TRACK$$module$js$rom$flags);this[108]=obsolete$$module$js$rom$flags(284);this.CurrentlyRidingDolphin=fixed$$module$js$rom$flags(-111,TRACK$$module$js$rom$flags);this.ParalyzedKensuInTavern=
fixed$$module$js$rom$flags(112);this.ParalyzedKensuInDanceHall=fixed$$module$js$rom$flags(113);this.FoundKensuInTavern=movable$$module$js$rom$flags(114,TRACK$$module$js$rom$flags);this[115]=dialogProgression$$module$js$rom$flags("Startled man in Leaf");this[117]=obsolete$$module$js$rom$flags(313);this[118]=dialogProgression$$module$js$rom$flags("Kensu in Goa");this[119]=obsolete$$module$js$rom$flags(264);this[120]=obsolete$$module$js$rom$flags(268);this[121]=obsolete$$module$js$rom$flags(320);this[122]=
obsolete$$module$js$rom$flags(266);this[123]=obsolete$$module$js$rom$flags(265);this[125]=obsolete$$module$js$rom$flags(319);this[126]=dialogProgression$$module$js$rom$flags("Mt Sabre guards 1");this[127]=dialogProgression$$module$js$rom$flags("Mt Sabre guards 2");this.AlarmFluteUsedOnce=fixed$$module$js$rom$flags(118);this.FluteOfLimeUsedOnce=fixed$$module$js$rom$flags(119);this[130]=obsolete$$module$js$rom$flags(320);this[131]=dialogProgression$$module$js$rom$flags("Rescued Leaf elder");this.LeafVillagersCurrentlyAbducted=
movable$$module$js$rom$flags(132);this.LeafElderCurrentlyAbducted=movable$$module$js$rom$flags(133);this[135]=obsolete$$module$js$rom$flags(261);this[136]=obsolete$$module$js$rom$flags(306);this[137]=dialogProgression$$module$js$rom$flags("Dead Stom's girlfriend");this[138]=dialogProgression$$module$js$rom$flags("Dead Stom");this[139]=obsolete$$module$js$rom$flags(566);this[141]=obsolete$$module$js$rom$flags(311);this[143]=obsolete$$module$js$rom$flags(643);this[144]=dialogProgression$$module$js$rom$flags("Stoned people gone");
this[146]=obsolete$$module$js$rom$flags(296);this[150]=dialogToggle$$module$js$rom$flags("Leaf elder daughter");this[151]=dialogToggle$$module$js$rom$flags("Leaf villager");this[152]=dialogProgression$$module$js$rom$flags("Nadare villager");this.AbleToRideDolphin=movable$$module$js$rom$flags(155,TRACK$$module$js$rom$flags);this.PortoaQueenGoingAway=movable$$module$js$rom$flags(156);this[160]=obsolete$$module$js$rom$flags(295);this[163]=dialogToggle$$module$js$rom$flags("Portoa queen/fortune teller");
this.WokeKensuInLighthouse=movable$$module$js$rom$flags(164,TRACK$$module$js$rom$flags);this[165]=obsolete$$module$js$rom$flags(305);this[166]=dialogProgression$$module$js$rom$flags("Oak elder 1");this[167]=dialogToggle$$module$js$rom$flags("Swan dancer");this[168]=dialogProgression$$module$js$rom$flags("Oak elder 2");this.TalkedToLeafRabbit=movable$$module$js$rom$flags(169,TRACK$$module$js$rom$flags);this[170]=obsolete$$module$js$rom$flags(285);this[171]=obsolete$$module$js$rom$flags(336);this[173]=
obsolete$$module$js$rom$flags(338);this[174]=obsolete$$module$js$rom$flags(339);this[175]=obsolete$$module$js$rom$flags(340);this[176]=obsolete$$module$js$rom$flags(341);this[177]=obsolete$$module$js$rom$flags(342);this[178]=obsolete$$module$js$rom$flags(343);this[179]=obsolete$$module$js$rom$flags(344);this[180]=obsolete$$module$js$rom$flags(345);this[181]=obsolete$$module$js$rom$flags(346);this[182]=obsolete$$module$js$rom$flags(287);this[183]=obsolete$$module$js$rom$flags(348);this[184]=obsolete$$module$js$rom$flags(349);
this[185]=obsolete$$module$js$rom$flags(286);this[186]=obsolete$$module$js$rom$flags(350);this[187]=obsolete$$module$js$rom$flags(351);this[188]=obsolete$$module$js$rom$flags(352);this[189]=obsolete$$module$js$rom$flags(288);this[190]=obsolete$$module$js$rom$flags(289);this[191]=obsolete$$module$js$rom$flags(354);this[192]=obsolete$$module$js$rom$flags(355);this[193]=obsolete$$module$js$rom$flags(356);this[194]=obsolete$$module$js$rom$flags(290);this[195]=obsolete$$module$js$rom$flags(357);this[196]=
obsolete$$module$js$rom$flags(358);this[197]=obsolete$$module$js$rom$flags(363);this[198]=obsolete$$module$js$rom$flags(364);this[199]=obsolete$$module$js$rom$flags(291);this[200]=obsolete$$module$js$rom$flags(292);this[201]=obsolete$$module$js$rom$flags(362);this[202]=obsolete$$module$js$rom$flags(317);this[203]=obsolete$$module$js$rom$flags(298);this[204]=obsolete$$module$js$rom$flags(284);this[205]=obsolete$$module$js$rom$flags(276);this[206]=obsolete$$module$js$rom$flags(293);this[207]=obsolete$$module$js$rom$flags(307);
this[208]=obsolete$$module$js$rom$flags(296);this[209]=obsolete$$module$js$rom$flags(309);this[210]=obsolete$$module$js$rom$flags(361);this[211]=obsolete$$module$js$rom$flags(294);this[212]=obsolete$$module$js$rom$flags(347);this[213]=dialogToggle$$module$js$rom$flags("Portoa queen 1");this[214]=dialogToggle$$module$js$rom$flags("Portoa queen 2");this[215]=dialogToggle$$module$js$rom$flags("Portoa queen 3");this[216]=dialogProgression$$module$js$rom$flags("Kensu rescued");this[217]=dialogToggle$$module$js$rom$flags("Stoned pair");
this[218]=dialogProgression$$module$js$rom$flags("Kensu gone from tavern");this[219]=dialogToggle$$module$js$rom$flags("In Sabera's trap");this[220]=obsolete$$module$js$rom$flags(367);this[221]=obsolete$$module$js$rom$flags(368);this[222]=obsolete$$module$js$rom$flags(300);this[223]=obsolete$$module$js$rom$flags(283);this[224]=dialogProgression$$module$js$rom$flags("Dead Akahana");this[228]=obsolete$$module$js$rom$flags(316);this[229]=obsolete$$module$js$rom$flags(366);this[230]=obsolete$$module$js$rom$flags(365);
this[231]=obsolete$$module$js$rom$flags(303);this[232]=dialogProgression$$module$js$rom$flags("Dead Shyron villager");this[233]=dialogProgression$$module$js$rom$flags("Dead Shyron guard");this[234]=dialogProgression$$module$js$rom$flags("Tower message 1");this[235]=dialogProgression$$module$js$rom$flags("Tower message 2");this[236]=dialogProgression$$module$js$rom$flags("Tower message 3");this[237]=dialogProgression$$module$js$rom$flags("Mesia");this.TalkedToZebuStudent=movable$$module$js$rom$flags(238,
TRACK$$module$js$rom$flags);this[256]=obsolete$$module$js$rom$flags(302);this[257]=obsolete$$module$js$rom$flags(263);this[258]=obsolete$$module$js$rom$flags(264);this[259]=obsolete$$module$js$rom$flags(265);this[261]=obsolete$$module$js$rom$flags(294);this[262]=obsolete$$module$js$rom$flags(291);this[263]=obsolete$$module$js$rom$flags(274);this[264]=obsolete$$module$js$rom$flags(317);this.UsedBowOfMoon=movable$$module$js$rom$flags(265);this.UsedBowOfSun=movable$$module$js$rom$flags(266);this[267]=
obsolete$$module$js$rom$flags(284);this[268]=obsolete$$module$js$rom$flags(353);this.LeafElder=tracked$$module$js$rom$flags(-257);this.OakElder=tracked$$module$js$rom$flags(-258);this.WaterfallCaveSwordOfWaterChest=tracked$$module$js$rom$flags(-259);this.StxyLeftUpperSwordOfThunderChest=tracked$$module$js$rom$flags(-260);this.MesiaInTower=tracked$$module$js$rom$flags(260);this.SealedCaveBallOfWindChest=tracked$$module$js$rom$flags(-262);this.MtSabreWestTornadoBraceletChest=tracked$$module$js$rom$flags(-263);
this.GiantInsect=tracked$$module$js$rom$flags(-264);this.Kelbesque1=tracked$$module$js$rom$flags(-265);this.Rage=tracked$$module$js$rom$flags(-266);this.AryllisBasementChest=tracked$$module$js$rom$flags(-267);this.Mado1=tracked$$module$js$rom$flags(-268);this.StormBraceletChest=tracked$$module$js$rom$flags(-269);this.WaterfallCaveRiverLeftChest=tracked$$module$js$rom$flags(272);this.Mado2=tracked$$module$js$rom$flags(274);this.StxyRightMiddleChest=tracked$$module$js$rom$flags(276);this.BattleArmorChest=
tracked$$module$js$rom$flags(283);this.Draygon1=tracked$$module$js$rom$flags(284);this.SealedCaveSmallRoomBackChest=tracked$$module$js$rom$flags(285);this.SealedCaveBigRoomNortheastChest=tracked$$module$js$rom$flags(286);this.FogLampCaveFrontChest=tracked$$module$js$rom$flags(287);this.MtHydraRightChest=tracked$$module$js$rom$flags(288);this.SaberaUpstairsLeftChest=tracked$$module$js$rom$flags(289);this.EvilSpiritIslandLowerChest=tracked$$module$js$rom$flags(290);this.Sabera2=tracked$$module$js$rom$flags(291);
this.SealedCaveSmallRoomFrontChest=tracked$$module$js$rom$flags(292);this.CordelGrass=tracked$$module$js$rom$flags(293);this.Kelbesque2=tracked$$module$js$rom$flags(294);this.OakMother=tracked$$module$js$rom$flags(295);this.PortoaQueen=tracked$$module$js$rom$flags(296);this.AkahanaStatueOfOnyxTradein=tracked$$module$js$rom$flags(297);this.OasisCaveFortressBasementChest=tracked$$module$js$rom$flags(298);this.Brokahana=tracked$$module$js$rom$flags(299);this.EvilSpiritIslandRiverLeftChest=tracked$$module$js$rom$flags(300);
this.Deo=tracked$$module$js$rom$flags(301);this.Vampire1=tracked$$module$js$rom$flags(302);this.OasisCaveNorthwestChest=tracked$$module$js$rom$flags(303);this.AkahanaFluteOfLimeTradein=tracked$$module$js$rom$flags(304);this.ZebuStudent=tracked$$module$js$rom$flags(305);this.WindmillGuardAlarmFluteTradein=tracked$$module$js$rom$flags(306);this.MtSabreNorthBackOfPrisonChest=tracked$$module$js$rom$flags(307);this.ZebuInShyron=tracked$$module$js$rom$flags(308);this.FogLampCaveBackChest=tracked$$module$js$rom$flags(309);
this.InjuredDolphin=tracked$$module$js$rom$flags(310);this.Clark=tracked$$module$js$rom$flags(311);this.Sabera1=tracked$$module$js$rom$flags(312);this.KensuInLighthouse=tracked$$module$js$rom$flags(313);this.RepairedStatue=tracked$$module$js$rom$flags(314);this.UndergroundChannelUnderwaterChest=tracked$$module$js$rom$flags(315);this.KirisaMeadow=tracked$$module$js$rom$flags(316);this.Karmine=tracked$$module$js$rom$flags(317);this.Aryllis=tracked$$module$js$rom$flags(318);this.MtHydraSummitChest=tracked$$module$js$rom$flags(319);
this.AztecaInPyramid=tracked$$module$js$rom$flags(320);this.ZebuAtWindmill=tracked$$module$js$rom$flags(321);this.MtSabreNorthSummit=tracked$$module$js$rom$flags(322);this.StomFightReward=tracked$$module$js$rom$flags(323);this.MtSabreWestTornel=tracked$$module$js$rom$flags(324);this.AsinaInBackRoom=tracked$$module$js$rom$flags(325);this.BehindWhirlpool=tracked$$module$js$rom$flags(326);this.KensuInSwan=tracked$$module$js$rom$flags(327);this.SlimedKensu=tracked$$module$js$rom$flags(328);this.SealedCaveBigRoomSouthwestChest=
tracked$$module$js$rom$flags(336);this.MtSabreWestRightChest=tracked$$module$js$rom$flags(338);this.MtSabreNorthMiddleChest=tracked$$module$js$rom$flags(339);this.FortressMadoHellwayChest=tracked$$module$js$rom$flags(340);this.SaberaUpstairsRightChest=tracked$$module$js$rom$flags(341);this.MtHydraFarLeftChest=tracked$$module$js$rom$flags(342);this.StxyLeftLowerChest=tracked$$module$js$rom$flags(343);this.KarmineBasementLowerMiddleChest=tracked$$module$js$rom$flags(344);this.EastCaveNortheastChest=
tracked$$module$js$rom$flags(345);this.OasisCaveEntranceAcrossRiverChest=tracked$$module$js$rom$flags(346);this.EvilSpiritIslandExitChest=tracked$$module$js$rom$flags(348);this.FortressSaberaMiddleChest=tracked$$module$js$rom$flags(349);this.MtSabreNorthUnderBridgeChest=tracked$$module$js$rom$flags(350);this.KirisaPlantCaveChest=tracked$$module$js$rom$flags(351);this.FortressMadoUpperNorthChest=tracked$$module$js$rom$flags(352);this.Vampire2=tracked$$module$js$rom$flags(353);this.FortressSaberaNorthwestChest=
tracked$$module$js$rom$flags(354);this.FortressMadoLowerCenterNorthChest=tracked$$module$js$rom$flags(355);this.OasisCaveNearEntranceChest=tracked$$module$js$rom$flags(356);this.MtHydraLeftRightChest=tracked$$module$js$rom$flags(357);this.FortressSaberaSoutheastChest=tracked$$module$js$rom$flags(358);this.KensuInCabin=tracked$$module$js$rom$flags(359);this.MtSabreWestNearKensuChest=tracked$$module$js$rom$flags(361);this.MtSabreWestLeftChest=tracked$$module$js$rom$flags(362);this.FortressMadoUpperBehindWallChest=
tracked$$module$js$rom$flags(363);this.PyramidChest=tracked$$module$js$rom$flags(364);this.CryptRightChest=tracked$$module$js$rom$flags(365);this.KarmineBasementLowerLeftChest=tracked$$module$js$rom$flags(366);this.FortressMadoLowerSoutheastChest=tracked$$module$js$rom$flags(367);this.FogLampCaveMiddleNorthMimic=tracked$$module$js$rom$flags(368);this.FogLampCaveMiddleSouthwestMimic=tracked$$module$js$rom$flags(369);this.WaterfallCaveFrontMimic=tracked$$module$js$rom$flags(370);this.EvilSpiritIslandRiverRightMimic=
tracked$$module$js$rom$flags(371);this.MtHydraFinalCaveMimic=tracked$$module$js$rom$flags(372);this.StxyLeftNorthMimic=tracked$$module$js$rom$flags(373);this.StxyRightNorthMimic=tracked$$module$js$rom$flags(374);this.StxyRightSouthMimic=tracked$$module$js$rom$flags(375);this.CryptLeftPitMimic=tracked$$module$js$rom$flags(376);this.KarmineBasementUpperMiddleMimic=tracked$$module$js$rom$flags(377);this.KarmineBasementUpperRightMimic=tracked$$module$js$rom$flags(378);this.KarmineBasementLowerRightMimic=
tracked$$module$js$rom$flags(379);this.SwordOfWind=tracked$$module$js$rom$flags(512);this.SwordOfFire=tracked$$module$js$rom$flags(513);this.SwordOfWater=tracked$$module$js$rom$flags(514);this.SwordOfThunder=tracked$$module$js$rom$flags(515);this.Crystalis=tracked$$module$js$rom$flags(516);this.BallOfWind=tracked$$module$js$rom$flags(517);this.TornadoBracelet=tracked$$module$js$rom$flags(518);this.BallOfFire=tracked$$module$js$rom$flags(519);this.FlameBracelet=tracked$$module$js$rom$flags(520);this.BallOfWater=
tracked$$module$js$rom$flags(521);this.BlizzardBracelet=tracked$$module$js$rom$flags(522);this.BallOfThunder=tracked$$module$js$rom$flags(523);this.StormBracelet=tracked$$module$js$rom$flags(524);this.CarapaceShield=tracked$$module$js$rom$flags(525);this.BronzeShield=tracked$$module$js$rom$flags(526);this.PlatinumShield=tracked$$module$js$rom$flags(527);this.MirroredShield=tracked$$module$js$rom$flags(528);this.CeramicShield=tracked$$module$js$rom$flags(529);this.SacredShield=tracked$$module$js$rom$flags(530);
this.BattleShield=tracked$$module$js$rom$flags(531);this.PsychoShield=tracked$$module$js$rom$flags(532);this.TannedHide=tracked$$module$js$rom$flags(533);this.LeatherArmor=tracked$$module$js$rom$flags(534);this.BronzeArmor=tracked$$module$js$rom$flags(535);this.PlatinumArmor=tracked$$module$js$rom$flags(536);this.SoldierSuit=tracked$$module$js$rom$flags(537);this.CeramicSuit=tracked$$module$js$rom$flags(538);this.BattleArmor=tracked$$module$js$rom$flags(539);this.PsychoArmor=tracked$$module$js$rom$flags(540);
this.MedicalHerb=tracked$$module$js$rom$flags(541);this.Antidote=tracked$$module$js$rom$flags(542);this.LysisPlant=tracked$$module$js$rom$flags(543);this.FruitOfLime=tracked$$module$js$rom$flags(544);this.FruitOfPower=tracked$$module$js$rom$flags(545);this.MagicRing=tracked$$module$js$rom$flags(546);this.FruitOfRepun=tracked$$module$js$rom$flags(547);this.WarpBoots=tracked$$module$js$rom$flags(548);this.StatueOfOnyx=tracked$$module$js$rom$flags(549);this.OpelStatue=tracked$$module$js$rom$flags(550);
this.InsectFlute=tracked$$module$js$rom$flags(551);this.FluteOfLime=tracked$$module$js$rom$flags(552);this.GasMask=tracked$$module$js$rom$flags(553);this.PowerRing=tracked$$module$js$rom$flags(554);this.WarriorRing=tracked$$module$js$rom$flags(555);this.IronNecklace=tracked$$module$js$rom$flags(556);this.DeosPendant=tracked$$module$js$rom$flags(557);this.RabbitBoots=tracked$$module$js$rom$flags(558);this.LeatherBoots=tracked$$module$js$rom$flags(559);this.ShieldRing=tracked$$module$js$rom$flags(560);
this.AlarmFlute=tracked$$module$js$rom$flags(561);this.WindmillKey=tracked$$module$js$rom$flags(562);this.KeyToPrison=tracked$$module$js$rom$flags(563);this.KeyToStxy=tracked$$module$js$rom$flags(564);this.FogLamp=tracked$$module$js$rom$flags(565);this.ShellFlute=tracked$$module$js$rom$flags(566);this.EyeGlasses=tracked$$module$js$rom$flags(567);this.BrokenStatue=tracked$$module$js$rom$flags(568);this.GlowingLamp=tracked$$module$js$rom$flags(569);this.StatueOfGold=tracked$$module$js$rom$flags(570);
this.LovePendant=tracked$$module$js$rom$flags(571);this.KirisaPlant=tracked$$module$js$rom$flags(572);this.IvoryStatue=tracked$$module$js$rom$flags(573);this.BowOfMoon=tracked$$module$js$rom$flags(574);this.BowOfSun=tracked$$module$js$rom$flags(575);this.BowOfTruth=tracked$$module$js$rom$flags(576);this.Refresh=tracked$$module$js$rom$flags(577);this.Paralysis=tracked$$module$js$rom$flags(578);this.Telepathy=tracked$$module$js$rom$flags(579);this.Teleport=tracked$$module$js$rom$flags(580);this.Recover=
tracked$$module$js$rom$flags(581);this.Barrier=tracked$$module$js$rom$flags(582);this.Change=tracked$$module$js$rom$flags(583);this.Flight=tracked$$module$js$rom$flags(584);this.CalmedAngrySea=tracked$$module$js$rom$flags(643);this.OpenedJoelShed=tracked$$module$js$rom$flags(647);this.Draygon2=tracked$$module$js$rom$flags(653);this.OpenedCrypt=tracked$$module$js$rom$flags(654);this.OpenedStxy=tracked$$module$js$rom$flags(688);this.OpenedSwanGate=tracked$$module$js$rom$flags(691);this.OpenedPrison=
tracked$$module$js$rom$flags(728);this.OpenedSealedCave=tracked$$module$js$rom$flags(750);this.AlwaysTrue=fixed$$module$js$rom$flags(752,TRUE$$module$js$rom$flags);this.WarpLeaf=tracked$$module$js$rom$flags(757);this.WarpBrynmaer=tracked$$module$js$rom$flags(758);this.WarpOak=tracked$$module$js$rom$flags(759);this.WarpNadare=tracked$$module$js$rom$flags(760);this.WarpPortoa=tracked$$module$js$rom$flags(761);this.WarpAmazones=tracked$$module$js$rom$flags(762);this.WarpJoel=tracked$$module$js$rom$flags(763);
this.WarpZombie=tracked$$module$js$rom$flags(-764);this.WarpSwan=tracked$$module$js$rom$flags(764);this.WarpShyron=tracked$$module$js$rom$flags(765);this.WarpGoa=tracked$$module$js$rom$flags(766);this.WarpSahara=tracked$$module$js$rom$flags(767);this.Sword=pseudo$$module$js$rom$flags(this);this.Money=pseudo$$module$js$rom$flags(this);this.BreakStone=pseudo$$module$js$rom$flags(this);this.BreakIce=pseudo$$module$js$rom$flags(this);this.FormBridge=pseudo$$module$js$rom$flags(this);this.BreakIron=pseudo$$module$js$rom$flags(this);
this.TravelSwamp=pseudo$$module$js$rom$flags(this);this.ClimbWaterfall=pseudo$$module$js$rom$flags(this);this.BuyHealing=pseudo$$module$js$rom$flags(this);this.BuyWarp=pseudo$$module$js$rom$flags(this);this.ShootingStatue=pseudo$$module$js$rom$flags(this);this.ClimbSlope8=pseudo$$module$js$rom$flags(this);this.ClimbSlope9=pseudo$$module$js$rom$flags(this);this.WildWarp=pseudo$$module$js$rom$flags(this);this.unallocated=new Map;for(var b in this){if(!this.hasOwnProperty(b))continue;var c=this[b];if(!c[FLAG$$module$js$rom$flags])continue;
var d=Number(b);const a="number"===typeof c.id?c.id:d;if(isNaN(a))throw Error(`Bad flag: ${b}`);d=c.name||(isNaN(d)?upperCamelToSpaces$$module$js$rom$util(b):flagName$$module$js$rom$flags(a));c=new Flag$$module$js$rom$flags(this,d,a,c);this[b]=c;0>c.id?this.unallocated.set(~c.id,c):this[c.id]||(this[c.id]=c)}for(b=256;384>b;b++)c=`Check ${hex$$module$js$rom$util(b&255)}`,this[b]?this[b].fixed||this.unallocated.has(b)||this.unallocated.set(b,new Flag$$module$js$rom$flags(this,c,~b,{fixed:!0})):this[b]=
new Flag$$module$js$rom$flags(this,c,b,{fixed:!0});for(b=384;640>b;b++)this[b]||(this[b]=new Flag$$module$js$rom$flags(this,(512>b?"Buffer ":"Item ")+hex$$module$js$rom$util(b),b,{fixed:!0}));for(const b of a.locations)for(const a of b.flags)this[a.flag]||(this[a.flag]=wallFlag$$module$js$rom$flags(this,a.flag))}defrag(){function a(a){return()=>a}var b,c=new Map,d=new Set;for(var e=0;768>e;e++){const a=this[e],g=null===(b=a)||void 0===b?void 0:b.obsolete;g?(c.set(e,(b)=>b.set?-1:g.call(a,b)),delete this[e]):
a||d.add(e)}b=0;for(e=767;b<e;){if(this[b]||this.unallocated.has(b)){b++;continue}const d=this[e];d&&!d.fixed&&(c.set(e,a(b)),d.id=b,this[b]=d,delete this[e],b++);e--}this.remapFlags(c,d);for(const a of this.unallocated){const [b,c]=a;this[b]||(this.unallocated.delete(b),(this[b]=c).id=b)}c=[];for(d=0;768>d;d++)this[d]||c.push(hex3$$module$js$rom$util(d));console.log(`Free flags: ${c.join(" ")}`)}insertZombieWarpFlag(){const a=new Map;if(this[756])throw Error("No space to insert warp flag");const b=
~this.WarpZombie.id;if(0>b)throw Error("Bad WarpZombie id");for(let c=756;c<b;c++)this[c]=this[c+1],this[c].id=c,a.set(c+1,()=>c);this.WarpZombie.id=b;this[b]=this.WarpZombie;this.remapFlags(a)}remap(a,b){this.remapFlags(new Map([[a,()=>b]]))}remapFlags(a,b){function c(c,d){for(let f=c.length-1;0<=f;f--){var e=c[f];0>e&&(e=~e);if(b&&b.has(e))throw Error(`SHOULD BE UNUSED: ${hex$$module$js$rom$util(e)}`);e=a.get(e);null!=e&&(e=e(Object.assign({},d,{index:f})),0<=e?c[f]=0>c[f]?~e:e:c.splice(f,1))}}
function d(c,d){var e=0>c?~c:c;if(b&&b.has(e))throw Error(`SHOULD BE UNUSED: ${hex$$module$js$rom$util(e)}`);e=a.get(e);if(null==e)return c;d=e(d);if(0>d)throw Error("Bad flag delete");return 0>c?~d:d}for(var e of this.rom.locations)if(e.used)for(const a of e.flags)a.flag=d(a.flag,{location:e});for(const a of this.rom.npcs)if(a.used){for(const b of a.spawnConditions){const [d,e]=b;c(e,{npc:a,spawn:d})}for(const b of a.globalDialogs)b.condition=d(b.condition,{npc:a,dialog:!0});for(const b of a.localDialogs){[,
e]=b;for(const b of e)b.condition=d(b.condition,{npc:a,dialog:!0}),c(b.flags,{npc:a,dialog:!0,set:!0})}}for(const a of this.rom.triggers)a.used&&(c(a.conditions,{trigger:a}),c(a.flags,{trigger:a,set:!0}));for(const a of this.rom.itemGets)c(a.flags,{set:!0});for(const a of this.rom.items)for(const b of a.itemUseData)"flag"===b.kind&&(b.want=d(b.want,{})),c(b.flags,{set:!0})}alloc(a){if(512!==(void 0===a?0:a))throw Error("Cannot allocate outside 2xx");for(a=640;768>a;)return this[a]||(this[a]=wallFlag$$module$js$rom$flags(this,
a)),a;throw Error("No free flags.");}free(a){delete this[a]}}function flagName$$module$js$rom$flags(a){return"Flag "+hex3$$module$js$rom$util(a)}function wallFlag$$module$js$rom$flags(a,b){return new Flag$$module$js$rom$flags(a,"Wall "+hex$$module$js$rom$util(b&255),b,{fixed:!0})}var module$js$rom$flags={};module$js$rom$flags.Flag=Flag$$module$js$rom$flags;module$js$rom$flags.Flags=Flags$$module$js$rom$flags;class Hitbox$$module$js$rom$hitbox extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.coordinates=tuple$$module$js$rom$util(a.prg,this.base,4)}get base(){return 218769+(this.id<<2)}get w(){return this.coordinates[1]}set w(a){this.coordinates[1]=a}get x0(){return signed$$module$js$rom$util(this.coordinates[0])}set x0(a){this.coordinates[0]=unsigned$$module$js$rom$util(a)}get x1(){return this.x0+this.w}get h(){return this.coordinates[3]}set h(a){this.coordinates[3]=a}get y0(){return signed$$module$js$rom$util(this.coordinates[2])}set y0(a){this.coordinates[2]=
unsigned$$module$js$rom$util(a)}get y1(){return this.y0+this.h}write(){const a=this.rom.assembler();a.segment("1a");a.org(38545+(this.id<<2));a.byte(...this.coordinates);return[a.module()]}}var module$js$rom$hitbox={};module$js$rom$hitbox.Hitbox=Hitbox$$module$js$rom$hitbox;const {$0e:$0e$$module$js$rom$itemget,$0f:$0f$$module$js$rom$itemget,$fe:$fe$$module$js$rom$itemget}=Segment$$module$js$rom$util,ITEMGET_TABLE$$module$js$rom$itemget=Address$$module$js$rom$util.of($0e$$module$js$rom$itemget,39680),GRANT_ITEM_TABLE$$module$js$rom$itemget=Address$$module$js$rom$util.of($fe$$module$js$rom$itemget,54997),GET_TO_ITEM_BASE$$module$js$rom$itemget=Address$$module$js$rom$util.of($0e$$module$js$rom$itemget,40294),GET_TO_ITEM_THRESHOLD$$module$js$rom$itemget=73;
class ItemGets$$module$js$rom$itemget extends EntityArray$$module$js$rom$entity{constructor(a){super(113);this.rom=a;this.actionGrants=new Map;for(var b=0;113>b;b++)this[b]=new ItemGet$$module$js$rom$itemget(a,b);for(b=GRANT_ITEM_TABLE$$module$js$rom$itemget.offset;255!==a.prg[b];){const c=a.prg[b++],d=a.prg[b++];this.actionGrants.set(c,d)}}write(){const a=this.rom.assembler();for(const b of this)b.assemble(a);GRANT_ITEM_TABLE$$module$js$rom$itemget.loc(a);for(const [b,c]of this.actionGrants)a.byte(b,
c);return[a.module()]}}
class ItemGet$$module$js$rom$itemget extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this._itemId=this.itemPointer.read(a.prg);const c=this.tablePointer.readAddress(a.prg,$0e$$module$js$rom$itemget,$0f$$module$js$rom$itemget);let d=c.offset;this.inventoryRowStart=a.prg[d++];this.inventoryRowLength=a.prg[d++];this.acquisitionAction=MessageId$$module$js$rom$messageid.from(a.prg,d);this.flags=ITEM_GET_FLAGS$$module$js$rom$util.read(a.prg,d+2);this.key=254===a.prg[d+2+2*this.flags.length+
1];0!==b&&c.org===readLittleEndian$$module$js$rom$util(a.prg,122214)&&(this.key=!1,this.flags=[])}get itemPointer(){return GET_TO_ITEM_BASE$$module$js$rom$itemget.plus(this.id)}get tablePointer(){return ITEMGET_TABLE$$module$js$rom$itemget.plus(this.id<<1)}get itemId(){return this._itemId}set itemId(a){if(this.id<GET_TO_ITEM_THRESHOLD$$module$js$rom$itemget)throw Error(`${this.id}`);this._itemId=a}isLosable(){return LOSABLE_ROWS$$module$js$rom$itemget.has(this.inventoryRowStart)}copyFrom(a){this.inventoryRowStart=
a.inventoryRowStart;this.inventoryRowLength=a.inventoryRowLength;this.acquisitionAction=a.acquisitionAction;this.flags=[...a.flags];this.key=a.key}assemble(a){this.itemPointer.loc(a);a.byte(this.itemId);const b=[this.inventoryRowStart,this.inventoryRowLength,...this.acquisitionAction.data,...ITEM_GET_FLAGS$$module$js$rom$util.bytes(this.flags),this.key?254:255];a.segment($0e$$module$js$rom$itemget.name,$0f$$module$js$rom$itemget.name);a.reloc(`ItemGetData ${hex$$module$js$rom$util(this.id)}`);const c=
a.pc();a.byte(...b);this.tablePointer.loc(a);a.word(c)}}const LOSABLE_ROWS$$module$js$rom$itemget=new Set([4,8,16]);var module$js$rom$itemget={};module$js$rom$itemget.ItemGets=ItemGets$$module$js$rom$itemget;module$js$rom$itemget.ItemGet=ItemGet$$module$js$rom$itemget;const {$14:$14$$module$js$rom$messages,$15:$15$$module$js$rom$messages,$16_a:$16_a$$module$js$rom$messages,$17:$17$$module$js$rom$messages}=Segment$$module$js$rom$util,DELIMITERS$$module$js$rom$messages=new Map([[6,"{}"],[7,"[]"]]);
class Message$$module$js$rom$messages{constructor(a,b,c,d,e){this.messages=a;this.part=b;this.id=c;this.bytes=[];this.hex="";a=a.rom.prg;b=[];for(c=d;d&&a[c];c++){const f=a[c];this.bytes.push(f);if(1===f){if(c!==d&&3!==a[c-1])throw Error(`Unexpected start message signal at ${c.toString(16)}`);}else if(2===f)b.push("\n ");else if(3===f)b.push(`${Messages$$module$js$rom$messages.CONTINUED}\n`);else if(4===f)b.push("{:HERO:}");else if(8===f)b.push("[:ITEM:]");else if(5<=f&&9>=f){const d=a[++c];this.bytes.push(d);
if(9===f){b.push(" ".repeat(d));continue}const h=DELIMITERS$$module$js$rom$messages.get(f);h&&(b.push(h[0]),b.push(d.toString(16).padStart(2,"0")),b.push(":"));b.push(e(d,f));h&&b.push(h[1]);PUNCTUATION$$module$js$rom$messages[String.fromCharCode(a[c+1])]||b.push(" ")}else if(128<=f)b.push(e(f,0)),PUNCTUATION$$module$js$rom$messages[String.fromCharCode(a[c+1])]||b.push(" ");else if(32<=f)b.push(String.fromCharCode(f));else throw Error(`Non-exhaustive switch: ${f} at ${c.toString(16)}`);}this.text=
b.join("")}mid(){return`${hex$$module$js$rom$util(this.part)}:${hex$$module$js$rom$util(this.id)}`}fixText(){function a(a,b=a.length){29<f+b&&c();" "===a?(d.push(...h," "),h=[]):/^[[{]:/.test(a)?h.push({toString:()=>a,length:b}):h.push(a);f+=b;g=a.endsWith(" ")}function b(b){b=b.split(/\s+/);for(let c=0;c<b.length;c++)c&&(g||a(" "),g=!0),a(b[c])}function c(){f=1+h.reduce((a,b)=>a+b.length,0);3<++e?(d.push("#\n "),e=0):d.push("\n ");g=!0}if(!this.checkText()){var d=[],e=0,f=0,g=!1,h=[],k=new Map;for(var m=
0;m<this.text.length;m++){var l=this.text[m],n=this.text[m+1];/[\s\n#]/.test(l)?(g||a(" "),g=!0):"{"===l?(":"===n?a("{:HERO:}",6):(l=this.text.indexOf(":",m),l=Number.parseInt(this.text.substring(m+1,l),16),n=this.messages.extraWords[6][l],k.set(n,`{${l.toString(16)}:${n}}`),b(n)),m=this.text.indexOf("}",m)):"["===l?(":"===n?a("[:ITEM:]",Math.max(...this.messages.rom.items.map((a)=>a.messageName.length))):(l=this.text.indexOf(":",m),l=Number.parseInt(this.text.substring(m+1,l),16),n=this.messages.rom.items[l].messageName,
k.set(n,`[${l.toString(16)}:${n}]`),b(n)),m=this.text.indexOf("]",m)):a(l)}d.push(...h);m=d.join("");for(const [a,b]of k)m.includes(a)&&(m=m.split(a).join(b));this.text=m}}checkText(){let a=0,b=0;for(let d=0;d<this.text.length;d++){const e=this.text[d];var c=this.text[d+1];if("\n"===e){if(a++,b=1,3<a)return!1}else if("#"===e)"\n"===c&&d++,a=b=0;else if("{"===e||"["===e){if(":"===c){if(b="{"===e?b+6:b+Math.max(...this.messages.rom.items.map((a)=>a.messageName.length)),28<b)return!1}else c=this.text.indexOf(":",
d),c=Number.parseInt(this.text.substring(d+1,c),16),b+=("{"===e?this.messages.extraWords[6][c]:this.messages.rom.items[c].messageName).length;d=this.text.indexOf(CLOSERS$$module$js$rom$messages[e],d)}else b++;if(29<b&&" "!==e)return!1}return!0}}
const PUNCTUATION$$module$js$rom$messages={"\x00":!0," ":!0,"!":!0,"'":!0,",":!0,".":!0,":":!0,";":!0,"?":!0,_:!0,"\n":!0,"#":!0},COMMON_WORDS_BASE_PTR$$module$js$rom$messages=Address$$module$js$rom$util.of($14$$module$js$rom$messages,34564),UNCOMMON_WORDS_BASE_PTR$$module$js$rom$messages=Address$$module$js$rom$util.of($14$$module$js$rom$messages,34442),PERSON_NAMES_BASE_PTR$$module$js$rom$messages=Address$$module$js$rom$util.of($14$$module$js$rom$messages,34517),ITEM_NAMES_BASE_PTR$$module$js$rom$messages=
Address$$module$js$rom$util.of($14$$module$js$rom$messages,34537),ITEM_NAMES_BASE_PTR2$$module$js$rom$messages=Address$$module$js$rom$util.of($14$$module$js$rom$messages,34697),BANKS_PTR$$module$js$rom$messages=Address$$module$js$rom$util.of($14$$module$js$rom$messages,34113),BANKS_PTR2$$module$js$rom$messages=Address$$module$js$rom$util.of($14$$module$js$rom$messages,34380),PARTS_PTR$$module$js$rom$messages=Address$$module$js$rom$util.of($14$$module$js$rom$messages,34124),SEGMENTS$$module$js$rom$messages=
{21:$15$$module$js$rom$messages,22:$16_a$$module$js$rom$messages,23:$17$$module$js$rom$messages};
class Messages$$module$js$rom$messages{constructor(a){this.rom=a;this.partCount=34;this.commonWords=[];this.uncommonWords=[];this.personNames=[];this.itemNames=[];this.parts=[];const b=COMMON_WORDS_BASE_PTR$$module$js$rom$messages.readAddress(a.prg);var c=UNCOMMON_WORDS_BASE_PTR$$module$js$rom$messages.readAddress(a.prg),d=PERSON_NAMES_BASE_PTR$$module$js$rom$messages.readAddress(a.prg),e=ITEM_NAMES_BASE_PTR$$module$js$rom$messages.readAddress(a.prg),f=BANKS_PTR$$module$js$rom$messages.readAddress(a.prg);
const g=PARTS_PTR$$module$js$rom$messages.readAddress(a.prg),h={5:c,6:d,7:e};this.extraWords={5:this.uncommonWords,6:this.personNames,7:this.itemNames};const k=(b,c,d)=>{let e=b[d];if(null!=e)return e;e=readString$$module$js$rom$util(a.prg,c.plus(2*d).readAddress(a.prg).offset);return b[d]=e};c=(a,c)=>c?k(this.extraWords[c],h[c],a):k(this.commonWords,b,a-128);for(d=0;73>d;d++)c(d,7);f=f.offset;this.banks=tuple$$module$js$rom$util(a.prg,f,this.partCount);for(d=this.partCount-1;0<=d;d--){e=g.plus(2*
d).readAddress(a.prg);const b=f-e.offset>>>1;f=e.offset;const h=SEGMENTS$$module$js$rom$messages[this.banks[d]],k=this.parts[d]=[];for(let f=0;f<b;f++){const b=e.plus(2*f).readAddress(a.prg,h);k[f]=new Message$$module$js$rom$messages(this,d,f,b.offset,c)}}}*messages(a){for(const b of this.parts)if(a)for(const c of b)a.has(c.mid())&&(yield c);else yield*b}uses(){function a(a,c){a="string"===typeof a?a:a.mid();const d=b.get(a)||new Set;d.add(c);b.set(a,d)}const b=new Map;for(var c of this.rom.triggers)c.message.nonzero()&&
a(c.message,`Trigger $${hex$$module$js$rom$util(c.id)}`);for(const b of this.rom.items)for(const c of b.itemUseMessages())c.nonzero()&&a(c,`Item $${hex$$module$js$rom$util(b.id)}`);for(const b of this.rom.npcs){for(const c of b.globalDialogs)a(c.message,`NPC $${hex$$module$js$rom$util(b.id)}`);for(const [d,f]of b.localDialogs){c=0<=d?` @ $${hex$$module$js$rom$util(d)}`:"";for(const d of f)a(d.message,`NPC $${hex$$module$js$rom$util(b.id)}${c}`)}}for(const b of this.rom.telepathy.sages){for(const c of b.defaultMessages)a(c,
`Telepathy ${b.sage}`);for(const c of b.messageGroups)for(const [,...d]of c.messages)for(const c of d)a(c,`Telepathy ${b.sage}`)}for(const b of HARDCODED_MESSAGES$$module$js$rom$messages)a(b,"Hardcoded");return b}buildAbbreviationTable(a=this.uses()){const b=[];var c=new Map;const d=new Map;for(var e of this.messages(a)){e.fixText();a=e.mid();var f=c.get(e.text);if(f=null!=f&&d.get(f))f.push(a);else{c.set(e.text,a);d.set(a,[]);f=e.text;var g=[];for(let c=0,d=f.length;c<=d;c++){var h=f[c],k=CLOSERS$$module$js$rom$messages[h];
if(PUNCTUATION$$module$js$rom$messages[h]||k||c===d){var m=f[c+1];k&&(c=Math.max(c,f.indexOf(k,c)));if(g.length){k=" "!==h&&"'"!==h||!m||PUNCTUATION$$module$js$rom$messages[m]?"":h;m=g.join("");var l=b.length;h=m.length+(" "===h?1:0);g=[];b.push({str:m,id:l,chain:k,bytes:h,used:0,suffixes:new Set,mid:a})}}else g.push(h)}}}c=new Map;for(e=b.length-1;0<=e;e--)for(a=b[e],f=a.bytes-2;0<=f;f--)for(g=a.str.substring(f),h=0,k=a,m=a.bytes-f-1;;){(l=c.get(g))||c.set(g,l={chains:h,missing:f,saving:-g.length,
str:g,words:new Set});l.words.add(e);l.saving+=m;for(let a=h;0<=a;a--)b[e+a].suffixes.add(l);if(!k.chain)break;g+=k.chain;k=b[e+ ++h];g+=k.str;m+=k.bytes}e=new Set;a=[];f=({saving:a},{saving:b})=>b-a;g=[...c.values()].sort(f);for(h=0;g.length&&h<MAX_TABLE_LENGTH$$module$js$rom$messages;){e.has(g[0].str)&&(g.sort(f),e.clear());const {str:n,saving:p,missing:q,words:v,chains:z}=g.shift();if(0>=p)break;h+=n.length+3;k=a.length;m=new Set;for(const a of v){l=b[a];for(const a of[l.mid,...d.get(l.mid)||[]])m.add(a)}a.push({bytes:128>
k?[k+128]:[5,k-128],mids:m,str:n});for(const a of v)for(k=0;k<=z;k++){m=b[a+k];l=m.bytes-(k?0:q);for(const a of m.suffixes)a.saving-=l-m.used,e.add(a.str);m.used=l}if(128===a.length){for(const a of c.values())a.saving-=a.words.size;g.sort(f);e.clear()}}return a}compress(){var a=this.uses(),b=this.buildAbbreviationTable(a);const c=new Map;this.commonWords.splice(0,this.commonWords.length);this.uncommonWords.splice(0,this.uncommonWords.length);for(var d of b){1===d.bytes.length?this.commonWords[d.bytes[0]&
127]=d.str:this.extraWords[d.bytes[0]][d.bytes[1]]=d.str;for(var e of d.mids)(b=c.get(e))||c.set(e,b=[]),b.push(d)}for(var f of c.values())f.sort(({str:{length:a}},{str:{length:b}})=>b-a);for(const g of this.messages(a)){a=g.text;a=a.replace(/([\[{])([^\]}]*)[\]}](.|$)/g,(a,b,c,d)=>{if(d&&!PUNCTUATION$$module$js$rom$messages[d])return a;" "===d&&(d="");if("["===b&&":ITEM:"===c)return`[8]${d}`;if("{"===b&&":HERO:"===c)return`[4]${d}`;c=/^([0-9a-f]+):/.exec(c);if(!c)throw Error(`Bad message text: ${a}`);
a=Number.parseInt(c[1],16);return`[${"{"===b?6:7}][${a}]${d}`});for(const {str:b,bytes:d}of c.get(g.mid())||[])a=a.replace(new RegExp(b+"( [ &0-9]|.|$)","g"),(a,b)=>{if(b&&!PUNCTUATION$$module$js$rom$messages[b])return a;" "===b&&(b="");return d.map((a)=>`[${a}]`).join("")+b});d=["[01]"];e=[];e.push(1);for(let c=0,g=a.length;c<g;c++)if(f=a[c],f===Messages$$module$js$rom$messages.CONTINUED)e.push(3,1),d.push("[03][01]"),"\n"===a[c+1]&&c++;else if("\n"===f)e.push(2)," "===a[c+1]&&c++,d.push("[02]");
else if("["===f){f=a.indexOf("]",c);if(0>=f)throw Error(`bad text: ${a}`);b=Number(a.substring(c+1,f));if(isNaN(b))throw Error(`bad text: ${a}`);e.push(b);d.push(`[${hex$$module$js$rom$util(b)}]`);c=f}else if(" "===f&&" "===a[c+1]){for(f=c+2;" "===a[f];)f++;e.push(9,f-c);d.push(`[09][${hex$$module$js$rom$util(f-c)}]`);c=f-1}else e.push(f.charCodeAt(0)),d.push(f);e.push(0);d.push("[0]");g.bytes=e;g.hex=d.join("")}}write(){function a(a,c,...d){a.loc(b);b.word(c);let e=0;for(const f of d)a.plus(f).loc(b),
b.word({op:"+",args:[c,{op:"num",num:++e}]})}const b=this.rom.assembler();free$$module$js$rom$util(b,$14$$module$js$rom$messages,32768,34048);free$$module$js$rom$util(b,$14$$module$js$rom$messages,34080,34088);free$$module$js$rom$util(b,$14$$module$js$rom$messages,34182,34195);free$$module$js$rom$util(b,$14$$module$js$rom$messages,35072,37888);free$$module$js$rom$util(b,$14$$module$js$rom$messages,38533,38662);free$$module$js$rom$util(b,$14$$module$js$rom$messages,40576,40960);free$$module$js$rom$util(b,
$15$$module$js$rom$messages,40960,49152);free$$module$js$rom$util(b,$16_a$$module$js$rom$messages,40960,49152);free$$module$js$rom$util(b,$17$$module$js$rom$messages,40960,48128);var c=seq$$module$js$rom$util(this.partCount,()=>[]);for(var d=0;d<this.partCount;d++){var e=c[d];const a=this.parts[d];b.segment(SEGMENTS$$module$js$rom$messages[this.banks[d]].name);for(const c of a)b.reloc(`Message_${c.mid()}`),e.push(b.pc()),b.byte(...c.bytes,0)}d=[];b.segment($14$$module$js$rom$messages.name);b.reloc("MessagesTable");
for(e=0;e<this.partCount;e++)d.push(b.pc()),b.word(...c[e]);c=b.pc();b.byte(...this.banks);b.reloc("MessageParts");e=b.pc();b.word(...d);a(BANKS_PTR$$module$js$rom$messages,c);a(BANKS_PTR2$$module$js$rom$messages,c);a(PARTS_PTR$$module$js$rom$messages,e,5);c=[["CommonWords",this.commonWords,[COMMON_WORDS_BASE_PTR$$module$js$rom$messages]],["UncommonWords",this.uncommonWords,[UNCOMMON_WORDS_BASE_PTR$$module$js$rom$messages]],["PersonNames",this.personNames,[PERSON_NAMES_BASE_PTR$$module$js$rom$messages]],
["ItemNames",this.itemNames,[ITEM_NAMES_BASE_PTR$$module$js$rom$messages,ITEM_NAMES_BASE_PTR2$$module$js$rom$messages]]];for(const [e,g,h]of c){c=[];d=0;for(const a of g)a?(b.reloc(`${e}_${hex$$module$js$rom$util(d++)}`),c.push(b.pc()),b.byte(a,0)):c.push(0);b.reloc(e);d=b.pc();b.word(...c);for(const b of h)a(b,d,5)}return[b.module()]}}Messages$$module$js$rom$messages.CONTINUED="#";
const MAX_TABLE_LENGTH$$module$js$rom$messages=1250,CLOSERS$$module$js$rom$messages={"{":"}","[":"]"},HARDCODED_MESSAGES$$module$js$rom$messages=new Set("20:1d 1b:0f 1b:10 1b:11 1b:12 1b:05 1b:06 1b:07 1f:00 13:00 0b:01 20:0c 20:0f 1c:11 0e:05 16:00 16:02 16:04 16:06 20:11 21:00 21:02 21:01 06:00 18:00 18:02 18:04 18:08 1b:03 1b:00 1b:00 1b:04 06:01 10:13 19:05 20:14 20:15 20:17 20:02 20:0d 20:19 20:1a 20:1b 03:01 03:02 10:10 10:11 10:12 0c:04 0c:05 03:03 20:0e 20:13".split(" "));
var module$js$rom$messages={};module$js$rom$messages.Messages=Messages$$module$js$rom$messages;module$js$rom$messages.HARDCODED_MESSAGES=HARDCODED_MESSAGES$$module$js$rom$messages;const METASPRITE_TABLE$$module$js$rom$metasprite=230492;
class Metasprite$$module$js$rom$metasprite extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.mirrored=null;this.pointer=METASPRITE_TABLE$$module$js$rom$metasprite+(this.id<<1);this.base=readLittleEndian$$module$js$rom$util(a.prg,this.pointer)+196608;this.used=229376<=this.base;if(255===a.prg[this.base]){const c=readLittleEndian$$module$js$rom$util(a.prg,this.base+1);for(let b=0;256>b;b++)if(readLittleEndian$$module$js$rom$util(a.prg,METASPRITE_TABLE$$module$js$rom$metasprite+(b<<
1))===c){this.mirrored=b;break}if(null==this.mirrored)throw Error(`could not find mirrored sprite for ${hex$$module$js$rom$util(b)}: ${hex$$module$js$rom$util(c)}`);this.frames=this.frameMask=this.size=0;this.sprites=[]}else this.mirrored=null,this.size=a.prg[this.base],this.frameMask=a.prg[this.base+1],this.frames=this.frameMask+1,this.sprites=seq$$module$js$rom$util(this.frames,(b)=>{b=this.base+2+4*b*this.size;const c=[];for(let d=0;d<this.size&&128!==a.prg[b+4*d];d++)c.push(tuple$$module$js$rom$util(a.prg,
b+4*d,4));return c})}patternBanks(a=0){if(!this.used)return[];let b=this;b.mirrored&&(b=this.rom.metasprites[b.mirrored]);const c=new Set;for(const d of b.sprites)for(const [b,,,f]of d){if(128===b)break;c.add(f+a>>>6&255)}return[...c]}palettes(){if(!this.used)return[];let a=this;a.mirrored&&(a=this.rom.metasprites[a.mirrored]);const b=new Set;for(const c of a.sprites)for(const [a,,e]of c){if(128===a)break;b.add(e&3)}return[...b]}}var module$js$rom$metasprite={};
module$js$rom$metasprite.Metasprite=Metasprite$$module$js$rom$metasprite;class ObjectsClass$$module$js$rom$objects extends Array{constructor(a){super(256);this.rom=a;a=new Map;const b=ALL_MONSTERS$$module$js$rom$objects;for(var c in b){const d=b[c];a.set(d[1],[c,d])}for(c=0;256>c;c++)if(a.has(c)){const [b,e]=a.get(c);this[c]=this[b]=new Monster$$module$js$rom$monster(this.rom,e)}else this[c]=new ObjectData$$module$js$rom$objectdata(this.rom,c)}static get [Symbol.species](){return Array}}
const Objects$$module$js$rom$objects=ObjectsClass$$module$js$rom$objects,BIRD$$module$js$rom$objects={monsterClass:"BIRD"},BRAIN$$module$js$rom$objects={monsterClass:"BRAIN"},ENTITY$$module$js$rom$objects={monsterClass:"ENTITY"},EYE$$module$js$rom$objects={monsterClass:"EYE"},GOLEM$$module$js$rom$objects={monsterClass:"GOLEM"},JELLY$$module$js$rom$objects={monsterClass:"JELLY"},MOSQUITO$$module$js$rom$objects={monsterClass:"MOSQUITO"},MUSHROOM$$module$js$rom$objects={monsterClass:"MUSHROOM"},PUDDLE$$module$js$rom$objects=
{monsterClass:"PUDDLE"},SLIME$$module$js$rom$objects={monsterClass:"SLIME"},SOLDIER$$module$js$rom$objects={monsterClass:"SOLDIER"},SPIDER$$module$js$rom$objects={monsterClass:"SPIDER"},WRAITH$$module$js$rom$objects={monsterClass:"WRAITH"},WYVERN$$module$js$rom$objects={monsterClass:"WYVERN"},ZOMBIE$$module$js$rom$objects={monsterClass:"ZOMBIE"},MONSTERS$$module$js$rom$objects={wraith1:["Wraith 1",75,28,WRAITH$$module$js$rom$objects],wraith2:["Wraith 2",79,28,WRAITH$$module$js$rom$objects],blueSlime:["Blue Slime",
80,1,SLIME$$module$js$rom$objects],weretiger:["Weretiger",81,1],greenJelly:["Green Jelly",82,4,JELLY$$module$js$rom$objects],redSlime:["Red Slime",83,4,SLIME$$module$js$rom$objects],rockGolem:["Rock Golem",84,4,GOLEM$$module$js$rom$objects],blueBat:["Blue Bat",85,4],greenWyvern:["Green Wyvern",86,4,WYVERN$$module$js$rom$objects],orc:["Orc",88,6],redMosquito:["Red Mosquito",89,10,MOSQUITO$$module$js$rom$objects],blueMushroom:["Blue Mushroom",90,10,MUSHROOM$$module$js$rom$objects],swampTomato:["Swamp Tomato",
91,10],blueMosquito:["Blue Mosquito",92,23,MOSQUITO$$module$js$rom$objects],swampPlant:["Swamp Plant",93,10],largeBlueSlime:["Large Blue Slime",95,11,SLIME$$module$js$rom$objects],iceZombie:["Ice Zombie",96,12,ZOMBIE$$module$js$rom$objects],greenBrain:["Green Brain",97,12,BRAIN$$module$js$rom$objects],greenSpider:["Green Spider",98,12,SPIDER$$module$js$rom$objects],redWyvern:["Red Wyvern",99,12,WYVERN$$module$js$rom$objects],soldier:["Soldier",100,14,SOLDIER$$module$js$rom$objects],iceEntity:["Ice Entity",
101,14,ENTITY$$module$js$rom$objects],redBrain:["Red Brain",102,14,BRAIN$$module$js$rom$objects],iceGolem:["Ice Golem",103,14,GOLEM$$module$js$rom$objects],largeRedSlime:["Large Red Slime",105,18,SLIME$$module$js$rom$objects],troll:["Troll",106,18],redJelly:["Red Jelly",107,18,JELLY$$module$js$rom$objects],medusa:["Medusa",108,19],crab:["Crab",109,19],medusaHead:["Medusa Head",110,20],bird:["Bird",111,20,BIRD$$module$js$rom$objects],redMushroom:["Red Mushroom",113,21,MUSHROOM$$module$js$rom$objects],
earthEntity:["Earth Entity",114,22,ENTITY$$module$js$rom$objects],mimic:["Mimic",115,22],redSpider:["Red Spider",116,22,SPIDER$$module$js$rom$objects],fishman:["Fishman",117,25],jellyfish:["Jellyfish",118,25],kraken:["Kraken",119,25],darkGreenWyvern:["Dark Green Wyvern",120,27,WYVERN$$module$js$rom$objects],sandZombie:["Sand Zombie",121,38,ZOMBIE$$module$js$rom$objects],wraithShadow1:["Wraith Shadow 1",123,28,WRAITH$$module$js$rom$objects],moth:["Moth",124,28,{difficulty:3}],archer:["Archer",128,
33,SOLDIER$$module$js$rom$objects],bomberBird:["Bomber Bird",129,33,BIRD$$module$js$rom$objects],lavaBlob:["Lava Blob",130,37,PUDDLE$$module$js$rom$objects],flailGuy:["Flail Guy",132,37],blueEye:["Blue Eye",133,37,EYE$$module$js$rom$objects],salamander:["Salamander",134,37],sorceror:["Sorceror",135,37],mado1:["Mado 1",136,37],knight:["Knight",137,41,{difficulty:1}],devil:["Devil",138,41],wraitShadow2:["Wraith Shadow 2",140,41,WRAITH$$module$js$rom$objects],tarantula:["Tarantula",145,41],skeleton:["Skeleton",
146,41],purpleEye:["Purple Eye",148,41,EYE$$module$js$rom$objects],flailKnight:["Flail Knight",149,41],scorpion:["Scorpion",150,41],sandBlob:["Sand Blob",152,44,PUDDLE$$module$js$rom$objects],mummy:["Mummy",153,44],warlock:["Warlock",154,46],brownRobot:["Brown Robot",160,47,{difficulty:1}],whiteRobot:["White Robot",161,47],towerSentinel:["Tower Sentinel",162,47],helicopter:["Helicopter",163,47]},OBJECTS$$module$js$rom$objects={verticalPlatform:["Vertical Platform",126,28],horizotalPlatform:["Horizontal Platform",
127,28],glitch1:["Glitch",141,41],glitch2:["Glitch",142,41],guardianStatue:["Guardian Statue",143,41],statueOfSun:["Statue of Sun",156,47],statueOfMoon:["Statue of Moon",157,47],crumblingVerticalPlatform:["Crumbling Vertical Platform",159,47],glitch3:["Glitch",166,41]},BOSSES$$module$js$rom$objects={vampire1:["Vampire 1",87,5],giantInsect:["Giant Insect",94,11],kelbesque1:["Kelbesque 1",104,15],sabera1:["Sabera 1",125,29],kelbesque2:["Kelbesque 2",139,41],sabera2:["Sabera 2",144,41],mado2:["Mado 2",
147,41],karmine:["Karmine",151,41],draygon1:["Draygon 1",155,45],draygon2:["Draygon 2",158,47],dyna:["Dyna",164,47],vampire2:["Vampire 2",165,28],dynaPod:["Dyna Pod",180,47]},PROJECTILES$$module$js$rom$objects={sorcerorShot:["Sorceror Shot",63,37],paralysisPowderSource:["Paralysis Powder Source",77,23],dynaCounter:["Dyna Counter",184,47],dynaLaser:["Dyna Laser",185,47],dynaBubble:["Dyna Bubble",186,47],vampire2Bat:["Vampire 2 Bat",188,28],brownRobotLaserSource:["Brown Robot Laser Source",190,47],
draygon2Fireball:["Draygon 2 Fireball",191,47],vampire1Bat:["Vampire 1 Bat",193,5],giantInsectFireball:["Giant Insect Fireball",195,11],greenMosquito:["Green Monsquito",196,11],kelbesque1Rock:["Kelbesque 1 Rock",197,15],sabera1Balls:["Sabera 1 Balls",198,29],kelbesque2Fire:["Kelbesque 2 Fire",199,41],sabera2Fire:["Sabera 2 Fire",200,41],sabera2Balls:["Sabera 2 Balls",201,41],karmineBalls:["Karmine Balls",202,41],statueBalls:["Statue Balls",203,47],draygon1Lightning:["Draygon 1 Lightning",204,45],
draygon2Laser:["Draygon 2 Laser",205,47],draygon2Breath:["Draygon 2 Breath",206,47],birdBomb:["Bird Bomb",224,33],greenMosquitoShot:["Green Mosquito Shot",226,11],paralysisBeam:["Paralysis Beam",227,25],stoneGaze:["Stone Gaze",228,19],rockGolemRock:["Rock Golem Rock",229,4],curseBeam:["Curse Beam",230,41],mpDrainWeb:["MP Drain Web",231,41],fishmanTrident:["Fishman Triden",232,25],orcAxe:["Orc Axe",233,6],swampPollen:["Swamp Pollen",234,10],paralysisPowder:["Paralysis Powder",235,23],soldierSword:["Soldier Sword",
236,14],iceGolemRock:["Ice Golem Rock",237,14],trollAxe:["Troll Axe",238,18],krakenInk:["Kraken Ink",239,25],archerArrow:["Archer Arrow",240,33],knightSword:["Knight Sword",242,41],mothResidue:["Moth Residue",243,28],brownRobotLaser:["Brown Robot Laser",244,47],whiteRobotLaser:["White Robot Laser",245,47],towerSentinelLaser:["Tower Sentinel Laser",246,47],skeletonShot:["Skeleton Shot",247,41],blobShot:["Blob Shot",248,37],flailKnightFlail:["Flail Knight Flail",249,41],flailGuyFlail:["Flail Guy Flail",
250,37],madoShuriken:["Mado Shuriken",252,37],guardianStatueMissile:["Guardian Statue Missile",253,36],demonWallFire:["Demon Wall Fire",254,37]},ALL_MONSTERS$$module$js$rom$objects=Object.assign({},MONSTERS$$module$js$rom$objects,OBJECTS$$module$js$rom$objects,BOSSES$$module$js$rom$objects,PROJECTILES$$module$js$rom$objects),CHECK$$module$js$rom$objects=ALL_MONSTERS$$module$js$rom$objects;var module$js$rom$objects={};module$js$rom$objects.ObjectsClass=ObjectsClass$$module$js$rom$objects;
module$js$rom$objects.Objects=ObjectsClass$$module$js$rom$objects;module$js$rom$objects.MONSTERS=MONSTERS$$module$js$rom$objects;var RomOption$$module$js$rom$option;(function(a){a.bit=(a,c)=>new RomOptionBit$$module$js$rom$option(a,c);a.byte=(a)=>new RomOptionByte$$module$js$rom$option(a);a.address=(a)=>new RomOptionAddress$$module$js$rom$option(a)})(RomOption$$module$js$rom$option||(RomOption$$module$js$rom$option={}));
class RomOptionBit$$module$js$rom$option{constructor(a,b){this.address=a;this.bit=b}get(a){return!!(a[this.address]&1<<this.bit)}set(a,b){const c=1<<this.bit;a[this.address]=b?a[this.address]|c:a[this.address]&~c}}class RomOptionByte$$module$js$rom$option{constructor(a){this.address=a}get(a){return a[this.address]}set(a,b){a[this.address]=b&255}}
class RomOptionAddress$$module$js$rom$option{constructor(a){this.address=a}get(a){return a[this.address]<<16|a[this.address+1]<<8|a[this.address+2]}set(a,b){a[this.address]=b>>>16&255;a[this.address+1]=b>>>8&255;a[this.address+2]=b&255}}var module$js$rom$option={};module$js$rom$option.RomOption=RomOption$$module$js$rom$option;class Palette$$module$js$rom$palette extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.base=(b&3)<<2|(b&252)<<6|16624;this.colors=tuple$$module$js$rom$util(a.prg,this.base,4)}color(a){return this.colors[a]&63}}var module$js$rom$palette={};module$js$rom$palette.Palette=Palette$$module$js$rom$palette;class Pattern$$module$js$rom$pattern extends Entity$$module$js$rom$entity{constructor(a,b,c){super(a,b);this.pixels=c||tuple$$module$js$rom$util(a.chr,b<<4,16)}pixelAt(a,b){return(this.pixels[a|8]>>b&1)<<1|this.pixels[a]>>b&1}flipH(){return new Pattern$$module$js$rom$pattern(this.rom,-1,this.pixels.map(reverseBits$$module$js$rom$util))}flipV(){return new Pattern$$module$js$rom$pattern(this.rom,-1,seq$$module$js$rom$util(16,(a)=>this.pixels[a&8|~a&7]))}flip(a){let b=this;a&Flip$$module$js$rom$pattern.HORIZONTAL&&
(b=b.flipH());a&Flip$$module$js$rom$pattern.VERTICAL&&(b=b.flipV());return b}write(){const a=this.id<<4;this.rom.chr.subarray(a,a+16).set(this.pixels);return[]}}var Flip$$module$js$rom$pattern;(function(a){a[a.HORIZONTAL=64]="HORIZONTAL";a[a.VERTICAL=128]="VERTICAL"})(Flip$$module$js$rom$pattern||(Flip$$module$js$rom$pattern={}));var module$js$rom$pattern={};module$js$rom$pattern.Pattern=Pattern$$module$js$rom$pattern;module$js$rom$pattern.Flip=Flip$$module$js$rom$pattern;class RandomNumbers$$module$js$rom$randomnumbers{constructor(a){this.rom=a;this.values=tuple$$module$js$rom$util(a.prg,ADDRESS$$module$js$rom$randomnumbers.offset,COUNT$$module$js$rom$randomnumbers)}write(){const a=this.rom.assembler();ADDRESS$$module$js$rom$randomnumbers.loc(a);a.byte(...this.values);return[a.module()]}}const ADDRESS$$module$js$rom$randomnumbers=Address$$module$js$rom$util.of(Segment$$module$js$rom$util.$1a,38884),COUNT$$module$js$rom$randomnumbers=64;
var module$js$rom$randomnumbers={};module$js$rom$randomnumbers.RandomNumbers=RandomNumbers$$module$js$rom$randomnumbers;class Scaling$$module$js$rom$scaling{constructor(a){this.rom=a;this.patk=Array(48).fill(0);this.pdef=Array(48).fill(0);this.php=Array(48).fill(0);this.exp=Array(48).fill(0);this.setPAtkFormula((a)=>5+15*a/32);this.setPDefFormula((a)=>a);this.setPhpFormula((a)=>48+5.5*a);this.setExpScalingFactor(1)}setExpScalingFactor(a){this.setExpFormula((b)=>Math.floor(4*Math.pow(2,(16+9*b)/32)*a))}setPAtkFormula(a){this.patk=this.patk.map((b,c)=>Math.round(8*a(c)))}setPDefFormula(a){this.pdef=this.pdef.map((b,
c)=>Math.round(4*a(c)))}setPhpFormula(a){this.php=this.php.map((b,c)=>Math.min(255,Math.max(5,Math.round(a(c)))))}setExpFormula(a){this.exp=this.exp.map((b,c)=>{b=a(c);return 128>b?b:Math.min(255,128+(b>>4))})}write(){const a=this.rom.assembler();ADDRESS$$module$js$rom$scaling.loc(a);a.byte(...this.patk,...this.pdef,...this.php,...this.exp);return[a.module()]}}const ADDRESS$$module$js$rom$scaling=Address$$module$js$rom$util.of(Segment$$module$js$rom$util.$0d,48384);var module$js$rom$scaling={};
module$js$rom$scaling.Scaling=Scaling$$module$js$rom$scaling;class Screen$$module$js$rom$screen extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.base=(255<b?64+b:b)<<8;this.tiles=tuple$$module$js$rom$util(a.prg,this.base,240)}allTilesSet(){return new Set(this.tiles)}write(){const a=this.rom.assembler();256>this.id?(a.segment((this.id>>5).toString(16).padStart(2,"0")),a.org(32768|(this.id&63)<<8),a.byte(...this.tiles)):(a.segment("0a"),a.org(32768|(this.id&3)<<8),a.byte(...this.tiles.slice(0,192)));return[a.module()]}setTiles(a,b){for(const c of b){for(b=
0;b<c.length;b++){const d=c[b];null!=d&&(this.tiles[a+b]=d)}a+=16}}}var module$js$rom$screen={};module$js$rom$screen.Screen=Screen$$module$js$rom$screen;class Slots$$module$js$rom$slots extends Array{constructor(a){super(128);this.rom=a;for(a=0;128>a;a++)this[a]=a}swap(a,b){if(a!==b){var c=this[a];this[a]=this[b];this[b]=c}}write(){const a=this.rom.assembler();a.segment("0e");a.org(40066);a.byte(...this);return[a.module()]}}var module$js$rom$slots={};module$js$rom$slots.Slots=Slots$$module$js$rom$slots;const {$0e:$0e$$module$js$rom$telepathy,$fe:$fe$$module$js$rom$telepathy,$ff:$ff$$module$js$rom$telepathy}=Segment$$module$js$rom$util;var Sage$$module$js$rom$telepathy;(function(a){a[a.TORNEL=0]="TORNEL";a[a.ZEBU=1]="ZEBU";a[a.ASINA=2]="ASINA";a[a.KENSU=3]="KENSU"})(Sage$$module$js$rom$telepathy||(Sage$$module$js$rom$telepathy={}));var DefaultMessage$$module$js$rom$telepathy;
(function(a){a[a.INSUFFICIENT_MAGIC=0]="INSUFFICIENT_MAGIC";a[a.FREE_MAGIC=1]="FREE_MAGIC";a[a.IGNORED=2]="IGNORED";a[a.DEFAULT=3]="DEFAULT"})(DefaultMessage$$module$js$rom$telepathy||(DefaultMessage$$module$js$rom$telepathy={}));const RESULT_TABLE$$module$js$rom$telepathy=115247,VANILLA_LEVELS_TABLE$$module$js$rom$telepathy=115219,VANILLA_LOCATION_TABLE$$module$js$rom$telepathy=121076,VANILLA_MAIN_TABLE$$module$js$rom$telepathy=121332,VANILLA_DEFAULTS_TABLE$$module$js$rom$telepathy=121388;
class Telepathy$$module$js$rom$telepathy{constructor(a){this.rom=a;this.sages=seq$$module$js$rom$util(4,(a)=>new SageData$$module$js$rom$telepathy(this,a));this.resultTable=tuple$$module$js$rom$util(a.prg,RESULT_TABLE$$module$js$rom$telepathy,64);a.telepathyTablesAddress?(this.groupsByLocation=[],this.minimumLevels=[]):(this.groupsByLocation=tuple$$module$js$rom$util(a.prg,VANILLA_LOCATION_TABLE$$module$js$rom$telepathy,256),this.minimumLevels=tuple$$module$js$rom$util(a.prg,VANILLA_LEVELS_TABLE$$module$js$rom$telepathy,
7))}write(){var a=this.rom.telepathyTablesAddress;const b=this.rom.assembler();b.segment($0e$$module$js$rom$telepathy.name,$fe$$module$js$rom$telepathy.name,$ff$$module$js$rom$telepathy.name);if(a)for(free$$module$js$rom$util(b,$0e$$module$js$rom$telepathy,39156,39680),a=this.sages.map((a,c)=>{b.reloc(`Telepathy_Sage_${c}`);c=b.pc();b.byte(...a.messageGroups[0].bytes());return c}),b.org(33327,"Telepathy_ResultTable"),b.byte(...this.resultTable.map((a)=>4>a?a:a>>>1)),b.reloc("TelepathyTable"),b.export("TelepathyTable"),
b.label("TelepathyTable"),b.word(...a),a=1;4>a;a++)for(var c=0;4>c;c++)b.byte(...this.sages[c].defaultMessages[a].data);else{free$$module$js$rom$util(b,$0e$$module$js$rom$telepathy,39500,39680);b.org(33327,"Telepathy_ResultTable");b.byte(...this.resultTable);b.org(33299,"Telepathy_LevelsTable");b.byte(...this.minimumLevels);b.org(39156,"Telepathy_LocationTable");b.byte(...this.groupsByLocation);b.org(39468,"Telepathy_VanillaDefaultsTable");for(a=0;4>a;a++)for(c=0;4>c;c++)b.byte(...this.sages[c].defaultMessages[a].data);
a=[];for(c=0;4>c;c++){const d=this.sages[c];for(let e=0,f=d.messageGroups.length;e<f;e++)b.reloc(`Telepathy_Sage_${c}_Group_${e}`),a[4*e+c]=b.pc(),b.byte(...d.messageGroups[e].bytes())}b.org(39412,"Telepathy_VanillaMainTable");b.word(...a)}return[b.module()]}}
class SageData$$module$js$rom$telepathy{constructor(a,b){this.telepathy=a;this.sage=b;const c=a.rom;let d,e;c.telepathyTablesAddress?(e=d=c.telepathyTablesAddress+2*b,a=1):(d=VANILLA_DEFAULTS_TABLE$$module$js$rom$telepathy+2*b,e=VANILLA_MAIN_TABLE$$module$js$rom$telepathy+2*b,a=7);this.defaultMessages=seq$$module$js$rom$util(4,(a)=>MessageId$$module$js$rom$messageid.from(c.prg,d+8*a));this.messageGroups=seq$$module$js$rom$util(a,(a)=>TelepathyMessageGroup$$module$js$rom$telepathy.from(c.prg,e+8*a))}}
class TelepathyMessageGroup$$module$js$rom$telepathy{constructor(a){this.messages=a}bytes(){const a=[];for(let b=0,c=this.messages.length;b<c;b++){const [d,e,f]=this.messages[b];let g=0<=d?d:8192|~d;b===c-1&&(g|=32768);f&&(g|=16384);a.push(g>>=8,g&255,...e.data,...f?f.data:[])}return a}static from(a,b){const c=new TelepathyMessageGroup$$module$js$rom$telepathy([]);b=readLittleEndian$$module$js$rom$util(a,b)+81920;let d=0;for(;!(d&32768);){d=readBigEndian$$module$js$rom$util(a,b);b+=2;var e=d&8191;
d&8192&&(e=~e);e=[e,MessageId$$module$js$rom$messageid.from(a,b)];b+=2;d&16384&&(e.push(MessageId$$module$js$rom$messageid.from(a,b)),b+=2);c.messages.push(e)}return c}}var module$js$rom$telepathy={};module$js$rom$telepathy.Sage=Sage$$module$js$rom$telepathy;module$js$rom$telepathy.DefaultMessage=DefaultMessage$$module$js$rom$telepathy;module$js$rom$telepathy.Telepathy=Telepathy$$module$js$rom$telepathy;module$js$rom$telepathy.SageData=SageData$$module$js$rom$telepathy;
module$js$rom$telepathy.TelepathyMessageGroup=TelepathyMessageGroup$$module$js$rom$telepathy;class TileAnimation$$module$js$rom$tileanimation extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.base=255865+(b<<3);this.pages=tuple$$module$js$rom$util(a.prg,this.base,8)}}var module$js$rom$tileanimation={};module$js$rom$tileanimation.TileAnimation=TileAnimation$$module$js$rom$tileanimation;class TownWarp$$module$js$rom$townwarp{constructor(a){this.rom=a;this.locations=tuple$$module$js$rom$util(a.prg,ADDRESS$$module$js$rom$townwarp.offset,COUNT$$module$js$rom$townwarp);this.thunderSwordWarp=[a.prg[251338],a.prg[251342]]}write(){const a=this.rom.assembler();ADDRESS$$module$js$rom$townwarp.loc(a);a.label("TownWarpTable");a.byte(...this.locations);a.org(56460);a.instruction("lda","TownWarpTable,y");a.org(54729);a.instruction("lda","#"+this.thunderSwordWarp[0]);a.org(54733);a.instruction("lda",
"#"+this.thunderSwordWarp[1]);return[a.module()]}}const ADDRESS$$module$js$rom$townwarp=Address$$module$js$rom$util.of(Segment$$module$js$rom$util.$fe,56408),COUNT$$module$js$rom$townwarp=12;var module$js$rom$townwarp={};module$js$rom$townwarp.TownWarp=TownWarp$$module$js$rom$townwarp;const UNUSED_TRIGGERS$$module$js$rom$trigger=new Set([131,135,136,137,143,147,150,152,155,156,157,158,159,170,179,181,185,190,192]);
class Trigger$$module$js$rom$trigger extends Entity$$module$js$rom$entity{constructor(a,b){super(a,b);this.used=!UNUSED_TRIGGERS$$module$js$rom$trigger.has(b);this.pointer=123258+((b&127)<<1);this.base=addr$$module$js$rom$util(a.prg,this.pointer,81920);this.conditions=[];this.message=new MessageId$$module$js$rom$messageid;this.flags=[];let c=this.base;do{b=readBigEndian$$module$js$rom$util(a.prg,c);var d=b&4095;this.conditions.push(b&8192?~d:d);c+=2}while(!(b&32768));this.message=MessageId$$module$js$rom$messageid.from(a.prg,
c);do c+=2,b=readBigEndian$$module$js$rom$util(a.prg,c),d=b&4095,this.flags.push(b&32768?~d:d);while(!(b&16384))}bytes(){const a=[];this.conditions.length||this.conditions.push(-1);for(var b=0;b<this.conditions.length;b++){var c=this.conditions[b];0>c&&(c=~c|8192);b===this.conditions.length-1&&(c|=32768);a.push(c>>>8,c&255)}a.push(...this.message.data);this.flags.length||this.flags.push(-1);for(b=0;b<this.flags.length;b++)c=this.flags[b],0>c&&(c=~c|32768),b===this.flags.length-1&&(c|=16384),a.push(c>>>
8,c&255);return a}write(){if(!this.used)return[];const a=this.rom.assembler(),b=`Trigger_${hex$$module$js$rom$util(this.id)}`;a.segment("0f");a.reloc(b);const c=a.pc();a.byte(...this.bytes());a.org(41338+2*(this.id&127),b+"_Ptr");a.word(c);return[a.module()]}}var module$js$rom$trigger={};module$js$rom$trigger.Trigger=Trigger$$module$js$rom$trigger;class WildWarp$$module$js$rom$wildwarp{constructor(a){this.rom=a;this.locations=tuple$$module$js$rom$util(a.prg,ADDRESS$$module$js$rom$wildwarp.offset,COUNT$$module$js$rom$wildwarp)}write(){const a=this.rom.assembler();ADDRESS$$module$js$rom$wildwarp.loc(a);a.label("WildWarpLocations");a.byte(...this.locations);a.org(52185);a.instruction("lda","WildWarpLocations,y");return[a.module()]}}
const ADDRESS$$module$js$rom$wildwarp=Address$$module$js$rom$util.of(Segment$$module$js$rom$util.$fe,52204),COUNT$$module$js$rom$wildwarp=16;var module$js$rom$wildwarp={};module$js$rom$wildwarp.WildWarp=WildWarp$$module$js$rom$wildwarp;const {$0e:$0e$$module$js$rom,$0f:$0f$$module$js$rom,$10:$10$$module$js$rom}=Segment$$module$js$rom$util;
class Rom$$module$js$rom{constructor(a){this.modules=[];const b=16+(a[6]&4?512:0),c=b+16384*a[4];this.prg=a.subarray(b,c);this.chr=a.subarray(c);this.shopCount=Rom$$module$js$rom.SHOP_COUNT.get(a);this.scalingLevels=Rom$$module$js$rom.SCALING_LEVELS.get(a);this.uniqueItemTableAddress=Rom$$module$js$rom.UNIQUE_ITEM_TABLE.get(a);this.shopDataTablesAddress=Rom$$module$js$rom.SHOP_DATA_TABLES.get(a);this.telepathyTablesAddress=Rom$$module$js$rom.TELEPATHY_TABLES.get(a);this.omitItemGetDataSuffix=Rom$$module$js$rom.OMIT_ITEM_GET_DATA_SUFFIX.get(a);
this.omitLocalDialogSuffix=Rom$$module$js$rom.OMIT_LOCAL_DIALOG_SUFFIX.get(a);this.compressedMapData=Rom$$module$js$rom.COMPRESSED_MAPDATA.get(a);for(const a of ADJUSTMENTS$$module$js$rom){const [b,c,d]=a;this.prg[b]===c&&(this.prg[b]=d)}this.areas=new Areas$$module$js$rom$area(this);this.screens=seq$$module$js$rom$util(259,(a)=>new Screen$$module$js$rom$screen(this,a));this.tilesets=seq$$module$js$rom$util(12,(a)=>new Tileset$$module$js$rom$tileset(this,a<<2|128));this.tileEffects=seq$$module$js$rom$util(11,
(a)=>new TileEffects$$module$js$rom$tileeffects(this,a+179));this.triggers=seq$$module$js$rom$util(67,(a)=>new Trigger$$module$js$rom$trigger(this,128|a));this.patterns=seq$$module$js$rom$util(this.chr.length>>4,(a)=>new Pattern$$module$js$rom$pattern(this,a));this.palettes=seq$$module$js$rom$util(256,(a)=>new Palette$$module$js$rom$palette(this,a));this.locations=new Locations$$module$js$rom$location(this);this.tileAnimations=seq$$module$js$rom$util(4,(a)=>new TileAnimation$$module$js$rom$tileanimation(this,
a));this.hitboxes=seq$$module$js$rom$util(24,(a)=>new Hitbox$$module$js$rom$hitbox(this,a));this.objects=new ObjectsClass$$module$js$rom$objects(this);this.adHocSpawns=seq$$module$js$rom$util(96,(a)=>new AdHocSpawn$$module$js$rom$adhocspawn(this,a));this.metasprites=seq$$module$js$rom$util(256,(a)=>new Metasprite$$module$js$rom$metasprite(this,a));this.messages=new Messages$$module$js$rom$messages(this);this.telepathy=new Telepathy$$module$js$rom$telepathy(this);this.itemGets=new ItemGets$$module$js$rom$itemget(this);
this.items=new Items$$module$js$rom$item(this);this.shops=new Shops$$module$js$rom$shop(this);this.slots=new Slots$$module$js$rom$slots(this);this.npcs=new Npcs$$module$js$rom$npc(this);this.bossKills=seq$$module$js$rom$util(14,(a)=>new BossKill$$module$js$rom$bosskill(this,a));this.wildWarp=new WildWarp$$module$js$rom$wildwarp(this);this.townWarp=new TownWarp$$module$js$rom$townwarp(this);this.coinDrops=new CoinDrops$$module$js$rom$coindrops(this);this.flags=new Flags$$module$js$rom$flags(this);
this.bosses=new Bosses$$module$js$rom$bosses(this);this.scaling=new Scaling$$module$js$rom$scaling(this);this.randomNumbers=new RandomNumbers$$module$js$rom$randomnumbers(this)}trigger(a){if(128>a||255<a)throw Error(`Bad trigger id $${hex$$module$js$rom$util(a)}`);return this.triggers[a&127]}tileset(a){if(128>a||172<a||a&3)throw Error(`Bad tileset id $${hex$$module$js$rom$util(a)}`);return this.tilesets[(a&127)>>>2]}get projectiles(){const a=new Set;for(const b of this.objects.filter((a)=>a instanceof
Monster$$module$js$rom$monster))b.child&&a.add(this.objects[this.adHocSpawns[b.child].objectId]);return[...a].sort((a,c)=>a.id-c.id)}get monsterGraphics(){const a={};for(const b of this.locations)if(b.used&&b.hasSpawns)for(const c of b.spawns)if(!(c.data[2]&7)){const d=c.data[2]&128?1:0,e=hex$$module$js$rom$util(c.data[3]+80);(a[e]=a[e]||{})[`${d}:${b.spritePatterns[d].toString(16)}:${b.spritePalettes[d].toString(16)}`]={pal:b.spritePalettes[d],pat:b.spritePatterns[d],slot:d}}return a}get locationMonsters(){const a=
{};for(const b of this.locations){if(!b.used||!b.hasSpawns)continue;const c=a["$"+hex$$module$js$rom$util(b.id)]={};for(const a of b.spawns)if(!(a.data[2]&7)){const b=a.data[2]&128?1:0,d=a.data[3]+80;c[`${b}:${d.toString(16)}`]=(c[`${b}:${d.toString(16)}`]||0)+1}}return a}assembler(){return new Assembler$$module$js$asm$assembler}writeData(){var a,b=this.assembler();free$$module$js$rom$util(b,$0e$$module$js$rom,34682,35165);free$$module$js$rom$util(b,$0e$$module$js$rom,35557,39156);free$$module$js$rom$util(b,
$0e$$module$js$rom,40422,40960);free$$module$js$rom$util(b,$0f$$module$js$rom,40960,41222);free$$module$js$rom$util(b,$0f$$module$js$rom,41472,41920);free$$module$js$rom$util(b,$10$$module$js$rom,37146,37992);const c=[...this.modules,b.module()];b=(a)=>{for(const b of a)c.push(...b.write())};c.push(...this.locations.write());b(this.objects);b(this.hitboxes);b(this.triggers);b(this.npcs);b(this.tilesets);b(this.tileEffects);b(this.screens);b(this.adHocSpawns);c.push(...this.itemGets.write());c.push(...this.slots.write());
c.push(...this.items.write());c.push(...this.shops.write());b(this.bossKills);b(this.patterns);c.push(...this.wildWarp.write());c.push(...this.townWarp.write());c.push(...this.coinDrops.write());c.push(...this.scaling.write());c.push(...this.bosses.write());c.push(...this.randomNumbers.write());c.push(...this.telepathy.write());c.push(...this.messages.write());b=new Linker$$module$js$asm$linker;for(var d of c)b.read(d);b.link().apply(this.prg);b.report();d=b.exports();this.uniqueItemTableAddress=
d.get("KeyItemData").offset;this.shopCount=11;this.shopDataTablesAddress=(null===(a=d.get("ShopData"))||void 0===a?void 0:a.offset)||0;Rom$$module$js$rom.SHOP_COUNT.set(this.prg,this.shopCount);Rom$$module$js$rom.SCALING_LEVELS.set(this.prg,this.scalingLevels);Rom$$module$js$rom.UNIQUE_ITEM_TABLE.set(this.prg,this.uniqueItemTableAddress);Rom$$module$js$rom.SHOP_DATA_TABLES.set(this.prg,this.shopDataTablesAddress||0);Rom$$module$js$rom.OMIT_ITEM_GET_DATA_SUFFIX.set(this.prg,this.omitItemGetDataSuffix);
Rom$$module$js$rom.OMIT_LOCAL_DIALOG_SUFFIX.set(this.prg,this.omitLocalDialogSuffix);Rom$$module$js$rom.COMPRESSED_MAPDATA.set(this.prg,this.compressedMapData)}analyzeTiles(){}disjointTilesets(){var a=[];for(var b of this.locations){if(!b.used)continue;var c=b.tileset;const d=b.extended?256:0;for(const e of b.screens)for(const b of e)(a[b+d]||(a[b+d]=new Set)).add(c)}b=seq$$module$js$rom$util(256,()=>new UnionFind$$module$js$unionfind);for(c=0;c<a.length;c++)if(a[c])for(var d of this.screens[c].allTilesSet())b[d].union([...a[c]]);
for(a=0;a<b.length;a++)d=b[a].sets().map((a)=>[...a].map(hex$$module$js$rom$util).join(" ")).join(" | "),console.log(`Tile ${hex$$module$js$rom$util(a)}: ${d}`)}swapMetatiles(a,...b){var c=new Map,d=seq$$module$js$rom$util(256);const e=new Map,f=(a)=>Array.isArray(a)?a[0]:0>a?~a:a;for(var g of b){for(var h=0;h<g.length-1;h++)if(Array.isArray(g[h])){var k=g[h];e.set(k[0],k[1]);g[h]=k[0]}for(h=0;h<g.length-1;h++){k=g[h];const a=g[h+1];0>k||0>a||(c.set(a,k),d[a]=k)}}g=new Set;c=new Set;a=new Set(a);
for(var m of this.locations)if(m.used&&a.has(m.tileset)){c.add(m.tileEffects);for(var l of m.allScreens())g.add(l)}for(var n of g)for(let a=0,b=n.tiles.length;a<b;a++)n.tiles[a]=d[n.tiles[a]];for(var p of a){d=this.tilesets[(p&127)>>>2];for(var q of b)for(m=0;m<q.length-1;m++){l=f(q[m]);n=f(q[m+1]);for(a=0;4>a;a++)d.tiles[a][l]=d.tiles[a][n];d.attrs[l]=d.attrs[n];if(32>n&&d.alternates[n]!==n){if(32<=l)throw Error(`Cannot unflag: ${p} ${l} ${n} ${d.alternates[n]}`);d.alternates[l]=d.alternates[n]}}for(var v of e){const [a,
b]=v;d.alternates[a]=b}}for(const a of c){p=this.tileEffects[a-179];for(const a of b)for(q=0;q<a.length-1;q++)v=f(a[q]),d=f(a[q+1]),p.effects[v]=p.effects[d];for(const a of e.keys())p.effects[a]|=8}}moveFlag(a,b){function c(c){for(let d=0;d<c.length;d++)c[d]===a&&(c[d]=b),c[d]===~a&&(c[d]=~b)}for(const a of this.triggers)c(a.conditions),c(a.flags);for(const d of this.npcs){for(const a of d.spawnConditions.values())c(a);for(const c of[d.globalDialogs,...d.localDialogs.values()])for(const d of c)d.condition===
a&&(d.condition=b),d.condition===~a&&(d.condition=~b)}if(512===(a&-256)&&512===(b&-256))for(const c of this.locations)for(const d of c.flags)d.flag===a&&(d.flag=b)}nextFreeTrigger(){for(const a of this.triggers)if(!a.used)return a;throw Error("Could not find an unused trigger.");}static load(a,b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const c=yield pickFile$$module$js$rom(b);a&&(yield a(c));return new Rom$$module$js$rom(c)})}}
Rom$$module$js$rom.OMIT_ITEM_GET_DATA_SUFFIX=module$js$rom$option.RomOption.bit(82624,0);Rom$$module$js$rom.OMIT_LOCAL_DIALOG_SUFFIX=module$js$rom$option.RomOption.bit(82624,1);Rom$$module$js$rom.COMPRESSED_MAPDATA=module$js$rom$option.RomOption.bit(82624,2);Rom$$module$js$rom.SHOP_COUNT=module$js$rom$option.RomOption.byte(82625);Rom$$module$js$rom.SCALING_LEVELS=module$js$rom$option.RomOption.byte(82626);Rom$$module$js$rom.UNIQUE_ITEM_TABLE=module$js$rom$option.RomOption.address(82640);
Rom$$module$js$rom.SHOP_DATA_TABLES=module$js$rom$option.RomOption.address(82643);Rom$$module$js$rom.TELEPATHY_TABLES=module$js$rom$option.RomOption.address(82646);
function pickFile$$module$js$rom(a){a||(a=(a)=>document.body.appendChild(a));return new Promise((a)=>{if("#reset"!==window.location.hash){const b=localStorage.getItem("rom");if(b)return a(Uint8Array.from(Array(b.length/2).fill(0).map((a,c)=>Number.parseInt(b[2*c]+b[2*c+1],16))))}const b=document.createElement("input");document.body.appendChild(b);b.type="file";b.addEventListener("change",()=>{const c=b.files[0],e=new FileReader;e.addEventListener("loadend",()=>{const c=new Uint8Array(e.result),d=
Array.from(c,hex$$module$js$rom$util).join("");localStorage.setItem("rom",d);b.remove();a(c)});e.readAsArrayBuffer(c)})})}
const EXPECTED_CRC32$$module$js$rom=466849842,ADJUSTMENTS$$module$js$rom=[[79430,2,6],[83306,0,255],[84715,9,255],[85433,8,128],[87133,255,0],[88093,0,255],[88142,219,255],[89007,240,128],[89014,223,128],[89015,150,128],[89920,2,255],[89953,141,255],[89957,141,255],[91340,4,32],[91391,11,10],[96298,16,1],[96343,16,1],[106242,64,128],[106243,51,50],[106976,64,192],[106977,61,52],[118533,71,72],[119569,32,160],[119570,48,0],[118777,96,224],[182928,2,0],[193907,2,0],[195300,95,0]];
var module$js$rom={};module$js$rom.Rom=Rom$$module$js$rom;module$js$rom.EXPECTED_CRC32=EXPECTED_CRC32$$module$js$rom;class Spoiler$$module$js$rom$spoiler{constructor(a){this.rom=a;this.slots=[];this.route=[];this.mazes=[];this.trades=[];this.walls=[];this.unidentifiedItems=[];this.wildWarps=[]}addCheck(a,b){this.route.push(new Check$$module$js$rom$spoiler(this,a,b))}addSlot(a,b,c){this.slots[a&255]=new Slot$$module$js$rom$spoiler(this.rom,a&255,b,c&255)}addMaze(a,b,c){this.mazes.push({id:a,name:b,maze:c})}addTrade(a,b,c){this.trades.push({itemId:a,item:b,npc:c})}addUnidentifiedItem(a,b,c){this.unidentifiedItems.push({itemId:a,
oldName:b,newName:c})}addWall(a,b,c){this.walls.push({location:a,oldElement:b,newElement:c})}addWildWarp(a,b){this.wildWarps.push({id:a,name:b})}formatCondition(a){var b;return null===(b=this.rom.flags[a])||void 0===b?void 0:b.name}formatConditionList(a){var b;const c=[];for(const d of a)a=this.rom.flags[d],(null===(b=a)||void 0===b?0:b.logic.track)&&c.push(a.name);return c.join(", ")}}
class Check$$module$js$rom$spoiler{constructor(a,b,c){this.spoiler=a;this.condition=b;this.deps=c}toString(){let a=0;256===(this.condition&-128)&&(a=512|this.spoiler.rom.slots[this.condition&255]);return`${this.spoiler.formatCondition(this.condition)}${a?` (${this.spoiler.formatCondition(a)})`:""}: [${this.spoiler.formatConditionList(this.deps)}]`}}
class Slot$$module$js$rom$spoiler{constructor(a,b,c,d){this.slot=b;this.slotName=c;this.item=d;this.itemName=slotToItem$$module$js$rom$spoiler(a,d);this.originalItem=slotToItem$$module$js$rom$spoiler(a,b)}toString(){return`${this.itemName}: ${this.slotName} (${this.originalItem})`}}function slotToItem$$module$js$rom$spoiler(a,b){return 112<=b?"Mimic":a.items[a.itemGets[b].itemId].messageName}var module$js$rom$spoiler={};module$js$rom$spoiler.Spoiler=Spoiler$$module$js$rom$spoiler;const version$$module$js$version="object"===typeof __VERSION__?__VERSION__:{},STATUS$$module$js$version=version$$module$js$version.STATUS||"unstable",VERSION$$module$js$version=version$$module$js$version.VERSION||"HEAD",LABEL$$module$js$version=version$$module$js$version.LABEL||"HEAD",HASH$$module$js$version=version$$module$js$version.HASH||"HEAD",DATE$$module$js$version=version$$module$js$version.DATE||new Date;var module$js$version={};module$js$version.STATUS=STATUS$$module$js$version;
module$js$version.VERSION=VERSION$$module$js$version;module$js$version.LABEL=LABEL$$module$js$version;module$js$version.HASH=HASH$$module$js$version;module$js$version.DATE=DATE$$module$js$version;const EXPAND_PRG$$module$js$patch=!0;
var $jscompDefaultExport$$module$js$patch={apply(a,b,c){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){b.seed||(b.seed=parseSeed$$module$js$patch("").toString(16),window.location.hash+="&seed="+b.seed);var d=b.flags?new FlagSet$$module$js$flagset(String(b.flags)):new FlagSet$$module$js$flagset("@FullShuffle");for(const a in b)"false"===b[a]&&(b[a]=!1);[d]=yield shuffle$$module$js$patch(a,parseSeed$$module$js$patch(String(b.seed)),d,new FetchReader$$module$js$fetchreader(c));return d})}};
function parseSeed$$module$js$patch(a){return a?/^[0-9a-f]{1,8}$/i.test(a)?Number.parseInt(a,16):crc32$$module$js$crc32(a):Random$$module$js$random.newSeed()}
function shuffle$$module$js$patch(a,b,c,d,e,f){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){function g(a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){return new Tokenizer$$module$js$asm$tokenizer(yield d.read(a),a)})}if(EXPAND_PRG$$module$js$patch&&524288>a.length){var h=new Uint8Array(a.length+262144);h.subarray(0,262160).set(a.subarray(0,262160));h.subarray(524304).set(a.subarray(262160));h[4]<<=1;a=h}if("number"!==typeof b)throw Error("Bad seed");h=crc32$$module$js$crc32(b.toString(16).padStart(8,
"0")+String(c.filterOptional()))>>>0;var k=new Random$$module$js$random(h);c=c.filterRandom(k);const m={_ALLOW_TELEPORT_OUT_OF_BOSS:c.hardcoreMode()&&c.shuffleBossElements(),_ALLOW_TELEPORT_OUT_OF_TOWER:!0,_AUTO_EQUIP_BRACELET:c.autoEquipBracelet(),_BARRIER_REQUIRES_CALM_SEA:!0,_BUFF_DEOS_PENDANT:c.buffDeosPendant(),_BUFF_DYNA:c.buffDyna(),_CHECK_FLAG0:!0,_CTRL1_SHORTCUTS:c.controllerShortcuts(),_CUSTOM_SHOOTING_WALLS:!0,_DISABLE_SHOP_GLITCH:c.disableShopGlitch(),_DISABLE_STATUE_GLITCH:c.disableStatueGlitch(),
_DISABLE_SWORD_CHARGE_GLITCH:c.disableSwordChargeGlitch(),_DISABLE_TRIGGER_SKIP:!0,_DISABLE_WARP_BOOTS_REUSE:c.disableShopGlitch(),_DISABLE_WILD_WARP:!1,_DISPLAY_DIFFICULTY:!0,_EXTRA_PITY_MP:!0,_FIX_COIN_SPRITES:!0,_FIX_OPEL_STATUE:!0,_FIX_SHAKING:!0,_FIX_VAMPIRE:!0,_HARDCORE_MODE:c.hardcoreMode(),_HAZMAT_SUIT:c.changeGasMaskToHazmatSuit(),_LEATHER_BOOTS_GIVE_SPEED:c.leatherBootsGiveSpeed(),_MAX_SCALING_IN_TOWER:c.maxScalingInTower(),_NERF_FLIGHT:!0,_NERF_MADO:!0,_NEVER_DIE:c.neverDie(),_NORMALIZE_SHOP_PRICES:c.shuffleShops(),
_PITY_HP_AND_MP:!0,_PROGRESSIVE_BRACELET:!0,_RABBIT_BOOTS_CHARGE_WHILE_WALKING:c.rabbitBootsChargeWhileWalking(),_REQUIRE_HEALED_DOLPHIN_TO_RIDE:c.requireHealedDolphinToRide(),_REVERSIBLE_SWAN_GATE:!0,_SAHARA_RABBITS_REQUIRE_TELEPATHY:c.saharaRabbitsRequireTelepathy(),_SIMPLIFY_INVISIBLE_CHESTS:!0,_SOFT_RESET_SHORTCUT:!0,_TELEPORT_ON_THUNDER_SWORD:c.teleportOnThunderSword(),_TRAINER:c.trainer(),_TWELVTH_WARP_POINT:!0,_UNIDENTIFIED_ITEMS:c.unidentifiedItems(),_ZEBU_STUDENT_GIVES_ITEM:!0};deterministicPreParse$$module$js$pass$deterministic(a.subarray(16));
h=new Rom$$module$js$rom(a);h.flags.defrag();"object"==typeof window&&(window.rom=h);h.spoiler=new Spoiler$$module$js$rom$spoiler(h);e&&(e.spoiler=h.spoiler);deterministic$$module$js$pass$deterministic(h,c);module$js$pass$standardmapedits.standardMapEdits(h,module$js$pass$standardmapedits.standardMapEdits.generateOptions(c,k));toggleMaps$$module$js$pass$togglemaps(h,c,k);h.scalingLevels=48;c.shuffleShops()&&shuffleShops$$module$js$patch(h,c,k);shuffleGoa$$module$js$pass$shufflegoa(h,k);randomizeWalls$$module$js$patch(h,
c,k);crumblingPlatforms$$module$js$pass$crumblingplatforms(h,k);c.nerfWildWarp()&&h.wildWarp.locations.fill(0);c.randomizeWildWarp()&&shuffleWildWarp$$module$js$patch(h,c,k);c.randomizeThunderTeleport()&&randomizeThunderWarp$$module$js$pass$randomizethunderwarp(h,k);rescaleMonsters$$module$js$pass$rescalemonsters(h,c,k);unidentifiedItems$$module$js$pass$unidentifieditems(h,c,k);shuffleTrades$$module$js$pass$shuffletrades(h,c,k);c.randomizeMaps()&&shuffleMazes$$module$js$pass$shufflemazes(h,c,k);c.shuffleMimics()&&
shuffleMimics$$module$js$pass$shufflemimics(h,c,k);c.shuffleMonsters()&&shuffleMonsters$$module$js$pass$shufflemonsters(h,c,k);var l=new World$$module$js$logic$world(h,c);if(l=yield(new Graph$$module$js$logic$graph([l.getLocationList()])).shuffle(c,k,void 0,f,h.spoiler))for(var n of l){const [a,b]=n;h.slots[a&255]=b&255}else return[a,-1];c.shuffleShops()&&rescaleShops$$module$js$patch(h,c.bargainHunting()?k:void 0);c.buffMedicalHerb()&&(h.items.MedicalHerb.value=80,h.items.FruitOfPower.value=56);
c.storyMode()&&storyMode$$module$js$patch(h);c.blackoutMode()&&blackoutMode$$module$js$patch(h);misc$$module$js$patch(h,c,k);fixDialog$$module$js$pass$fixdialog(h);c.buffDyna()&&buffDyna$$module$js$patch(h,c);c.trainer()&&(h.wildWarp.locations=[10,26,53,72,109,110,140,170,172,176,182,159,166,88,92,0]);shuffleMusic$$module$js$patch(h,c,k);shufflePalettes$$module$js$pass$shufflepalettes(h,c,k);updateTablesPreCommit$$module$js$patch(h,c);k.shuffle(h.randomNumbers.values);k=Object.keys(m).filter((a)=>
m[a]).map((a)=>`.define ${a} 1\n`).join("");n=new Assembler$$module$js$asm$assembler(module$js$asm$cpu.Cpu.P02);l=new TokenStream$$module$js$asm$tokenstream;l.enter(module$js$asm$token.TokenSource.concat(new Tokenizer$$module$js$asm$tokenizer(k,"flags.s"),yield g("preshuffle.s"),yield g("postparse.s"),yield g("postshuffle.s")));k=new Preprocessor$$module$js$asm$preprocessor(l,n);n.tokens(k);h.modules.push(n.module());h.messages.compress();yield h.writeData();h=stampVersionSeedAndHash$$module$js$patch(a,
b,c);EXPAND_PRG$$module$js$patch&&(n=a.subarray(16),n.subarray(507904,524288).set(n.subarray(245760,262144)));return[a,h]})}function misc$$module$js$patch(a,b,c){a.messages.parts[2][2].text="\n{01:Akahana} is handed a statue.#\nThanks for finding that.\nI was totally gonna sell\nit for tons of cash.#\nHere, have this lame\n[29:Gas Mask] or something.";a.messages.parts[0][14].text="It's dangerous to go alone! Take this.";a.messages.parts[0][14].fixText()}
function shuffleShops$$module$js$patch(a,b,c){b={[module$js$rom$shop.ShopType.ARMOR]:{contents:[],shops:[]},[module$js$rom$shop.ShopType.TOOL]:{contents:[],shops:[]}};for(var d of a.shops)d.used&&255!==d.location&&(a=b[d.type])&&(a.contents.push(...d.contents.filter((a)=>255!==a)),a.shops.push(d),d.contents=[]);for(const e of Object.values(b))for(d=null,a=[...e.contents],c.shuffle(a);a.length;){d&&d.length||(d&&a.shift(),d=[...e.shops,...e.shops,...e.shops,...e.shops],c.shuffle(d));const b=a[0],g=
d[0];4>g.contents.length&&!g.contents.includes(b)&&(g.contents.push(b),a.shift());d.shift()}for(const a of Object.values(b))for(const b of a.shops){for(;4>b.contents.length;)b.contents.push(255);b.contents.sort((a,b)=>a-b)}}
function randomizeWalls$$module$js$patch(a,b,c){if(b.randomizeWalls()){b=[[5,56],[17],[106],[20]];var d=new DefaultMap$$module$js$util(()=>[]);for(var e of a.locations)d.get(e.data.area).push(e);for(const g of d.values()){e=c.nextInt(4);d=c.pick(b[e]);let h=!1;for(const b of g)for(const g of b.spawns)if(g.isWall()){var f=g.data[2]&32?g.id>>>4&3:g.id&3;if(2!==f)if(3===f){const d=c.nextInt(4);a.spoiler&&a.spoiler.addWall(b.name,f,d);g.data[2]|=32;g.id=48|d}else!h&&a.spoiler&&(a.spoiler.addWall(b.name,
f,e),h=!0),g.data[2]|=32,g.id=f<<4|e,b.tilePalettes[2]=d}}}}
function shuffleMusic$$module$js$patch(a,b,c){if(b.randomizeMusic()){b=[];var d=new DefaultMap$$module$js$util(()=>[]),e=new Set;for(var f of a.locations){if(95===f.id||0===f.id||!f.used)continue;const a=f.data.music;e.add(f.bgm);"number"===typeof a?b.push(f):d.get(a).push(f)}for(const b of a.bosses.musics)d.set(b,[b]),e.add(b.bgm);f=[...e];a=new Set;for(var g of d.values()){d=c.pick(f);for(const b of g)b.bgm=d,a.add(b)}for(;b.length;){c=[];g=!1;for(const d of b)b=d.neighborForEntrance(d.data.music),
a.has(b)?(d.bgm=b.bgm,a.add(d),g=!0):c.push(d);if(!g)break;b=c}}}function shuffleWildWarp$$module$js$patch(a,b,c){b=[];for(const c of a.locations)c&&c.used&&c.id&&!c.extended&&88!==(c.id&248)&&c!==a.locations.MesiaShrine&&c!==a.locations.LimeTreeLake&&b.push(c);c.shuffle(b);a.wildWarp.locations=[];for(const c of[...b.slice(0,15).sort((a,b)=>a.id-b.id)])a.wildWarp.locations.push(c.id),a.spoiler&&a.spoiler.addWildWarp(c.id,c.name);a.wildWarp.locations.push(0)}
function buffDyna$$module$js$patch(a,b){a.objects[184].collisionPlane=1;a.objects[184].immobile=!0;a.objects[185].collisionPlane=1;a.objects[185].immobile=!0;a.objects[51].collisionPlane=2;a.adHocSpawns[40].slotRangeLower=28;a.adHocSpawns[41].slotRangeUpper=28;a.adHocSpawns[42].slotRangeUpper=28}
function blackoutMode$$module$js$patch(a){var b=generate$$module$js$depgraph();for(const c of b.nodes)b=c.type,"Location"!==c.nodeType||"cave"!==b&&"fortress"!==b||a.locations[c.id].tilePalettes.fill(154)}
const storyMode$$module$js$patch=(a)=>{const b=[a.flags.Kelbesque1.id,a.flags.Sabera1.id,a.flags.Mado1.id,a.flags.Kelbesque2.id,a.flags.Sabera2.id,a.flags.Mado2.id,a.flags.Karmine.id,a.flags.Draygon1.id,a.flags.SwordOfWind.id,a.flags.SwordOfFire.id,a.flags.SwordOfWater.id,a.flags.SwordOfThunder.id];a.npcs[203].spawnConditions.get(166).push(...b)};
function stampVersionSeedAndHash$$module$js$patch(a,b,c){const d=crc32$$module$js$crc32(a),e=d.toString(16).padStart(8,"0").toUpperCase(),f="unstable"===STATUS$$module$js$version?HASH$$module$js$version.substring(0,7).padStart(7,"0").toUpperCase()+"     ":VERSION$$module$js$version.substring(0,12).padEnd(12," "),g=b.toString(16).padStart(8,"0").toUpperCase();b=(b,c)=>{for(let d=0;d<c.length;d++)a[b+16+d]=c.charCodeAt(d)};const h=(a,b)=>{const c=[];for(let d=0;d<a.length||d<b.length;d++)c.push(a[d]||
" "),c.push(b[d]||" ");return c.join("")};b(161743,h("  VERSION     SEED      ",`  ${f}${g}`));c=String(c);let k;if(46<c.length){if(92<c.length)throw Error("Flag string way too long!");k=c.substring(46,92).padEnd(46," ");c=c.substring(0,46)}c=c.padEnd(46," ");b(161791,h(c.substring(0,23),c.substring(23)));k&&b(161839,h(k.substring(0,23),k.substring(23)));b(161925,h(e.substring(0,4),e.substring(4)));b(153366,"RANDOMIZER");"unstable"===STATUS$$module$js$version&&b(153404,"BETA");return d}
function updateTablesPreCommit$$module$js$patch(a,b){b.decreaseEnemyDamage()&&a.scaling.setPhpFormula((a)=>16+6*a);a.scaling.setExpScalingFactor(b.expScalingFactor());b.disableShopGlitch()?a.coinDrops.values=[0,5,10,15,25,40,65,105,170,275,445,600,700,800,900,1E3]:a.coinDrops.values=[0,1,2,4,8,16,30,50,100,200,300,400,500,600,700,800];a.items.CarapaceShield.defense=a.items.TannedHide.defense=3;a.items.PlatinumShield.defense=a.items.BronzeArmor.defense=9;a.items.MirroredShield.defense=a.items.PlatinumArmor.defense=
13;a.items.PsychoArmor.defense=a.items.PsychoShield.defense=20;a.items.CeramicSuit.defense=a.items.BattleShield.defense=32;a.items.CarapaceShield.defense=a.items.TannedHide.defense=2;a.items.PlatinumShield.defense=a.items.BronzeArmor.defense=10;a.items.MirroredShield.defense=a.items.PlatinumArmor.defense=14;a.items.BattleArmor.defense=24}
const rescaleShops$$module$js$patch=(a,b)=>{for(const c of a.shops)if(c.type!==module$js$rom$shop.ShopType.PAWN)for(let a=0,e=c.prices.length;a<e;a++)c.prices[a]=128>c.contents[a]?b?b.nextNormal(1,.3,.5,1.5):1:c.type!==module$js$rom$shop.ShopType.INN?0:b?b.nextNormal(1,.5,.375,1.625):1;b=seq$$module$js$rom$util(48,(a)=>a);a.shops.rescale=!0;a.shops.toolShopScaling=b.map((a)=>Math.round(8*Math.pow(2,a/10)));a.shops.armorShopScaling=b.map((a)=>Math.round(8*Math.pow(2,(47-a)/12)));for(b=13;39>b;b++)a.items[b].basePrice=
BASE_PRICES$$module$js$patch[b]},BASE_PRICES$$module$js$patch={13:4,14:16,15:50,16:325,17:1E3,18:2E3,19:4E3,21:6,22:20,23:75,24:250,25:1E3,26:4800,29:25,30:30,31:45,32:40,33:36,34:200,35:150,36:65,38:300};var module$js$patch={};module$js$patch.default=$jscompDefaultExport$$module$js$patch;module$js$patch.parseSeed=parseSeed$$module$js$patch;module$js$patch.shuffle=shuffle$$module$js$patch;module$js$patch.stampVersionSeedAndHash=stampVersionSeedAndHash$$module$js$patch;Array.prototype.flatMap||Object.defineProperties(Array.prototype,{flatMap:{value(a){const b=[];let c=0;for(const d of this){let e=a(d,c++);"function"!==typeof e[Symbol.iterator]&&(e=[e]);e=[...e];e.length&&b.push(...e)}return b}}});const FullRomImage$$module$js$romimage={of:(a)=>a},PrgImage$$module$js$romimage={of:(a)=>a.subarray(16,262160)},ChrImage$$module$js$romimage={of:(a)=>a.subarray(262160)};var module$js$romimage={};module$js$romimage.FullRomImage=FullRomImage$$module$js$romimage;module$js$romimage.PrgImage=PrgImage$$module$js$romimage;module$js$romimage.ChrImage=ChrImage$$module$js$romimage;const BOSS_OBJECT_ADDRESS$$module$js$rom$boss=[[45297,!0],[45301,!1],[45305,!0],[45309,!1],[222574,!0],[251936,!0],[45557,!0],[45561,!0],[45565,!0],[45809,!0],[45813,!1],[45817,!1],[45821,!1],[46065,!0]];function shuffleBosses$$module$js$rom$boss(a,b){const c=BOSS_OBJECT_ADDRESS$$module$js$rom$boss.filter(([,a])=>a).map(([a])=>a),d=c.map((b)=>a.prg[b]);b.shuffle(d);for(b=0;b<c.length;b++)a.prg[c[b]]=d[b]}var module$js$rom$boss={};module$js$rom$boss.shuffleBosses=shuffleBosses$$module$js$rom$boss;function uint1$$module$js$rom$ints(a){return a&1}function uint2$$module$js$rom$ints(a){return a&3}function uint3$$module$js$rom$ints(a){return a&7}function uint4$$module$js$rom$ints(a){return a&15}function uint5$$module$js$rom$ints(a){return a&31}function uint6$$module$js$rom$ints(a){return a&63}function uint7$$module$js$rom$ints(a){return a&127}function uint8$$module$js$rom$ints(a){return a&255}function int8$$module$js$rom$ints(a){a=uint8$$module$js$rom$ints(a);return 128>a?a:a-256}
var module$js$rom$ints={};module$js$rom$ints.uint1=uint1$$module$js$rom$ints;module$js$rom$ints.uint2=uint2$$module$js$rom$ints;module$js$rom$ints.uint3=uint3$$module$js$rom$ints;module$js$rom$ints.uint4=uint4$$module$js$rom$ints;module$js$rom$ints.uint5=uint5$$module$js$rom$ints;module$js$rom$ints.uint6=uint6$$module$js$rom$ints;module$js$rom$ints.uint7=uint7$$module$js$rom$ints;module$js$rom$ints.uint8=uint8$$module$js$rom$ints;module$js$rom$ints.int8=int8$$module$js$rom$ints;class Speeds$$module$js$rom$speeds{constructor(a){this.rom=a}}const ADDRESS_TABLE$$module$js$rom$speeds=214204;var module$js$rom$speeds={};module$js$rom$speeds.Speeds=Speeds$$module$js$rom$speeds;const ITEMS$$module$js$tracker="\nsword-of-wind $00\nsword-of-fire $01\nsword-of-water $02\nsword-of-thunder $03\nwindmill-key $32\nstatue-of-onyx $25 onyx-statue\ninsect-flute $27\nkey-to-prison $33 prison-key key-2-prison\nflute-of-lime $28\n\nball-of-wind $05 ball-of-wind\nball-of-fire $07 ball-of-fire\nball-of-water $09 ball-of-water\nball-of-thunder $0b ball-of-thunder\nkirisa-plant $3c\nalarm-flute $31\nfog-lamp $35\nshell-flute $36\nbroken-statue $38\neye-glasses $37 eyeglasses\nglowing-lamp $39\n\ntornado-bracelet $06\nflame-bracelet $08\nblizzard-bracelet $0a\nstorm-bracelet $0c\nlove-pendant $3b\nkey-to-styx $34 key-2-styx\nstatue-of-gold $3a gold-statue\nsacred-shield $12\nivory-statue $3d\n\nrabbit-boots $2e\ngas-mask $29 hazard-suit hazmat-suit\nshield-ring $30\niron-necklace $2c\nleather-boots $2f speed-boots\npower-ring $2a\nwarrior-ring $2b\ndeos-pendant $2d deo\nbow-of-moon $3e moon\nbow-of-sun $3f sun\n\nrefresh $41\nparalysis $42\ntelepathy $43\nteleport $44\nrecover $45\nbarrier $46\nchange $47\nflight $48\npsycho-armor $1c\nbow-of-truth $40 truth\n",
voiceReplacements$$module$js$tracker=[[/\b(sort)\b/,"sword"],[/\b(sorta)\b/,"sword of"],[/\b(win)\b/,"wind"],[/\bketostix\b/,"key 2 styx"],[/\bketo\b/,"key 2"],[/\b(sticks|stick c|stix e|stick sea|dixie|sticks e|stick see|sexy|60|sixty)\b/,"styx"],[/\b(arraylist|gorilla[sz]|aurelius|h?airless|a realist|arl[eiy]ss?)\b/,"aryllis"],[/\b(amazon us|amazon[ae]?ss?|amazon)\b/,"amazones"],[/\bamazones basement\b/,"aryllis basement"],[/\b(deal|dil|diehl)\b/,"deo"],[/\b(ds|deals|diaz|delos|drose|theos)\b/,
"deos"],[/\bone\b/,"1"],[/\b(two|ii|to|too)\b/,"2"],[/\bthree\b/,"3"],[/\bfour\b/,"4"],[/\bar[ck]s tom\b/,"ark stom"],[/\borbit\b/,"orb of"],[/\borb\n/,"ball"],[/^(contract|amtrack|ontra(c|k|ck))\b/,"untrack"],[/^((ch|tr)[eu](c|k|ck))\b/,"track"],[/^track ?suit\b/,"track flute"],[/\b(floote|food)\b/,"flute"],[/\b(lyme|lion)\b/,"lime"],[/mark(s|ed)\b/,"mark"],[/^(marc|mach|smart|[bp]ark)\b/,"mark"],[/\blee felder\b/,"leaf elder"],[/^markley f/,"mark leaf "],[/^(mark of|market)\b/,"mark"],[/\bleif\b/,
"leaf"],[/\beldar\b/,"elder"],[/\blight\b/,"flight"],[/\bmann\b/,"moon"],[/^trackball\b/,"track bow"],[/\bbosemann?\b/,"bow of moon"],[/\b(bo(we)?)\b/,"bow"],[/\b(certifier|start a fire)\b/,"sword of fire"],[/\bwhen milky\b/,"windmill key"],[/^(4 clear|faux clear|folklore|so ?clear|pho clear)\b/,"full clear"],[/\b(mayo|meto|nato|mader|meadow|matter|ma[dt]er|motto|model)\b/,"mado"],[/\bcalvey\b/,"kelby"],[/\b(kelbyone|lv ?1)\b/,"kelby 1"],[/\blv ?2\b/,"kelby 2"],[/\b(carmine|carmen|combine)\b/,"karmine"],
[/\b(dra[gk][ao]n)\b/,"draygon"],[/\b([cs][ae][bdgv][aeiu]*r[ae]|xavier)\b/,"sabera"],[/\b(wright|rite|write)\b/,"right"],[/\b([ck]or[bd]el[le]?|quadrel)\b/,"cordel"],[/\b(hotel desk|(bel)?l desk|kill basque|kehl basc|caleb ask(ed)?)\b/,"kelby"],[/\b(porter|port[eo]la|porto a)\b/,"portoa"],[/\b(athena|cena|tina|isina|esquina)\b/,"asina"],[/\b((at the|ec[hk]o) h[ao]nn?ah?|alcohol(ic)?)\b/,"akahana"],[/\b((roca|broke[nr]|brokaw|barr?oca) hann?ah?|bro k[ao]h[ao]na|pokehana)\b/,"brokahana"],[/\b(stoned)\b/,
"stone"],[/\b(roc[ck]a? ?(honda|ohana|h[oa]nn?ah?|auto))\b/,"stone akahana"],[/\b(guards)\b/,"guard"],[/\b(window)\b/,"windmill"],[/\b(sa[bv][eo]r)\b/,"sabre"],[/\bsabre south\b/,"sabre west"],[/\b(hebrew|cebu|sebba|zabel)\b/,"zebu"],[/\b([bct]([aou]r|r[aou])nn?ell?)\b/,"tornel"],[/\b(clarke)\b/,"clark"],[/\bsabera 1 left\b/,"sabera fortress left"],[/\bsabera 1 right\b/,"sabera fortress right"],[/\b(cantu|cancel|can sue|kincer|kenzo|cancer)\b/,"kensu"],[/\b(light house)\b/,"lighthouse"],[/\bkensu(?: in)? (lighthouse|swan)\b/,
"$1"],[/\b(kensu slime|slime kensu)\b/,"slime"],[/\bunderground channel\b/,"channel"],[/\b(?:mount|mt) (sabre|hydra)\b/,"$1"],[/\b([ck]h?[au]r[iu]ss?[aou])\b/,"kirisa"],[/\bmado (lower|upper)\b/,"mado 2 $1"],[/\bsabera( 2)? (level|chest|sewer)\b/,"sabera 2 level"],[/\b(script|richt)\b/,"crypt"],[/\bdraygon 1\b/,"draygon"],[/\besi\b/,"evil spirit island"],[/\bsabre north summit\b/,"sabre summit"],[/\bkirisa plant cave\b/,"kirisa cave"],[/\b(windmill|vampire) cave\b/,"sealed cave"],[/^((?:un)?)ma[urxkcs ]*t[io]me?(?: fight)?/,
"$1mark stom"],[/\b(bow|flute)\b/,"$1 of"],[/\bof( of)+\b/,"of"],[/ of$/,""]],fullClears$$module$js$tracker=new Map([["sealed cave",["sealed cave front","sealed cave back","vampire 1"]],["styx",["styx left","styx right"]],["oak",["oak elder","oak mother"]],["sabre west",["sabre west slope","sabre west","tornel"]],["sabre north",["sabre north","kelby 1","sabre summit"]],["waterfall cave",["waterfall cave","stone akahana"]],["fog lamp",["fog lamp front","fog lamp back"]],["kirisa plant",["kirisa cave",
"kirisa meadow"]],["karmine",["karmine basement","karmine","behind karmine","slime"]],["amazones",["aryllis","aryllis basement"]],["mado 2",["mado 2","mado 2 upper","mado 2 lower"]],["pyramid",["pyramid","draygon"]],["hydra",["hydra front","hydra back","hydra summit"]],["sabera 1",["sabera fortress left","sabera fortress right","vampire 2","sabera 1","clark"]],["oasis cave",["oasis cave","oasis cave flight","oasis cave center"]],["sabera 2",["sabera 2","sabera 2 level"]]]),SLOTS$$module$js$tracker=
[[0,121,192,"leaf elder","sword of wind"],[1,274,176,"oak elder","sword of fire"],[2,335,123,"waterfall cave","sword of water"],[3,77,10,"styx left","sword of thunder"],[5,89,107,"sealed cave front","ball of wind"],[6,115,224,"sabre west slope","tornado bracelet"],[7,282,187,"insect","ball of fire"],[8,47,182,"kelby 1","flame bracelet"],[9,251,232,"rage","ball of water"],[10,206,249,"aryllis basement","blizzard bracelet"],[11,83,63,"mado 1","ball of thunder"],[12,23,9,"behind karmine","storm bracelet"],
[18,49,48,"mado 2","sacred shield"],[20,77,2,"styx right","psycho shield"],[118,70,3,"styx right"],[119,84,3,"styx right"],[27,168,96,"oasis cave flight","battle armor"],[28,199,110,"draygon","psycho armor"],[29,82,95,"sealed cave back"],[30,82,101,"sealed cave back"],[31,346,147,"fog lamp front"],[112,346,153,"fog lamp front"],[113,346,159,"fog lamp front"],[32,126,52,"hydra front"],[33,227,97,"sabera fortress left"],[34,256,73,"evil spirit island"],[35,58,115,"sabera 2"],[36,82,113,"sealed cave front"],
[37,189,180,"cordel grass","statue of onyx"],[38,18,172,"kelby 2"],[39,267,185,"oak mother","insect flute"],[40,275,147,"portoa queen","flute of lime"],[41,147,206,"akahana","gas mask"],[42,172,104,"oasis cave center","power ring"],[43,203,5,"brokahana","warrior ring"],[44,249,69,"evil spirit island","iron necklace"],[45,191,110,"deo","deos pendant"],[46,89,99,"vampire 1","rabbit boots"],[47,164,104,"oasis cave","leather boots"],[48,319,123,"stone akahana","shield ring"],[114,320,130,"waterfall cave"],
[50,105,94,"windmill guard","windmill key"],[51,64,198,"sabre north","key 2 prison"],[52,83,71,"zebu","key 2 styx"],[53,345,140,"fog lamp back","fog lamp"],[54,301,119,"dolphin","shell flute"],[55,233,118,"clark","eye glasses"],[56,234,88,"sabera 1","broken statue"],[57,295,92,"lighthouse","glowing lamp"],[58,234,49,"altar","statue of gold"],[59,274,117,"channel","love pendant"],[60,338,226,"kirisa meadow","kirisa plant"],[61,23,17,"karmine","ivory statue"],[62,206,241,"aryllis","bow of moon"],[63,
101,6,"hydra summit","bow of sun"],[64,207,110,"draygon","bow of truth"],[65,92,117,"windmill","refresh"],[66,279,126,"sabre summit","paralysis"],[67,202,138,"stom","telepathy"],[68,124,202,"tornel","teleport"],[69,304,128,"asina","recover"],[70,248,35,"whirlpool","barrier"],[71,277,3,"swan","change"],[72,15,25,"slime","flight"],[80,82,107,"sealed cave front"],[82,134,219,"sabre west"],[83,59,219,"sabre north"],[84,52,55,"mado 2 upper"],[85,241,97,"sabera fortress right"],[86,123,23,"hydra front"],
[116,115,3,"hydra back"],[87,70,9,"styx left"],[117,84,9,"styx left"],[88,32,38,"karmine basement"],[121,32,16,"karmine basement"],[122,40,16,"karmine basement"],[123,40,38,"karmine basement"],[90,161,97,"fortress exit"],[16,327,123,"waterfall cave"],[92,256,79,"evil spirit island"],[93,36,139,"sabera 2 level"],[94,14,229,"sabre north"],[95,345,225,"kirisa cave"],[96,18,94,"mado 2 upper"],[97,234,96,"vampire 2"],[98,18,118,"sabera 2 level"],[99,36,54,"mado 2 upper"],[100,175,97,"oasis cave"],[101,
139,40,"hydra back"],[102,66,160,"sabera 2 level"],[105,131,201,"sabre west"],[106,76,226,"sabre west"],[107,18,100,"mado 2 upper"],[108,193,103,"pyramid"],[120,199,103,"crypt"],[109,205,103,"crypt"],[115,256,67,"evil spirit island"],[110,24,38,"karmine basement"],[111,44,97,"mado 2 lower"]],KEY$$module$js$tracker=new Set([16,18,35,38,97]),TRADES$$module$js$tracker=new Set([41,62,68,71,72]);
class Graph$$module$js$tracker{constructor(a,b,c){this.rom=a;this.world=b;this.flags=c;this.slots=new Map;this.items=new Map;this.slotElts=new Map;this.has=new Set;this.tracks=new Map;this.marks=new Map;this.voice=!1;window.GRAPH=this;this.graph=b.getLocationList();this.grid=document.getElementsByClassName("grid")[0];this.map=document.getElementsByClassName("map")[0];a=new DefaultMap$$module$js$util(()=>new Set);for(const b of this.graph.requirements){const [c,d]=b;for(const b of d)for(const d of b)a.get(d).add(c)}this.unlocks=
new Map([...a].map((a)=>{var [b,c]=a;return[b,[...c]]}));this.grid.addEventListener("click",(a)=>{let b=a.target;for(;b&&!b.dataset.slot;)b=b.parentElement;b&&(this.toggle(b),a.preventDefault())})}toggle(a,b){const c=Number(a.dataset.slot);b=a.classList.toggle("got",b);a.dataset.item&&(b?this.has.add(c):this.has.delete(c));this.update()}addSlot(a,b,c,...d){const e=document.createElement("div");var f=this.rom.itemGets[a];if((f=f&&this.rom.items[f.itemId])&&f.unique||KEY$$module$js$tracker.has(a))e.classList.add("key"),
b--,c--;b--;c--;e.dataset.slot=String(a);e.style.left=b+"px";e.style.top=c+"px";b=document.createElement("div");e.appendChild(b);b.textContent=d[0];this.flags.randomizeTrades()&&TRADES$$module$js$tracker.has(a)&&e.classList.add("boss");this.slotElts.set(a,e);for(const b of d)a=this.marks.get(b),null==a&&this.marks.set(b,a=[]),a.push(e);this.map.appendChild(e)}addItem(a,b,...c){b=Number.parseInt(b.substring(1),16);const d=document.getElementsByClassName(a)[0],e=document.createElement("div");d.appendChild(e);
d.dataset.slot=String(b);d.dataset.item=String(b);this.tracks.set(a.replace(/-/g," "),d);for(const a of c)this.tracks.set(a.replace(/-/g," "),d)}addExtraFlags(){}update(){for(var a of this.slotElts.values())a.dataset.state=a.classList.contains("got")?"":"blocked";a=this.traverse();for(const b of a)256===(b&-128)&&(a=this.slotElts.get(b&255))&&!a.classList.contains("got")&&(a.dataset.state="available")}traverse(){const a=new Set([...this.has].map((a)=>a|512)),b=new Set,c=new Set,d=new Set(this.graph.requirements.keys());
for(const f of d)if(d.delete(f),!b.has(f)){var e=this.graph.requirements.get(f);for(const g of e)if(containsAll$$module$js$tracker(a,g)){b.add(f);e=[];256===(f&-128)?c.add(f&255):(isItem$$module$js$tracker(f)&&e.push(f&255),a.add(f));for(const b of a)for(const a of this.unlocks.get(b)||[]){if(!this.graph.requirements.has(a))throw console.dir(this),Error(`Adding bad node ${a} from unlock ${b}`);d.add(a)}break}}return b}addVoiceRecognition(a){try{const b=this.recognition=new SpeechRecognition,c=new SpeechGrammarList;
c.addFromString(`
          #JSGF V1.0;
          grammar command;
          public <item> = ${[...this.tracks.keys()].join(" | ")};
          public <check> = ${[...this.marks.keys()].join(" | ")};
          public <clear> = <check> | ${[...fullClears$$module$js$tracker.keys()].join(" | ")};
          public <command> = track <item> | untrack <item> | mark <check> | unmark <check> | clear <clear> | stop listening;
      `,1);b.lang="en-US";b.grammars=c;b.interimResults=!1;b.maxAlternatives=10;b.onstart=()=>{this.voice=!0};b.onresult=(c)=>{const d=new Set;var f=c.results[c.results.length-1];if(f.isFinal){c=!1;for(var g of f){let b=g.transcript.toLowerCase().replace(/[^a-z ]/g,"");d.add(b);"stop listening"===b&&(c=!0,this.voice=!1,a());for(const a of voiceReplacements$$module$js$tracker){const [c,e]=a;b=b.replace(c,e);d.add(b)}if(f=/^(track|untrack|clear|unclear|full clear) (.*)/.exec(b)){if(f[1].endsWith("track")){var h=
this.tracks.get(f[2]);if(!h)continue;this.toggle(h,!f[1].startsWith("un"))}else if(f[1].endsWith("clear")){h=fullClears$$module$js$tracker.get(f[2]);if(!h){if(!this.marks.has(f[2]))continue;h=[f[2]]}for(const a of h)for(const b of this.marks.get(a))b.classList.toggle("got",!f[1].startsWith("un"))}c=!0;break}if(f=/^(?:un)?mark(?: (\d+)(?: che(?:st|ck)s?)?(?: in))? (.*)/.exec(b))if(h=this.marks.get(f[2]),f=Number(f[1]||"1"),h&&f){g=!b.startsWith("un");for(const a of h)if(a.classList.contains("got")!==
g&&(a.classList.toggle("got",g),0===--f))break;c=!0;break}}c||console.log(`No match: ${[...d].join(", ")}`);b.stop()}};b.onend=()=>{this.voice&&b.start()};return!0}catch(b){return console.error(b),!1}}startVoice(a){if(!this.recognition&&!this.addVoiceRecognition(a))return!1;this.voice=!0;this.recognition.start();return!0}stopVoice(){this.voice=!1;this.recognition&&this.recognition.stop()}}
function polyfill$$module$js$tracker(...a){const b=window;for(let c of a)if("function"===typeof b[c]){b[a[0]]=b[c];return}console.error(`Could not polyfill ${a[0]}`)}polyfill$$module$js$tracker("SpeechRecognition","webkitSpeechRecognition");polyfill$$module$js$tracker("SpeechGrammarList","webkitSpeechGrammarList");function isItem$$module$js$tracker(a){return 512===(a&-128)}function containsAll$$module$js$tracker(a,b){for(const c of b)if(!a.has(c))return!1;return!0}let flags$$module$js$tracker="@Casual";
for(const a of location.hash.substring(1).split("&")){const [b,c]=a.split("=");"flags"===b&&(flags$$module$js$tracker=decodeURIComponent(c))}function initItemGrants$$module$js$tracker(a){a.itemGets.actionGrants=new Map([[37,41],[57,58],[59,71],[60,62],[132,70],[178,66],[180,65]])}
function main$$module$js$tracker(){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const a=yield Rom$$module$js$rom.load(deterministicPreParse$$module$js$pass$deterministic);a.flags.defrag();initItemGrants$$module$js$tracker(a);const b=new FlagSet$$module$js$flagset(flags$$module$js$tracker);deterministic$$module$js$pass$deterministic(a,b);const c=new World$$module$js$logic$world(a,b,!0),d=new Graph$$module$js$tracker(a,c,b);for(let a of ITEMS$$module$js$tracker.split("\n"))(a=a.replace(/#.*/,
"").trim())&&d.addItem(...a.split(/ +/g));for(const a of SLOTS$$module$js$tracker)d.addSlot(...a);d.addExtraFlags();d.update();document.getElementById("toggle-map").addEventListener("click",()=>{d.map.classList.toggle("hidden")});document.getElementById("clear-all").addEventListener("click",()=>{for(const a of d.grid.querySelectorAll(".got"))a.classList.remove("got");d.has=new Set;d.update()});const e=document.getElementById("voice");e.addEventListener("click",()=>{d.voice?(d.stopVoice(),e.textContent=
"enable voice"):d.startVoice(()=>e.textContent="enable voice")?e.textContent="disable voice":e.textContent="voice recognition failed"});window.graph=d})}main$$module$js$tracker();var module$js$tracker={};
}).call(this)
