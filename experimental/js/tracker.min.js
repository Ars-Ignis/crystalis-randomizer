(function(){
const global=window;'use strict';var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(b){var a=0;return function(){return a<b.length?{done:!1,value:b[a++]}:{done:!0}}};$jscomp.arrayIterator=function(b){return{next:$jscomp.arrayIteratorImpl(b)}};$jscomp.makeIterator=function(b){var a="undefined"!=typeof Symbol&&Symbol.iterator&&b[Symbol.iterator];return a?a.call(b):$jscomp.arrayIterator(b)};
$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(b,a,c){b!=Array.prototype&&b!=Object.prototype&&(b[a]=c.value)};
$jscomp.polyfill=function(b,a,c,d){if(a){c=$jscomp.global;b=b.split(".");for(d=0;d<b.length-1;d++){var e=b[d];e in c||(c[e]={});c=c[e]}b=b[b.length-1];d=c[b];a=a(d);a!=d&&null!=a&&$jscomp.defineProperty(c,b,{configurable:!0,writable:!0,value:a})}};$jscomp.FORCE_POLYFILL_PROMISE=!1;$jscomp.SYMBOL_PREFIX="jscomp_symbol_";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};
$jscomp.Symbol=function(){var b=0;return function(a){return $jscomp.SYMBOL_PREFIX+(a||"")+b++}}();$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var b=$jscomp.global.Symbol.iterator;b||(b=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[b]&&$jscomp.defineProperty(Array.prototype,b,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}});$jscomp.initSymbolIterator=function(){}};
$jscomp.initSymbolAsyncIterator=function(){$jscomp.initSymbol();var b=$jscomp.global.Symbol.asyncIterator;b||(b=$jscomp.global.Symbol.asyncIterator=$jscomp.global.Symbol("asyncIterator"));$jscomp.initSymbolAsyncIterator=function(){}};$jscomp.iteratorPrototype=function(b){$jscomp.initSymbolIterator();b={next:b};b[$jscomp.global.Symbol.iterator]=function(){return this};return b};$jscomp.underscoreProtoCanBeSet=function(){var b={a:!0},a={};try{return a.__proto__=b,a.a}catch(c){}return!1};
$jscomp.setPrototypeOf="function"==typeof Object.setPrototypeOf?Object.setPrototypeOf:$jscomp.underscoreProtoCanBeSet()?function(b,a){b.__proto__=a;if(b.__proto__!==a)throw new TypeError(b+" is not extensible");return b}:null;$jscomp.generator={};$jscomp.generator.ensureIteratorResultIsObject_=function(b){if(!(b instanceof Object))throw new TypeError("Iterator result "+b+" is not an object");};
$jscomp.generator.Context=function(){this.isRunning_=!1;this.yieldAllIterator_=null;this.yieldResult=void 0;this.nextAddress=1;this.finallyAddress_=this.catchAddress_=0;this.finallyContexts_=this.abruptCompletion_=null};$jscomp.generator.Context.prototype.start_=function(){if(this.isRunning_)throw new TypeError("Generator is already running");this.isRunning_=!0};$jscomp.generator.Context.prototype.stop_=function(){this.isRunning_=!1};
$jscomp.generator.Context.prototype.jumpToErrorHandler_=function(){this.nextAddress=this.catchAddress_||this.finallyAddress_};$jscomp.generator.Context.prototype.next_=function(b){this.yieldResult=b};$jscomp.generator.Context.prototype.throw_=function(b){this.abruptCompletion_={exception:b,isException:!0};this.jumpToErrorHandler_()};$jscomp.generator.Context.prototype.return=function(b){this.abruptCompletion_={return:b};this.nextAddress=this.finallyAddress_};
$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks=function(b){this.abruptCompletion_={jumpTo:b};this.nextAddress=this.finallyAddress_};$jscomp.generator.Context.prototype.yield=function(b,a){this.nextAddress=a;return{value:b}};$jscomp.generator.Context.prototype.yieldAll=function(b,a){b=$jscomp.makeIterator(b);var c=b.next();$jscomp.generator.ensureIteratorResultIsObject_(c);if(c.done)this.yieldResult=c.value,this.nextAddress=a;else return this.yieldAllIterator_=b,this.yield(c.value,a)};
$jscomp.generator.Context.prototype.jumpTo=function(b){this.nextAddress=b};$jscomp.generator.Context.prototype.jumpToEnd=function(){this.nextAddress=0};$jscomp.generator.Context.prototype.setCatchFinallyBlocks=function(b,a){this.catchAddress_=b;void 0!=a&&(this.finallyAddress_=a)};$jscomp.generator.Context.prototype.setFinallyBlock=function(b){this.catchAddress_=0;this.finallyAddress_=b||0};$jscomp.generator.Context.prototype.leaveTryBlock=function(b,a){this.nextAddress=b;this.catchAddress_=a||0};
$jscomp.generator.Context.prototype.enterCatchBlock=function(b){this.catchAddress_=b||0;b=this.abruptCompletion_.exception;this.abruptCompletion_=null;return b};$jscomp.generator.Context.prototype.enterFinallyBlock=function(b,a,c){c?this.finallyContexts_[c]=this.abruptCompletion_:this.finallyContexts_=[this.abruptCompletion_];this.catchAddress_=b||0;this.finallyAddress_=a||0};
$jscomp.generator.Context.prototype.leaveFinallyBlock=function(b,a){a=this.finallyContexts_.splice(a||0)[0];if(a=this.abruptCompletion_=this.abruptCompletion_||a){if(a.isException)return this.jumpToErrorHandler_();void 0!=a.jumpTo&&this.finallyAddress_<a.jumpTo?(this.nextAddress=a.jumpTo,this.abruptCompletion_=null):this.nextAddress=this.finallyAddress_}else this.nextAddress=b};$jscomp.generator.Context.prototype.forIn=function(b){return new $jscomp.generator.Context.PropertyIterator(b)};
$jscomp.generator.Context.PropertyIterator=function(b){this.object_=b;this.properties_=[];for(var a in b)this.properties_.push(a);this.properties_.reverse()};$jscomp.generator.Context.PropertyIterator.prototype.getNext=function(){for(;0<this.properties_.length;){var b=this.properties_.pop();if(b in this.object_)return b}return null};$jscomp.generator.Engine_=function(b){this.context_=new $jscomp.generator.Context;this.program_=b};
$jscomp.generator.Engine_.prototype.next_=function(b){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_.next,b,this.context_.next_);this.context_.next_(b);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.return_=function(b){this.context_.start_();var a=this.context_.yieldAllIterator_;if(a)return this.yieldAllStep_("return"in a?a["return"]:function(a){return{value:a,done:!0}},b,this.context_.return);this.context_.return(b);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.throw_=function(b){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_["throw"],b,this.context_.next_);this.context_.throw_(b);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.yieldAllStep_=function(b,a,c){try{var d=b.call(this.context_.yieldAllIterator_,a);$jscomp.generator.ensureIteratorResultIsObject_(d);if(!d.done)return this.context_.stop_(),d;var e=d.value}catch(f){return this.context_.yieldAllIterator_=null,this.context_.throw_(f),this.nextStep_()}this.context_.yieldAllIterator_=null;c.call(this.context_,e);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.nextStep_=function(){for(;this.context_.nextAddress;)try{var b=this.program_(this.context_);if(b)return this.context_.stop_(),{value:b.value,done:!1}}catch(a){this.context_.yieldResult=void 0,this.context_.throw_(a)}this.context_.stop_();if(this.context_.abruptCompletion_){b=this.context_.abruptCompletion_;this.context_.abruptCompletion_=null;if(b.isException)throw b.exception;return{value:b.return,done:!0}}return{value:void 0,done:!0}};
$jscomp.generator.Generator_=function(b){this.next=function(a){return b.next_(a)};this.throw=function(a){return b.throw_(a)};this.return=function(a){return b.return_(a)};$jscomp.initSymbolIterator();this[Symbol.iterator]=function(){return this}};$jscomp.generator.createGenerator=function(b,a){a=new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(a));$jscomp.setPrototypeOf&&$jscomp.setPrototypeOf(a,b.prototype);return a};
$jscomp.asyncExecutePromiseGenerator=function(b){function a(a){return b.next(a)}function c(a){return b.throw(a)}return new Promise(function(d,e){function f(b){b.done?d(b.value):Promise.resolve(b.value).then(a,c).then(f,e)}f(b.next())})};$jscomp.asyncExecutePromiseGeneratorFunction=function(b){return $jscomp.asyncExecutePromiseGenerator(b())};$jscomp.asyncExecutePromiseGeneratorProgram=function(b){return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(b)))};
$jscomp.checkStringArgs=function(b,a,c){if(null==b)throw new TypeError("The 'this' value for String.prototype."+c+" must not be null or undefined");if(a instanceof RegExp)throw new TypeError("First argument to String.prototype."+c+" must not be a regular expression");return b+""};$jscomp.stringPadding=function(b,a){b=void 0!==b?String(b):" ";return 0<a&&b?b.repeat(Math.ceil(a/b.length)).substring(0,a):""};
$jscomp.polyfill("String.prototype.padStart",function(b){return b?b:function(a,b){var c=$jscomp.checkStringArgs(this,null,"padStart");return $jscomp.stringPadding(b,a-c.length)+c}},"es8","es3");$jscomp.iteratorFromArray=function(b,a){$jscomp.initSymbolIterator();b instanceof String&&(b+="");var c=0,d={next:function(){if(c<b.length){var e=c++;return{value:a(e,b[e]),done:!1}}d.next=function(){return{done:!0,value:void 0}};return d.next()}};d[Symbol.iterator]=function(){return d};return d};
$jscomp.polyfill("Array.prototype.values",function(b){return b?b:function(){return $jscomp.iteratorFromArray(this,function(a,b){return b})}},"es8","es3");$jscomp.polyfill("String.prototype.padEnd",function(b){return b?b:function(a,b){var c=$jscomp.checkStringArgs(this,null,"padStart");return c+$jscomp.stringPadding(b,a-c.length)}},"es8","es3");
$jscomp.polyfill("Array.prototype.includes",function(b){return b?b:function(a,b){var c=this;c instanceof String&&(c=String(c));var e=c.length;b=b||0;for(0>b&&(b=Math.max(b+e,0));b<e;b++){var f=c[b];if(f===a||Object.is(f,a))return!0}return!1}},"es7","es3");const LOG$$module$js$6502=!0;
class Assembler$$module$js$6502{constructor(){this.labels={};this.allChunks=[]}assemble(b,a="input"){a=new File$$module$js$6502(this.labels,a);for(const c of b.split("\n"))a.ingest(c);b=a.assemble();this.allChunks.push(...b)}chunks(){return[...this.allChunks]}patch(){return Patch$$module$js$6502.from(this.allChunks)}patchRom(b){buildRomPatch$$module$js$6502(this.patch()).apply(b);this.allChunks=[]}expand(b){const [a,...c]=this.labels[b]||[];if(null==a)throw Error(`Missing label: ${b}`);if(c.length)throw Error(`Non-unique label: ${b}`);
return 0>a?~a:a}}
class File$$module$js$6502{constructor(b,a){this.labels=b;this.lines=[];this.pc=0;this.filename=a;this.lineNumber=-1;this.lineContents="";this.conditions=[];this.assembling=!0}addLine(b){this.lines.push(b.orig(this.filename,this.lineNumber,this.lineContents))}addLabel(b,a){if("number"!==typeof a)throw Error("Expected a number");b=this.labels[b]||(this.labels[b]=[]);const c=find$$module$js$6502(b,a);0>c&&b.splice(~c,0,a)}ingest(b){this.lineNumber++;this.lineContents=b;b=b.replace(/;.*/,"");b=b.replace(/\s+/g,
" ");b=b.replace(/\s$/g,"");var a;if(a=/^\s*\.if(n?)def\s+(\S+)/i.exec(b))b=a[2]in this.labels,this.conditions.push(a[1]?!b:b),this.assembling=this.conditions.every((a)=>a);else if(a=/^\s*\.else/i.exec(b))this.conditions.push(!this.conditions.pop()),this.assembling=this.conditions.every((a)=>a);else if(a=/^\s*\.endif/i.exec(b))this.conditions.pop(),this.assembling=this.conditions.every((a)=>a);else if(this.assembling)if(a=/^\s*\.org\s+(\S+)/i.exec(b))this.addLine(new OrgLine$$module$js$6502(this.pc=
parseNumber$$module$js$6502(a[1])));else if(a=/^\s*\.assert\s+(<\s*)?(\S+)/i.exec(b))this.addLine(new AssertLine$$module$js$6502(this.pc=parseNumber$$module$js$6502(a[2]),!a[1]));else if(a=/^\s*\.bank\s+(\S+)\s+(\S+)\s*:\s*(\S+)/i.exec(b)){const [,b,c,f]=a;this.addLine(new BankLine$$module$js$6502(parseNumber$$module$js$6502(b),parseNumber$$module$js$6502(c),parseNumber$$module$js$6502(f)))}else if(a=/^\s*\.(byte|word)\s+(.*)/i.exec(b))a=("word"==a[1]?WordLine$$module$js$6502:ByteLine$$module$js$6502).parse(a[2]),
this.addLine(a),this.pc+=a.size();else if(a=/^\s*\.res\s+([^,]+)(?:,\s*(.+))?/i.exec(b))a=ByteLine$$module$js$6502.parseRes(parseNumber$$module$js$6502(a[1]),parseNumber$$module$js$6502(a[2]||0)),this.addLine(a),this.pc+=a.size();else if(a=/^define\s+(\S+)\s+(.*)/.exec(b))this.addLabel(a[1],parseNumber$$module$js$6502(a[2]));else{if(a=/^(\S+?):(.*)$/.exec(b)){var c=a[1];b=" "+a[2];this.addLabel(c,~this.pc)}else if(a=/^((?:[-+]+\s+)+)(.*)$/.exec(b)){b=a[1];for(c of b.trim().split(" "))this.addLabel(c,
~this.pc);b=" "+a[2]}if(a=/^\s+([a-z]{3})(\s+.*)?$/.exec(b))a=new Opcode$$module$js$6502(a[1],(a[2]||"").trim(),this.pc),this.addLine(a),this.pc+=a.size();else if(/\S/.test(b))throw Error(`Could not parse line ${b} at ${this.filename}:${this.lineNumber}`);}}assemble(){var b=new Context$$module$js$6502(this.labels),a=[];const c=[],d=(a,b)=>{throw Error(`Collision at $${b.toString(16)}:\n  written at ${c[b].source()}\n  written at ${a.source()}`);};for(var e of this.lines){try{e.expand(b)}catch(g){throw a=
g.stack.replace(`Error: ${g.message}`,""),Error(`${g.message}${` from line ${e.origLineNumber+1}: \`${e.origContent}\``}${a}\n================`);}e instanceof OrgLine$$module$js$6502&&null!=a[e.pc]&&d(e,e.pc);for(const f of e.bytes())null!=a[b.pc]&&d(e,b.pc),c[b.pc]=e,a[b.pc++]=f}b=[];for(var f in a)f-1 in a||b.push(Number(f));e=[];for(const c of b){f=[];for(b=c;b in a;b++)f.push(a[b]);e.push(new Chunk$$module$js$6502(c,f))}if(this.conditions.length)throw Error("Unterminated .if");return e}}
class AbstractLine$$module$js$6502{orig(b,a,c){this.origFile=b;this.origLineNumber=a;this.origContent=c;return this}expand(){throw Error(`abstract: ${this.constructor}`);}bytes(){throw Error(`abstract: ${this.constructor}`);}source(){return`${this.origFile}:${this.origLineNumber+1}  ${this.origContent}`}}
class ByteLine$$module$js$6502 extends AbstractLine$$module$js$6502{static parse(b){const a=[];for(let c of b.split(","))c=c.trim(),(b=/^"(.*)"$/.exec(c))?a.push(...[...b[1]].map((a)=>a.charCodeAt(0))):a.push(parseNumber$$module$js$6502(c));return new ByteLine$$module$js$6502(a)}static parseRes(b,a){console.log(`res ${b}, ${a}`);return new ByteLine$$module$js$6502(Array(b).fill(a))}constructor(b){super();this.bytes_=b}bytes(){return[...this.bytes_]}size(){return this.bytes_.length}expand(){}}
class WordLine$$module$js$6502 extends AbstractLine$$module$js$6502{static parse(b){const a=[];for(let c of b.split(","))c=c.trim(),c=c.replace(/[()]/g,""),a.push(parseNumber$$module$js$6502(c,!0));return new WordLine$$module$js$6502(a)}constructor(b){super();this.words=b}bytes(){const b=[];for(const a of this.words)b.push(a&255),b.push(a>>>8);return b}size(){return 2*this.words.length}expand(b){for(let a=0;a<this.words.length;a++)"string"==typeof this.words[a]&&(this.words[a]=b.map(this.words[a]))}}
class OrgLine$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(b){super();this.pc=b}bytes(){return[]}size(){return 0}expand(b){b.pc=this.pc}}
class AssertLine$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(b,a){super();this.pc=b;this.exact=a}bytes(){return[]}size(){return 0}expand(b){if(this.exact?b.pc!=this.pc:b.pc>this.pc)throw Error(`Misalignment: expected ${this.exact?"":"< "}$${this.pc.toString(16)} but was $${b.pc.toString(16)}`);!this.exact&&LOG$$module$js$6502&&console.log(`Free: ${this.pc-b.pc} bytes between $${b.pc.toString(16)} and $${this.pc.toString(16)}`)}}
class BankLine$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(b,a,c){super();this.prg=b;this.cpu=a;this.length=c}bytes(){return[]}size(){return 0}expand(b){b.updateBank(this.prg,this.cpu,this.length)}}
class Context$$module$js$6502{constructor(b){this.pc=0;this.labels=b;this.cpuToPrg=[];this.prgToCpu=[]}updateBank(b,a,c){for(var d=0;d<c;d++){var e=a+d,f=this.cpuToPrg[e];null!=f&&(this.prgToCpu[f]=null,this.cpuToPrg[e]=null)}for(d=0;d<c;d++)e=a+d,f=b+d,this.prgToCpu[f]=e,this.cpuToPrg[e]=f}mapLabel(b,a){let c=this.labels[b];if(!c)throw Error(`Label not found: ${b}`);if(null==a){if(1<c.length)throw Error(`Ambiguous label: ${b}`);return c[0]}a=~(a+2);const d=find$$module$js$6502(c,a);if(0<=d)return c[d];
if(-1==d)return c[0];if(d==~c.length)return c[c.length-1];c=c.slice(~d-1,~d+1);return b.startsWith("-")?c[1]:b.startsWith("+")?c[0]:a<(c[0]+c[1])/2?c[0]:c[1]}mapPrgToCpu(b){const a=this.prgToCpu[b];if(null==a)throw Error(`PRG address unmapped: $${b.toString(16)}`);return a}map(b,a=void 0){if(null==b)return b;"string"==typeof b&&(b=this.mapLabel(b,a));0>b&&(b=this.mapPrgToCpu(~b));return b}}
class Chunk$$module$js$6502 extends Uint8Array{constructor(b,a){super(a.length);this.set(a);this.start=b}apply(b){b.subarray(this.start,this.start+this.length).set(this)}shift(b){return new Chunk$$module$js$6502(this.start+b,this)}}
class Patch$$module$js$6502{static from(b){const a=[];var c=8;new Set;for(var d of b)b=new Uint8Array(d.length+5),b[0]=d.start>>>16,b[1]=d.start>>>8&255,b[2]=d.start&255,b[3]=d.length>>>8,b[4]=d.length&255,b.set(d,5),a.push(b),c+=b.length;c=new Uint8Array(c);d=5;c[0]=80;c[1]=65;c[2]=84;c[3]=67;c[4]=72;for(const b of a)c.subarray(d,d+b.length).set(b),d+=b.length;c[d]=69;c[d+1]=79;c[d+2]=70;return new Patch$$module$js$6502(c)}constructor(b){this.data=b}apply(b){for(const a of this)a.apply(b)}*[Symbol.iterator](){let b=
5;for(;b<this.data.length-3;){const a=this.data[b+3]<<8|this.data[b+4];yield new Chunk$$module$js$6502(this.data[b]<<16|this.data[b+1]<<8|this.data[b+2],this.data.subarray(b+5,b+5+a));b+=a+5}}toHexString(){return[...this.data].map((b)=>b.toString(16).padStart(2,0)).join("")}}
const assemble$$module$js$6502=(b,a="input")=>{a=new File$$module$js$6502({},a);let c=0;for(const d of b.split("\n"))c++,a.ingest(d);b=a.assemble();return Patch$$module$js$6502.from(b)},buildRomPatch$$module$js$6502=(b,a=void 0,c=void 0)=>{b=[...b].map((a)=>a.shift(16));a=[...a||[]].map((a)=>a.shift(16+c));return Patch$$module$js$6502.from([...b,...a])};
class Opcode$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(b,a,c){super();this.mnemonic=b;this.arg=mode$$module$js$6502(b,a);this.pc=c}size(){return 1+this.arg[1]}bytes(){let b=this.arg[2];if("Relative"==this.arg[0]&&(b-=this.pc+2,!(128>b&&-128<=b)))throw Error(`Too far to branch: ${b} at input:${this.origLineNumber}`);const a=[opcodes$$module$js$6502[this.mnemonic][this.arg[0]]];let c=this.arg[1];for(;c--;)a.push(b&255),b>>>=8;return a}expand(b){try{this.arg[2]=b.map(this.arg[2],
this.pc)}catch(a){throw console.error(this),a;}this.pc=b.map(~this.pc)}}const find$$module$js$6502=(b,a)=>{let c=0,d=b.length-1;if(0>d||a<b[0])return-1;var e=b[d];if(a==e)return d;if(a>e)return~b.length;for(;1<d-c;)e=c+d>>1,a<b[e]?d=e:c=e;return a==b[c]?c:~d},mode$$module$js$6502=(b,a)=>{for(const [d,e]of modes$$module$js$6502){var c=d.exec(a);if(c){c=e(c[1]);if(!(b in opcodes$$module$js$6502))throw Error(`Bad mnemonic: ${b}`);if(c[0]in opcodes$$module$js$6502[b])return c}}throw Error(`Could not find mode for ${b} ${a}
Expected one of [${Object.keys(opcodes$$module$js$6502[b]).join(", ")}]`);},modes$$module$js$6502=[[/^$/,()=>["Implied",0]],[/^#(.+)$/,(b)=>["Immediate",1,parseNumber$$module$js$6502(b,!0)]],[/^(\$..)$/,(b)=>["ZeroPage",1,parseNumber$$module$js$6502(b,!0)]],[/^(\$..),x$/,(b)=>["ZeroPageX",1,parseNumber$$module$js$6502(b,!0)]],[/^(\$..),y$/,(b)=>["ZeroPageY",1,parseNumber$$module$js$6502(b,!0)]],[/^\((\$..),x\)$/,(b)=>["PreindexedIndirect",1,parseNumber$$module$js$6502(b,!0)]],[/^\((\$..)\),y$/,(b)=>
["PostindexedIndirect",1,parseNumber$$module$js$6502(b,!0)]],[/^\((.+)\)$/,(b)=>["IndirectAbsolute",2,parseNumber$$module$js$6502(b,!0)]],[/^(.+),x$/,(b)=>["AbsoluteX",2,parseNumber$$module$js$6502(b,!0)]],[/^(.+),y$/,(b)=>["AbsoluteY",2,parseNumber$$module$js$6502(b,!0)]],[/^(.+)$/,(b)=>["Absolute",2,parseNumber$$module$js$6502(b,!0)]],[/^(.+)$/,(b)=>["Relative",1,parseNumber$$module$js$6502(b,!0)]]],parseNumber$$module$js$6502=(b,a=!1)=>{if(b.startsWith("$"))return Number.parseInt(b.substring(1),
16);if(b.startsWith("%"))return Number.parseInt(b.substring(1),2);if(b.startsWith("0"))return Number.parseInt(b,8);const c=Number.parseInt(b,10);if(!Number.isNaN(c))return c;if(a)return b;throw Error(`Bad number: ${b}`);},opcodes$$module$js$6502={adc:{Immediate:105,ZeroPage:101,ZeroPageX:117,Absolute:109,AbsoluteX:125,AbsoluteY:121,PreindexedIndirect:97,PostindexedIndirect:113},and:{Immediate:41,ZeroPage:37,ZeroPageX:53,Absolute:45,AbsoluteX:61,AbsoluteY:57,PreindexedIndirect:33,PostindexedIndirect:49},
asl:{Implied:10,ZeroPage:6,ZeroPageX:22,Absolute:14,AbsoluteX:30},bcc:{Relative:144},bcs:{Relative:176},beq:{Relative:240},bit:{ZeroPage:36,Absolute:44},bmi:{Relative:48},bne:{Relative:208},bpl:{Relative:16},brk:{Implied:0},bvc:{Relative:80},bvs:{Relative:112},clc:{Implied:24},cld:{Implied:216},cli:{Implied:88},clv:{Implied:184},cmp:{Immediate:201,ZeroPage:197,ZeroPageX:213,Absolute:205,AbsoluteX:221,AbsoluteY:217,PreindexedIndirect:193,PostindexedIndirect:209},cpx:{Immediate:224,ZeroPage:228,Absolute:236},
cpy:{Immediate:192,ZeroPage:196,Absolute:204},dec:{ZeroPage:198,ZeroPageX:214,Absolute:206,AbsoluteX:222},dex:{Implied:202},dey:{Implied:136},eor:{Immediate:73,ZeroPage:69,ZeroPageX:85,Absolute:77,AbsoluteX:93,AbsoluteY:89,PreindexedIndirect:65,PostindexedIndirect:81},inc:{ZeroPage:230,ZeroPageX:246,Absolute:238,AbsoluteX:254},inx:{Implied:232},iny:{Implied:200},jmp:{Absolute:76,IndirectAbsolute:108},jsr:{Absolute:32},lda:{Immediate:169,ZeroPage:165,ZeroPageX:181,Absolute:173,AbsoluteX:189,AbsoluteY:185,
PreindexedIndirect:161,PostindexedIndirect:177},ldx:{Immediate:162,ZeroPage:166,ZeroPageY:182,Absolute:174,AbsoluteY:190},ldy:{Immediate:160,ZeroPage:164,ZeroPageX:180,Absolute:172,AbsoluteX:188},lsr:{Implied:74,ZeroPage:70,ZeroPageX:86,Absolute:78,AbsoluteX:94},nop:{Implied:234},ora:{Immediate:9,ZeroPage:5,ZeroPageX:21,Absolute:13,AbsoluteX:29,AbsoluteY:25,PreindexedIndirect:1,PostindexedIndirect:17},pha:{Implied:72},php:{Implied:8},pla:{Implied:104},plp:{Implied:40},rol:{Implied:42,ZeroPage:38,
ZeroPageX:54,Absolute:46,AbsoluteX:62},ror:{Implied:106,ZeroPage:102,ZeroPageX:118,Absolute:110,AbsoluteX:126},rti:{Implied:64},rts:{Implied:96},sbc:{Immediate:233,ZeroPage:229,ZeroPageX:245,Absolute:237,AbsoluteX:253,AbsoluteY:249,PreindexedIndirect:225,PostindexedIndirect:241},sec:{Implied:56},sed:{Implied:248},sei:{Implied:120},sta:{ZeroPage:133,ZeroPageX:149,Absolute:141,AbsoluteX:157,AbsoluteY:153,PreindexedIndirect:129,PostindexedIndirect:145},stx:{ZeroPage:134,ZeroPageY:150,Absolute:142},sty:{ZeroPage:132,
ZeroPageX:148,Absolute:140},tax:{Implied:170},tay:{Implied:168},tsx:{Implied:186},txa:{Implied:138},txs:{Implied:154},tya:{Implied:152}};var module$js$6502={};module$js$6502.Assembler=Assembler$$module$js$6502;module$js$6502.assemble=assemble$$module$js$6502;module$js$6502.buildRomPatch=buildRomPatch$$module$js$6502;const Bits$$module$js$bits_bigint={},BitsBigInt$$module$js$bits_bigint=Bits$$module$js$bits_bigint;Bits$$module$js$bits_bigint.of=(...b)=>{let a=ZERO$$module$js$bits_bigint;for(const c of b)a|=ONE$$module$js$bits_bigint<<BigInt(c);return a};Bits$$module$js$bits_bigint.from=(b)=>{let a=ZERO$$module$js$bits_bigint;for(const c of b)a|=ONE$$module$js$bits_bigint<<BigInt(c);return a};Bits$$module$js$bits_bigint.containsAll=(b,a)=>!(a&~b);
Bits$$module$js$bits_bigint.with=(b,a)=>b|ONE$$module$js$bits_bigint<<BigInt(a);Bits$$module$js$bits_bigint.without=(b,a)=>b&~(ONE$$module$js$bits_bigint<<BigInt(a));Bits$$module$js$bits_bigint.has=(b,a)=>!!(b&ONE$$module$js$bits_bigint<<BigInt(a));Bits$$module$js$bits_bigint.bits=(b)=>{const a=[];let c=0;for(;b;){let d=Number(b&MAX_UINT32$$module$js$bits_bigint),e=32;for(;d;){const b=Math.clz32(d)+1;e-=b;d<<=b;32==b&&(d=0);a.push(c|e)}b>>=THIRTY_TWO$$module$js$bits_bigint;c+=32}return a};
Bits$$module$js$bits_bigint.clone=(b)=>b;Bits$$module$js$bits_bigint.empty=(b)=>!b;Bits$$module$js$bits_bigint.difference=(b,a)=>b&~a;
const BIGINT_OK$$module$js$bits_bigint="function"===typeof BigInt&&"bigint"===typeof BigInt(0),ZERO$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&BigInt(0),ONE$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&BigInt(1),MAX_UINT32$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&BigInt(4294967295),THIRTY_TWO$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&BigInt(32);var module$js$bits_bigint={};module$js$bits_bigint.BitsBigInt=Bits$$module$js$bits_bigint;
module$js$bits_bigint.BIGINT_OK=BIGINT_OK$$module$js$bits_bigint;const Bits$$module$js$bits_array={},BitsArray$$module$js$bits_array=Bits$$module$js$bits_array;Bits$$module$js$bits_array.of=(...b)=>{const a=[];for(const c of b)a[c>>>5]=(a[c>>>5]||0)|1<<c;return a};Bits$$module$js$bits_array.from=(b)=>{const a=[];for(const c of b)a[c>>>5]=(a[c>>>5]||0)|1<<c;return a};Bits$$module$js$bits_array.containsAll=(b,a)=>{for(let c=Math.max(b.length,a.length)-1;0<=c;c--)if((a[c]||0)&~(b[c]||0))return!1;return!0};
Bits$$module$js$bits_array.difference=(b,a)=>{const c=Array(Math.max(b.length,a.length));for(let d=Math.max(b.length,a.length)-1;0<=d;d--)c[d]=(b[d]||0)&~(a[d]||0);return c};Bits$$module$js$bits_array.with=(b,a)=>{b=[...b];b[a>>>5]=(b[a>>>5]||0)|1<<a;return b};Bits$$module$js$bits_array.without=(b,a)=>{b=[...b];b[a>>>5]=(b[a>>>5]||0)&~(1<<a);return b};Bits$$module$js$bits_array.has=(b,a)=>!!((b[a>>>5]||0)&1<<a);
Bits$$module$js$bits_array.bits=(b)=>{const a=[];for(let c=0;c<b.length;c++){let d=b[c],e=32;for(;d;){const b=Math.clz32(d)+1;e-=b;d<<=b;32==b&&(d=0);a.push(c<<5|e)}}return a};Bits$$module$js$bits_array.clone=(b)=>[...b];Bits$$module$js$bits_array.empty=(b)=>b.every((a)=>!a);var module$js$bits_array={};module$js$bits_array.BitsArray=Bits$$module$js$bits_array;const b$$module$js$bits=BIGINT_OK$$module$js$bits_bigint?Bits$$module$js$bits_bigint:Bits$$module$js$bits_array;class Bits$$module$js$bits{}Bits$$module$js$bits.of=b$$module$js$bits.of;Bits$$module$js$bits.from=b$$module$js$bits.from;Bits$$module$js$bits.containsAll=b$$module$js$bits.containsAll;Bits$$module$js$bits.with=b$$module$js$bits.with;Bits$$module$js$bits.without=b$$module$js$bits.without;Bits$$module$js$bits.has=b$$module$js$bits.has;Bits$$module$js$bits.bits=b$$module$js$bits.bits;
Bits$$module$js$bits.clone=b$$module$js$bits.clone;Bits$$module$js$bits.empty=b$$module$js$bits.empty;Bits$$module$js$bits.difference=b$$module$js$bits.difference;var module$js$bits={};module$js$bits.Bits=Bits$$module$js$bits;let table$$module$js$crc32;const buildTable$$module$js$crc32=()=>{let b;const a=Array(256);for(let c=0;256>c;c++){b=c;for(let a=0;8>a;a++)b=b&1?3988292384^b>>>1:b>>>1;a[c]=b}return a},crc32$$module$js$crc32=(b)=>{table$$module$js$crc32||(table$$module$js$crc32=buildTable$$module$js$crc32());let a=-1;for(let c=0;c<b.length;c++)a=a>>>8^table$$module$js$crc32[(a^b[c])&255];return(a^-1)>>>0};var module$js$crc32={};module$js$crc32.crc32=crc32$$module$js$crc32;const REPEATABLE_FLAGS$$module$js$flagset=new Set(["S"]),PRESETS$$module$js$flagset=[{title:"Casual",flags:"Ds Emrx Mr Rp Sbk Sc Sm Tasdw",descr:"Basic flags for a relatively easy playthrough."},{title:"Intermediate",flags:"Ds Em Fs Gt Mr Pbns Rlpt Sbkm Sct Tasdw",descr:"Slightly more challenge than Casual but still approachable.",default:!0},{title:"Full Shuffle",flags:"Em Fs Gt Mr Pbns Rlpt Sbckmt Tasdw",descr:"Intermediate flags with full shuffle and no spoiler log."},{title:"Advanced",flags:"Fs Gfprt Hbw Mr Pbns Rlpt Sbckt Sm Tasdw",
descr:"A balanced randomization with quite a bit more difficulty."},{title:"Ludicrous",flags:"Fs Gfprstw Hbgmswx Mr Pbns Rlpt Sbckmt Tas",descr:"Pulls out all the stops, may require superhuman feats."}],FLAGS$$module$js$flagset=[{section:"Items",text:"Items are broken into five pools: <i>key items</i> includes all\n      swords, orbs, bracelets, and progression items (rabbit boots,\n      gas mask, and all items in the third row: windmill key through\n      bow of truth), as well as anything dropped by a boss (one each\n      of fruit of power, opel statue, fruit of repun, sacred shield,\n      and psycho armor); <i>bonus items</i> includes items that are\n      never required but are nice to have, specifically the remaining\n      six passive effect items in the second inventory row;\n      <i>consumable items</i> includes everything else found in\n      chests: primarily first row one-use items, but also includes\n      psycho shield and battle armor; <i>magic</i> is the eight\n      spells; and <i>traps</i> are the 12 trap chests found in various\n      places. These pools can be shuffled together, kept separate, or\n      left unshuffled.",
flags:[{flag:"Sk",name:"Shuffle key items"},{flag:"Sm",name:"Shuffle magics"},{flag:"Sb",name:"Shuffle bonus items"},{flag:"Sc",name:"Shuffle consumables"},{flag:"Sbk",name:"Shuffle key items with bonus items"},{flag:"Sbm",name:"Shuffle bonus items with magic"},{flag:"Sbt",name:"Shuffle bonus items with traps"},{flag:"Sct",name:"Shuffle consumables with traps"},{flag:"Skm",name:"Shuffle key items with magic"},{flag:"Skt",name:"Shuffle key items with traps"},{flag:"Sbkm",name:"Shuffle bonus, key, and magic"},
{flag:"Sbc",hard:!0,name:"Shuffle bonus items with consumables"},{flag:"Sck",hard:!0,name:"Shuffle consumables with key items"},{flag:"Scm",hard:!0,name:"Shuffle consumables with magic"},{flag:"Sbck",hard:!0,name:"Shuffle bonus, consumables, and key items"},{flag:"Sbct",hard:!0,name:"Shuffle bonus, consumables, and traps"},{flag:"Sbkt",hard:!0,name:"Shuffle bonus, key, and traps"},{flag:"Skmt",hard:!0,name:"Shuffle key, magic, and traps"},{flag:"Sbckm",hard:!0,name:"Shuffle bonus, key, consumables, and magic"},
{flag:"Sbckt",hard:!0,name:"Shuffle bonus, key, consumables, and traps"},{flag:"Sbkmt",hard:!0,name:"Shuffle bonus, key, magic, and traps"},{flag:"Sbckmt",hard:!0,name:"Shuffle all items and traps together"}]},{section:"Monsters",flags:[{flag:"Mr",name:"Randomize monsters",text:"Monster locations are shuffled, with the exception of sea creatures\n           and tower robots."}]},{section:"Shops",text:"Disabling shop glitch (Fs) is highly recommended when using these flags.\n         Currently selecting any shop flag will enable normalization (Pn).",
flags:[{flag:"Ps",name:"Shuffle shop contents"},{flag:"Pn",name:"Normalize shop prices",text:"Shop prices are normalized via the scaling level.  Prices at tool\n           shops and inns double every 10 scaling levels, while prices at\n           armor shops halve every 12 scaling levels."},{flag:"Pb",name:'Enable "bargain hunting"',text:"Base prices may vary \u00b150% for the same item at different; inn prices\n           may vary \u00b162.5%."}]},{section:"Hard mode",flags:[{flag:"Hw",hard:!0,name:"Battle magic not guaranteed",
text:"Normally, the logic will guarantee that level 3 sword charges are\n           available before fighting the tetrarchs (with the exception of Karmine,\n           who only requires level 2).  This disables that check."},{flag:"Hb",hard:!0,name:"Barrier not guaranteed",text:"Normally, the logic will guarantee Barrier (or else refresh and shield\n           ring) before entering Stxy, the Fortress, or fighting Karmine.  This\n           disables that check."},{flag:"Hm",hard:!0,name:"Don't buff medical herb or fruit of power",
text:"Medical Herb is not buffed to heal 64 damage, which is helpful to make\n           up for cases where Refresh is unavailable early.  Fruit of Power is not\n           buffed to restore 48 MP."},{flag:"Hg",hard:!0,name:"Gas mask not guaranteed",text:"The logic will not guarantee gas mask before needing to enter the swamp.\n           Gas mask is still guaranteed to kill the insect."},{flag:"Hs",hard:!0,name:"Matching sword not guaranteed",text:"Player may be required to fight bosses with the wrong sword."},
{flag:"Hx",hard:!0,name:"Experience scales slower",text:'More grinding will be required to "keep up" with the difficulty.'}]},{section:"Tweaks",flags:[{flag:"Ta",name:"Automatically equip orbs and bracelets",text:"Adds a quality-of-life improvement to automatically equip the\n           corresponding orb/bracelet whenever changing swords."},{flag:"Ts",name:"Leather boots are speed boots",text:"Wearing leather boots increases player walking speed.  Note that this also\n           includes a slight change to routing logic, since speed boots will allow\n           climbing the slope in Mt. Sabre West to reach the Tornado Bracelet chest."},
{flag:"Td",name:"Deo's pendant works while moving"},{flag:"Tr",name:"Rabbit boots charge sword faster"},{flag:"Tw",name:"Disable wild warp",text:"Wild warp will only teleport back to Mezame shrine (to prevent\n           game-breaking soft-locks)."}]},{section:"Routing",flags:[{flag:"Rt",name:"Sword of Thunder teleports to Shyron",text:"Normally when acquiring the thunder sword, the player is instantly\n           teleported to Shyron. This flag maintains that behavior regardless of\n           where it is found (immediately activating the warp point; talking\n           to Asina will teleport back to the start, in case no other means of\n           return is available).  Disabling this flag means that the Sword of\n           Thunder will act like all other items and not teleport."},
{flag:"Rd",name:"Require healing dolphin to return fog lamp",text:"Normally the fog lamp cannot be returned without healing the dolphin\n           to acquire the shell flute (so as not to be stranded).  Continuity\n           suggests that actually healing the dolphin should also be required,\n           but we've found that this makes the dolphin a lot less useful.  By\n           default the fog lamp can be returned before healing the dolphin.  This\n           flag adds the extra requirement for better continuity."},
{flag:"Rp",name:"Wind-waterfall passage",text:"Opens a passage between Valley of Wind (lower right side) and\n           Lime Tree Valley."},{flag:"Rl",name:'No "free lunch" magic',text:'Disables "free lunch" magics that only require stepping on a square to\n           learn (specifally Barrier, TODO: Paralysis).  Instead, Barrier requires\n           the seas to be calmed, and Paralysis will (once implemented) require the\n           prison door to have been opened.'}]},{section:"Glitches",text:"The routing logic can be made aware of the following\n      glitches.  If selected, it will assume that the glitch can be\n      performed when verifying that a game is winnable.  Enabling\n      these glitches tends to increase the randomness of the shuffle,\n      since there are more valid options.",
flags:[{flag:"Gc",hard:!0,name:"Sword charge glitch may be required",text:"Progression may require using the sword charge glitch to destroy walls or\n           form bridges without actually possessing the correct orb."},{flag:"Gf",name:"Ghetto flight may be required",text:"Progression may require using Rabbit Boots and the dolphin to reach Swan\n           before the Angry Sea can be calmed and before Flight is available."},{flag:"Gp",name:"Teleport skip may be required",text:"Progression may require entering Mt. Sabre North from Cordel Plain\n           without the Teleport spell (flying over the river to avoid the\n           trigger)."},
{flag:"Gr",name:"Rabbit skip may be required",text:"Progression may require entering Mt. Sabre North from Cordel Plain\n           without talking to the rabbit in Leaf after the abduction."},{flag:"Gt",name:"Statue glitch may be required",text:"Progression may require glitching past guards without Change or Paralysis,\n           or people turned to stone without a Flute of Lime.  The logic <i>hopefully</i>\n           ensures that using the Flute of Lime on the two statues will not break the\n           game, but we're less confident that this is always the case, so for safety\n           we recommend always glitching past the statues if this option is set, even if\n           the first Flute of Lime has been found."},
{flag:"Gw",hard:!0,name:"Wild warp may be required",text:'Progression may require using "wild warp" (holding A and B on controller 1\n           and tapping A on controller 2) to travel to parts of the game that would\n           otherwise be unreachable.'}]},{section:"Glitch Fixes",text:"Alternatively, glitches may be patched out of the game and made unusable.\n         These flags are exclusive with the flags that require the glitch.",flags:[{flag:"Fs",name:"Disable shop glitch",text:"Items may no longer be purchased for neighboring prices.  This makes\n           money actually mean something.  To compensate, gold drops money\n           will be scaled up somewhat."},
{flag:"Fc",name:"Disable sword charge glitch",text:"Sword charge glitch will no longer work.  It will be impossible to\n           achieve charge levels without having correct inventory."},{flag:"Ft",name:"Disable statue glitch",text:"Statues will instead always push downwards, making it impossible to\n           glitch through statues."}]},{section:"Easy Mode",text:"The following options make parts of the game easier.",flags:[{flag:"Er",name:"Guarantee refresh",text:"Guarantees the Refresh spell will be available before fighting Tetrarchs."},
{flag:"Em",name:"Extra buff medical herb",text:"Buff Medical Herb to heal 96 instead of 64 and Fruit of Power to\n           restore 64 MP instead of 48."},{flag:"Ex",name:"Experience scales faster",text:'Less grinding will be required to "keep up" with the game difficulty.'},{flag:"Ec",name:"Charge while walking",text:"Charge level will increase even while moving."}]},{section:"Debug Mode",text:"These options are helpful for exploring or debugging.  Note that,\n      while they do not directly affect any randomization, they\n      <i>do</i> factor into the seed to prevent cheating, and they\n      will remove the option to generate a seed for racing.",
flags:[{flag:"Ds",name:"Generate a spoiler log"},{flag:"Di",name:"Player never dies"}]}],exclusiveFlags$$module$js$flagset=(b)=>b.startsWith("S")?new RegExp(`S.*[${b.substring(1)}]`):FLAG_CONFLICTS$$module$js$flagset[b],FLAG_CONFLICTS$$module$js$flagset={Hm:/Em/,Hx:/Ex/,Em:/Hm/,Ex:/Hx/,Tw:/Gw/,Gw:/Tw/,Ft:/Gt/,Gt:/Ft/,Fc:/Gc/,Gc:/Fc/};
class FlagSet$$module$js$flagset{constructor(b){this.flags={};b=b.replace(/[^A-Za-z0-9!]/g,"");const a=/([A-Z])([a-z0-9!]+)/g;let c;for(;c=a.exec(b);){let [,a,b]=c;REPEATABLE_FLAGS$$module$js$flagset.has(a)&&(b=[b]);for(const c of b)this.set(a+c,!0)}}set(b,a){const c=b[0],d=b.substring(1);a?(this.removeConflicts(b),b=(this.flags[c]||[]).filter((a)=>a!==d),b.push(d),b.sort(),this.flags[c]=b):(b=(this.flags[c]||[]).filter((a)=>a!==d),b.length?this.flags[c]=b:delete this.flags[c])}check(b){const a=this.flags[b[0]];
return!!(a&&0<=a.indexOf(b.substring(1)))}removeConflicts(b){const a=exclusiveFlags$$module$js$flagset(b);if(a)for(const c in this.flags)b=this.flags[c].filter((b)=>!a.test(c+b)),b.length?this.flags[c]=b:delete this.flags[c]}toStringKey(b){return REPEATABLE_FLAGS$$module$js$flagset.has(b)?[...this.flags[b]].sort().map((a)=>b+a).join(" "):b+[...this.flags[b]].sort().join("")}toString(){const b=Object.keys(this.flags);b.sort();return b.map((a)=>this.toStringKey(a)).join(" ")}}
var module$js$flagset={};module$js$flagset.PRESETS=PRESETS$$module$js$flagset;module$js$flagset.FLAGS=FLAGS$$module$js$flagset;module$js$flagset.FlagSet=FlagSet$$module$js$flagset;const generate$$module$js$depgraph=(b)=>{const a=new WorldGraph$$module$js$nodes,c=(b,c)=>new Option$$module$js$nodes(a,b,void 0===c?!0:c),d=(b,c)=>new Item$$module$js$nodes(a,b,c,b,null),e=(b,c,...d)=>new Boss$$module$js$nodes(a,b,c,...d),f=(a,c)=>{if(!b)return c;(c=a.startsWith("!"))&&(a=a.substring(1));return b.check(a)^c};new TrackerNode$$module$js$nodes(a,TrackerNode$$module$js$nodes.OFF_ROUTE,"Off-route");const g=new TrackerNode$$module$js$nodes(a,TrackerNode$$module$js$nodes.GLITCH,"Glitch"),
h=new TrackerNode$$module$js$nodes(a,TrackerNode$$module$js$nodes.HARD,"Hard"),k=(a)=>a.value?a:g,m=c("Leather Boots grant speed",f("Ts",!0)),p=k(c("Assume ghetto flight",f("Gf",!0))),r=k(c("Assume statue glitch",f("Gt",!0))),t=k(c("Assume teleport skip",f("Gp",!1))),l=k(c("Assume rabbit skip",f("Gr",!1))),n=c("Sword magic optional",f("Hw",!1)),y=c("Matching sword optional",f("Hs",!1)),v=c("Gas mask optional",f("Hg",!1)),sa=c("Healed dolphin optional",f("!Rd",!0)),ka=c("Calmed sea not required",f("!Rl",
!1)),la=c("Sword of Thunder teleports to Shyron",f("Rt",!0)),La=c("Barrier magic optional",f("Hb",!0)),Ma=c("Refresh magic optional",f("!Er",!0)),Md=c("Lime Tree connects to Leaf",f("Rp",!0)),Nd=k(c("Assume wild warp",f("Gw",!1))),Od=c("Allow wild warp",f("!Tw",!1)),Pd=c("Allow statue glitch",f("!Ft",!1)),Qd=k(c("Assume sword charge glitch",f("Gc",!1))),Rd=c("Allow sword charge glitch",f("!Fc",!1)),Sd=c("Buffed medical herb",f("!Hm",!0)),V=d(0,"Sword of Wind").weight(5).fromPerson("Leaf elder",13).npcSpawn(94,
16,1).dialog(13,192,2).key(),W=d(1,"Sword of Fire").weight(5).fromPerson("Oak elder",29).dialog(29,null,3).key(),P=d(2,"Sword of Water").weight(10).chest().key(),L=d(3,"Sword of Thunder").weight(15).chest().key(),mb=d(4,"Crystalis").fixed(),Na=d(5,"Ball of Wind").chest().key(),Ga=d(6,"Tornado Bracelet").chest().key(),Oa=d(7,"Ball of Fire").bossDrop("Insect",1).dialog(30,null,0).dialog(32,null,0).dialog(33,null,0).dialog(34,null,0).dialog(96,30,0).dialog(29,null,2).dialog(31,null,0).npcSpawn(193).key(),
Pa=d(8,"Flame Bracelet").bossDrop("Kelbesque 1",2).npcSpawn(194).key(),Qa=d(9,"Ball of Water").weight(5).direct("Rage",250679).npcSpawn(195).key(),Ra=d(10,"Blizzard Bracelet").weight(5).chest().key(),Sa=d(11,"Ball of Thunder").bossDrop("Mado 1",5).trigger(154,1).key(),Ta=d(12,"Storm Bracelet").chest().key(),Tb=d(13,"Carapace Shield").armor(),Td=d(14,"Bronze Shield").armor(),Ub=d(15,"Platinum Shield").armor(),Vb=d(16,"Mirrored Shield").armor(),Ud=d(17,"Ceramic Shield").armor(),nb=d(18,"Sacred Shield").armor().bossDrop("Mado 2",
8).npcSpawn(199).bonus(),Wb=d(19,"Battle Shield").armor(),Vd=d(20,"Psycho Shield").armor(),Wd=d(21,"Tanned Hide").armor(),Xd=d(22,"Leather Armor").armor(),Yd=d(23,"Bronze Armor").armor(),Xb=d(24,"Platinmum Armor").armor(),Zd=d(25,"Soldier Suit").armor(),Yb=d(26,"Ceramic Suit").armor(),$d=d(27,"Battle Suit").armor(),ae=d(28,"Psycho Armor").armor().bossDrop("Draygon 1",10).npcSpawn(203).trigger(159).npcSpawn(131).key(),E=d(29,"Medical Herb").consumable(),H=d(30,"Antidote").consumable(),ta=d(31,"Lysis Plant").consumable(),
ob=d(32,"Fruit of Lime").consumable(),I=d(33,"Fruit of Power").consumable(),Q=d(34,"Magic Ring").consumable(),pb=d(35,"Fruit of Repun").consumable().bossDrop("Sabera 2",7).npcSpawn(198).key(),M=d(36,"Warp Boots").consumable(),Zb=d(37,"Statue of Onyx").chest("Cordel grass").invisible(254882).key(),qb=d(38,"Opel Statue").consumable().bossDrop("Kelbesque 2",6).npcSpawn(197).key(),$b=d(39,"Insect Flute").fromPerson("Oak mother",30).dialog(30,null,1).key(),rb=d(40,"Flute of Lime").fromPerson("Portoa queen",
56).direct(39161).dialog(56,null,4).key(),Ua=d(41,"Gas Mask").direct("Akahana in Brynmaer",251902).npcSpawn(22,24).key(),be=d(42,"Power Ring").chest().bonus(),ce=d(43,"Warrior Ring").fromPerson("Akahana's friend",84).dialog(84,null,2).bonus(),de=d(44,"Iron Necklace").chest().bonus(),ee=d(45,"Deo's Pendant").fromPerson("Deo",90).dialog(90,null,0).bonus(),sb=d(46,"Rabbit Boots").bossDrop("Vampire 1",0).npcSpawn(192).key(),ac=d(47,f("Ts",!0)?"Speed Boots":"Leather Boots").chest().bonus(),bc=d(48,"Shield Ring").direct("Akahana in waterfall cave",
250543).npcSpawn(22,87,2).bonus(),tb=d(49,"Alarm Flute").fromPerson("Zebu's student",20,1).key(),cc=d(50,"Windmill Key").fromPerson("Windmill guard",20).dialog(20,14,0).npcSpawn(20,14,1).key(),dc=d(51,"Key to Prison").chest().key(),ec=d(52,"Key to Styx").fromPerson("Zebu in Shyron",94,1).trigger(128,2).dialog(94,242,0).dialog(98,242,0).key(),fc=d(53,"Fog Lamp").chest().key(),ub=d(54,"Shell Flute").fromPerson("Dolphin",99,1).npcSpawn(99).key(),gc=d(55,"Eye Glasses").fromPerson("Clark",68).dialog(68,
233,1).key(),hc=d(56,"Broken Statue").bossDrop("Sabera 1",4).npcSpawn(127,101).npcSpawn(70).npcSpawn(71).npcSpawn(106).npcSpawn(132).npcSpawn(142).dialog(61).dialog(62).dialog(63).dialog(64).dialog(65).dialog(66).dialog(67).dialog(68,233).trigger(182).key(),ic=d(57,"Glowing Lamp").direct("Kensu in lighthouse",250638).npcSpawn(126,98,1).key(),jc=d(59,"Love Pendant").chest("Underground channel").invisible(254890).key(),kc=d(60,"Kirisa Plant").chest("Kirisa meadow").invisible(254886).key(),vb=d(61,"Ivory Statue").bossDrop("Karmine",
9).npcSpawn(200).key(),lc=d(62,"Bow of Moon").fromPerson("Aryllis",35).direct(251624).dialog(35,null,1).key(),mc=d(63,"Bow of Sun").chest().key(),nc=d(64,"Bow of Truth").fromPerson("Azteca",131).npcSpawn(131,156,1).dialog(131,null,0).key(),Va=(new Magic$$module$js$nodes(a,65,"Refresh",65,null)).fromPerson("Zebu at windmill",94).requireUnique().direct(251665).dialog(94,16,3).trigger(180,1),Wa=(new Magic$$module$js$nodes(a,66,"Paralysis",66,null)).direct("Zebu at Mt. Sabre summit",251477).requireUnique().trigger(141).trigger(178),
ma=(new Magic$$module$js$nodes(a,67,"Telepathy",67,null)).direct("Tornel at Stom's house",223220).npcSpawn(95,30,1).trigger(133,1),oc=(new Magic$$module$js$nodes(a,68,"Teleport",68,null)).fromPerson("Tornel on Mt. Sabre",95).dialog(95,33,0),fe=(new Magic$$module$js$nodes(a,69,"Recover",69,null)).direct("Asina in Portoa",250361),pc=(new Magic$$module$js$nodes(a,70,"Barrier",70,null)).direct("Asina on Angry sea",251609).requireUnique().trigger(132,0),ua=(new Magic$$module$js$nodes(a,71,"Change",71,
null)).direct("Kensu in Swan",251614).npcSpawn(116,241,1),B=(new Magic$$module$js$nodes(a,72,"Flight",72,null)).weight(15).direct("Kensu in Draygonia Fortress",250255),ge=I.bossDrop("Vampire 2",12,97).npcSpawn(204).key(),J=d(112,"Mimic"),qc=(new Trigger$$module$js$nodes(a,"Talked to Leaf Elder")).get(V),rc=(new Trigger$$module$js$nodes(a,"Talked to Leaf Student")).get(tb),wb=new Trigger$$module$js$nodes(a,"Talked to Zebu in cave"),he=(new Trigger$$module$js$nodes(a,"Woke up Windmill Guard")).get(cc),
Xa=new Trigger$$module$js$nodes(a,"Started Windmill"),sc=(new Trigger$$module$js$nodes(a,"Learned Refresh")).get(Va),ie=(new Trigger$$module$js$nodes(a,"Gave Statue to Akahana")).get(Ua),je=(new Trigger$$module$js$nodes(a,"Fought Stom")).get(ma),tc=new Trigger$$module$js$nodes(a,"Visited Oak"),uc=new Trigger$$module$js$nodes(a,"Talked to Oak Mother"),xb=new Trigger$$module$js$nodes(a,"Rescued Oak Child"),ke=(new Trigger$$module$js$nodes(a,"Talked to Oak Mother Again")).get($b),le=(new Trigger$$module$js$nodes(a,
"Talked to Oak Elder")).get(W),me=(new Trigger$$module$js$nodes(a,"Talked to Tornel on Mt Sabre")).get(oc),vc=new Trigger$$module$js$nodes(a,"Villagers Abducted"),wc=new Trigger$$module$js$nodes(a,"Talked to Rabbit in Leaf"),ne=(new Trigger$$module$js$nodes(a,"Learned Paralysis")).get(Wa),xc=new Trigger$$module$js$nodes(a,"Talked to Portoa Queen"),yc=new Trigger$$module$js$nodes(a,"Talked to Fortune Teller"),zc=new Trigger$$module$js$nodes(a,"Visited Underground Channel"),oe=(new Trigger$$module$js$nodes(a,
"Sent to Waterfall Cave")).get(rb),pe=(new Trigger$$module$js$nodes(a,"Cured Akahana")).get(bc),Ac=(new Trigger$$module$js$nodes(a,"Talked to Rage")).get(Qa),Bc=new Trigger$$module$js$nodes(a,"Mesia recording played"),Cc=(new Trigger$$module$js$nodes(a,"Talked to Asina")).get(fe),Dc=(new Trigger$$module$js$nodes(a,"Healed Dolphin")).get(ub),yb=new Trigger$$module$js$nodes(a,"Returned Fog Lamp"),Ec=new Trigger$$module$js$nodes(a,"Talked to Kensu in Cabin"),Fc=new Trigger$$module$js$nodes(a,"Talked to Joel Elder"),
qe=(new Trigger$$module$js$nodes(a,"Talked to Clark")).get(gc),re=(new Trigger$$module$js$nodes(a,"Talked to Kensu in Lighthouse")).get(ic),zb=new Trigger$$module$js$nodes(a,"Calmed the Angry Sea"),se=(new Trigger$$module$js$nodes(a,"Learned Barrier")).get(pc),Gc=new Trigger$$module$js$nodes(a,"Talked to Stom in Swan Hut"),Hc=new Trigger$$module$js$nodes(a,"Talked to Kensu in Swan tavern"),Ic=new Trigger$$module$js$nodes(a,"Talked to Kensu at Swan dance"),te=(new Trigger$$module$js$nodes(a,"Returned Kensu's love pendant")).get(ua),
ue=(new Trigger$$module$js$nodes(a,"Talked to Amazones Queen")).get(lc),Ab=new Trigger$$module$js$nodes(a,"Entered Shyron"),ve=(new Trigger$$module$js$nodes(a,"Talked to Zebu in Shyron")).get(ec),Jc=new Trigger$$module$js$nodes(a,"Shyron Massacre"),we=(new Trigger$$module$js$nodes(a,"Saved Kensu")).get(B),xe=(new Trigger$$module$js$nodes(a,"Talked to Deo")).get(ee),ye=(new Trigger$$module$js$nodes(a,"Talked to Akahana's Friend")).get(ce),ze=(new Trigger$$module$js$nodes(a,"Get Bow of Truth")).get(nc),
Ae=(new Trigger$$module$js$nodes(a,"Forged Crystalis")).get(mb),Ya=(new Condition$$module$js$nodes(a,"Sword charge glitch")).option(Qd,Rd),Be=(new Condition$$module$js$nodes(a,"Rabbit skip")).option(l),Ce=(new Condition$$module$js$nodes(a,"Teleport skip")).option(t),Bb=(new Condition$$module$js$nodes(a,"Statue glitch")).option(r,Pd),De=(new Condition$$module$js$nodes(a,"Wild warp")).option(Nd,Od),Za=(new Condition$$module$js$nodes(a,"Any level 2 sword")).option(V,Na).option(V,Ga).option(W,Oa).option(W,
Pa).option(P,Qa).option(P,Ra).option(L,Sa).option(L,Ta),w=(new Condition$$module$js$nodes(a,"Destroy stone")).option(V,Na).option(V,Ga).option(Ya,V,Za),x=(new Condition$$module$js$nodes(a,"Destroy ice")).option(W,Oa).option(W,Pa).option(Ya,W,Za),q=(new Condition$$module$js$nodes(a,"Cross rivers")).option(P,Qa).option(P,Ra).option(B).option(Ya,P,Za),va=(new Condition$$module$js$nodes(a,"Destroy iron")).option(L,Sa).option(L,Ta).option(Ya,L,Za),X=(new Condition$$module$js$nodes(a,"Any sword")).option(V).option(W).option(P).option(L),
Ee=(new Condition$$module$js$nodes(a,"Match insect sword (fire/water/thunder)")).option(W).option(P).option(L).option(Ua,y.value?y:h,V),Kc=(new Condition$$module$js$nodes(a,"Speed boots")).option(ac,m),Lc=(new Condition$$module$js$nodes(a,"Climb slopes")).option(sb).option(B).option(Kc),Fe=(new Condition$$module$js$nodes(a,"Enter Mt Sabre North (rabbit)")).option(wc).option(Be),Ge=(new Condition$$module$js$nodes(a,"Enter Mt Sabre North (Teleport)")).option(oc).option(Ce,B),Mc=(new Condition$$module$js$nodes(a,
"Asina in her room")).option(Bc),He=(new Condition$$module$js$nodes(a,"Paralysis or Ball of Water")).option(Wa).option(Mc).option(Bb),Nc=(new Condition$$module$js$nodes(a,"Ride dolphin")).option(ub,Ec),Ie=(new Condition$$module$js$nodes(a,"Ghetto flight")).option(p,Nc,sb),Y=(new Condition$$module$js$nodes(a,"Cross sea")).option(Nc).option(B),Je=(new Condition$$module$js$nodes(a,"Cross whirlpool")).option(zb).option(B).option(Ie),N=(new Condition$$module$js$nodes(a,"Refresh if needed")).option(Ma.value?
Ma:h).option(Va),Oc=(new Condition$$module$js$nodes(a,"Wind magic")).option(n.value?n:h,N).option(Na,Ga,N),Pc=(new Condition$$module$js$nodes(a,"Fire magic")).option(n.value?n:h,N).option(Oa,Pa,N),Qc=(new Condition$$module$js$nodes(a,"Water magic")).option(n.value?n:h,N).option(n,N).option(Qa,Ra,N),Ke=(new Condition$$module$js$nodes(a,"Thunder magic")).option(n.value?n:h,N).option(n,N).option(Sa,N).option(Ta,N),Le=(new Condition$$module$js$nodes(a,"Flute of lime or glitch")).option(rb).option(Bb),
Rc=(new Condition$$module$js$nodes(a,"Change or glitch")).option(ua).option(Bb),Cb=(new Condition$$module$js$nodes(a,"Pass shooting statues")).option(pc).option(La.value?La:h).option(Va,bc),Me=(new Condition$$module$js$nodes(a,"Healed dolphin if required")).option(Dc).option(sa),Sc=(new Condition$$module$js$nodes(a,"Match sword of wind")).option(V).option(y.value?y:h,X),Tc=(new Condition$$module$js$nodes(a,"Match sword of fire")).option(W).option(y.value?y:h,X),Uc=(new Condition$$module$js$nodes(a,
"Match sword of water")).option(P).option(y.value?y:h,X),Ne=(new Condition$$module$js$nodes(a,"Match sword of thunder")).option(L).option(y.value?y:h,X),Oe=(new Condition$$module$js$nodes(a,"Swamp run possible")).option(X).option(Kc).option(Sd).option(Va),Pe=(new Condition$$module$js$nodes(a,"Insect possible to kill")).option(Ua),$a=(new Condition$$module$js$nodes(a,"Travel swamp")).option(Ua).option(v.value?v:h,Oe),Qe=(new Condition$$module$js$nodes(a,"Calmed sea if required")).option(zb).option(ka),
Re=e(0,"Vampire 1",X).get(sb),Se=e(1,"Insect",$b,Ee,Pe).get(Oa),Te=e(2,"Kelbesque 1",Sc,Oc).get(Pa),Ue=e(12,"Vampire 2",X).get(ge),Vc=e(4,"Sabera 1",Tc,Pc).get(hc),Ve=e(5,"Mado 1",Uc,Qc).get(Sa),We=e(6,"Kelbesque 2",Sc,Oc).get(qb),Xe=e(7,"Sabera 2",Tc,Pc).get(pb),Ye=e(8,"Mado 2",Uc,Qc).get(nb),Ze=e(9,"Karmine",Ne,Ke).get(vb),$e=e(10,"Draygon 1",X).get(ae),af=e(null,"Statues",mc,lc),bf=e(11,"Draygon 2",X,nc),cf=e(13,"Dyna",mb),R=new Area$$module$js$nodes(a,"Leaf"),wa=new Area$$module$js$nodes(a,"Valley of Wind"),
O=new Area$$module$js$nodes(a,"Sealed Cave"),na=new Area$$module$js$nodes(a,"Cordel Plain"),xa=new Area$$module$js$nodes(a,"Brynmaer"),ya=new Area$$module$js$nodes(a,"Amazones"),C=new Area$$module$js$nodes(a,"Mt Sabre West"),u=new Area$$module$js$nodes(a,"Mt Sabre North"),ab=new Area$$module$js$nodes(a,"Nadare's"),Ha=new Area$$module$js$nodes(a,"Oak"),ca=new Area$$module$js$nodes(a,"Waterfall Valley"),A=new Area$$module$js$nodes(a,"Portoa"),da=new Area$$module$js$nodes(a,"Waterfall Cave"),D=new Area$$module$js$nodes(a,
"Fog Lamp Cave"),ea=new Area$$module$js$nodes(a,"Kirisa Plant Cave"),oa=new Area$$module$js$nodes(a,"Angry Sea"),fa=new Area$$module$js$nodes(a,"Joel"),G=new Area$$module$js$nodes(a,"Evil Spirit Island"),ha=new Area$$module$js$nodes(a,"Sabera's Castle"),S=new Area$$module$js$nodes(a,"Swan"),z=new Area$$module$js$nodes(a,"Mt Hydra"),ia=new Area$$module$js$nodes(a,"Shyron"),pa=new Area$$module$js$nodes(a,"Styx"),qa=new Area$$module$js$nodes(a,"Goa"),bb=new Area$$module$js$nodes(a,"Draygonia Fortress 1"),
T=new Area$$module$js$nodes(a,"Draygonia Fortress 2"),za=new Area$$module$js$nodes(a,"Draygonia Fortress 3"),K=new Area$$module$js$nodes(a,"Draygonia Fortress 4"),F=new Area$$module$js$nodes(a,"Oasis Cave");new Area$$module$js$nodes(a,"Desert");const U=new Area$$module$js$nodes(a,"Sahara"),Aa=new Area$$module$js$nodes(a,"Pyramid Front"),Z=new Area$$module$js$nodes(a,"Pyramid Back"),aa=new Area$$module$js$nodes(a,"Tower"),Db=(new Location$$module$js$nodes(a,0,R,"Start")).overworld().start(),df=(new Location$$module$js$nodes(a,
0,R,"Mezame Shrine")).overworld().from(Db),ef=(new Location$$module$js$nodes(a,1,R,"Outside Start")).overworld().connect(df),ja=(new Location$$module$js$nodes(a,2,R,"Town")).town().connect(ef),Ia=(new Location$$module$js$nodes(a,3,wa,"Main")).overworld().connect(ja).trigger(sc,Xa),Wc=(new Location$$module$js$nodes(a,3,wa,"Outside Windmill")).overworld(),Xc=(new Location$$module$js$nodes(a,4,O,"Tunnel 1 (entrance)")).cave().from(Ia,Xa),ff=(new Location$$module$js$nodes(a,5,O,"Tunnel 2 (over bridge)")).cave().connect(Xc),
gf=(new Location$$module$js$nodes(a,6,O,"Tunnel 6 (herb dead end)")).cave().chest(E,15),Yc=(new Location$$module$js$nodes(a,7,O,"Tunnel 4a (ball corridor)")).cave().chest(E,20,80).chest(Na,21);(new Location$$module$js$nodes(a,7,O,"Tunnel 4b (antidote dead end)")).cave().connect(Yc,w).chest(H,19);const hf=(new Location$$module$js$nodes(a,8,O,"Tunnel 5 (warp boots dead end)")).cave().chest(M,14),jf=(new Location$$module$js$nodes(a,9,O,"Tunnel 3a (branch, front)")).cave().connect(ff).connectTo(Yc).connectTo(hf),
kf=(new Location$$module$js$nodes(a,9,O,"Tunnel 3b (branch, back)")).cave().connect(jf,w).connectTo(gf),lf=(new Location$$module$js$nodes(a,10,O,"Tunnel 7 (boss)")).cave().connect(kf).boss(Re),mf=(new Location$$module$js$nodes(a,12,O,"Tunnel 8a (exit, above wall)")).cave().connect(lf),nf=(new Location$$module$js$nodes(a,12,O,"Tunnel 8b (exit, below wall")).cave().connect(mf,w);(new Location$$module$js$nodes(a,14,wa,"Windmill Cave")).cave().connect(Ia).connectTo(Wc).trigger(he,tb,wb);(new Location$$module$js$nodes(a,
15,wa,"Windmill")).misc().connect(Wc).trigger(Xa,cc);const of=(new Location$$module$js$nodes(a,16,wa,"Zebu's Cave Front")).cave().connect(Ia).trigger(wb,qc,rc).trigger(sc,Xa,wb),pf=(new Location$$module$js$nodes(a,16,wa,"Zebu's Cave Back")).cave().trigger(vc).connect(of,x),qf=(new Location$$module$js$nodes(a,17,C,"Tunnel 1 (to Zebu)")).cave().connect(pf),Ba=(new Location$$module$js$nodes(a,20,na,"West")).overworld().connect(nf),rf=(new Location$$module$js$nodes(a,20,na,"South")).overworld().connect(Ba,
q),Zc=(new Location$$module$js$nodes(a,21,na,"East")).overworld().connect(Ba).chest(Zb,24),Ja=(new Location$$module$js$nodes(a,24,xa,"Town")).town().connect(Ba).trigger(ie,Zb),sf=(new Location$$module$js$nodes(a,25,na,"Outside Stom's House")).town().connect(Ba),Eb=(new Location$$module$js$nodes(a,26,na,"Swamp")).overworld().connect(Zc,$a).trigger(xb,uc,$a);(new Location$$module$js$nodes(a,26,na,"Swamp Insect Area")).overworld().connect(Eb,$a).boss(Se);const cb=(new Location$$module$js$nodes(a,27,
ya,"Town")).town().connect(rf),db=(new Location$$module$js$nodes(a,28,Ha,"Town")).town().connect(Eb,$a).trigger(tc);(new Location$$module$js$nodes(a,30,na,"Stom's House")).house().connect(sf).trigger(je,tc);const Ca=(new Location$$module$js$nodes(a,32,C,"Entrance")).overworld().connect(Ba).connect(qf),tf=(new Location$$module$js$nodes(a,32,C,"Up Slope")).overworld().from(Ca,Lc).to(Ca),uf=(new Location$$module$js$nodes(a,32,C,"Dead End (warp boots)")).overworld().chest(M,24,106),$c=(new Location$$module$js$nodes(a,
33,C,"Upper")).overworld().from(Ca,B).to(Ca),vf=(new Location$$module$js$nodes(a,33,C,"Tornel Dead End")).overworld().trigger(me,Ga).chest(Q,23,105),ad=(new Location$$module$js$nodes(a,34,C,"Tunnel 2a (fork at start)")).cave().connect(Ca);(new Location$$module$js$nodes(a,34,C,"Tunnel 2b (left branch to dead end)")).cave().connect(ad,x).connectTo(uf);const wf=(new Location$$module$js$nodes(a,34,C,"Tunnel 2c (right branch to upper)")).cave().connect(ad,x),xf=(new Location$$module$js$nodes(a,35,C,"Tunnel 3a (tunnel to upper, with herb chest)")).cave().connect(wf).chest(E,
23,82),yf=(new Location$$module$js$nodes(a,35,C,"Tunnel 3b (tunnel to upper, branch below ice)")).cave().connect(xf,x).connectTo($c),bd=(new Location$$module$js$nodes(a,36,C,"Tunnel 4a (branch to upper or Tornel)")).cave().connect(yf);(new Location$$module$js$nodes(a,36,C,"Tunnel 4b (out to upper)")).cave().connect(bd,x).connectTo($c);const zf=(new Location$$module$js$nodes(a,37,C,"Tunnel 5 (tiny connector)")).cave().connect(bd),Af=(new Location$$module$js$nodes(a,38,C,"Tunnel 6a (exit to Tornel, above ice)")).cave().connect(zf);
(new Location$$module$js$nodes(a,38,C,"Tunnel 6b (exit to Tornel, below ice)")).cave().connect(Af,x).connectTo(vf);const Bf=(new Location$$module$js$nodes(a,39,C,"Tunnel 7a (tornado bracelet, lower)")).cave().connect(tf),Cf=(new Location$$module$js$nodes(a,39,C,"Tunnel 7b (tornado bracelet, middle)")).cave().connect(Bf,x);(new Location$$module$js$nodes(a,39,C,"Tunnel 7c (tornado bracelet, upper)")).cave().connect(Cf,x).chest(Ga,25);const eb=(new Location$$module$js$nodes(a,40,u,"Entrance")).overworld().connect(Zc,
Ge,Fe),fb=(new Location$$module$js$nodes(a,40,u,"Upper")).overworld().from(eb,B).to(eb),Fb=(new Location$$module$js$nodes(a,40,u,"Summit (boss)")).overworld().from(fb,B).to(fb).boss(Te),cd=(new Location$$module$js$nodes(a,41,u,"Connector")).overworld(),Gb=(new Location$$module$js$nodes(a,41,u,"Middle Left")).overworld(),Df=(new Location$$module$js$nodes(a,41,u,"Middle Right")).overworld().from(Gb,Lc).to(Gb),dd=(new Location$$module$js$nodes(a,42,u,"Tunnel 2a (from entrance to connector)")).cave().connectTo(cd);
(new Location$$module$js$nodes(a,42,u,"Tunnel 2b (under bridge, to antidote)")).cave().connect(dd,x).chest(H,23,94);const ed=(new Location$$module$js$nodes(a,43,u,"Tunnel 3a (branch after connector)")).cave().connect(cd),Ef=(new Location$$module$js$nodes(a,43,u,"Tunnel 3b (right branch)")).cave().connect(ed,x),Ff=(new Location$$module$js$nodes(a,43,u,"Tunnel 3c (upper branch)")).cave().connect(ed,x);(new Location$$module$js$nodes(a,44,u,"Tunnel 4 (over bridge, to middle)")).cave().connect(Ff).connectTo(Gb);
const fd=(new Location$$module$js$nodes(a,45,u,"Tunnel 5a (E-shaped, from right branch)")).cave().connect(Ef).connectTo(Df);(new Location$$module$js$nodes(a,45,u,"Tunnel 5b (dead-end with herb)")).cave().connect(fd,x).chest(E,22,83);const Gf=(new Location$$module$js$nodes(a,46,u,"Tunne; 6a (S-shaped hall, right)")).cave().connect(fd),Hf=(new Location$$module$js$nodes(a,46,u,"Tunne; 6b (S-shaped hall, middle)")).cave().connect(Gf,x),If=(new Location$$module$js$nodes(a,46,u,"Tunnel 6c (S-shaped hall, left)")).cave().connect(Hf,
x),gd=(new Location$$module$js$nodes(a,47,u,"Prison (hallway)")).cave().connect(fb),Jf=(new Location$$module$js$nodes(a,48,u,"Left Cell (shopkeepers)")).cave().from(gd,x);(new Location$$module$js$nodes(a,49,u,"Left Cell 2 (back, with prison key)")).cave().from(Jf,x).chest(dc,13);const Kf=(new Location$$module$js$nodes(a,50,u,"Right Cell (villagers)")).cave().from(gd,x),Lf=(new Location$$module$js$nodes(a,51,u,"Tunnel 8 (behind right cell, toward summit)")).cave().from(Kf,x);(new Location$$module$js$nodes(a,
52,u,"Tunnel 9 (connector to summit)")).cave().connect(Lf).connectTo(Fb);const Mf=(new Location$$module$js$nodes(a,53,u,"Tunnel 10a (summit cave, front)")).cave().from(Fb,dc).to(Fb),Nf=(new Location$$module$js$nodes(a,53,u,"Tunnel 10b (summit cave, behind ice)")).cave().connect(Mf,x).trigger(ne);(new Location$$module$js$nodes(a,56,u,"Tunnel 1 (leads from main entrance)")).cave().connect(eb).connectTo(dd);(new Location$$module$js$nodes(a,57,u,"Tunnel 7 (to upper)")).cave().connect(If).connectTo(fb);
const Of=(new Location$$module$js$nodes(a,60,ab,"Inn")).shop(),Pf=(new Location$$module$js$nodes(a,61,ab,"Tool Shop")).shop(E,H,I,M),Qf=(new Location$$module$js$nodes(a,62,ab,"Back Room")).house(),Hb=(new Location$$module$js$nodes(a,64,ca,"Summit")).overworld().connect(Nf),gb=(new Location$$module$js$nodes(a,64,ca,"Northwest")).overworld().from(Hb).to(Hb,B),Rf=(new Location$$module$js$nodes(a,64,ca,"Northeast")).overworld().connect(gb,q),hd=(new Location$$module$js$nodes(a,65,ca,"Southwest")).overworld().connect(gb),
Sf=(new Location$$module$js$nodes(a,65,ca,"Southeast")).overworld().connect(hd,q),id=(new Location$$module$js$nodes(a,66,ca,"Lime Tree Valley")).overworld().connect(hd).connect(Ia,Md),Tf=(new Location$$module$js$nodes(a,67,ca,"Lime Tree Lake (Rage)")).cave().connect(id).trigger(Ac,P),Uf=(new Location$$module$js$nodes(a,68,ea,"Tunnel 1a (entrance)")).cave().connect(Sf),Vf=(new Location$$module$js$nodes(a,68,ea,"Tunnel 1b (behind wall)")).cave().connect(Uf,w),jd=(new Location$$module$js$nodes(a,69,
ea,"Tunnel 2a (main path, before wall)")).cave().connect(Vf);(new Location$$module$js$nodes(a,69,ea,"Tunnel 2b (dead end, antidote)")).cave().connect(jd,w).chest(H,25,95);const Wf=(new Location$$module$js$nodes(a,69,ea,"Tunnel 2c (main path, after wall)")).cave().connect(jd,w),Xf=(new Location$$module$js$nodes(a,70,ea,"Tunnel 3a (last room, before wall)")).cave().connect(Wf),Yf=(new Location$$module$js$nodes(a,70,ea,"Tunnel 3b (last room, after wall)")).cave().connect(Xf,w);(new Location$$module$js$nodes(a,
71,ea,"Meadow")).overworld().connect(Yf).chest(kc,14);const Zf=(new Location$$module$js$nodes(a,72,D,"Tunnel 1a (entrance)")).cave().connect(Rf),kd=(new Location$$module$js$nodes(a,72,D,"Tunnel 1b (past wall)")).cave().connect(Zf,w);(new Location$$module$js$nodes(a,72,D,"Tunnel 1c (dead end, lysisPlant)")).cave().connect(kd,w).chest(ta,24);const $f=(new Location$$module$js$nodes(a,73,D,"Tunnel 2 (tiny connector)")).cave().connect(kd),ld=(new Location$$module$js$nodes(a,74,D,"Tunnel 3a (upper branch)")).cave().connect($f);
(new Location$$module$js$nodes(a,74,D,"Tunnel 3b (dead end, mimic)")).cave().connect(ld,w).chest(J,21,112);const md=(new Location$$module$js$nodes(a,74,D,"Tunnel 3c (short passage with mimic)")).cave().connect(ld,w).chest(J,22,113),ag=(new Location$$module$js$nodes(a,74,D,"Tunnel 3d (lower branch)")).cave().connect(md,w);(new Location$$module$js$nodes(a,75,D,"Tunnel 4 (dead end loop)")).cave().connect(ag);const nd=(new Location$$module$js$nodes(a,76,D,"Tunnel 5a (right branch over bridge)")).cave().connect(md),
bg=(new Location$$module$js$nodes(a,76,D,"Tunnel 5b (past wall over bridge)")).cave().connect(nd,w),cg=(new Location$$module$js$nodes(a,77,D,"Tunnel 6a (from left branch)")).cave().connect(nd),dg=(new Location$$module$js$nodes(a,77,D,"Tunnel 6b (reconvergence)")).cave().connect(cg,w).connect(bg),eg=(new Location$$module$js$nodes(a,77,D,"Tunnel 6c (between walls)")).cave().connect(dg,w),fg=(new Location$$module$js$nodes(a,77,D,"Tunnel 6d (under bridge)")).cave().connect(eg,w),gg=(new Location$$module$js$nodes(a,
78,D,"Tunnel 7a (over second bridge)")).cave().connect(fg),hg=(new Location$$module$js$nodes(a,78,D,"Tunnel 7b (past wall)")).cave().connect(gg,w),ig=(new Location$$module$js$nodes(a,79,D,"Tunnel 8a (under second bridge)")).cave().connect(hg);(new Location$$module$js$nodes(a,79,D,"Tunnel 8b (fog lamp)")).cave().connect(ig,w).chest(fc,19);const ra=(new Location$$module$js$nodes(a,80,A,"Town")).town().connect(gb),od=(new Location$$module$js$nodes(a,81,A,"Fishherman Island")).town().connect(ra);(new Location$$module$js$nodes(a,
82,ca,"Mesia Shrine")).cave().trigger(Bc).connect(Tf,q,Ac);const pd=(new Location$$module$js$nodes(a,84,da,"Tunnel 1a (entrance)")).cave().connect(gb);(new Location$$module$js$nodes(a,84,da,"Tunnel 1b (dead end, mimic)")).cave().connect(pd,x).chest(J,19,114);const jg=(new Location$$module$js$nodes(a,84,da,"Tunnel 1c (past ice)")).cave().connect(pd,x),kg=(new Location$$module$js$nodes(a,85,da,"Tunnel 2 (stoned pair)")).cave().connect(jg),Ib=(new Location$$module$js$nodes(a,86,da,"Tunnel 3 (wide medusa hallways)")).cave().connect(kg,
Le),lg=(new Location$$module$js$nodes(a,87,da,"Tunnel 4a (left entrance)")).cave().from(Ib,x).chest(Vb,25).trigger(pe,rb);(new Location$$module$js$nodes(a,87,da,"Tunnel 4b (right entrance)")).cave().from(Ib,x).connect(lg,B);(new Location$$module$js$nodes(a,87,da,"Tunnel 4c (sword of water)")).cave().connect(Ib,x).chest(P,24);const qd=(new Location$$module$js$nodes(a,88,aa,"Entrance")).misc(),mg=(new Location$$module$js$nodes(a,89,aa,"Level 1")).misc().from(qd),ng=(new Location$$module$js$nodes(a,
90,aa,"Level 2")).misc().from(mg),og=(new Location$$module$js$nodes(a,91,aa,"Level 3")).misc().from(ng),rd=(new Location$$module$js$nodes(a,92,aa,"Outside Mesia Room")).misc().from(og),pg=(new Location$$module$js$nodes(a,93,aa,"Outside Dyna Room")).misc().from(rd,mb);(new Location$$module$js$nodes(a,94,aa,"Mesia")).misc().connect(rd).trigger(Ae);const qg=(new Location$$module$js$nodes(a,95,aa,"Dyna")).misc().from(pg).boss(cf);(new Location$$module$js$nodes(a,95,aa,"Win")).misc().from(qg).end();const Jb=
(new Location$$module$js$nodes(a,96,oa,"Cabin Beach")).sea().from(od,yb),Da=(new Location$$module$js$nodes(a,96,oa,"South")).sea().connect(Jb,Y),rg=(new Location$$module$js$nodes(a,96,oa,"Joel Beach")).sea().connect(Da,Y),sd=(new Location$$module$js$nodes(a,96,fa,"Outside Lighthouse")).sea();(new Location$$module$js$nodes(a,96,oa,"Altar")).sea().connect(Da,Y).trigger(zb,ic,hc);const sg=(new Location$$module$js$nodes(a,96,oa,"North")).sea().to(Da,Y).from(Da,Y,Je).trigger(se,Qe),tg=(new Location$$module$js$nodes(a,
96,oa,"Swan Beach")).sea().connect(sg,Y);(new Location$$module$js$nodes(a,97,oa,"Cabin")).misc().connect(Jb).trigger(Ec,yb);(new Location$$module$js$nodes(a,98,fa,"Lighthouse")).misc().connect(sd).trigger(re,tb);const hb=(new Location$$module$js$nodes(a,100,A,"Underground Channel 1 (from throne room)")).sea().trigger(zc),ug=(new Location$$module$js$nodes(a,100,A,"Underground Channel 2 (to fortune teller)")).sea().connect(hb,q),td=(new Location$$module$js$nodes(a,100,A,"Underground Channel 3 (from fortune teller)")).sea().connect(hb,
B),ud=(new Location$$module$js$nodes(a,100,A,"Underground Channel 4 (asina)")).sea().connect(td,q),vg=(new Location$$module$js$nodes(a,100,A,"Underground Channel 5 (dolphin)")).sea().connect(ud,q).trigger(Dc,E,Cc);(new Location$$module$js$nodes(a,100,A,"Underground Channel 6 (water)")).sea().connect(vg,Y).connectTo(Da,Y).chest(jc,17);const Kb=(new Location$$module$js$nodes(a,101,G,"Zombie Town")).town(),wg=(new Location$$module$js$nodes(a,104,G,"Tunnel 1 (entrance)")).sea().connect(Da,Fc,Y),vd=(new Location$$module$js$nodes(a,
105,G,"Tunnel 2a (start)")).cave().connect(wg);(new Location$$module$js$nodes(a,105,G,"Tunnel 2b (dead end to left)")).cave().connect(vd,q);const xg=(new Location$$module$js$nodes(a,105,G,"Tunnel 2c (across first river)")).cave().connect(vd,q),wd=(new Location$$module$js$nodes(a,105,G,"Tunnel 2d (across second river)")).cave().connect(xg,q);(new Location$$module$js$nodes(a,105,G,"Tunnel 2e (dead end, magic ring)")).cave().connect(wd,w).chest(Q,29);const yg=(new Location$$module$js$nodes(a,105,G,"Tunnel 2f (stair down)")).cave().connect(wd,
w),zg=(new Location$$module$js$nodes(a,106,G,"Tunnel 3a (main area)")).cave().connect(yg).connectTo(Kb).chest(ta,25,92),Ag=(new Location$$module$js$nodes(a,106,G,"Tunnel 3b (left area toward items)")).cave().connect(zg,w),Bg=(new Location$$module$js$nodes(a,107,G,"Tunnel 4a (right side, mimic)")).cave().connect(Ag).chest(J,14,115);(new Location$$module$js$nodes(a,107,G,"Tunnel 4b (left side, iron necklace)")).cave().connect(Bg,q).chest(de,15);const Lb=(new Location$$module$js$nodes(a,108,ha,"Floor 1")).fortress().connect(Kb),
Cg=(new Location$$module$js$nodes(a,108,ha,"Miniboss")).fortress().boss(Ue).connect(Lb);(new Location$$module$js$nodes(a,109,ha,"Floor 2a (left stair)")).fortress().connect(Lb).chest(I,19);const Dg=(new Location$$module$js$nodes(a,109,ha,"Floor 2b (right stair)")).fortress().connect(Cg).chest(E,30,85),Eg=(new Location$$module$js$nodes(a,110,ha,"Floor 3a (toward boss)")).fortress().connect(Dg),xd=(new Location$$module$js$nodes(a,110,ha,"Floor 3b (boss room)")).fortress().connect(Eg);(new Location$$module$js$nodes(a,
110,ha,"Boss")).fortress().boss(Vc).connect(xd);(new Location$$module$js$nodes(a,110,ha,"Floor 3c (back room trap)")).fortress().from(xd).to(Lb);const Fg=(new Location$$module$js$nodes(a,112,fa,"Secret Passage")).cave().connectTo(sd),ib=(new Location$$module$js$nodes(a,113,fa,"Town")).town().connect(rg),ba=(new Location$$module$js$nodes(a,114,S,"Town")).town().connect(tg),Gg=(new Location$$module$js$nodes(a,115,S,"Inside Gate")).overworld().connect(ba),Hg=(new Location$$module$js$nodes(a,115,S,"Outside Gate")).overworld().from(Gg,
ua),jb=(new Location$$module$js$nodes(a,120,qa,"Valley")).overworld().connect(Hg),Mb=(new Location$$module$js$nodes(a,124,z,"Entrance")).overworld().connect(jb),Ig=(new Location$$module$js$nodes(a,124,z,"Over first river toward Shyron")).overworld().connect(Mb,q),yd=(new Location$$module$js$nodes(a,124,z,"After first tunnel")).overworld(),zd=(new Location$$module$js$nodes(a,124,z,"Door to Styx")).overworld().connect(yd,q),Jg=(new Location$$module$js$nodes(a,124,z,"Dead end (no item)")).overworld(),
Kg=(new Location$$module$js$nodes(a,124,z,"Dead end (fruit of lime)")).overworld().chest(ob,26),Lg=(new Location$$module$js$nodes(a,124,z,"Dead end (magic ring)")).overworld().chest(Q,25,101),Ad=(new Location$$module$js$nodes(a,124,z,"Outside tunnel to bow")).overworld();(new Location$$module$js$nodes(a,124,z,"Floating island (bow of sun)")).overworld().connect(Ad,B).chest(mc,24);const Mg=(new Location$$module$js$nodes(a,125,z,"Tunnel 1 (to Shyron)")).cave().connect(Ig),Ng=(new Location$$module$js$nodes(a,
126,z,"Outside Shyron")).overworld().connect(Mg);(new Location$$module$js$nodes(a,127,z,"Tunnel 2 (fork)")).cave().connect(Mb).connectTo(Kg).connectTo(yd);const Bd=(new Location$$module$js$nodes(a,128,z,"Tunnel 3 (caves)")).cave().connect(zd).connect(Jg),Cd=(new Location$$module$js$nodes(a,129,z,"Tunnel 4 (left branch of cave)")).cave().connect(Bd);(new Location$$module$js$nodes(a,130,z,"Tunnel 5 (dead end, medical herb)")).cave().connect(Cd).chest(E,15,86);const Og=(new Location$$module$js$nodes(a,
131,z,"Tunnel 6a (left-then-right)")).cave().connect(Cd),Pg=(new Location$$module$js$nodes(a,131,z,"Tunnel 6b (past wall)")).cave().connect(Og,w),Qg=(new Location$$module$js$nodes(a,132,z,"Tunnel 7 (wide hall)")).cave().connect(Pg);(new Location$$module$js$nodes(a,133,z,"Tunnel 8 (red slimes)")).cave().from(Qg,w).connectTo(Ad).chest(J,23,116);const Rg=(new Location$$module$js$nodes(a,134,z,"Tunnel 9 (right branch, infinite loop)")).cave().connect(Bd),Sg=(new Location$$module$js$nodes(a,135,z,"Tunnel 10a (toward magic ring)")).cave().connect(Rg);
(new Location$$module$js$nodes(a,135,z,"Tunnel 10b (past wall)")).cave().connect(Sg,w).connectTo(Lg);const Dd=(new Location$$module$js$nodes(a,136,pa,"Entrance")).fortress().from(zd,ec,Cb),Tg=(new Location$$module$js$nodes(a,137,pa,"Left branch")).fortress().connect(Dd).chest(J,19,117),Ug=(new Location$$module$js$nodes(a,137,pa,"Left branch, past one bridge")).fortress().connect(Tg,q),Vg=(new Location$$module$js$nodes(a,137,pa,"Left branch, past two bridges")).fortress().connect(Ug,q).chest(E,29,
87),Wg=(new Location$$module$js$nodes(a,137,pa,"Right branch")).fortress().connect(Dd);(new Location$$module$js$nodes(a,137,pa,"Right branch, across water")).fortress().connect(Wg,B).chest(J,20,118).chest(J,21,119).chest(Vd,28);(new Location$$module$js$nodes(a,138,pa,"Upper floor")).fortress().connect(Vg).chest(L,27);const Ea=(new Location$$module$js$nodes(a,140,ia,"Town")).town().connect(Ng,Rc).trigger(Ab),Ka=(new Location$$module$js$nodes(a,142,qa,"Town")).town().connect(jb),Ed=(new Location$$module$js$nodes(a,
143,F,"Draygonia Fortress Basement 1 (front)")).fortress();(new Location$$module$js$nodes(a,143,F,"Draygonia Fortress Basement 2 (power ring)")).fortress().connect(Ed,va).chest(be,15);const Nb=(new Location$$module$js$nodes(a,144,qa,"Desert 1")).overworld().connect(jb),kb=(new Location$$module$js$nodes(a,145,F,"Area 1 (from entrance)")).cave().chest(ac,26),Fd=(new Location$$module$js$nodes(a,145,F,"Area 2 (across top bridge)")).cave().connect(kb,q);(new Location$$module$js$nodes(a,145,F,"Area 3 (dead-end across top-right bridge)")).cave().connect(Fd,
q);const Xg=(new Location$$module$js$nodes(a,145,F,"Area 4 (left across middle-right bridge)")).cave().connect(Fd,q),Yg=(new Location$$module$js$nodes(a,145,F,"Area 5 (bottom edge)")).cave().connect(Xg,q),Zg=(new Location$$module$js$nodes(a,145,F,"Area 6 (bottom island)")).cave().connect(Yg,q),$g=(new Location$$module$js$nodes(a,145,F,"Area 7 (bottom inner ring)")).cave().connect(Zg,q),ah=(new Location$$module$js$nodes(a,145,F,"Area 8 (left outer ring)")).cave().connect($g,q).connect(kb,q).chest(I,
27,100),bh=(new Location$$module$js$nodes(a,145,F,"Area 9 (top left inner ring)")).cave().connect(ah,q),ch=(new Location$$module$js$nodes(a,145,F,"Area 10 (top right inner ring)")).cave().connect(bh,q);(new Location$$module$js$nodes(a,145,F,"Area 11 (center)")).cave().connect(ch,q).connectTo(Ed);(new Location$$module$js$nodes(a,145,F,"Area 12 (top center islands)")).cave().connect(kb,B).chest($d,28);const dh=(new Location$$module$js$nodes(a,146,U,"Desert Cave 1")).cave().connect(Nb,B),Fa=(new Location$$module$js$nodes(a,
147,U,"Town")).town(),eh=(new Location$$module$js$nodes(a,148,U,"Outside Cave")).overworld().connect(Fa),fh=(new Location$$module$js$nodes(a,149,U,"Desert Cave 2")).cave().connect(eh);(new Location$$module$js$nodes(a,150,U,"Meadow")).overworld().connect(dh).connectTo(Fa).trigger(xe,ua);const Ob=(new Location$$module$js$nodes(a,152,U,"Desert 2")).overworld().connect(fh),gh=(new Location$$module$js$nodes(a,156,Aa,"Entrance")).fortress().connect(Ob,B),hh=(new Location$$module$js$nodes(a,156,Aa,"Azteca")).fortress().trigger(ze),
ih=(new Location$$module$js$nodes(a,157,Aa,"Fork")).fortress().connect(gh),Gd=(new Location$$module$js$nodes(a,158,Aa,"Main")).fortress().connect(ih);(new Location$$module$js$nodes(a,158,Aa,"Treasure Chest (magic ring)")).fortress().connect(Gd).chest(Q,27,108);(new Location$$module$js$nodes(a,159,Aa,"Draygon")).fortress().connect(Gd).to(hh).boss($e);const jh=(new Location$$module$js$nodes(a,160,Z,"Entrance")).fortress().connect(Ob,B),kh=(new Location$$module$js$nodes(a,160,Z,"Statues")).fortress().connect(jh).boss(af),
lh=(new Location$$module$js$nodes(a,161,Z,"Hall 1")).fortress().connect(kh),Pb=(new Location$$module$js$nodes(a,162,Z,"Branch")).fortress().connect(lh);(new Location$$module$js$nodes(a,163,Z,"Left Dead End")).fortress().connect(Pb).chest(J,13,120);(new Location$$module$js$nodes(a,164,Z,"Right Dead End")).fortress().connect(Pb);const mh=(new Location$$module$js$nodes(a,165,Z,"Hall 2")).fortress().connect(Pb).chest(qb,26,109),nh=(new Location$$module$js$nodes(a,166,Z,"Draygon 2")).fortress().connect(mh).boss(bf);
(new Location$$module$js$nodes(a,167,Z,"Teleporter")).fortress().from(nh).to(qd);const Hd=(new Location$$module$js$nodes(a,168,bb,"Entrance")).fortress().connect(Ka,Cb).trigger(Jc,L),oh=(new Location$$module$js$nodes(a,169,bb,"Main")).fortress().from(Hd,va),ph=(new Location$$module$js$nodes(a,169,bb,"Boss")).fortress().connect(oh).boss(We),qh=(new Location$$module$js$nodes(a,170,bb,"Zebu")).fortress().connect(ph),lb=(new Location$$module$js$nodes(a,171,T,"Entrance")).fortress().connect(qh);(new Location$$module$js$nodes(a,
171,T,"Dead End Behind Iron (fruit of power)")).fortress().connect(lb,va).chest(I,28,98);(new Location$$module$js$nodes(a,171,T,"Dead End Loop Across Closer Bridges")).fortress().connect(lb,q).connect(lb,q);const rh=(new Location$$module$js$nodes(a,171,T,"Across First Bridge (fruit of repun)")).fortress().connect(lb,q).chest(pb,30,102),Qb=(new Location$$module$js$nodes(a,171,T,"Across Second Bridge")).fortress().connect(rh,q);(new Location$$module$js$nodes(a,171,T,"Dead End Across Two Bridges ()")).fortress().connect(Qb,
q).connect(Qb,q).chest(ta,29,93);const sh=(new Location$$module$js$nodes(a,171,T,"Across Third Bridge")).fortress().connect(Qb,q),th=(new Location$$module$js$nodes(a,171,T,"Exit Behind Iron Door")).fortress().connect(sh,va),uh=(new Location$$module$js$nodes(a,172,T,"Boss")).fortress().connect(th).boss(Xe),vh=(new Location$$module$js$nodes(a,172,T,"Tornel")).fortress().connect(uh),Id=(new Location$$module$js$nodes(a,173,za,"Lower")).fortress().connect(vh).chest(qb,26,99).chest(Q,27,111),wh=(new Location$$module$js$nodes(a,
174,za,"Upper Loop")).fortress().connect(Id).chest(H,22,96);(new Location$$module$js$nodes(a,174,za,"Upper Loop Behind Wall (magic ring)")).fortress().connect(wh,va).chest(Q,23,107);const xh=(new Location$$module$js$nodes(a,175,za,"Upper Passage (toward Mado)")).fortress().connect(Id).chest(Q,27,84),Rb=(new Location$$module$js$nodes(a,176,K,"Initial Fork")).fortress(),yh=(new Location$$module$js$nodes(a,177,K,"Left Branch")).fortress().connect(Rb),Jd=(new Location$$module$js$nodes(a,178,K,"Main Area (right branch, over bridges)")).fortress().connect(Rb),
zh=(new Location$$module$js$nodes(a,179,K,"U-shaped Passage (between floors)")).fortress().connect(Jd),Ah=(new Location$$module$js$nodes(a,180,K,"Main Area Lower (under bridge)")).fortress().connect(yh).connect(Jd).connect(zh),Kd=(new Location$$module$js$nodes(a,180,K,"Behind Iron Wall")).fortress().connect(Ah,va),Bh=(new Location$$module$js$nodes(a,181,K,"Lower")).fortress().connect(Kd).chest(J,13,121).chest(J,14,122).chest(J,15,123).chest(Q,23,88).chest(M,24,110),Ch=(new Location$$module$js$nodes(a,
182,K,"Boss Corridor")).fortress().connect(Bh),Dh=(new Location$$module$js$nodes(a,182,K,"Boss")).fortress().connect(Ch,Cb).boss(Ze);(new Location$$module$js$nodes(a,182,K,"Behind Boss (stormBracelet)")).fortress().connect(Dh).chest(Ta,18);const Ld=(new Location$$module$js$nodes(a,183,K,"Exit Stairs")).fortress(),Eh=(new Location$$module$js$nodes(a,184,F,"Entrance Back (behind river)")).cave().connect(Ld).chest(I,13,90);(new Location$$module$js$nodes(a,184,F,"Entrance Front")).cave().connect(Eh,B).connectTo(Nb).connectTo(kb);
const Fh=(new Location$$module$js$nodes(a,185,za,"Boss")).fortress().connect(xh).boss(Ye);(new Location$$module$js$nodes(a,185,za,"Asina")).fortress().connect(Fh).connectTo(Rb);(new Location$$module$js$nodes(a,186,K,"Kensu")).fortress().connect(Kd).connectTo(Ld).trigger(we,vb);(new Location$$module$js$nodes(a,187,qa,"House")).house().connect(Ka).trigger(ye,ua,vb);(new Location$$module$js$nodes(a,188,qa,"Inn")).shop().connect(Ka,Ab);(new Location$$module$js$nodes(a,190,qa,"Tool Shop")).shop(E,H,M,
I).connect(Ka,Ab);(new Location$$module$js$nodes(a,191,qa,"Tavern")).shop().connect(Ka);(new Location$$module$js$nodes(a,192,R,"Elder House")).house().connect(ja).trigger(qc);(new Location$$module$js$nodes(a,193,R,"Rabbit Hut")).house().connect(ja).trigger(wc,vc,ma);(new Location$$module$js$nodes(a,194,R,"Inn")).shop().connect(ja);(new Location$$module$js$nodes(a,195,R,"Tool Shop")).shop(E,H,M,I).connect(ja);(new Location$$module$js$nodes(a,196,R,"Armor Shop")).shop(Wd,Tb).connect(ja);(new Location$$module$js$nodes(a,
197,R,"Student House")).house().connect(ja).trigger(rc);(new Location$$module$js$nodes(a,198,xa,"Tavern")).house().connect(Ja);(new Location$$module$js$nodes(a,199,xa,"Pawn Shop")).shop().connect(Ja);(new Location$$module$js$nodes(a,200,xa,"Inn")).shop().connect(Ja);(new Location$$module$js$nodes(a,201,xa,"Armor Shop")).shop(Xd,Tb,Td).connect(Ja);(new Location$$module$js$nodes(a,203,xa,"Tool Shop")).shop(E,H,M).connect(Ja);(new Location$$module$js$nodes(a,205,Ha,"Elder House")).house().from(db,ma).trigger(le,
xb);(new Location$$module$js$nodes(a,206,Ha,"Mother's House")).house().from(db,ma).trigger(uc,ma).trigger(ke,xb);(new Location$$module$js$nodes(a,207,Ha,"Tool Shop")).shop(E,H,I).from(db,ma);(new Location$$module$js$nodes(a,208,Ha,"Inn")).shop().from(db,ma);(new Location$$module$js$nodes(a,209,ya,"Inn")).shop().connect(cb);(new Location$$module$js$nodes(a,210,ya,"Tool Shop")).shop(M,I,ta).connect(cb);(new Location$$module$js$nodes(a,211,ya,"Armor Shop")).shop(Xb,Ub,Vb,nb).connect(cb);const Gh=(new Location$$module$js$nodes(a,
212,ya,"Queen's House")).house().from(cb,Rc).trigger(ue,ua,kc);(new Location$$module$js$nodes(a,213,ab,"Nadare's")).house().connect(eb).connectTo(Of).connectTo(Pf).connectTo(Qf);(new Location$$module$js$nodes(a,214,A,"Fisherman's House")).house().connect(od).trigger(yb,fc,ub,Me);const Sb=(new Location$$module$js$nodes(a,215,A,"Palace Entrance")).house().connect(ra);(new Location$$module$js$nodes(a,216,A,"Fortune Teller Front")).house().connect(ra).trigger(yc,xc);(new Location$$module$js$nodes(a,216,
A,"Fortune Teller Back")).house().connect(ug).connect(td);(new Location$$module$js$nodes(a,217,A,"Pawn Shop")).shop().connect(ra);(new Location$$module$js$nodes(a,218,A,"Armor Shop")).shop(Yd,Xb,Ub).connect(ra);(new Location$$module$js$nodes(a,220,A,"Inn")).shop().connect(ra);(new Location$$module$js$nodes(a,221,A,"Tool Shop")).shop(E,ta,ob,M).connect(ra);(new Location$$module$js$nodes(a,222,A,"Palace Left")).house().connect(Sb);(new Location$$module$js$nodes(a,223,A,"Palace Throne Room")).house().connect(Sb).to(hb,
He).from(hb).trigger(xc).trigger(oe,yc,zc);(new Location$$module$js$nodes(a,224,A,"Palace Right")).house().connect(Sb);(new Location$$module$js$nodes(a,225,A,"Asina's Room")).house().connect(ud).trigger(Cc,Mc);(new Location$$module$js$nodes(a,226,ya,"Queen Downstairs")).house().connect(Gh).chest(Ra,13);(new Location$$module$js$nodes(a,227,fa,"Elder's House")).house().connect(ib).trigger(Fc);(new Location$$module$js$nodes(a,228,fa,"Shed")).house().connect(ib).to(Fg,gc);(new Location$$module$js$nodes(a,
229,fa,"Tool Shop")).shop(E,H,I,ta).connect(ib);(new Location$$module$js$nodes(a,231,fa,"Inn")).shop().connect(ib);const Hh=(new Location$$module$js$nodes(a,232,G,"Zombie Town House")).house().connect(Kb);(new Location$$module$js$nodes(a,233,G,"Zombie Town Basement")).house().connect(Hh).trigger(qe,Vc);(new Location$$module$js$nodes(a,235,S,"Tool Shop")).shop(E,H,I,M).connect(ba);(new Location$$module$js$nodes(a,236,S,"Stom's Hut")).house().connect(ba).trigger(Gc);(new Location$$module$js$nodes(a,
237,S,"Inn")).shop().connect(ba);(new Location$$module$js$nodes(a,238,S,"Armor Shop")).shop(Zd,Yb,Ud,Wb).connect(ba);(new Location$$module$js$nodes(a,239,S,"Tavern")).house().connect(ba).trigger(Hc,Gc,Wa);(new Location$$module$js$nodes(a,240,S,"Pawn Shop")).shop().connect(ba);(new Location$$module$js$nodes(a,241,S,"Dance Hall")).house().connect(ba).trigger(Ic,Hc,Wa).trigger(te,Ic,jc);const Ih=(new Location$$module$js$nodes(a,242,ia,"Temple (pre-massacre)")).fortress().connect(Ea).from(Db,L,la).trigger(ve);
(new Location$$module$js$nodes(a,242,ia,"Temple (post-massacre)")).fortress().from(Ih,Jc).boss(Ve);(new Location$$module$js$nodes(a,243,ia,"Training Hall")).house().connect(Ea);(new Location$$module$js$nodes(a,244,ia,"Hospital")).house().connect(Ea);(new Location$$module$js$nodes(a,245,ia,"Armor Shop")).shop(Yb,nb,Wb).connect(Ea);(new Location$$module$js$nodes(a,246,ia,"Tool Shop")).shop(E,H,ob,Q).connect(Ea);(new Location$$module$js$nodes(a,247,ia,"Inn")).shop().connect(Ea);(new Location$$module$js$nodes(a,
248,U,"Inn")).shop().connect(Fa);(new Location$$module$js$nodes(a,249,U,"Tool Shop")).shop(H,M,pb,Q).connect(Fa);(new Location$$module$js$nodes(a,250,U,"Elder's House")).house().connect(Fa);(new Location$$module$js$nodes(a,251,U,"Pawn Shop")).house().connect(Fa);const Jh=[ja,Ia,Xc,Ba,Eb,Ca,Hb,id,Jb,ba,jb,Mb,Nb,Hd,Ob];for(const a of Jh)a.from(Db,De);return a},shuffle$$module$js$depgraph=(b,a,c,d,e)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){const f=generate$$module$js$depgraph(d);d.check("Ps")&&
f.shuffleShops(a);const g=f.nodes.filter((a)=>a instanceof Slot$$module$js$nodes&&a.slots&&a.slotName);d||(d=new FlagSet$$module$js$flagset("Sbkm Sct"));var h={};for(var k of g)if(k instanceof Slot$$module$js$nodes&&k.slots){var m=k.slotType[0];(h[m]=h[m]||[]).push(k)}k=[];m=[];var p={};for(var r of d.flags.S||[]){var t=[];for(var l of r){p[l]=!0;for(var n of h[l])t.push(n),m.push([n,k.length])}k.push(t)}for(var y of"bc")if(p[y])for(r=h[y],l=r.map((a)=>[a.item,a.itemIndex]),a.shuffle(l),n=0;n<r.length;n++)r[n].set(...l[n]);
t=(a)=>g.find((b)=>b.vanillaItemName===a);h=t("Sword of Wind");y=t("Sword of Fire");r=t("Ball of Wind");l=t("Ball of Fire");n=t("Statue of Onyx");t=t("Gas Mask");p.k&&a.nextInt(2)&&(y.swap(h),l.swap(r));p.k&&!a.nextInt(3)&&n.swap(t);p=[1,1,1,1,2,2,2,3,3,3,5,5,8,13];h=[];e&&e.addTasks(10);for(y=0;1E3>y;y++){e&&0==y%100&&(yield new Promise(requestAnimationFrame),e.addCompleted(1));a.shuffle(m);for(var v of k)a.shuffle(v);r=k.map(()=>-1);l=p[a.nextInt(p.length)];n=[];t=(a,b)=>a.itemIndex===b.itemIndex||
a.isMimic()&&!b.canHoldMimic()||b.isMimic()&&!a.canHoldMimic()||a.needsChest()&&!b.isChest()||b.needsChest()&&!a.isChest()?!1:!0;for(let a=0;a<l;a++){const [b,c]=m[a],d=k[c][++r[c]];t(b,d)&&(b.swap(d),n.push([b,d]))}if(!n.length)continue;const {win:b,path:c}=f.traverse({wanted:g,dfs:!1});if(b)h=c;else for(;n.length;){const [a,b]=n.pop();a.swap(b)}}b&&f.write(b);if(c){c.items=[];c.route=[];for(const a of h){const [b,d]=a;c.route.push(d);v=f.nodes[b];null!=v.slotName&&(k=v.slotName,0>k.indexOf(v.orig)&&
(k+=` (normally ${v.vanillaItemName})`),c.items.push({slotIndex:v.slotIndex,itemIndex:v.itemIndex,origName:v.vanillaItemName,slotName:v.slotName,itemName:v.item.name,text:`${v.item.name}: ${k}`}))}}}),shuffle2$$module$js$depgraph=(b,a,c,d,e)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){const f=generate$$module$js$depgraph(d);d.check("Ps")&&f.shuffleShops(a);const g=f.integrate();e&&e.addTasks(1E3);for(let h=0;1E3>h;h++){if(yield shuffle3$$module$js$depgraph(f,g,b,a,c,d,e)){console.log(`success after ${h} attempts`);
return}e&&(e.addCompleted(1),0===h%50&&(yield new Promise(requestAnimationFrame)))}return shuffle$$module$js$depgraph(b,a,c,d,e)}),shuffle3$$module$js$depgraph=(b,a,c,d,e,f,g)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){const h=e&&e.stats;var g=b.nodes.filter((a)=>a instanceof Slot$$module$js$nodes&&a.slots&&a.slotName);const m=new Map(d.shuffle(g.map((a)=>[a,[a.item,a.itemIndex]]))),p=new Set(d.shuffle(g)),r=new Map,t={};h&&h.seeds++;f||(f=new FlagSet$$module$js$flagset("Sbkm Sct"));
(f.flags.S||[]).forEach((a,b)=>{for(const c of a)t[c]=b});for(var l of p)r.set(l.item,l);const n=(a,b)=>null==t[a.slotType?a.slotType[0]:"c"]?a==b:b.isMimic()&&!a.canHoldMimic()||"unique"!=b.item.inventoryRow&&a.requiresUnique||"armor"==b.item.inventoryRow&&!a.isChest()?!1:t[a.slotType?a.slotType[0]:"c"]==t[b.slotType?b.slotType[0]:"c"];l=a.assumedFill(d,(a,b)=>n(a,r.get(b)));if(null==l){h&&h.endState.key++;return!1;throw Error("Could not fill!");}const y=new Map;for(var v=0;v<l.length;v++){var sa=
l[v];if(null!=sa){var ka=r.get(a.item(sa));sa=m.get(ka);m.delete(ka);ka=a.location(v);y.set(ka,sa);p.delete(ka)}}v=(a,b,c)=>{c=void 0===c?"":c;for(const c of p)if(n(c,a))return y.set(c,b),p.delete(c),m.delete(a),!0;h&&("traps"==c?h.endState.traps++:"chest"==c?h.endState.chest++:h.endState.misc++);return!1};for(var la of m){const [a,b]=la;if(a.isMimic()&&!v(a,b,"traps"))return!1}for(const a of m){const [b,c]=a;if(b.needsChest()&&!v(b,c,"chest"))return!1}for(const a of m){const [b,c]=a;if(!v(b,c))return!1}for(const a of y){const [b,
c]=a;b.set(...c)}const {win:La,path:Ma}=b.traverse({wanted:g,dfs:!1});if(!La)return h&&h.endState.no_win++,!1;c&&b.write(c);if(!e)return!0;h&&(h.endState.success++,h.analyze(b,a,l));e.items=[];e.route=[];for(const a of Ma){const [c,d]=a;e.route.push(d);g=b.nodes[c];null!=g.slotName&&(la=g.slotName,0>la.indexOf(g.orig)&&(la+=` (normally ${g.vanillaItemName})`),e.items.push({slotIndex:g.slotIndex,itemIndex:g.itemIndex,origName:g.vanillaItemName,slotName:g.slotName,itemName:g.item.name,text:`${g.item.name}: ${la}`}))}return!0});
var module$js$depgraph={};module$js$depgraph.generate=generate$$module$js$depgraph;module$js$depgraph.shuffle=shuffle$$module$js$depgraph;module$js$depgraph.shuffle2=shuffle2$$module$js$depgraph;module$js$depgraph.shuffle3=shuffle3$$module$js$depgraph;class Deque$$module$js$util{constructor(){this.buffer=Array(16);this.mask=15;this.size=this.end=this.start=0}get length(){return this.size}upsize(b){for(;this.mask<b;)this.end<=this.start&&(this.start+=this.mask+1),this.mask=this.mask<<1|1,this.buffer=this.buffer.concat(this.buffer);this.size=b}push(...b){this.upsize(this.size+b.length);for(const a of b)this.buffer[this.end]=a,this.end=this.end+1&this.mask}pop(){if(this.size)return this.end=this.end-1&this.mask,this.size--,this.buffer[this.end]}peek(){if(this.size)return this.buffer[this.end-
1&this.mask]}unshift(...b){this.upsize(this.size+b.length);for(const a of b)this.start=this.start-1&this.mask,this.buffer[this.start]=a}shift(){if(this.size){var b=this.buffer[this.start];this.start=this.start+1&this.mask;this.size--;return b}}front(){if(this.size)return this.buffer[this.start]}toString(){const b=Array(this.size);for(let a=0;a<this.size;a++)b[a]=this.buffer[this.start+a&this.mask];return"["+b.join(", ")+"]"}}
class IndexedList$$module$js$util{constructor(){this.list=[];this.map=new Map}add(b){this.map.has(b)||(this.map.set(b,this.list.length),this.list.push(b))}indexOf(b){return this.map.get(b)}remove(b){const a=this.map.get(b);if(null!=a)for(this.list.splice(a,1),this.map.delete(b),b=a;b<this.list.length;b++)this.map.set(this.list[b],b)}[Symbol.iterator](){return this.list[Symbol.iterator]()}}var module$js$util={};module$js$util.Deque=Deque$$module$js$util;module$js$util.IndexedList=IndexedList$$module$js$util;const Edge$$module$js$graph={},EdgeT$$module$js$graph={};Edge$$module$js$graph.of=(...b)=>b.map((a)=>a.uid);class Node$$module$js$graph{constructor(b,a){this.graph=b;this.name=a;this.uid=b.nodes.length;b.nodes.push(this)}get nodeType(){return"Node"}toString(){return`${this.nodeType} ${this.name}`}edges(b){return[]}write(b){}}
class Graph$$module$js$graph{constructor(){this.nodes=[]}traverse(b={}){const {wanted:a=void 0,dfs:c=!1}=b;b=new Deque$$module$js$util;const d=new Map,e=new Map;for(var f of this.nodes)for(var g of f.edges()){var h=g.join(" ");for(var k=1;k<g.length;k++){const a=g[k];e.has(a)||e.set(a,new Map);e.get(a).set(h,g)}1==g.length&&(h=g[0],d.has(h)||(b.push(h),d.set(h,g)))}f=new Set((a||this.nodes).map((a)=>a instanceof Node$$module$js$graph?a.uid:a));for(g=new Map;f.size&&b.length;){h=c?b.pop():b.shift();
f.delete(h);a:for(const a of(e.get(h)||g).values())if(h=a[0],!d.has(h)){for(k=1;k<a.length;k++)if(!d.has(a[k]))continue a;d.set(h,a);b.push(h)}}return{win:!f.size,seen:d,path:[...d.values()].map(([a,...b])=>{const c=(a)=>[this.nodes[a]];return[a,[...c(a)," (",b.map((a)=>c(a).join("").replace(/\s+\(.*\)/,"")).join(", "),")"].join("")]})}}}
class SparseDependencyGraph$$module$js$graph{constructor(b){this.nodes=Array(b).fill(0).map(()=>new Map);this.finalized=Array(b).fill(!1)}addRoute(b){const a=b[0];if(this.finalized[a])throw Error(`Attempted to add a route for finalized node ${a}`);let c=new Set;for(let a=b.length-1;1<=a;a--)c.add(b[a]);for(;;){b=!1;for(var d of c){if(d===a)return[];if(this.finalized[d]){b=this.nodes[d];if(!b.size)return[];c.delete(d);if(1==b.size){for(const a of b.values().next().value)c.add(a);b=!0;break}d=new Map;
for(var e of b.values())for(var f of this.addRoute([a,...c,...e]))d.set(f.label,f);return[...d.values()]}}if(!b)break}e=[...c].sort();c=new Set(e);e=e.join(" ");f=this.nodes[a];if(f.has(e))return[];for(const [a,b]of f){if(containsAll$$module$js$graph(c,b))return[];containsAll$$module$js$graph(b,c)&&f.delete(a)}f.set(e,c);return[new SparseRoute$$module$js$graph(a,c,`${a}:${e}`)]}finalize(b){if(!this.finalized[b]){this.finalized[b]=!0;for(let a=0;a<this.nodes.length;a++){const c=this.nodes[a];if(c.size)for(const [d,
e]of c)if(e.has(b)){const b=this.finalized[a];this.finalized[a]=!1;c.delete(d);this.addRoute([a,...e.values()]);this.finalized[a]=b}}}}}class SparseRoute$$module$js$graph{constructor(b,a,c){this.target=b;this.deps=a;this.label=c}}const containsAll$$module$js$graph=(b,a)=>{if(b.size<a.size)return!1;for(const c of a)if(!b.has(c))return!1;return!0};var module$js$graph={};module$js$graph.Edge=Edge$$module$js$graph;module$js$graph.Node=Node$$module$js$graph;module$js$graph.Graph=Graph$$module$js$graph;
module$js$graph.SparseDependencyGraph=SparseDependencyGraph$$module$js$graph;class TrackerNode$$module$js$nodes extends Node$$module$js$graph{constructor(b,a,c){super(b,c);this.type=a}get nodeType(){return"Tracker"}edges({}={}){return[]}}TrackerNode$$module$js$nodes.OFF_ROUTE=1;TrackerNode$$module$js$nodes.GLITCH=2;TrackerNode$$module$js$nodes.HARD=3;class Option$$module$js$nodes extends Node$$module$js$graph{constructor(b,a,c){super(b,a);this.value=c}get nodeType(){return"Option"}edges(){return this.value?[Edge$$module$js$graph.of(this)]:[]}}
class Slot$$module$js$nodes extends Node$$module$js$graph{constructor(b,a,c,d,e=[]){super(b,a);this.slotName=a;this.slotIndex=d;this.slotType=c instanceof Magic$$module$js$nodes?"magic":"consumable";this.vanillaItemName=c.name;this.slots=e;this.item=c;this.itemIndex=d;this.requiresUnique=!1}get nodeType(){return"Slot"}toString(){return`${super.toString()} [${this.vanillaItemName} $${this.slotIndex.toString(16).padStart(2,0)}]`}edges(){return null!=this.item&&null!=this.itemIndex?[Edge$$module$js$graph.of(this.item,
this)]:[]}isMimic(){return 112<=this.itemIndex}requireUnique(){this.requiresUnique=!0;return this}canHoldMimic(){return this instanceof Chest$$module$js$nodes&&!this.isInvisible}needsChest(){const b=this.itemIndex;return 13<=b&&36>=b||38===b||72<b}isChest(){return(this instanceof Chest$$module$js$nodes||this instanceof BossDrop$$module$js$nodes)&&9!==this.origIndex}get name2(){return this.item==this.vanilla?this.name:`${this.item.name} [${this.vanillaItemName}]`}set(b,a){this.item=b;this.itemIndex=
a}write(b){if(this.slots)for(const a of this.slots)a(b,this)}swap(b){const a=this.item,c=this.itemIndex;this.set(b.item,b.itemIndex);b.set(a,c)}key(){this.slotType="key";return this}bonus(){this.slotType="bonus";return this}direct(b){this.slots.push((a,c)=>{write$$module$js$nodes(a,b,c.itemIndex)});return this}npcSpawn(b,a=null,c=0){this.slots.push((d,e)=>{let f=addr$$module$js$nodes(d,116192,81920,b);for(;null!=a&&d[f]!=a;){for(f++;!(d[f]&128);)f+=2,checkBounds$$module$js$nodes(f,d,this.name2,a);
f+=2;checkBounds$$module$js$nodes(f,d,this.name2,a)}f+=2*c+1;d[f]&=-2;d[f]|=2;write$$module$js$nodes(d,f+1,e.itemIndex)});return this}dialog(b,a=null,c=0,d=null){this.slots.push((e,f)=>{let g=addr$$module$js$nodes(e,117085,81920,b);for(;!(e[g]&128);)g+=4,checkBounds$$module$js$nodes(g,e,this.name2);g+=4;let h=0;for(;255!=e[g];)null!=a&&e[g]==a&&(h=e[g+1]),g+=2,checkBounds$$module$js$nodes(g,e,a);for(g+=h+1;c;){if(e[g]&64){for(g+=5;!(e[g]&64);)g+=2,checkBounds$$module$js$nodes(g,e,this.name2);g+=2}else g+=
5;--c}if(null!=d)for(g+=5;d;)g+=2,--d;e[g]&=-2;e[g]|=2;write$$module$js$nodes(e,g+1,f.itemIndex)});return this}trigger(b,a=0,c=null){this.slots.push((d,e)=>{let f=addr$$module$js$nodes(d,123258,81920,b&127);if(null==c)f+=2*a;else{for(;!(d[f]&128);)f+=2,checkBounds$$module$js$nodes(f,d,this.name2);f=f+4+2*c}d[f]&=-2;d[f]|=2;write$$module$js$nodes(d,f+1,e.itemIndex)});return this}}class BossDrop$$module$js$nodes extends Slot$$module$js$nodes{get nodeType(){return"BossDrop"}}
class Chest$$module$js$nodes extends Slot$$module$js$nodes{constructor(b,a,c,d){super(b,a,c,d);this.spawnSlot=null;this.isInvisible=!1}get nodeType(){return"Chest"}objectSlot(b,a){this.spawnSlot=a;this.slots.push((c,d)=>{const e=addr$$module$js$nodes(c,102913,65536,b)+4*(a-11);c[e-1]=112<=d.itemIndex?c[e-1]|128:c[e-1]&127;write$$module$js$nodes(c,e,Math.min(112,d.itemIndex))});return this}invisible(b){this.isInvisible=!0;return this.direct(b)}}
const addr$$module$js$nodes=(b,a,c,d)=>(b[a+2*d]|b[a+2*d+1]<<8)+c;
class ItemGet$$module$js$nodes extends Node$$module$js$graph{constructor(b,a,c,d,e){super(b,c);this.id=a;this.shufflePriority=1;this.inventoryRow="unique"}get nodeType(){return"ItemGet"}chest(b=this.name+" chest",a=this.id){return new Chest$$module$js$nodes(this.graph,b,this,a)}fromPerson(b,a,c=0){return this.direct(b,33008|(a&-4)<<6|(a&3)<<2|c)}bossDrop(b,a,c=this.id){return new BossDrop$$module$js$nodes(this.graph,b,this,c,[(b,c)=>{const d=addr$$module$js$nodes(b,129387,81920,a)+4;write$$module$js$nodes(b,
d,c.itemIndex)}])}direct(b,a){return new Slot$$module$js$nodes(this.graph,b,this,this.id,[(b,d)=>{write$$module$js$nodes(b,a,d.itemIndex)}])}fixed(){return new Slot$$module$js$nodes(this.graph,null,this,this.id)}weight(b){this.shufflePriority=b;return this}consumable(){this.inventoryRow="consumable";return this}armor(){this.inventoryRow="armor";return this}}class Item$$module$js$nodes extends ItemGet$$module$js$nodes{get nodeType(){return"Item"}}
class Magic$$module$js$nodes extends ItemGet$$module$js$nodes{get nodeType(){return"Magic"}}class Trigger$$module$js$nodes extends Node$$module$js$graph{constructor(b,a){super(b,a);this.slot=null;this.reqs=[]}get nodeType(){return"Trigger"}edges(){const b=[...this.reqs];this.slot&&b.push(Edge$$module$js$graph.of(this.slot,this));return b}get(b){if(this.slot)throw Error("already have a slot");this.slot=b;return this}}
class Condition$$module$js$nodes extends Node$$module$js$graph{constructor(b,a){super(b,a);this.options=[]}get nodeType(){return"Condition"}edges(){return this.options.map((b)=>Edge$$module$js$graph.of(this,...b))}option(...b){this.options.push(b.map((a)=>a instanceof Slot$$module$js$nodes?a.item:a));return this}}
class Boss$$module$js$nodes extends Trigger$$module$js$nodes{constructor(b,a,c,...d){super(b,c);this.index=a;this.deps=d.map((a)=>a instanceof Slot$$module$js$nodes?a.item:a)}get nodeType(){return"Boss"}}class Area$$module$js$nodes extends Node$$module$js$graph{constructor(b,a){super(b,a);this.name=a}get nodeType(){return"Area"}}
class Connection$$module$js$nodes{constructor(b,a,c=!1,d=[]){this.from=b;this.to=a;this.bidi=c;this.deps=d.map((a)=>a instanceof Slot$$module$js$nodes?a.item:a)}reverse(){return new Connection$$module$js$nodes(this.to,this.from,this.bidi,this.deps)}}
class Location$$module$js$nodes extends Node$$module$js$graph{constructor(b,a,c,d){super(b,c.name+": "+d);this.simpleName=d;this.id=a;this.area=c;this.connections=[];this.chests=[];this.type=this.bossNode=null;this.isEnd=this.isStart=!1;this.sells=[]}get nodeType(){return"Location"}toString(){return`Location ${this.id.toString(16).padStart(2,0)} ${this.name}`}edges(){const b=[];for(const a of this.connections)b.push(Edge$$module$js$graph.of(a.to,a.from,...a.deps,...a.from.bossNode?[a.from.bossNode]:
[])),a.bidi&&b.push(Edge$$module$js$graph.of(a.from,a.to,...a.deps,...a.to.bossNode?[a.to.bossNode]:[]));for(const a of this.chests)b.push(Edge$$module$js$graph.of(a,this));this.isStart&&b.push(Edge$$module$js$graph.of(this));return b}addConnection(b){b.from.connections.push(b);b.to.connections.push(b);return this}from(b,...a){return this.addConnection(new Connection$$module$js$nodes(b,this,!1,a))}to(b,...a){return this.addConnection(new Connection$$module$js$nodes(this,b,!1,a))}connect(b,...a){return this.addConnection(new Connection$$module$js$nodes(b,
this,!0,a))}connectTo(b,...a){return this.addConnection(new Connection$$module$js$nodes(this,b,!0,a))}chest(b,a,c=void 0){b instanceof Slot$$module$js$nodes&&!(b instanceof Chest$$module$js$nodes)&&null!=c&&(b=b.item);b instanceof ItemGet$$module$js$nodes&&(b=b.chest(void 0,c));a=b.objectSlot(this.id,a);this.chests.push(a);112<=a.itemIndex&&(a.slotType="trap");if(!a.slotName||a.slotName.endsWith(" chest"))a.slotName=b.name+" in "+this.area.name;return this}trigger(b,...a){a=a.map((a)=>a instanceof
Slot$$module$js$nodes?a.item:a);b.reqs.push(Edge$$module$js$graph.of(b,this,...a));return this}boss(b){this.bossNode=b;b.reqs.push(Edge$$module$js$graph.of(b,this,...b.deps));return this}overworld(){this.type="overworld";return this}town(){this.type="town";return this}cave(){this.type="cave";return this}sea(){this.type="sea";return this}fortress(){this.type="fortress";return this}house(){this.type="house";return this}shop(...b){this.type="house";this.sells=b.map((a)=>a instanceof Slot$$module$js$nodes?
a.item:a);return this}misc(){this.type="misc";return this}start(){this.isStart=!0;return this}end(){this.isEnd=!0;return this}fullName(){const b=[this.simpleName];this.bossNode&&b.push(this.bossNode.name);return b.join("\\n")}write(b){if(this.sells.length){var a="armor"==this.sells[0].inventoryRow,c=0;for(let a=139092;139125>a;a++)if(b[a]==this.id){c=b[a+139125-139092];break}a=(a?138660:138792)+(c<<2);for(c=0;4>c;c++)b[a+c]=this.sells[c]?this.sells[c].id:255,b[a+c]||console.error(`uh oh: ${this.sells[c].id} => ${this.sells[c]}`)}}}
const checkBounds$$module$js$nodes=(b,a,...c)=>{if(b>a.length)throw Error("never found: "+c.map((a)=>"number"==typeof a?a.toString(16):a).join(" "));};
class WorldGraph$$module$js$nodes extends Graph$$module$js$graph{write(b){b=b.subarray(16);for(const a of this.nodes)a.write(b)}shuffleShops(b){const a={shops:[],items:[]},c={shops:[],items:[]};for(var d of this.nodes)if(d.sells&&d.sells.length){var e="armor"==d.sells[0].inventoryRow?a:c;e.shops.push(d);for(let a=0;4>a;a++)e.items.push(d.sells[a]||null);d.sells=[]}b.shuffle(a.items);b.shuffle(c.items);for(const {shops:f,items:g}of[a,c])for(b=0;g.length&&1E5>b;)d=g.pop(),e=f[b++%f.length],d&&(0<=e.sells.indexOf(d)||
4<=e.sells.length?g.push(d):e.sells.push(d));for(const {shops:b}of[a,c])for(const a of b)a.sells.sort((a,b)=>a.id-b.id)}integrate(b={}){const {tracker:a=!1}=b;var c=!a;const d=new SparseDependencyGraph$$module$js$graph(this.nodes.length),e=[],f=[],g=new Set,h=new Map;var k=[],m=[];const p=[];var r=[];const t=[];b=new Set;for(var l of this.nodes)if(l instanceof Location$$module$js$nodes){if(l.isStart){const [a]=d.addRoute([l.uid]);h.set(a.label,a)}e[l.uid]=[];f[l.uid]=[];for(const a of l.connections)g.has(a)||
(g.add(a),a.bidi&&g.add(a.reverse()));for(const a of l.chests)d.addRoute([a.uid,l.uid])}else if(l instanceof ItemGet$$module$js$nodes&&"Medical Herb"===l.name&&(d.addRoute([l.uid]),d.finalize(l.uid)),l instanceof Option$$module$js$nodes)k.push(l);else if(l instanceof TrackerNode$$module$js$nodes)m.push(l);else if(l instanceof Condition$$module$js$nodes)p.push(l);else if(l instanceof Trigger$$module$js$nodes)r.push(l);else if(l instanceof ItemGet$$module$js$nodes)t.push(l);else if(l instanceof Slot$$module$js$nodes)b.add(l);
else if(!(l instanceof Area$$module$js$nodes))throw Error(`Unknown node type: ${l.nodeType}`);for(const a of g)e[a.from.uid].push(a),f[a.to.uid].push(a);l=(b)=>{for(const c of b){for(const b of c.edges({tracker:a}))d.addRoute(b);d.finalize(c.uid)}};l(k);c&&l(m);l(r);for(c=h.values();!(k=c.next()).done;){k=k.value;m=k.target;for(var n of e[m]){m=[n.to.uid,...k.deps];for(r=n.deps.length-1;0<=r;r--)m.push(n.deps[r].uid);n.from.bossNode&&m.push(n.from.bossNode.uid);for(const a of d.addRoute(m))h.has(a.label)||
h.set(a.label,a)}}l(p);for(n=0;n<this.nodes.length;n++)this.nodes[n]instanceof ItemGet$$module$js$nodes||this.nodes[n]instanceof TrackerNode$$module$js$nodes||d.finalize(n);n=new LocationList$$module$js$nodes(this);for(const a of b)for(const b of d.nodes[a.uid].values())n.addRoute([a.uid,...b]);return n}}
class LocationList$$module$js$nodes{constructor(b){this.worldGraph=b;this.uidToLocation=[];this.locationToUid=[];this.uidToItem=[];this.itemToUid=[];this.routes=[];this.unlocks=[];this.win=null}item(b){return this.worldGraph.nodes[this.itemToUid[b]]}location(b){return this.worldGraph.nodes[this.locationToUid[b]]}addRoute(b){let a=Bits$$module$js$bits.of(),c;const d=[];for(let e=b.length-1;0<=e;e--){const f=e?this.uidToItem:this.uidToLocation,g=e?this.itemToUid:this.locationToUid,h=b[e];let k=f[h];
null==k&&(k=g.length,g.push(h),f[h]=k,e||null!=this.worldGraph.nodes[h].slotName||(this.win=k));e?(a=Bits$$module$js$bits.with(a,k),d.push(this.unlocks[k]||(this.unlocks[k]=new Set))):c=k}(this.routes[c]||(this.routes[c]=[])).push(a);for(const a of d)a.add(c)}canReach(b,a){b=this.uidToLocation(b.uid);b=this.routes[b];for(let c=0;c<b.length;c++)if(Bits$$module$js$bits.containsAll(a,b[c]))return!0;return!1}traverse(b=Bits$$module$js$bits.of(),a=[]){b=Bits$$module$js$bits.clone(b);const c=new Set;let d=
new Set;for(var e=0;e<this.locationToUid.length;e++)d.add(e);e=d[Symbol.iterator]();for(var f;!(f=e.next()).done;){f=f.value;d.delete(f);if(c.has(f))continue;const e=this.routes[f];for(let g=0;g<e.length;g++)if(Bits$$module$js$bits.containsAll(b,e[g])){c.add(f);if(a[f]){b=Bits$$module$js$bits.with(b,a[f]);for(let b of this.unlocks[a[f]])d.add(b)}break}}return c}traverseDepths(b){let a=Bits$$module$js$bits.of(),c=0;const d=[],e={};let f=new Set;for(var g=0;g<this.locationToUid.length;g++)f.add(g);
f.add(e);g=f[Symbol.iterator]();for(var h;!(h=g.next()).done;){h=h.value;f.delete(h);if(h===e){f.size&&f.add(e);c++;continue}if(null!=d[h])continue;const g=this.routes[h];for(let e=0;e<g.length;e++)if(Bits$$module$js$bits.containsAll(a,g[e])){d[h]=c;if(b[h]){a=Bits$$module$js$bits.with(a,b[h]);for(let a of this.unlocks[b[h]])f.add(a)}break}}return d}toString(){const b=[];for(let a=0;a<this.routes.length;a++){const c=this.worldGraph.nodes[this.locationToUid[a]],d=this.routes[a],e=[];for(let a=0;a<
d.length;a++){const b=[];for(const c of Bits$$module$js$bits.bits(d[a]))b.push(this.worldGraph.nodes[this.itemToUid[c]]);e.push("("+b.join(" & ")+")")}b.push(`${c}: ${e.join(" | ")}`)}return b.join("\n")}assumedFill(b,a=(a,b)=>!0,c=FillStrategy$$module$js$nodes){const d=c.shuffleItems(this.itemToUid.map((a)=>this.worldGraph.nodes[a]),b);let e=Bits$$module$js$bits.from(d);const f=Array(this.locationToUid.length).fill(null);for(;d.length;){const g=d.pop();if(!Bits$$module$js$bits.has(e,g))continue;
const h=this.worldGraph.nodes[this.itemToUid[g]];e=Bits$$module$js$bits.without(e,g);const k=[...this.traverse(e,f)].filter((a)=>null==f[a]);c.shuffleSlots(h,k,b);let m=!1;for(const b of k)if(null==f[b]&&b!=this.win&&a(this.worldGraph.nodes[this.locationToUid[b]],h)){if(100<b)throw Error("WTF");f[b]=g;m=!0;break}if(!m)return null}return f}}
class FillStrategy$$module$js$nodes{shuffleSlots(b,a,c){}static shuffleSlots(b,a,c){c.shuffle(a)}shuffleItems(b,a){}static shuffleItems(b,a){const c=[];for(let a=0;a<b.length;a++){const {shufflePriority:d=1}=b[a];for(let b=0;b<d;b++)c.push(a)}a.shuffle(c);return c}}const write$$module$js$nodes=(b,a,c)=>{b[a]=c};class Filling$$module$js$nodes{constructor(){this.data=[]}has(b){}get(b){}set(b,a){}fits(b,a){return!0}}var module$js$nodes={};module$js$nodes.TrackerNode=TrackerNode$$module$js$nodes;
module$js$nodes.Option=Option$$module$js$nodes;module$js$nodes.Slot=Slot$$module$js$nodes;module$js$nodes.BossDrop=BossDrop$$module$js$nodes;module$js$nodes.Chest=Chest$$module$js$nodes;module$js$nodes.ItemGet=ItemGet$$module$js$nodes;module$js$nodes.Item=Item$$module$js$nodes;module$js$nodes.Magic=Magic$$module$js$nodes;module$js$nodes.Trigger=Trigger$$module$js$nodes;module$js$nodes.Condition=Condition$$module$js$nodes;module$js$nodes.Boss=Boss$$module$js$nodes;module$js$nodes.Area=Area$$module$js$nodes;
module$js$nodes.Connection=Connection$$module$js$nodes;module$js$nodes.Location=Location$$module$js$nodes;module$js$nodes.WorldGraph=WorldGraph$$module$js$nodes;module$js$nodes.LocationList=LocationList$$module$js$nodes;module$js$nodes.FillStrategy=FillStrategy$$module$js$nodes;module$js$nodes.Filling=Filling$$module$js$nodes;const seq$$module$js$rom=(b,a)=>{a=void 0===a?(a)=>a:a;return Array(b).fill(0).map((b,d)=>a(d))},slice$$module$js$rom=(b,a,c)=>b.slice(a,a+c),signed$$module$js$rom=(b)=>128>b?b:b-256,varSlice$$module$js$rom=(b,a,c,d,e)=>{e=void 0===e?Infinity:e;const f=[];for(;a+c<=e&&b[a]!=d;)f.push(b.slice(a,a+c)),a+=c;return f},addr$$module$js$rom=(b,a,c)=>(b[a]|b[a+1]<<8)+(void 0===c?0:c),group$$module$js$rom=(b,a)=>seq$$module$js$rom(Math.max(0,Math.floor(a.length/b)),(c)=>slice$$module$js$rom(a,c*b,b)),reverseBits$$module$js$rom=
(b)=>65793*(2050*b&139536|32800*b&558144)>>>16&255,countBits$$module$js$rom=(b)=>{b-=b>>1&85;b=(b&51)+(b>>2&51);return b+(b>>4)&15},INVALID_LOCATIONS$$module$js$rom=new Set([11,13,18,19,22,23,29,31,54,55,58,59,63,83,99,102,103,111,116,117,118,119,121,122,123,139,141,151,153,154,155,189,202,204,219,230,234,252,253,254,255]),LOCATION_NAMES$$module$js$rom={[0]:"Mezame Shrine",[1]:"Leaf - Outside Start",[2]:"Leaf",[3]:"Valley of Wind",[4]:"Sealed Cave 1",[5]:"Sealed Cave 2",[6]:"Sealed Cave 3",[7]:"Sealed Cave 4",
[8]:"Sealed Cave 5",[9]:"Sealed Cave 6",[10]:"Sealed Cave 7",[12]:"Sealed Cave 8",[14]:"Windmill Cave",[15]:"Windmill",[16]:"Zebu Cave",[17]:"Mt Sabre West - Cave 1",[20]:"Cordel Plains West",[21]:"Cordel Plains East",[24]:"Brynmaer",[25]:"Outside Stom House",[26]:"Swamp",[27]:"Amazones",[28]:"Oak",[30]:"Stom House",[32]:"Mt Sabre West - Lower",[33]:"Mt Sabre West - Upper",[34]:"Mt Sabre West - Cave 2",[35]:"Mt Sabre West - Cave 3",[36]:"Mt Sabre West - Cave 4",[37]:"Mt Sabre West - Cave 5",[38]:"Mt Sabre West - Cave 6",
[39]:"Mt Sabre West - Cave 7",[40]:"Mt Sabre North - Main",[41]:"Mt Sabre North - Middle",[42]:"Mt Sabre North - Cave 1",[43]:"Mt Sabre North - Cave 2",[44]:"Mt Sabre North - Cave 3",[45]:"Mt Sabre North - Cave 4",[46]:"Mt Sabre North - Cave 5",[47]:"Mt Sabre North - Cave 6",[48]:"Mt Sabre North - Left Cell",[49]:"Mt Sabre North - Prison Key Hall",[50]:"Mt Sabre North - Right Cell",[51]:"Mt Sabre North - Cave 7",[52]:"Mt Sabre North - Cave 8",[53]:"Mt Sabre North - Summit Cave",[56]:"Mt Sabre North - Entrance Cave",
[57]:"Mt Sabre North - Cave 5a",[60]:"Nadare - Inn",[61]:"Nadare - Tool Shop",[62]:"Nadare - Back Room",[64]:"Waterfall Valley North",[65]:"Waterfall Valley South",[66]:"Lime Tree Valley",[67]:"Lime Tree Lake",[68]:"Kirisa Plant Cave 1",[69]:"Kirisa Plant Cave 2",[70]:"Kirisa Plant Cave 3",[71]:"Kirisa Meadow",[72]:"Fog Lamp Cave 1",[73]:"Fog Lamp Cave 2",[74]:"Fog Lamp Cave 3",[75]:"Fog Lamp Cave Dead End",[76]:"Fog Lamp Cave 4",[77]:"Fog Lamp Cave 5",[78]:"Fog Lamp Cave 6",[79]:"Fog Lamp Cave 7",
[80]:"Portoa",[81]:"Portoa - Fisherman Island",[82]:"Mesia Shrine",[84]:"Waterfall Cave 1",[85]:"Waterfall Cave 2",[86]:"Waterfall Cave 3",[87]:"Waterfall Cave 4",[88]:"Tower - Entrance",[89]:"Tower 1",[90]:"Tower 2",[91]:"Tower 3",[92]:"Tower - Outside Mesia",[93]:"Tower - Outside Dyna",[94]:"Tower - Mesia",[95]:"Tower - Dyna",[96]:"Angry Sea",[97]:"Boat House",[98]:"Joel - Lighthouse",[100]:"Underground Channel",[101]:"Zombie Town",[104]:"Evil Spirit Island 1",[105]:"Evil Spirit Island 2",[106]:"Evil Spirit Island 3",
[107]:"Evil Spirit Island 4",[108]:"Sabera Palace 1",[109]:"Sabera Palace 2",[110]:"Sabera Palace 3",[112]:"Joel - Secret Passage",[113]:"Joel",[114]:"Swan",[115]:"Swan - Gate",[120]:"Goa Valley",[124]:"Mt Hydra",[125]:"Mt Hydra - Cave 1",[126]:"Mt Hydra - Outside Shyron",[127]:"Mt Hydra - Cave 2",[128]:"Mt Hydra - Cave 3",[129]:"Mt Hydra - Cave 4",[130]:"Mt Hydra - Cave 5",[131]:"Mt Hydra - Cave 6",[132]:"Mt Hydra - Cave 7",[133]:"Mt Hydra - Cave 8",[134]:"Mt Hydra - Cave 9",[135]:"Mt Hydra - Cave 10",
[136]:"Styx 1",[137]:"Styx 2",[138]:"Styx 3",[140]:"Shyron",[142]:"Goa",[143]:"Goa Fortress - Oasis Entrance",[144]:"Desert 1",[145]:"Oasis Cave - Main",[146]:"Desert Cave 1",[147]:"Sahara",[148]:"Sahara - Outside Cave",[149]:"Desert Cave 2",[150]:"Sahara Meadow",[152]:"Desert 2",[156]:"Pyramid Front - Entrance",[157]:"Pyramid Front - Branch",[158]:"Pyramid Front - Main",[159]:"Pyramid Front - Draygon",[160]:"Pyramid Back - Entrance",[161]:"Pyramid Back - Hall 1",[162]:"Pyramid Back - Branch",[163]:"Pyramid Back - Dead End Left",
[164]:"Pyramid Back - Dead End Right",[165]:"Pyramid Back - Hall 2",[166]:"Pyramid Back - Draygon Revisited",[167]:"Pyramid Back - Teleporter",[168]:"Goa Fortress - Entrance",[169]:"Goa Fortress - Kelbesque",[170]:"Goa Fortress - Zebu",[171]:"Goa Fortress - Sabera",[172]:"Goa Fortress - Tornel",[173]:"Goa Fortress - Mado 1",[174]:"Goa Fortress - Mado 2",[175]:"Goa Fortress - Mado 3",[176]:"Goa Fortress - Karmine 1",[177]:"Goa Fortress - Karmine 2",[178]:"Goa Fortress - Karmine 3",[179]:"Goa Fortress - Karmine 4",
[180]:"Goa Fortress - Karmine 5",[181]:"Goa Fortress - Karmine 6",[182]:"Goa Fortress - Karmine 7",[183]:"Goa Fortress - Exit",[184]:"Oasis Cave - Entrance",[185]:"Goa Fortress - Asina",[186]:"Goa Fortress - Kensu",[187]:"Goa - House",[188]:"Goa - Inn",[190]:"Goa - Tool Shop",[191]:"Goa - Tavern",[192]:"Leaf - Elder House",[193]:"Leaf - Rabbit Hut",[194]:"Leaf - Inn",[195]:"Leaf - Tool Shop",[196]:"Leaf - Armor Shop",[197]:"Leaf - Student House",[198]:"Brynmaer - Tavern",[199]:"Brynmaer - Pawn Shop",
[200]:"Brynmaer - Inn",[201]:"Brynmaer - Armor Shop",[203]:"Brynmaer - Item Shop",[205]:"Oak - Elder House",[206]:"Oak - Mother House",[207]:"Oak - Tool Shop",[208]:"Oak - Inn",[209]:"Amazones - Inn",[210]:"Amazones - Item Shop",[211]:"Amazones - Armor Shop",[212]:"Amazones - Elder",[213]:"Nadare",[214]:"Portoa - Fisherman House",[215]:"Portoa - Palace Entrance",[216]:"Portoa - Fortune Teller",[217]:"Portoa - Pawn Shop",[218]:"Portoa - Armor Shop",[220]:"Portoa - Inn",[221]:"Portoa - Tool Shop",[222]:"Portoa - Palace Left",
[223]:"Portoa - Palace Throne Room",[224]:"Portoa - Palace Right",[225]:"Portoa - Asina Room",[226]:"Amazones - Elder Downstairs",[227]:"Joel - Elder House",[228]:"Joel - Shed",[229]:"Joel - Tool Shop",[231]:"Joel - Inn",[232]:"Zombie Town - House",[233]:"Zombie Town - House Basement",[235]:"Swan - Tool Shop",[236]:"Swan - Stom Hut",[237]:"Swan - Inn",[238]:"Swan - Armor Shop",[239]:"Swan - Tavern",[240]:"Swan - Pawn Shop",[241]:"Swan - Dance Hall",[242]:"Shyron - Fortress",[243]:"Shyron - Training Hall",
[244]:"Shyron - Hospital",[245]:"Shyron - Armor Shop",[246]:"Shyron - Tool Shop",[247]:"Shyron - Inn",[248]:"Sahara - Inn",[249]:"Sahara - Tool Shop",[250]:"Sahara - Elder House",[251]:"Sahara - Pawn Shop"};class Entity$$module$js$rom{constructor(b,a){this.rom=b;this.id=a}toString(){return this.constructor.name+" $"+this.id.toString(16).padStart(2,0)}}
class Screen$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=(255<a?64+a:a)<<8;this.tiles=seq$$module$js$rom(15,(a)=>slice$$module$js$rom(b.prg,this.base|a<<4,16))}metatile(b,a){return this.rom.metatiles[this.tiles[b][a]]}}
class Tileset$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);a&=63;this.tileBase=65536|a<<8;this.attrBase=77824|a<<4;this.alternatesBase=81408|a<<3;this.tiles=seq$$module$js$rom(4,(a)=>slice$$module$js$rom(b.prg,this.tileBase|a<<8,256));this.attrs=seq$$module$js$rom(256,(a)=>b.prg[this.attrBase|a>>2]>>((a&3)<<1)&3);this.alternates=slice$$module$js$rom(b.prg,this.alternatesBase,32)}}
class TileEffects$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=a<<8&8191|73728;this.effects=slice$$module$js$rom(b.prg,this.base,256)}}class Palette$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=(a&3)<<2|(a&252)<<6|16624;this.colors=slice$$module$js$rom(b.prg,this.base,4)}color(b){return this.colors[b]&63}}
class Pattern$$module$js$rom extends Entity$$module$js$rom{constructor(b,a,c){super(b,a);this.pixels=c||slice$$module$js$rom(b.chr,a<<4,16)}pixelAt(b,a){return(this.pixels[b|8]>>a&1)<<1|this.pixels[b]>>a&1}flipH(){return new Pattern$$module$js$rom(this.rom,-1,this.pixels.map(reverseBits$$module$js$rom))}flipV(){return new Pattern$$module$js$rom(this.rom,-1,seq$$module$js$rom(16,(b)=>this.pixels[b&8|~b&7]))}flip(b){let a=this;b&64&&(a=a.flipH());b&128&&(a=a.flipV());return a}}
class TileAnimation$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=255865+(a<<3);this.pages=slice$$module$js$rom(b.prg,this.base,8)}}
class Hitbox$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=218769+(a<<2);this.coordinates=slice$$module$js$rom(b.prg,this.base,4)}get w(){return this.coordinates[1]}get x0(){return signed$$module$js$rom(this.coordinates[0])}get x1(){return this.x0+this.w}get h(){return this.coordinates[3]}get y0(){return signed$$module$js$rom(this.coordinates[2])}get y1(){return this.y0+this.h}}
class AdHocSpawn$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=(a<<2)+171008;this.lowerSlot=b.prg[this.base];this.upperSlot=b.prg[this.base+1];this.object=b.prg[this.base+2];this.count=b.prg[this.base+3]}}
class ItemGet$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.itemPointer=122214+a;this.item=b.prg[this.itemPointer];this.tablePointer=121600+2*a;this.tableBase=addr$$module$js$rom(b.prg,this.tablePointer,81920);a=[];let c=this.tableBase;a.push(b.prg[c++]);a.push(b.prg[c++]);a.push(b.prg[c++]);for(a.push(b.prg[c++]);;){const d=b.prg[c++];a.push(d);a.push(b.prg[c++]);if(d&64)break}a.push(b.prg[c++]);this.table=Uint8Array.from(a)}write(b){b=void 0===b?this.rom:b;b.prg[this.itemPointer]=
this.item;const a=this.table;b.prg.subarray(this.tableBase,this.tableBase+a.length).set(a)}}class Npc$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=33008|(a&252)<<6|(a&3)<<2;this.data=slice$$module$js$rom(b.prg,this.base,4)}}
class Location$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.mapDataPointer=82688+(a<<1);this.mapDataBase=addr$$module$js$rom(b.prg,this.mapDataPointer,49152);this.valid=49152<this.mapDataBase&&!!LOCATION_NAMES$$module$js$rom[a];this.name=LOCATION_NAMES$$module$js$rom[a];this.layoutBase=addr$$module$js$rom(b.prg,this.mapDataBase,49152);this.graphicsBase=addr$$module$js$rom(b.prg,this.mapDataBase+2,49152);this.entrancesBase=addr$$module$js$rom(b.prg,this.mapDataBase+
4,49152);this.exitsBase=addr$$module$js$rom(b.prg,this.mapDataBase+6,49152);this.flagsBase=addr$$module$js$rom(b.prg,this.mapDataBase+8,49152);this.pitsBase=this.layoutBase==this.mapDataBase+10?null:addr$$module$js$rom(b.prg,this.mapDataBase+10,49152);this.bgm=b.prg[this.layoutBase];this.layoutWidth=b.prg[this.layoutBase+1];this.layoutHeight=b.prg[this.layoutBase+2];this.animation=b.prg[this.layoutBase+3];this.extended=b.prg[this.layoutBase+4];this.screens=seq$$module$js$rom(this.height,(a)=>slice$$module$js$rom(b.prg,
this.layoutBase+5+a*this.width,this.width));this.tilePalettes=slice$$module$js$rom(b.prg,this.graphicsBase,3);this.tileset=b.prg[this.graphicsBase+3];this.tileEffects=b.prg[this.graphicsBase+4];this.tilePatterns=slice$$module$js$rom(b.prg,this.graphicsBase+5,2);this.entrances=group$$module$js$rom(4,b.prg.slice(this.entrancesBase,this.exitsBase));this.exits=varSlice$$module$js$rom(b.prg,this.exitsBase,4,255,this.flagsBase);this.flags=varSlice$$module$js$rom(b.prg,this.flagsBase,2,255);this.pits=this.pitsBase?
varSlice$$module$js$rom(b.prg,this.pitsBase,4,255):[];this.npcDataPointer=102913+(a<<1);this.npcDataBase=addr$$module$js$rom(b.prg,this.npcDataPointer,65536);this.spritePalettes=(a=65536!=this.npcDataBase)?slice$$module$js$rom(b.prg,this.npcDataBase+1,2):null;this.spritePatterns=a?slice$$module$js$rom(b.prg,this.npcDataBase+3,2):null;this.objects=a?varSlice$$module$js$rom(b.prg,this.npcDataBase+5,4,255):null}get width(){return this.layoutWidth+1}get height(){return this.layoutHeight+1}monsters(){return this.objects?
this.objects.flatMap((b,a)=>{var [,,c,d]=b;return c&7||!this.rom.objects[d+80]?[]:[[this.id,a+13,c&128?1:0,d+80,this.spritePatterns[c&128?1:0],this.rom.objects[d+80].palettes()[0],this.spritePalettes[this.rom.objects[d+80].palettes()[0]-2]]]}):[]}}
class ObjectData$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.objectDataPointer=109568+(a<<1);this.objectDataBase=addr$$module$js$rom(b.prg,this.objectDataPointer,65536);this.sfx=b.prg[this.objectDataBase];a=this.objectDataBase+1;this.objectData=[];let c=0;for(let d=0;32>d;d++)d&7||(c=b.prg[a++]),this.objectData.push(c&128?b.prg[a++]:0),c<<=1}serialize(){const b=[this.sfx];for(let a=0;4>a;a++){let c=b.length;b.push(0);for(let d=0;8>d;d++)this.objectData[8*a+d]&&(b[c]|=
128>>>d,b.push(this.objectData[8*a+d]))}return Uint8Array.from(b)}write(b){b=void 0===b?this.rom:b;b.prg[this.objectDataPointer]=this.objectDataBase&255;b.prg[this.objectDataPointer+1]=this.objectDataBase>>>8&255;const a=this.serialize();b.prg.subarray(this.objectDataBase,this.objectDataBase+a.length).set(a)}get(b){return this.objectData[b-768>>>5]}static setupProps(){const b=(...a)=>({get(){let b=0;for(const c of a){const [a,d=255,g=0]=c;b|=(this.objectData[a-768>>>5]&d)>>>(0>g?0:g)<<(0>g?-g:0)}return b},
set(b){for(const c of a){const [a,d=255,g=0]=c;{const c=a-768>>>5;this.objectData[c]=this.objectData[c]&~d|b>>>(0>g?-g:0)<<(0>g?0:g)&d}}}});Object.defineProperties(this.prototype,{metasprite:b([768]),collisionPlane:b([928,240,4]),hitbox:b([1056,64,2],[928,15]),hp:b([960]),atk:b([992]),def:b([1024]),level:b([1056,31]),child:b([1088]),terrainSusceptibility:b([1120]),immobile:b([1184,128,7]),action:b([1184,127]),replacement:b([1216]),goldDrop:b([1280,240,4]),elements:b([1280,15]),expReward:b([1312]),
attackType:b([1344])})}parents(){return this.rom.monsters.filter((b)=>b.child&&this.rom.adHocSpawns[b.child].object==this.id)}locations(){return this.rom.locations.filter((b)=>b&&b.objects&&b.objects.some((a)=>0==(a[2]&7)&&(a[3]+80&255)==this.id))}palettes(b){if(34==this.action)return[3];let a=this.objectData[0];42==this.action&&(a=this.objectData[31]|1);41==this.action&&(a=107);38==this.action&&(a=156);b=(void 0===b?0:b)&&this.child?this.rom.metasprites[this.rom.objects[this.rom.adHocSpawns[this.child].object].objectData[0]]:
null;return[...new Set([...this.rom.metasprites[a].palettes(),...b?b.palettes():[]])]}}ObjectData$$module$js$rom.setupProps();
class Metasprite$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=addr$$module$js$rom(b.prg,230492+(this.id<<1),196608);this.valid=196608<this.base;if(255==b.prg[this.base]){const c=addr$$module$js$rom(b.prg,this.base+1);for(let a=0;256>a;a++)if(addr$$module$js$rom(b.prg,230492+(a<<1))==c){this.mirrored=a;break}if(null==this.mirrored)throw Error("could not find mirrored sprite for "+a.toString(16));this.frames=this.frameMask=this.size=0;this.sprites=[]}else this.mirrored=
null,this.size=b.prg[this.base],this.frameMask=b.prg[this.base+1],this.frames=this.frameMask+1,this.sprites=seq$$module$js$rom(this.frames,(a)=>{a=this.base+2+4*a*this.size;const c=[];for(let d=0;d<this.size&&128!=b.prg[a+4*d];d++)c.push(slice$$module$js$rom(b.prg,a+4*d,4));return c})}palettes(){if(!this.valid)return[];let b=this;b.mirrored&&(b=this.rom.metasprites[b.mirrored]);const a=new Set;for(const c of b.sprites)for(let b of c){let [c,,d]=b;if(128==c)break;a.add(d&3)}return[...a]}}
class DataTable$$module$js$rom extends Array{constructor(b,a,c,d,e){e=void 0===e?1<d?(...a)=>a:(a)=>a:e;super(c);this.rom=b;this.base=a;this.count=c;this.width=d;for(let f=0;f<c;f++)this[f]=e(...slice$$module$js$rom(b.prg,a+f*d,d))}}
class AddressTable$$module$js$rom extends Array{constructor(b,a,c,d,e){e=void 0===e?(a)=>a:e;super(c);this.rom=b;this.base=a;this.count=c;this.offset=d;this.addresses=seq$$module$js$rom(this.count,(c)=>addr$$module$js$rom(b.prg,a+2*c,d));for(let a=0;a<c;a++)this[a]=e(this.addresses[a],a,this.addresses)}}
class Message$$module$js$rom{constructor(b,a,c,d){this.messages=b;this.part=a;this.id=c;this.addr=d;a=b.rom.prg;c=[];for(this.bytes=[];a[d];d++){let e=a[d];this.bytes.push(e);if(1!=e)if(2==e)c.push("\n");else if(3==e)c.push("\u25bc\n");else if(4==e)c.push("SIMEA");else if(8==e)c.push("ITEM");else if(5<=e&&9>=e){const f=a[++d];9==e?c.push(" ".repeat(f)):(c.push(b.extraWords[e][f]),PUNCTUATION$$module$js$rom[String.fromCharCode(a[d+1])]||c.push(" "))}else if(128<=e)c.push(b.basicWords[e-128]),PUNCTUATION$$module$js$rom[String.fromCharCode(a[d+
1])]||c.push(" ");else if(32<=e)c.push(String.fromCharCode(e));else throw Error(`Non-exhaustive switch: ${e} at ${d.toString(16)}`);}this.text=c.join("")}}const PUNCTUATION$$module$js$rom={"\x00":!0,".":!0,",":!0,_:!0,":":!0,"!":!0,"?":!0,"'":!0," ":!0};
class Messages$$module$js$rom{constructor(b){this.rom=b;const a=(a)=>readString$$module$js$rom(b.prg,a);this.basicWords=new AddressTable$$module$js$rom(b,166144,128,131072,a);this.extraWords={5:new AddressTable$$module$js$rom(b,166400,10,131072,a),6:new AddressTable$$module$js$rom(b,166420,36,131072,a),7:new AddressTable$$module$js$rom(b,166492,74,131072,a)};this.banks=new DataTable$$module$js$rom(b,164862,36,1);this.parts=new AddressTable$$module$js$rom(b,164898,34,131072,(a,d,e)=>new AddressTable$$module$js$rom(b,
a,33==d?3:e[d+1]-a>>>1,(this.banks[d]<<13)-40960,(a,b)=>new Message$$module$js$rom(this,d,b,a)))}}
class Rom$$module$js$rom{constructor(b){this.prg=b.subarray(16,262160);this.chr=b.subarray(262160);this.screens=seq$$module$js$rom(259,(a)=>new Screen$$module$js$rom(this,a));this.tilesets=seq$$module$js$rom(12,(a)=>new Tileset$$module$js$rom(this,a<<2|128));this.tileEffects=seq$$module$js$rom(11,(a)=>new TileEffects$$module$js$rom(this,a+179));this.patterns=seq$$module$js$rom(this.chr.length>>4,(a)=>new Pattern$$module$js$rom(this,a));this.palettes=seq$$module$js$rom(256,(a)=>new Palette$$module$js$rom(this,
a));this.locations=seq$$module$js$rom(256,(a)=>LOCATION_NAMES$$module$js$rom[a]?new Location$$module$js$rom(this,a):null);this.tileAnimations=seq$$module$js$rom(4,(a)=>new TileAnimation$$module$js$rom(this,a));this.hitboxes=seq$$module$js$rom(24,(a)=>new Hitbox$$module$js$rom(this,a));this.objects=seq$$module$js$rom(256,(a)=>new ObjectData$$module$js$rom(this,a));this.adHocSpawns=seq$$module$js$rom(96,(a)=>new AdHocSpawn$$module$js$rom(this,a));this.metasprites=seq$$module$js$rom(256,(a)=>new Metasprite$$module$js$rom(this,
a));this.messages=new Messages$$module$js$rom(this);this.itemGets=seq$$module$js$rom(113,(a)=>new ItemGet$$module$js$rom(this,a));this.npcs=seq$$module$js$rom(205,(a)=>new Npc$$module$js$rom(this,a))}get monsters(){let b=new Set;for(const a of this.locations)if(a&&a.objects)for(const c of a.objects)0==(c[2]&7)&&b.add(this.objects[c[3]+80&255]);b=[...b];b.sort((a,b)=>a.id-b.id);return b}get projectiles(){let b=new Set;for(const a of this.monsters)a.child&&b.add(this.objects[this.adHocSpawns[a.child].object]);
b=[...b];b.sort((a,b)=>a.id-b.id);return b}get monsterGraphics(){const b={};for(const a of this.locations)if(a&&a.objects)for(const c of a.objects)if(!(c[2]&7)){const d=c[2]&128?1:0,e=(c[3]+80).toString(16).padStart(2,0);(b[e]=b[e]||{})[`${d}:${a.spritePatterns[d].toString(16)}:${a.spritePalettes[d].toString(16)}`]={slot:d,pat:a.spritePatterns[d],pal:a.spritePalettes[d]}}return b}get locationMonsters(){const b={};for(const a of this.locations){if(!a||!a.objects)continue;const c=b["$"+a.id.toString(16).padStart(2,
0)]={};for(const b of a.objects)if(!(b[2]&7)){const a=b[2]&128?1:0,d=b[3]+80;c[`${a}:${d.toString(16)}`]=(c[`${a}:${d.toString(16)}`]||0)+1}}return b}static load(b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const a=yield pickFile$$module$js$rom();b&&(yield b(a));return new Rom$$module$js$rom(a)})}writeNpcData(){for(const b of this.locations){if(!b)continue;let a=b.npcDataBase;b.spritePalettes&&this.prg.subarray(a+1,a+3).set(b.spritePalettes);b.spritePatterns&&this.prg.subarray(a+
3,a+5).set(b.spritePatterns);a+=5;for(const c of b.objects||[])this.prg.subarray(a,a+4).set(c),a+=4}}writeObjectData(){let b=110080;const a={};for(const c of this.objects){const d=c.serialize(),e=d.join(" ");e in a?c.objectDataBase=a[e]:(c.objectDataBase=b,a[e]=b,b+=d.length);c.write()}return b}}
const readString$$module$js$rom=(b,a)=>{const c=[];for(;b[a];)c.push(b[a++]);return String.fromCharCode(...c)},pickFile$$module$js$rom=()=>new Promise((b,a)=>{if("#reset"!=window.location.hash){const a=window.localStorage.getItem("rom");if(a)return b(Uint8Array.from(Array(a.length/2).fill(0).map((b,c)=>Number.parseInt(a[2*c]+a[2*c+1],16))))}const c=document.createElement("input");document.body.appendChild(c);c.type="file";c.addEventListener("change",()=>{const a=c.files[0],e=new FileReader;e.addEventListener("loadend",
()=>{const a=new Uint8Array(e.result),d=Array.from(a,(a)=>a.toString(16).padStart(2,0)).join("");window.localStorage.setItem("rom",d);c.remove();b(a)});e.readAsArrayBuffer(a)})}),EXPECTED_CRC32$$module$js$rom=466849842;var module$js$rom={};module$js$rom.Rom=Rom$$module$js$rom;module$js$rom.EXPECTED_CRC32=EXPECTED_CRC32$$module$js$rom;const IM1$$module$js$random=2147483563,IM2$$module$js$random=2147483399,AM$$module$js$random=1/IM1$$module$js$random,IMM1$$module$js$random=IM1$$module$js$random-1,IA1$$module$js$random=40014,IA2$$module$js$random=40692,IQ1$$module$js$random=53668,IQ2$$module$js$random=52774,IR1$$module$js$random=12211,IR2$$module$js$random=3791,NTAB$$module$js$random=32,NDIV$$module$js$random=1+Math.floor(IMM1$$module$js$random/NTAB$$module$js$random),EPS$$module$js$random=1.2E-7,RNMX$$module$js$random=1-EPS$$module$js$random;
class Random$$module$js$random{constructor(b=Math.floor(4294967296*Math.random())){this.seed(b)}seed(b){this.idum2=this.idum=Math.max(1,Math.floor(b));this.iy=0;this.iv=Array(NTAB$$module$js$random).fill(0);for(b=NTAB$$module$js$random+7;0<=b;b--){const a=Math.floor(this.idum/IQ1$$module$js$random);this.idum=IA1$$module$js$random*(this.idum-a*IQ1$$module$js$random)-a*IR1$$module$js$random;0>this.idum&&(this.idum+=IM1$$module$js$random);b<NTAB$$module$js$random&&(this.iv[b]=this.idum)}this.iy=this.iv[0]}next(){var b=
Math.floor(this.idum/IQ1$$module$js$random);this.idum=IA1$$module$js$random*(this.idum-b*IQ1$$module$js$random)-b*IR1$$module$js$random;0>this.idum&&(this.idum+=IM1$$module$js$random);b=Math.floor(this.idum2/IQ2$$module$js$random);this.idum2=IA2$$module$js$random*(this.idum2-b*IQ2$$module$js$random)-b*IR2$$module$js$random;0>this.idum2&&(this.idum2+=IM2$$module$js$random);b=Math.floor(this.iy/NDIV$$module$js$random);this.iy=this.iv[b]-this.idum2;this.iv[b]=this.idum;1>this.iy&&(this.iy+=IMM1$$module$js$random);
return Math.min(AM$$module$js$random*this.iy,RNMX$$module$js$random)}nextInt(b){return Math.floor(this.next()*b)}shuffle(b){for(let a=b.length;a;){const c=this.nextInt(a--);[b[a],b[c]]=[b[c],b[a]]}return b}}var module$js$random={};module$js$random.Random=Random$$module$js$random;const STATUS$$module$js$version="unstable",VERSION$$module$js$version="experimental",LABEL$$module$js$version="experimental 4d5deb8",HASH$$module$js$version="4d5deb8c699ff0a86dba3d9298491572f21c33dc",DATE$$module$js$version=new Date(1553940917E3);var module$js$version={};module$js$version.STATUS=STATUS$$module$js$version;module$js$version.VERSION=VERSION$$module$js$version;module$js$version.LABEL=LABEL$$module$js$version;module$js$version.HASH=HASH$$module$js$version;module$js$version.DATE=DATE$$module$js$version;var $jscompDefaultExport$$module$js$patch={apply(b,a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){a.seed||(a.seed=parseSeed$$module$js$patch("").toString(16),window.location.hash+="&seed="+a.seed);a.flags?new FlagSet$$module$js$flagset(a.flags):new FlagSet$$module$js$flagset("Em Gt Mr Rlpt Sbk Sct Sm Tasd");for(const b in a)"false"===a[b]&&(a[b]=!1)})}};
const parseSeed$$module$js$patch=(b)=>b?/^[0-9a-f]{1,8}$/i.test(b)?Number.parseInt(b,16):crc32$$module$js$crc32(b):Math.floor(4294967296*Math.random());class Reader$$module$js$patch{read(b){}}
const shuffle$$module$js$patch=(b,a,c,d,e,f)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){if("number"!==typeof a)throw Error("Bad seed");var g=crc32$$module$js$crc32(a.toString(16).padStart(8,0)+String(c))>>>0,h=c.check("Pn")||c.check("Pb")||c.check("Ps");const k={_ALLOW_TELEPORT_OUT_OF_TOWER:!0,_AUTO_EQUIP_BRACELET:c.check("Ta"),_BARRIER_REQUIRES_CALM_SEA:c.check("Rl"),_BUFF_DEOS_PENDANT:c.check("Td"),_CONNECT_LEAF_TO_LIME_TREE:c.check("Rp"),_CHECK_FLAG0:!0,_DISABLE_SHOP_GLITCH:c.check("Fs"),
_DISABLE_STATUE_GLITCH:c.check("Ft"),_DISABLE_WILD_WARP:!1,_DISPLAY_DIFFICULTY:!0,_EASY_MODE_CHARGE_WHILE_WALKING:c.check("Ec"),_EXTRA_PITY_MP:!0,_FIX_OPEL_STATUE:!0,_FIX_SHAKING:!0,_FIX_SWORD_CHARGE_GLITCH:c.check("Fc"),_FIX_VAMPIRE:!0,_LEATHER_BOOTS_GIVE_SPEED:c.check("Ts"),_NERF_WILD_WARP:c.check("Tw"),_NEVER_DIE:c.check("Di"),_NORMALIZE_SHOP_PRICES:h,_PITY_HP_AND_MP:!0,_PROGRESSIVE_BRACELET:!0,_RABBIT_BOOTS_CHARGE_FASTER:c.check("Tr"),_REVERSIBLE_SWAN_GATE:!0,_REQUIRE_HEALED_DOLPHIN_TO_RIDE:c.check("Rd"),
_SAHARA_RABBITS_REQUIRE_TELEPATHY:!1,_TELEPORT_ON_THUNDER_SWORD:c.check("Rt")},m=new Assembler$$module$js$6502,p=(a)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){m.assemble(yield d.read(a),a);m.patchRom(b)}),r=Object.keys(k).filter((a)=>k[a]).map((a)=>`define ${a} 1\n`).join("");m.assemble(r,"flags.s");yield p("preshuffle.s");g=new Random$$module$js$random(g);yield shuffle2$$module$js$depgraph(b,g,e,c,f);h&&rescaleShops$$module$js$patch(b,m,c.check("Pb")?g:null);h=new Rom$$module$js$rom(b);
rescaleMonsters$$module$js$patch(b,h);c.check("Mr")&&shuffleMonsters$$module$js$patch(b,h,g);identifyKeyItemsForDifficultyBuffs$$module$js$patch(h);c.check("Em")?(b[115996]*=2,b[115962]*=3):c.check("Hm")||(b[115996]+=16,b[115962]*=2);yield p("postshuffle.s");updateDifficultyScalingTables$$module$js$patch(b,c,m);updateCoinDrops$$module$js$patch(b,c);shuffleRandomNumbers$$module$js$patch(b,g);return stampVersionSeedAndHash$$module$js$patch(b,a,c)}),stampVersionSeedAndHash$$module$js$patch=(b,a,c)=>
{const d=crc32$$module$js$crc32(b),e=d.toString(16).padStart(8,0).toUpperCase(),f="unstable"==STATUS$$module$js$version?HASH$$module$js$version.substring(0,7).padStart(7,0).toUpperCase()+"     ":VERSION$$module$js$version.substring(0,12).padEnd(12," ");a=a.toString(16).padStart(8,0).toUpperCase();const g=(a,c)=>{for(let d=0;d<c.length;d++)b[a+16+d]=c.charCodeAt(d)},h=(a,b)=>{const c=[];for(let d=0;d<a.length||d<b.length;d++)c.push(a[d]||" "),c.push(b[d]||" ");return c.join("")};g(161743,h("  VERSION     SEED      ",
`  ${f}${a}`));a=String(c);let k;if(46<a.length){if(92<a.length)throw Error("Flag string way too long!");k=a.substring(46,92).padEnd(46," ");a=a.substring(0,46)}a=a.padEnd(46," ");g(161791,h(a.substring(0,23),a.substring(23)));k&&g(161839,h(k.substring(0,23),k.substring(23)));g(161925,h(e.substring(0,4),e.substring(4)));g(153366,"RANDOMIZER");"unstable"==STATUS$$module$js$version&&g(153404,"BETA");return d},patchBytes$$module$js$patch=(b,a,c)=>{for(let d=0;d<c.length;d++)b[a+16+d]=c[d]},patchWords$$module$js$patch=
(b,a,c)=>{for(let d=0;d<2*c.length;d+=2)b[a+16+d]=c[d>>>1]&255,b[a+17+d]=c[d>>>1]>>>8},updateCoinDrops$$module$js$patch=(b,a)=>{a.check("Fs")?patchWords$$module$js$patch(b,216030,[0,5,10,15,25,40,65,105,170,275,445,600,700,800,900,1E3]):patchWords$$module$js$patch(b,216030,[0,1,2,4,8,16,30,50,100,200,300,400,500,600,700,800])},updateDifficultyScalingTables$$module$js$patch=(b,a,c)=>{const d=Array(48).fill(0).map((a,b)=>b);patchBytes$$module$js$patch(b,c.expand("DiffAtk"),d.map((a)=>Math.round(40+
15*a/4)));patchBytes$$module$js$patch(b,c.expand("DiffDef"),d.map((a)=>4*a));patchBytes$$module$js$patch(b,c.expand("DiffHP"),d.map((a)=>Math.min(255,48+Math.round(11*a/2))));const e=a.check("Hx")?.25:a.check("Ex")?2.5:1;patchBytes$$module$js$patch(b,c.expand("DiffExp"),d.map((a)=>{a=Math.floor(4*Math.pow(2,(16+9*a)/32)*e);return 128>a?a:Math.min(255,128+(a>>4))}));patchBytes$$module$js$patch(b,216E3,[0,2,6,10,14,18,32,24,20,0,2,6,10,14,18,16,32,20])},rescaleShops$$module$js$patch=(b,a,c)=>{const d=
a.expand("BasePrices");var e=a.expand("InnPrices");const f={prices:138836,items:138792},g={prices:138704,items:138660},h=Array(48).fill(0).map((a,b)=>b);patchBytes$$module$js$patch(b,a.expand("ToolShopScaling"),h.map((a)=>Math.round(8*Math.pow(2,a/10))));patchBytes$$module$js$patch(b,a.expand("ArmorShopScaling"),h.map((a)=>Math.round(8*Math.pow(2,(47-a)/12))));for(var k of[f,g]){const {prices:d,items:e}=k;for(a=0;44>a;a++)b[d+a+16]=BASE_PRICES$$module$js$patch[b[e+a+16]]?c?c.nextInt(32)+17:32:0}for(k=
0;11>k;k++)b[e+k+16]=c?c.nextInt(40)+13:32;c=(a,c)=>{b[d+2*(a-13)+16]=c&255;b[d+2*(a-13)+17]=c>>>8};for(e=13;39>e;e++)c(e,BASE_PRICES$$module$js$patch[e]);c(39,20)},BASE_PRICES$$module$js$patch={13:4,14:16,15:50,16:325,17:1E3,18:2E3,19:4E3,21:6,22:20,23:75,24:250,25:1E3,26:4800,29:25,30:30,31:45,32:40,33:36,34:200,35:150,36:80,38:300},rescaleMonsters$$module$js$patch=(b,a)=>{for(var c of SCALED_MONSTERS$$module$js$patch.keys())for(const b in a.objects){if(SCALED_MONSTERS$$module$js$patch.has(b))return;
a.objects[c].objectDataBase==a.objects[b].objectDataBase&&(SCALED_MONSTERS$$module$js$patch[b]=SCALED_MONSTERS$$module$js$patch[c])}for(const d of SCALED_MONSTERS$$module$js$patch){const [e,{sdef:f,swrd:g,hits:h,satk:k,dgld:m,sexp:p}]=d;b=a.objects[e].objectData;c=[87,94,104,125,136,151,155,158].includes(e)?1:0;b[2]|=128;b[6]=h;b[7]=k;b[8]=f|g<<4;b[9]=b[9]&224|c;b[16]=b[16]&15|m<<4;b[17]=p}a.objects[125].objectData[16]|=8;a.writeObjectData()},shuffleMonsters$$module$js$patch=(b,a,c,d)=>{b=new MonsterPool$$module$js$patch({});
for(const c of a.locations)c&&b.populate(c);b.shuffle(c);a.writeNpcData()},identifyKeyItemsForDifficultyBuffs$$module$js$patch=(b)=>{for(const a of b.itemGets){const c=ITEMS$$module$js$patch.get(a.item);if(c&&c.key){if(!a.table)throw Error(`No table for ${c.name}`);if(255==a.table[a.table.length-1])a.table[a.table.length-1]=254;else throw Error(`Expected FF at end of ItemGet table: ${a.id.toString(16)}: ${Array.from(a.table).map((a)=>a.toString(16).padStart(2,0)).join(" ")}`);a.write(b)}}},SCALED_MONSTERS$$module$js$patch=
new Map([[63,"p","Sorceror shot",,,,19,,,],[75,"m","wraith??",2,,2,22,4,61],[79,"m","wraith",1,,2,20,4,61],[80,"m","Blue Slime",,,1,16,2,32],[81,"m","Weretiger",,,1,21,4,40],[82,"m","Green Jelly",4,,3,16,4,36],[83,"m","Red Slime",6,,4,16,4,48],[84,"m","Rock Golem",6,,11,24,6,85],[85,"m","Blue Bat",,,,4,,32],[86,"m","Green Wyvern",4,,4,24,6,52],[87,"b","Vampire",3,,13,18,,,],[88,"m","Orc",3,,4,21,4,57],[89,"m","Red Flying Swamp Insect",3,,1,21,4,57],[90,"m","Blue Mushroom",2,,1,21,4,44],[91,"m","Swamp Tomato",
3,,2,35,4,52],[92,"m","Flying Meadow Insect",3,,3,23,4,81],[93,"m","Swamp Plant",,,,,,36],[94,"b","Insect",,1,8,6,,,],[95,"m","Large Blue Slime",5,,3,20,4,52],[96,"m","Ice Zombie",5,,7,14,4,57],[97,"m","Green Living Rock",,,1,9,4,28],[98,"m","Green Spider",4,,4,22,4,44],[99,"m","Red/Purple Wyvern",3,,4,30,4,65],[100,"m","Draygonia Soldier",6,,11,36,4,89],[101,"m","Ice Entity",3,,2,24,4,52],[102,"m","Red Living Rock",,,1,13,4,40],[103,"m","Ice Golem",7,2,11,28,4,81],[104,"b","Kelbesque",4,6,12,29,
,,],[105,"m","Giant Red Slime",7,,40,90,4,102],[106,"m","Troll",2,,3,24,4,65],[107,"m","Red Jelly",2,,2,14,4,44],[108,"m","Medusa",3,,4,36,8,77],[109,"m","Red Crab",2,,1,21,4,44],[110,"m","Medusa Head",,,1,29,4,36],[111,"m","Evil Bird",,,2,30,6,65],[113,"m","Red/Purple Mushroom",3,,5,19,6,69],[114,"m","Violet Earth Entity",3,,3,18,6,61],[115,"m","Mimic",,,3,26,15,73],[116,"m","Red Spider",3,,4,22,6,48],[117,"m","Fishman",4,,6,19,5,61],[118,"m","Jellyfish",,,3,14,3,48],[119,"m","Kraken",5,,11,25,7,
73],[120,"m","Dark Green Wyvern",4,,5,21,5,61],[121,"m","Sand Monster",5,,8,6,4,57],[123,"m","Wraith Shadow 1",,,,9,7,44],[124,"m","Killer Moth",,,2,35,,77],[125,"b","Sabera",3,7,13,24,,,],[128,"m","Draygonia Archer",1,,3,20,6,61],[129,"m","Evil Bomber Bird",,,1,19,4,65],[130,"m","Lavaman/blob",3,,3,24,6,85],[132,"m","Lizardman (w/ flail(",2,,3,30,6,81],[133,"m","Giant Eye",3,,5,33,4,81],[134,"m","Salamander",2,,4,29,8,77],[135,"m","Sorceror",2,,5,31,6,65],[136,"b","Mado",4,8,10,30,,,],[137,"m","Draygonia Knight",
2,,3,24,4,77],[138,"m","Devil",,,1,18,4,52],[139,"b","Kelbesque 2",4,6,11,27,,,],[140,"m","Wraith Shadow 2",,,,17,4,48],[144,"b","Sabera 2",5,7,21,27,,,],[145,"m","Tarantula",3,,3,21,6,73],[146,"m","Skeleton",,,4,30,6,69],[147,"b","Mado 2",4,8,11,25,,,],[148,"m","Purple Giant Eye",4,,10,23,6,102],[149,"m","Black Knight (w/ flail)",3,,7,26,6,89],[150,"m","Scorpion",3,,5,29,2,73],[151,"b","Karmine",4,,14,26,,,],[152,"m","Sandman/blob",3,,5,36,6,98],[153,"m","Mummy",5,,19,36,6,110],[154,"m","Tomb Guardian",
7,,60,37,6,106],[155,"b","Draygon",5,6,16,41,,,],[158,"b","Draygon 2",7,6,28,40,,,],[160,"m","Ground Sentry (1)",4,,12,26,,],[161,"m","Tower Defense Mech (2)",5,,16,36,,],[162,"m","Tower Sentinel",,,2,,,],[163,"m","Air Sentry",3,,4,26,,],[164,"b","Dyna",6,5,16,,,,],[165,"b","Vampire 2",2,,6,27,,,],[180,"b","dyna pod",15,,255,26,,,],[184,"p","dyna counter",,,,26,,,],[185,"p","dyna laser",,,,26,,,],[186,"p","dyna bubble",,,,36,,,],[188,"m","vamp2 bat",,,,16,,40],[191,"p","draygon2 fireball",,,,26,,
,],[193,"m","vamp1 bat",,,,16,,40],[195,"p","giant insect spit",,,,35,,,],[196,"m","summoned insect",4,,2,42,,98],[197,"p","kelby1 rock",,,,22,,,],[198,"p","sabera1 balls",,,,19,,,],[199,"p","kelby2 fireballs",,,,11,,,],[200,"p","sabera2 fire",,,1,6,,,],[201,"p","sabera2 balls",,,,17,,,],[202,"p","karmine balls",,,,25,,,],[203,"p","sun/moon statue fireballs",,,,39,,,],[204,"p","draygon1 lightning",,,,37,,,],[205,"p","draygon2 laser",,,,36,,,],[206,"p","draygon2 breath",,,,36,,,],[224,"p","evil bomber bird bomb",
,,,2,,,],[226,"p","summoned insect bomb",,,,47,,,],[227,"p","paralysis beam",,,,23,,,],[228,"p","stone gaze",,,,33,,,],[229,"p","rock golem rock",,,,24,,,],[230,"p","curse beam",,,,10,,,],[231,"p","mp drain web",,,,11,,,],[232,"p","fishman trident",,,,15,,,],[233,"p","orc axe",,,,24,,,],[234,"p","Swamp Pollen",,,,37,,,],[235,"p","paralysis powder",,,,17,,,],[236,"p","draygonia solider sword",,,,28,,,],[237,"p","ice golem rock",,,,20,,,],[238,"p","troll axe",,,,27,,,],[239,"p","kraken ink",,,,24,,
,],[240,"p","draygonia archer arrow",,,,12,,,],[241,"p","??? unused",,,,16,,,],[242,"p","draygonia knight sword",,,,9,,,],[243,"p","moth residue",,,,19,,,],[244,"p","ground sentry laser",,,,13,,,],[245,"p","tower defense mech laser",,,,23,,,],[246,"p","tower sentinel laser",,,,8,,,],[247,"p","skeleton shot",,,,11,,,],[248,"p","lavaman shot",,,,14,,,],[249,"p","black knight flail",,,,18,,,],[250,"p","lizardman flail",,,,21,,,],[252,"p","mado shuriken",,,,36,,,],[253,"p","guardian statue missile",,
,,23,,,],[254,"p","demon wall fire",,,,23,,,]].map((b)=>{var [a,c,d,e=0,f=0,g=0,h=0,k=0,m=0]=b;return[a,{id:a,type:c,name:d,sdef:e,swrd:f,hits:g,satk:h,dgld:k,sexp:m}]}));
class MonsterPool$$module$js$patch{constructor(b){this.report=b;this.monsters=[];this.used=[];this.locations=[]}populate(b){var a=MONSTER_ADJUSTMENTS$$module$js$patch[b.id]||{},c=Object.assign({},a);a=a.skip;c=(delete c.maxFlyers,delete c.nonFlyers,delete c.skip,delete c.fixedSlots,c);for(var d in c)throw Error(`Unexpected property '${d}' in MONSTER_ADJUSTMENTS[${b.id}]`);if(!0!==a&&b.spritePatterns&&b.spritePalettes){d=[];c=[];var e=12;for(const a of b.objects||[]){++e;if(a[2]&7)continue;const h=
a[3]+80;if(h in UNTOUCHED_MONSTERS$$module$js$patch||!SCALED_MONSTERS$$module$js$patch.has(h)||"m"!=SCALED_MONSTERS$$module$js$patch.get(h).type)continue;var f=b.rom.objects[h];if(!f)continue;const m=a[2]&128?1:0,p=b.spritePatterns[m];var g=f.palettes(!0);f=g.includes(2)?b.spritePalettes[0]:null;g=g.includes(3)?b.spritePalettes[1]:null;d.push({id:h,pat:p,pal2:f,pal3:g,patBank:m});(this.report[`start-${h.toString(16)}`]=this.report[`start-${h.toString(16)}`]||[]).push("$"+b.id.toString(16));c.push(e)}d.length&&
(a||this.locations.push({location:b,slots:c}),this.monsters.push(...d))}}shuffle(b){this.report["pre-shuffle locations"]=this.locations.map((a)=>a.location.id);this.report["pre-shuffle monsters"]=this.monsters.map((a)=>a.id);b.shuffle(this.locations);b.shuffle(this.monsters);this.report["post-shuffle locations"]=this.locations.map((a)=>a.location.id);for(this.report["post-shuffle monsters"]=this.monsters.map((a)=>a.id);this.locations.length;){const {location:d,slots:e}=this.locations.pop();let f=
this.report["$"+d.id.toString(16).padStart(2,0)]=[];const {maxFlyers:g,nonFlyers:h={},fixedSlots:k={}}=MONSTER_ADJUSTMENTS$$module$js$patch[d.id]||{};let m=k.pat0||null,p=k.pat1||null,r=k.pal2||null,t=k.pal3||null,l=g,n=!1;for(const b of d.objects||[])if(2==(b[2]&7)&&(n=!0),!(b[2]&7)){var a=b[3]+80;126==a||127==a||159==a?p=98:143==a&&(m=97)}if(21==d.id||71==d.id)n=!1;f.push(`Initial pass: ${[n,m,p,r,t].join(", ")}`);a=(a)=>{var b=FLYERS$$module$js$patch.has(a.id),c=MOTHS_AND_BATS$$module$js$patch.has(a.id);
if(b){if(!l)return!1;--l}if(null!=r&&null!=a.pal2&&r!=a.pal2||null!=t&&null!=a.pal3&&t!=a.pal3)return!1;var g=!n||TREASURE_CHEST_BANKS$$module$js$patch.has(a.pat);let k;if(d.rom.objects[a.id].child||RETAIN_SLOTS$$module$js$patch.has(a.id)){const b=(k=a.patSlot?128:0)?p:m;if(null!=b&&b!=a.pat)return!1;if(k)p=a.pat;else if(g)m=a.pat;else return!1;f.push(`  Adding ${a.id.toString(16)}: pat(${k}) <-  ${a.pat.toString(16)}`)}else if(null==m&&g||m==a.pat)m=a.pat,k=0,f.push(`  Adding ${a.id.toString(16)}: pat0 <-  ${a.pat.toString(16)}`);
else if(null==p||p==a.pat)p=a.pat,k=128,f.push(`  Adding ${a.id.toString(16)}: pat1 <-  ${a.pat.toString(16)}`);else return!1;null!=a.pal2&&(r=a.pal2);null!=a.pal3&&(t=a.pal3);f.push(`    ${Object.keys(a).map((b)=>`${b}: ${a[b]}`).join(", ")}`);f.push(`    pal: ${(a.pal2||0).toString(16)} ${(a.pal3||0).toString(16)}`);g=0;if(b||c)for(b=0;b<e.length;b++){if(e[b]in h){g=b;break}}else for(b=0;b<e.length;b++)if(!(e[b]in h)){g=b;break}(this.report[`mon-${a.id.toString(16)}`]=this.report[`mon-${a.id.toString(16)}`]||
[]).push("$"+d.id.toString(16));b=e[g];c=d.objects[b-13];b in h&&(c[0]+=h[b][0],c[1]+=h[b][1]);c[2]=c[2]&127|k;c[3]=a.id-80;f.push(`    slot ${b.toString(16)}: objData=${c}`);e.splice(g,1);return!0};if(l)for(var c=0;c<Math.min(40,this.monsters.length);c++)FLYERS$$module$js$patch.has(this.monsters[c].id)&&a(this.monsters[c])&&this.monsters.splice(c,1),b.shuffle(this.monsters);for(c=0;c<this.monsters.length&&e.length;c++)if(a(this.monsters[c])){const [a]=this.monsters.splice(c,1);FLYERS$$module$js$patch.has(a.id)||
this.used.push(a);c--}for(c=0;c<this.used.length&&e.length;c++)a(this.used[c])&&(this.used.push(...this.used.splice(c,1)),c--);null!=m&&(d.spritePatterns[0]=m);null!=p&&(d.spritePatterns[1]=p);null!=r&&(d.spritePalettes[0]=r);null!=t&&(d.spritePalettes[1]=t);if(e.length){f.push(`Failed to fill location ${d.id.toString(16)}: ${e.length} remaining`);for(const b of e)a=d.objects[b-13],a[0]=a[1]=0}}}}
const FLYERS$$module$js$patch=new Set([89,92,110,111,129,138,163,196]),MOTHS_AND_BATS$$module$js$patch=new Set([85,93,124,188,193]),SWIMMERS$$module$js$patch=new Set([117,118]),STATIONARY$$module$js$patch=new Set([119,135]),TREASURE_CHEST_BANKS$$module$js$patch=new Set([94,95,96,97,100,101,102,103,104,105,106,108,109,110,111,112,116,117,118,119]),MONSTER_ADJUSTMENTS$$module$js$patch={[3]:{maxFlyers:2,fixedSlots:{pat1:96}},[7]:{nonFlyers:{[15]:[0,-3],[16]:[-10,0],[17]:[0,4]}},[20]:{maxFlyers:2},[21]:{maxFlyers:2},
[26]:{maxFlyers:2,fixedSlots:{pat1:79,pal3:35},nonFlyers:{[16]:[4,0],[17]:[5,0],[18]:[4,0],[19]:[5,0],[20]:[4,0],[21]:[4,0]}},[27]:{skip:!0},[32]:{maxFlyers:1},[33]:{maxFlyers:1,fixedSlots:{pat1:80}},[39]:{nonFlyers:{[13]:[0,16]}},[40]:{maxFlyers:1},[41]:{maxFlyers:1},[43]:{nonFlyers:{[20]:[32,-8]}},[64]:{maxFlyers:2,nonFlyers:{[19]:[12,-16]}},[65]:{maxFlyers:2,nonFlyers:{[21]:[0,-6]}},[66]:{maxFlyers:2,nonFlyers:{[13]:[0,8],[14]:[-8,8]}},[71]:{maxFlyers:1,nonFlyers:{[13]:[-8,-8]}},[74]:{maxFlyers:1,
nonFlyers:{[14]:[4,0],[15]:[0,-3],[16]:[0,4]}},[76]:{},[77]:{maxFlyers:1},[78]:{maxFlyers:1},[79]:{},[87]:{fixedSlots:{pat1:77}},[89]:{skip:!0},[90]:{skip:!0},[91]:{skip:!0},[96]:{skip:!0,maxFlyers:2,fixedSlots:{pat1:82,pal3:8}},[100]:{skip:!0,fixedSlots:{pat1:82,pal3:8}},[104]:{skip:!0,fixedSlots:{pat1:82,pal3:8}},[105]:{maxFlyers:1,nonFlyers:{[23]:[4,6]}},[106]:{maxFlyers:1,nonFlyers:{[21]:[0,24]}},[108]:{maxFlyers:1,nonFlyers:{[23]:[0,24]}},[109]:{maxFlyers:1,nonFlyers:{[17]:[16,0],[27]:[0,0],
[28]:[6,0]}},[120]:{maxFlyers:1,nonFlyers:{[22]:[-8,-8]}},[124]:{maxFlyers:1,nonFlyers:{[21]:[-39,84]}},[132]:{nonFlyers:{[18]:[0,-4],[19]:[0,4],[20]:[-6,0],[21]:[14,12]}},[136]:{maxFlyers:1},[137]:{maxFlyers:1},[138]:{maxFlyers:1,nonFlyers:{[13]:[7,0],[14]:[0,0],[15]:[7,3],[16]:[0,6],[17]:[11,-16]}},[143]:{skip:!0},[144]:{maxFlyers:2,nonFlyers:{[20]:[-11,-3],[21]:[0,16]}},[145]:{maxFlyers:2,nonFlyers:{[24]:[0,14],[25]:[4,-16]}},[152]:{maxFlyers:2,nonFlyers:{[20]:[-6,6],[21]:[0,-16]}},[158]:{maxFlyers:2},
[162]:{maxFlyers:1,nonFlyers:{[18]:[0,11],[19]:[6,0]}},[165]:{nonFlyers:{[23]:[6,6],[24]:[-6,0],[25]:[-1,-7]}},[166]:{skip:!0},[168]:{skip:!0},[169]:{maxFlyers:2,nonFlyers:{[22]:[26,-16],[23]:[0,32]}},[171]:{maxFlyers:2,nonFlyers:{[13]:[1,0],[14]:[2,-2]}},[173]:{maxFlyers:2,nonFlyers:{[24]:[0,8],[25]:[0,-8]}},[175]:{nonFlyers:{[13]:[0,0],[14]:[0,0],[19]:[59,-38]}},[180]:{maxFlyers:2,nonFlyers:{[17]:[6,0],[18]:[0,6]}},[215]:{skip:!0}},ITEMS$$module$js$patch=new Map([[0,"Sword of Wind",!0],[1,"Sword of Fire",
!0],[2,"Sword of Water",!0],[3,"Sword of Thunder",!0],[4,"Crystalis",!0],[5,"Ball of Wind",!0],[6,"Tornado Bracelet",!0],[7,"Ball of Fire",!0],[8,"Flame Bracelet",!0],[9,"Ball of Water",!0],[10,"Blizzard Bracelet",!0],[11,"Ball of Thunder",!0],[12,"Storm Bracelet",!0],[13,"Carapace Shield"],[14,"Bronze Shield"],[15,"Platinum Shield"],[16,"Mirrored Shield"],[17,"Ceramic Shield"],[18,"Sacred Shield"],[19,"Battle Shield"],[20,"Psycho Shield",!0],[21,"Tanned Hide"],[22,"Leather Armor"],[23,"Bronze Armor"],
[24,"Platinum Armor"],[25,"Soldier Suit"],[26,"Ceramic Suit"],[27,"Battle Armor",!0],[28,"Psycho Armor",!0],[29,"Medical Herb"],[30,"Antidote"],[31,"Lysis Plant"],[32,"Fruit of Lime"],[33,"Fruit of Power"],[34,"Magic Ring"],[35,"Fruit of Repun"],[36,"Warp Boots"],[37,"Statue of Onyx",!0],[38,"Opel Statue",!0],[39,"Insect Flute",!0],[40,"Flute of Lime",!0],[41,"Gas Mask",!0],[42,"Power Ring",!0],[43,"Warrior Ring",!0],[44,"Iron Necklace",!0],[45,"Deo's Pendant",!0],[46,"Rabbit Boots",!0],[47,"Leather Boots",
!0],[48,"Shield Ring",!0],[49,"Alarm Flute",!0],[50,"Windmill Key",!0],[51,"Key to Prison",!0],[52,"Key to Styx",!0],[53,"Fog Lamp",!0],[54,"Shell Flute",!0],[55,"Eye Glasses",!0],[56,"Broken Statue",!0],[57,"Glowing Lamp",!0],[58,"Statue of Gold",!0],[59,"Love Pendant",!0],[60,"Kirisa Plant",!0],[61,"Ivory Statue",!0],[62,"Bow of Moon",!0],[63,"Bow of Sun",!0],[64,"Bow of Truth",!0],[65,"Refresh",!0],[66,"Paralysis",!0],[67,"Telepathy",!0],[68,"Teleport",!0],[69,"Recover",!0],[70,"Barrier",!0],[71,
"Change",!0],[72,"Flight",!0]].map((b)=>{var [a,c,d]=b;return[a,{id:a,name:c,key:d}]})),RETAIN_SLOTS$$module$js$patch=new Set([80,83]),UNTOUCHED_MONSTERS$$module$js$patch={[126]:!0,[127]:!0,[131]:!0,[141]:!0,[142]:!0,[143]:!0,[159]:!0,[166]:!0},shuffleRandomNumbers$$module$js$patch=(b,a)=>{b=b.subarray(219124,219188);a.shuffle(b)};var module$js$patch={};module$js$patch.default=$jscompDefaultExport$$module$js$patch;module$js$patch.parseSeed=parseSeed$$module$js$patch;module$js$patch.Reader=Reader$$module$js$patch;
module$js$patch.shuffle=shuffle$$module$js$patch;module$js$patch.stampVersionSeedAndHash=stampVersionSeedAndHash$$module$js$patch;const BOXES$$module$js$tracker="\nsword-of-wind $00 WIND\nsword-of-fire $01 FIRE\nsword-of-water $02 WATER\nsword-of-thunder $03 THUN\nwindmill-key $32 MILL\nstatue-of-onyx $25 ONYX\ninsect-flute $27 INSECT\nkey-to-prison $33 PRISON\nflute-of-lime $28 LIME\n# flute-of-lime $5b LIME\n\nball-of-wind $05 \nball-of-fire $07\nball-of-water $09\nball-of-thunder $0b\nkirisa-plant $3c KIRISA\nfog-lamp $35 FOG\nshell-flute $36 SHELL\nbroken-statue $38 BRKN\neye-glasses $37 EYE\nglowing-lamp $39 GLOW\n\ntornado-bracelet $06\nflame-bracelet $08\nblizzard-bracelet $0a\nstorm-bracelet $0c\nlove-pendant $3b LOVE\nkey-to-styx $34 STXY\nopel-statue $26 OPEL\nfruit-of-repun $23 REPUN\nsacred-shield $12 SCRD\nivory-statue $3d IVORY\n\nrabbit-boots $2e RABBIT\ngas-mask $29 GAS\nshield-ring $30 SHIELD\niron-necklace $2c IRON\nleather-boots $2f LTHR\npower-ring $2a POWER\nwarrior-ring $2b WARR\ndeos-pendant $2d DEO\nbow-of-moon $3e MOON\nbow-of-sun $3f SUN\n\nrefresh $41\nparalysis $42\ntelepathy $43\nteleport $44\nrecover $45\nbarrier $46\nchange $47\nflight $48\npsycho-armor $1c PSYCH\nbow-of-truth $40 TRUTH\n",
SLOTS$$module$js$tracker=[[0,121,192],[1,274,176],[2,335,123],[3,77,10],[5,89,107],[6,115,224],[7,282,187],[8,47,182],[9,251,232],[10,206,249],[11,83,63],[12,23,9],[18,49,48],[20,77,3],[112,71,3,137,20],[112,83,3,137,21],[27,168,97],[28,199,110],[29,82,95],[30,82,101],[31,346,147],[112,346,153,74,21],[112,346,159,74,22],[32,126,52],[33,227,97],[34,256,73],[35,58,115],[36,82,113],[37,189,180],[38,18,172],[39,267,185],[40,275,147],[41,147,206],[42,172,104],[43,203,5],[44,249,69],[45,191,110],[46,89,
99],[47,164,104],[48,319,123],[112,320,130,84,19],[50,105,94],[51,64,198],[52,83,71],[53,345,140],[54,301,119],[55,233,118],[56,234,88],[57,295,92],[59,274,117],[60,338,226],[61,23,17],[62,206,241],[63,101,6],[64,207,110],[65,92,117],[66,279,126],[67,202,138],[68,124,202],[69,304,128],[70,248,35],[71,277,3],[72,15,25],[80,82,107],[82,134,219],[83,59,219],[84,52,55],[85,241,97],[86,123,23],[112,115,3,133,23],[87,70,9],[112,84,9,137,19],[88,32,38],[112,32,16,181,13],[112,40,16,181,14],[112,40,38,181,
15],[90,162,97],[91,327,123],[92,256,79],[93,36,139],[94,14,229],[95,345,225],[96,18,94],[97,234,96],[98,18,118],[99,36,54],[100,174,97],[101,139,40],[102,66,160],[105,131,201],[106,76,226],[107,18,100],[108,193,103],[112,199,103,163,13],[109,205,103],[112,256,67,107,14],[110,24,38],[111,44,97]];
class Graph$$module$js$tracker{constructor(b){this.depgraph=b.integrate({tracker:!0});this.slotElts=new Map;this.itemElts=new Map;this.always=new Set;this.checked=new Set;this.grid=document.getElementsByClassName("grid")[0];this.map=document.getElementsByClassName("map")[0];this.nodeFromSlot=new Map;this.mimicSlots=new Map;this.nodes=new Map;this.route=[];for(const a of b.nodes)if(this.nodes.set(a.uid,a.name),this.route[a.uid]=4,a instanceof Slot$$module$js$nodes){if(a.isMimic()||this.nodeFromSlot.set(a.slotIndex,
a),"Alarm Flute"==a.name||"Medical Herb"==a.name)this.always.add(a.item.uid),this.route[a.item.uid]=0}else if(a instanceof Location$$module$js$nodes)for(const b of a.chests)b.isMimic()&&this.mimicSlots.set(a.id<<8|b.spawnSlot,b);else a instanceof TrackerNode$$module$js$nodes&&null!=this.depgraph.uidToItem[a.uid]&&(b=4,a.type===TrackerNode$$module$js$nodes.OFF_ROUTE&&(b=1),a.type===TrackerNode$$module$js$nodes.GLITCH&&(b=2),a.type===TrackerNode$$module$js$nodes.HARD&&(b=3),this.route[a.uid]=b);const a=
(a,b)=>{b=b||!!a.button;let c=a.target;for(var e=b?"slot":"item";c&&!c.dataset[e];)c=c.parentElement;c&&(e=Number(c.dataset[e]),b&&a.shiftKey?d(e):(b?this.checked.has(e)?this.checked.delete(e):this.checked.add(e):this.route[e]=4-this.route[e],b||c.classList.toggle("got",!this.route[e]),this.update(),a.preventDefault()))},c=document.getElementById("reqs");this.grid.addEventListener("click",(b)=>a(b,!1));this.grid.addEventListener("contextmenu",a);this.map.addEventListener("click",(b)=>a(b,!0));const d=
(a)=>{if(Number(c.dataset.showing)!=a){for(c.dataset.showing="";c.children.length;)c.children[0].remove();c.dataset.showing=a;var b=document.createElement("span");b.textContent=`${this.nodes.get(a)} requires`;c.appendChild(b);b=document.createElement("ul");c.appendChild(b);var d=[];for(const b of this.depgraph.routes[this.depgraph.uidToLocation[a]]){a=0;const c=document.createElement("li"),e=[];for(const c of Bits$$module$js$bits.bits(b)){const b=this.depgraph.itemToUid[c];a=Math.max(a,this.route[b]);
e.push(this.nodes.get(b))}c.textContent=e.join(" AND ");c.classList.add(["available","off-route","glitched","hard","blocked"][a]);d.push([c,a])}d.sort((a,b)=>a[1]-b[1]||a[0].textContent.length-b[0].textContent.length);for(const a of d)b.appendChild(a[0])}}}addSlot(b,a,c,d,e){const f=112<=b;b=f?this.mimicSlots.get(d<<8|e):this.nodeFromSlot.get(b);if(!b)debugger;d=document.createElement("div");if("key"==b.slotType||"magic"==b.slotType||"bonus"==b.slotType)d.classList.add("key"),a--,c--;a--;c--;d.dataset.slot=
b.uid;d.style.left=a+"px";d.style.top=c+"px";a=document.createElement("div");d.appendChild(a);a.textContent=f?"Mimic":b.name.replace(" ","\u00a0");this.slotElts.set(b.uid,d);this.map.appendChild(d)}addBox(b,a){a=Number.parseInt(a.substring(1),16);b=document.getElementsByClassName(b)[0];const c=document.createElement("div");b.appendChild(c);a=this.nodeFromSlot.get(a);b.dataset.slot=a.uid;b.dataset.item=a.item.uid;this.itemElts.set(a.item.uid,b)}update(){for(const [b,a]of this.slotElts)if(a.classList.remove("checked"),
a.classList.remove("blocked"),a.classList.remove("available"),a.classList.remove("glitched"),a.classList.remove("off-route"),a.classList.remove("hard"),this.checked.has(b))a.classList.add("checked");else{let c=4;for(const a of this.depgraph.routes[this.depgraph.uidToLocation[b]]){let b=0;for(const c of Bits$$module$js$bits.bits(a))if(b=Math.max(b,this.route[this.depgraph.itemToUid[c]]),!(4>b))break;c=Math.min(c,b);if(!c)break}a.classList.add(["available","off-route","glitched","hard","blocked"][c])}}}
let flags$$module$js$tracker="Rlpt Ts";for(const b of location.hash.substring(1).split("&")){const [a,c]=b.split("=");"flags"===a&&(flags$$module$js$tracker=decodeURIComponent(c))}const graph$$module$js$tracker=new Graph$$module$js$tracker(generate$$module$js$depgraph(new FlagSet$$module$js$flagset(flags$$module$js$tracker+" Dt")));for(let b of BOXES$$module$js$tracker.split("\n"))(b=b.replace(/#.*/,"").trim())&&graph$$module$js$tracker.addBox(...b.split(/ +/g));for(const b of SLOTS$$module$js$tracker)graph$$module$js$tracker.addSlot(...b);
graph$$module$js$tracker.update();document.getElementById("toggle-map").addEventListener("click",()=>{graph$$module$js$tracker.map.classList.toggle("hidden")});document.getElementById("clear-all").addEventListener("click",()=>{for(let b=0;b<graph$$module$js$tracker.route.length;b++)0==graph$$module$js$tracker.route[b]&&(graph$$module$js$tracker.route[b]=graph$$module$js$tracker.always.has(b)?0:4);graph$$module$js$tracker.checked.clear();graph$$module$js$tracker.update();for(const b of document.querySelectorAll(".slot.got"))b.classList.remove("got")});
var module$js$tracker={};
}).call(this)
