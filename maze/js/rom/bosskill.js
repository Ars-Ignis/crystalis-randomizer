import { Entity } from './entity.js';
import { readLittleEndian, writeLittleEndian } from './util.js';
export class BossKill extends Entity {
    constructor(rom, id) {
        super(rom, id);
        this.pointer = 0x1f96b + 2 * id;
        this.base = readLittleEndian(rom.prg, this.pointer) + 0x14000;
        this.data = rom.prg.slice(this.base, this.base + 21);
        this.palettes = this.data.subarray(5, 13);
        this.patterns = this.data.subarray(13, 19);
    }
    get routine() {
        const addr = readLittleEndian(this.data, 0);
        return addr && (addr + 0x14000);
    }
    set routine(addr) {
        writeLittleEndian(this.data, 0, addr ? addr - 0x14000 : 0);
    }
    get restoreMusic() { return this.data[3]; }
    set restoreMusic(x) { this.data[3] = x; }
    get itemDrop() { return this.data[4]; }
    set itemDrop(x) { this.data[4] = x; }
    get restoreAnimation() { return this.data[19]; }
    set restoreAnimation(x) { this.data[19] = x; }
    get explode() { return !!this.data[20]; }
    set explode(x) { this.data[20] = x ? 1 : 0; }
    write(writer) {
        for (const i of [0, 1, 4]) {
            writer.rom[this.base + i] = this.data[i];
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9zc2tpbGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvanMvcm9tL2Jvc3NraWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFDbkMsT0FBTyxFQUFDLGdCQUFnQixFQUFFLGlCQUFpQixFQUFDLE1BQU0sV0FBVyxDQUFDO0FBSzlELE1BQU0sT0FBTyxRQUFTLFNBQVEsTUFBTTtJQVNsQyxZQUFZLEdBQVEsRUFBRSxFQUFVO1FBQzlCLEtBQUssQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxJQUFJLEdBQUcsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzlELElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzFDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDVCxNQUFNLElBQUksR0FBRyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzVDLE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFDRCxJQUFJLE9BQU8sQ0FBQyxJQUFZO1FBQ3RCLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUVELElBQUksWUFBWSxLQUFhLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbkQsSUFBSSxZQUFZLENBQUMsQ0FBUyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqRCxJQUFJLFFBQVEsS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQy9DLElBQUksUUFBUSxDQUFDLENBQVMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFN0MsSUFBSSxnQkFBZ0IsS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3hELElBQUksZ0JBQWdCLENBQUMsQ0FBUyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUV0RCxJQUFJLE9BQU8sS0FBYyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNsRCxJQUFJLE9BQU8sQ0FBQyxDQUFVLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUV0RCxLQUFLLENBQUMsTUFBYztRQVFsQixLQUFLLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRTtZQUN6QixNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMxQztJQUNILENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RW50aXR5fSBmcm9tICcuL2VudGl0eS5qcyc7XG5pbXBvcnQge3JlYWRMaXR0bGVFbmRpYW4sIHdyaXRlTGl0dGxlRW5kaWFufSBmcm9tICcuL3V0aWwuanMnO1xuaW1wb3J0IHtXcml0ZXJ9IGZyb20gJy4vd3JpdGVyLmpzJztcbmltcG9ydCB7Um9tfSBmcm9tICcuLi9yb20uanMnO1xuXG4vLyBEYXRhIGZvciB3aGVuIGEgYm9zcyBpcyBraWxsZWRcbmV4cG9ydCBjbGFzcyBCb3NzS2lsbCBleHRlbmRzIEVudGl0eSB7XG5cbiAgcmVhZG9ubHkgcG9pbnRlcjogbnVtYmVyO1xuICByZWFkb25seSBiYXNlOiBudW1iZXI7XG5cbiAgcmVhZG9ubHkgZGF0YTogVWludDhBcnJheTtcbiAgcmVhZG9ubHkgcGFsZXR0ZXM6IFVpbnQ4QXJyYXk7XG4gIHJlYWRvbmx5IHBhdHRlcm5zOiBVaW50OEFycmF5O1xuXG4gIGNvbnN0cnVjdG9yKHJvbTogUm9tLCBpZDogbnVtYmVyKSB7XG4gICAgc3VwZXIocm9tLCBpZCk7XG4gICAgdGhpcy5wb2ludGVyID0gMHgxZjk2YiArIDIgKiBpZDtcbiAgICB0aGlzLmJhc2UgPSByZWFkTGl0dGxlRW5kaWFuKHJvbS5wcmcsIHRoaXMucG9pbnRlcikgKyAweDE0MDAwO1xuICAgIHRoaXMuZGF0YSA9IHJvbS5wcmcuc2xpY2UodGhpcy5iYXNlLCB0aGlzLmJhc2UgKyAyMSk7XG4gICAgdGhpcy5wYWxldHRlcyA9IHRoaXMuZGF0YS5zdWJhcnJheSg1LCAxMyk7XG4gICAgdGhpcy5wYXR0ZXJucyA9IHRoaXMuZGF0YS5zdWJhcnJheSgxMywgMTkpO1xuICB9XG5cbiAgZ2V0IHJvdXRpbmUoKTogbnVtYmVyIHtcbiAgICBjb25zdCBhZGRyID0gcmVhZExpdHRsZUVuZGlhbih0aGlzLmRhdGEsIDApO1xuICAgIHJldHVybiBhZGRyICYmIChhZGRyICsgMHgxNDAwMCk7XG4gIH1cbiAgc2V0IHJvdXRpbmUoYWRkcjogbnVtYmVyKSB7XG4gICAgd3JpdGVMaXR0bGVFbmRpYW4odGhpcy5kYXRhLCAwLCBhZGRyID8gYWRkciAtIDB4MTQwMDAgOiAwKTtcbiAgfVxuXG4gIGdldCByZXN0b3JlTXVzaWMoKTogbnVtYmVyIHsgcmV0dXJuIHRoaXMuZGF0YVszXTsgfVxuICBzZXQgcmVzdG9yZU11c2ljKHg6IG51bWJlcikgeyB0aGlzLmRhdGFbM10gPSB4OyB9XG5cbiAgZ2V0IGl0ZW1Ecm9wKCk6IG51bWJlciB7IHJldHVybiB0aGlzLmRhdGFbNF07IH1cbiAgc2V0IGl0ZW1Ecm9wKHg6IG51bWJlcikgeyB0aGlzLmRhdGFbNF0gPSB4OyB9XG5cbiAgZ2V0IHJlc3RvcmVBbmltYXRpb24oKTogbnVtYmVyIHsgcmV0dXJuIHRoaXMuZGF0YVsxOV07IH1cbiAgc2V0IHJlc3RvcmVBbmltYXRpb24oeDogbnVtYmVyKSB7IHRoaXMuZGF0YVsxOV0gPSB4OyB9XG5cbiAgZ2V0IGV4cGxvZGUoKTogYm9vbGVhbiB7IHJldHVybiAhIXRoaXMuZGF0YVsyMF07IH1cbiAgc2V0IGV4cGxvZGUoeDogYm9vbGVhbikgeyB0aGlzLmRhdGFbMjBdID0geCA/IDEgOiAwOyB9XG5cbiAgd3JpdGUod3JpdGVyOiBXcml0ZXIpIHtcbiAgICAvLyBOT1RFOiB3ZSBjb3VsZCBjb21wcmVzcyB0aGlzIHRhYmxlIHF1aXRlIGEgYml0IGlmIHdlIHdhbnRlZCB0byxcbiAgICAvLyB0aGVyZSdzIGEgbG90IG9mIHplcm9zIGluIHRoZSByZXN0b3JlIHNlY3Rpb25zLiAgU29tZXRoaW5nIGFzXG4gICAgLy8gc2ltcGxlIGFzIGEgYml0bWFzayBiZWZvcmUgZWFjaCBjb3VsZCBoZWxwLlxuICAgIC8vIHdyaXRlci5yb20uc3ViYXJyYXkodGhpcy5iYXNlLCB0aGlzLmJhc2UgKyAyMSkuc2V0KHRoaXMuZGF0YSk7XG5cbiAgICAvLyBOT1RFOiB3ZSdyZSBvbmx5IGdvaW5nIHRvIHdyaXRlIHRoZSBiaXRzIHRoYXQgYXJlbid0IG93bmVkIGJ5XG4gICAgLy8gdGhlIExvY2F0aW9uIG9iamVjdC5cbiAgICBmb3IgKGNvbnN0IGkgb2YgWzAsIDEsIDRdKSB7XG4gICAgICB3cml0ZXIucm9tW3RoaXMuYmFzZSArIGldID0gdGhpcy5kYXRhW2ldO1xuICAgIH1cbiAgfVxufVxuIl19