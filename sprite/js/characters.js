export class Sprite {
    constructor(name, converter, image, chr_data, description) {
        this.name = name;
        this.converter = converter;
        this.image = image;
        this.chr_data = chr_data;
        this.description = description;
    }
    applyPatch(rom) {
        if (this.chr_data.length == 0) {
            return;
        }
        for (let [src, dsts] of this.converter) {
            for (let dst of dsts) {
                for (let i = 0; i < 0x10; ++i) {
                    rom[dst + i] = this.chr_data[src * 0x10 + i];
                }
            }
        }
    }
}
export class CharacterSet {
    constructor() {
        this.semiaReplacements = new Array();
        this.semiaReplacements.push(new Sprite("Semia", CustomTilesetMapping.semia(), "images/semia.png", [], "The original main character of Crystalis"));
        this.semiaReplacements.push(new Sprite("Mesia", CustomTilesetMapping.semia(), "images/mesia.png", mesia_patch_data, "Secondary protagonist Mesia takes the spotlight! Artwork by jroweboy"));
    }
    static semia() {
        if (!this.instance)
            this.instance = new CharacterSet();
        return [...this.instance.semiaReplacements];
    }
}
function toAddr(chr_page, nametable, tile_number) {
    const baseAddr = 0x40000 + 0x10;
    return baseAddr + chr_page * 0x2000 + nametable * 0x1000 + tile_number * 0x10;
}
class CustomTilesetMapping {
    constructor() {
        this.semiaMapping = this.generateSemiaMapping();
    }
    static semia() {
        if (!this.instance)
            this.instance = new CustomTilesetMapping();
        return this.instance.semiaMapping;
    }
    generateSemiaMapping() {
        const ARMOR_TILESET_OFFSET = 0x08;
        const CHR_PAGE_OFFSET = 0x400;
        const mapping = new Map();
        mapping.set(0x00, [toAddr(8, 0, 0x1a)]);
        mapping.set(0x01, [toAddr(8, 0, 0x1b)]);
        mapping.set(0x10, [toAddr(8, 0, 0x00)]);
        mapping.set(0x11, [toAddr(8, 0, 0x01)]);
        mapping.set(0x20, [toAddr(8, 0, 0x20)]);
        mapping.set(0x21, [toAddr(8, 0, 0x21)]);
        mapping.set(0x02, [toAddr(8, 0, 0x1c)]);
        mapping.set(0x03, [toAddr(8, 0, 0x1d)]);
        mapping.set(0x12, [toAddr(8, 0, 0x02)]);
        mapping.set(0x13, [toAddr(8, 0, 0x03)]);
        mapping.set(0x14, [toAddr(8, 0, 0x04)]);
        mapping.set(0x15, [toAddr(8, 0, 0x05)]);
        mapping.set(0x22, [toAddr(8, 0, 0x22)]);
        mapping.set(0x23, [toAddr(8, 0, 0x23)]);
        mapping.set(0x24, [toAddr(8, 0, 0x24)]);
        mapping.set(0x25, [toAddr(8, 0, 0x25)]);
        mapping.set(0x06, [toAddr(8, 0, 0x1e)]);
        mapping.set(0x07, [toAddr(8, 0, 0x1f)]);
        mapping.set(0x16, [toAddr(8, 0, 0x06)]);
        mapping.set(0x17, [toAddr(8, 0, 0x07)]);
        mapping.set(0x26, [toAddr(8, 0, 0x26)]);
        mapping.set(0x27, [toAddr(8, 0, 0x27)]);
        mapping.set(0x40, [toAddr(8, 0, 0x14)]);
        mapping.set(0x41, [toAddr(8, 0, 0x15)]);
        mapping.set(0x50, [toAddr(8, 0, 0x34)]);
        mapping.set(0x51, [toAddr(8, 0, 0x35)]);
        mapping.set(0x32, [toAddr(8, 0, 0x3c)]);
        mapping.set(0x33, [toAddr(8, 0, 0x3d)]);
        mapping.set(0x42, [toAddr(8, 0, 0x18)]);
        mapping.set(0x43, [toAddr(8, 0, 0x19)]);
        mapping.set(0x52, [toAddr(8, 0, 0x38)]);
        mapping.set(0x53, [toAddr(8, 0, 0x27)]);
        mapping.set(0x44, [toAddr(8, 0, 0x16)]);
        mapping.set(0x45, [toAddr(8, 0, 0x17)]);
        mapping.set(0x54, [toAddr(8, 0, 0x36)]);
        mapping.set(0x70, [toAddr(8, 0, 0x0e)]);
        mapping.set(0x71, [toAddr(8, 0, 0x0f)]);
        mapping.set(0x80, [toAddr(8, 0, 0x2e)]);
        mapping.set(0x81, [toAddr(8, 0, 0x2f)]);
        mapping.set(0x72, [toAddr(8, 0, 0x12)]);
        mapping.set(0x73, [toAddr(8, 0, 0x13)]);
        mapping.set(0x82, [toAddr(8, 0, 0x30)]);
        mapping.set(0x83, [toAddr(8, 0, 0x33)]);
        mapping.set(0x74, [toAddr(8, 0, 0x10)]);
        mapping.set(0x75, [toAddr(8, 0, 0x11)]);
        mapping.set(0x85, [toAddr(8, 0, 0x31)]);
        mapping.set(0xa0, [toAddr(8, 0, 0x08)]);
        mapping.set(0xa1, [toAddr(8, 0, 0x09)]);
        mapping.set(0xb0, [toAddr(8, 0, 0x28)]);
        mapping.set(0x92, [toAddr(8, 0, 0x3a)]);
        mapping.set(0x93, [toAddr(8, 0, 0x3b)]);
        mapping.set(0xa2, [toAddr(8, 0, 0x0c)]);
        mapping.set(0xa3, [toAddr(8, 0, 0x0d)]);
        mapping.set(0xb2, [toAddr(8, 0, 0x2c)]);
        mapping.set(0xb3, [toAddr(8, 0, 0x2d)]);
        mapping.set(0xa4, [toAddr(8, 0, 0x0a)]);
        mapping.set(0xa5, [toAddr(8, 0, 0x0b)]);
        mapping.set(0xb5, [toAddr(8, 0, 0x2b)]);
        const noarmor_mappings = new Map(mapping);
        for (let [key, value] of noarmor_mappings) {
            const armor_key = key + ARMOR_TILESET_OFFSET;
            const armor_val = value.map((k) => k + CHR_PAGE_OFFSET);
            mapping.set(armor_key, armor_val);
        }
        mapping.set(0xc0, [toAddr(11, 1, 0x00)]);
        mapping.set(0xc1, [toAddr(11, 1, 0x01)]);
        mapping.set(0xd0, [toAddr(11, 1, 0x02)]);
        mapping.set(0xd1, [toAddr(11, 1, 0x03)]);
        mapping.set(0xe0, [toAddr(11, 1, 0x04)]);
        mapping.set(0xe1, [toAddr(11, 1, 0x05)]);
        mapping.set(0xc2, [toAddr(11, 1, 0x24)]);
        mapping.set(0xc3, [toAddr(11, 1, 0x25)]);
        mapping.set(0xd2, [toAddr(11, 1, 0x06)]);
        mapping.set(0xd3, [toAddr(11, 1, 0x07)]);
        mapping.set(0xe2, [toAddr(11, 1, 0x26)]);
        mapping.set(0xe3, [toAddr(11, 1, 0x27)]);
        mapping.set(0xc4, [toAddr(11, 1, 0x20)]);
        mapping.set(0xc5, [toAddr(11, 1, 0x21)]);
        mapping.set(0xd4, [toAddr(11, 1, 0x22)]);
        mapping.set(0xd5, [toAddr(11, 1, 0x23)]);
        mapping.set(0xd6, [toAddr(11, 1, 0x14)]);
        mapping.set(0xd7, [toAddr(11, 1, 0x15)]);
        mapping.set(0xe6, [toAddr(11, 1, 0x16)]);
        mapping.set(0xe7, [toAddr(11, 1, 0x17)]);
        mapping.set(0x36, [toAddr(11, 1, 0x0c)]);
        mapping.set(0x37, [toAddr(11, 1, 0x0d)]);
        mapping.set(0x46, [toAddr(11, 1, 0x32)]);
        mapping.set(0x47, [toAddr(11, 1, 0x33)]);
        mapping.set(0x56, [toAddr(11, 1, 0x2e)]);
        mapping.set(0x57, [toAddr(11, 1, 0x2f)]);
        mapping.set(0x66, [toAddr(11, 1, 0x24)]);
        mapping.set(0x67, [toAddr(11, 1, 0x25)]);
        mapping.set(0x76, [toAddr(11, 1, 0x06)]);
        mapping.set(0x77, [toAddr(11, 1, 0x07)]);
        mapping.set(0x86, [toAddr(11, 1, 0x26)]);
        mapping.set(0x87, [toAddr(11, 1, 0x27)]);
        mapping.set(0xa6, [toAddr(11, 1, 0x06)]);
        mapping.set(0xa7, [toAddr(11, 1, 0x07)]);
        mapping.set(0xb6, [toAddr(11, 1, 0x26)]);
        mapping.set(0xb7, [toAddr(11, 1, 0x27)]);
        let copyToAllWeaponPages = (tile) => {
            return [
                toAddr(8, 0, tile) + CHR_PAGE_OFFSET * 2,
                toAddr(8, 0, tile) + CHR_PAGE_OFFSET * 3,
                toAddr(8, 1, tile),
                toAddr(8, 1, tile) + CHR_PAGE_OFFSET,
                toAddr(8, 1, tile) + CHR_PAGE_OFFSET * 2,
            ];
        };
        mapping.set(0xf0, copyToAllWeaponPages(0x10));
        mapping.set(0xf1, copyToAllWeaponPages(0x11));
        mapping.set(0xf2, copyToAllWeaponPages(0x12));
        mapping.set(0xf3, copyToAllWeaponPages(0x13));
        mapping.set(0xf4, copyToAllWeaponPages(0x14));
        mapping.set(0xf5, copyToAllWeaponPages(0x15));
        mapping.set(0xf6, copyToAllWeaponPages(0x16));
        mapping.set(0xf7, copyToAllWeaponPages(0x17));
        mapping.set(0xf8, [toAddr(8, 1, 0xed)]);
        mapping.set(0xf9, copyToAllWeaponPages(0x19));
        mapping.set(0xfa, copyToAllWeaponPages(0x1a));
        mapping.set(0xfc, copyToAllWeaponPages(0x30));
        mapping.set(0xfd, copyToAllWeaponPages(0x31));
        mapping.set(0xfe, copyToAllWeaponPages(0x32));
        mapping.set(0xff, copyToAllWeaponPages(0x33));
        return mapping;
    }
}
const mesia_spritesheet_chr = "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";
const mesia_patch_data = Array.from(atob(mesia_spritesheet_chr), c => c.charCodeAt(0));
//# sourceMappingURL=data:application/json;base64,