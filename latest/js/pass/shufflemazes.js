import { shuffleCave } from '../maze/cave.js';
import { extendGoaScreens, shuffleGoa1 } from '../maze/goa.js';
import { shuffleSwamp } from '../maze/swamp.js';
import { shufflePyramid } from '../maze/pyramid.js';
export function shuffleMazes(rom, flags, random) {
    shufflePyramid(rom, random);
    shuffleSwamp(rom, random);
    shuffleGoa1(rom, random);
    for (const cave of SHUFFLED_CAVES) {
        shuffleCave(rom.locations[cave], random);
    }
    if (flags.addEastCave()) {
        shuffleCave(rom.locations.EastCave1, random);
        shuffleCave(rom.locations.EastCave2, random);
        if (rom.locations.EastCave3.used) {
            shuffleCave(rom.locations.EastCave3, random);
        }
    }
}
export function prepareScreens(rom) {
    extendGoaScreens(rom);
}
const SHUFFLED_CAVES = [
    0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0c,
    0x0e,
    0x10,
    0x11, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
    0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x31, 0x33, 0x34, 0x35, 0x38, 0x39,
    0x44, 0x45, 0x46,
    0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
    0x54, 0x55, 0x56, 0x57,
    0x69,
    0x70,
    0x7d, 0x7f, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
    0x8f,
    0x92, 0x95,
    0x9d,
    0xab,
    0xb0, 0xb1, 0xb2, 0xb3,
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2h1ZmZsZW1hemVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2pzL3Bhc3Mvc2h1ZmZsZW1hemVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM1QyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUUsV0FBVyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0QsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQzlDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUlsRCxNQUFNLFVBQVUsWUFBWSxDQUFDLEdBQVEsRUFBRSxLQUFjLEVBQUUsTUFBYztJQU1uRSxjQUFjLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzVCLFlBQVksQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDMUIsV0FBVyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN6QixLQUFLLE1BQU0sSUFBSSxJQUFJLGNBQWMsRUFBRTtRQUNqQyxXQUFXLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztLQUMxQztJQUNELElBQUksS0FBSyxDQUFDLFdBQVcsRUFBRSxFQUFFO1FBQ3ZCLFdBQVcsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUM3QyxXQUFXLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDN0MsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUU7WUFDaEMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1NBQzlDO0tBQ0Y7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxHQUFRO0lBQ3JDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3hCLENBQUM7QUFFRCxNQUFNLGNBQWMsR0FBRztJQUVyQixJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtJQUU5QyxJQUFJO0lBRUosSUFBSTtJQUVKLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUk7SUFFeEMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUk7SUFFaEUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJO0lBRWhCLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJO0lBRTlDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUk7SUFFdEIsSUFBSTtJQUlKLElBQUk7SUFFSixJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJO0lBSTFELElBQUk7SUFJSixJQUFJLEVBQUUsSUFBSTtJQUVWLElBQUk7SUFNSixJQUFJO0lBSUosSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtDQUN2QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtGbGFnU2V0fSBmcm9tICcuLi9mbGFnc2V0LmpzJztcbmltcG9ydCB7c2h1ZmZsZUNhdmV9IGZyb20gJy4uL21hemUvY2F2ZS5qcyc7XG5pbXBvcnQge2V4dGVuZEdvYVNjcmVlbnMsIHNodWZmbGVHb2ExfSBmcm9tICcuLi9tYXplL2dvYS5qcyc7XG5pbXBvcnQge3NodWZmbGVTd2FtcH0gZnJvbSAnLi4vbWF6ZS9zd2FtcC5qcyc7XG5pbXBvcnQge3NodWZmbGVQeXJhbWlkfSBmcm9tICcuLi9tYXplL3B5cmFtaWQuanMnO1xuaW1wb3J0IHtSYW5kb219IGZyb20gJy4uL3JhbmRvbS5qcyc7XG5pbXBvcnQge1JvbX0gZnJvbSAnLi4vcm9tLmpzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHNodWZmbGVNYXplcyhyb206IFJvbSwgZmxhZ3M6IEZsYWdTZXQsIHJhbmRvbTogUmFuZG9tKSB7XG4gIC8vIFRPRE8gLSBjb25zb2xpZGF0ZSBmcmVlIGZsYWdzPyAgRmluZCBhIGxpc3Qgb2Ygd2hhdCdzIHVzZWQuLi5cbiAgLy8gWy4uLm5ldyBTZXQocm9tLmxvY2F0aW9ucy5mbGF0TWFwKGwgPT4gbC5mbGFncy5tYXAoZiA9PiBmLmZsYWcpXG4gIC8vICAgICAgICAgICAuZmlsdGVyKGYgPT4gZiAhPSAweDIwMCkubWFwKHg9PngudG9TdHJpbmcoMTYpKSkpXS5zb3J0KClcbiAgLy8gQWxzbyBtYXAgb3ZlciB0cmlnZ2VycywgZGlhbG9ncyAtIGZpbmQgd2hhdCdzIHNldC9jbGVhcmVkXG4gIC8vIEFsc28gMmYwIGlzIGNvLW9wdGVkIGFzIGFuIFwiYWx3YXlzIHRydWVcIiB0cmlnZ2VyLlxuICBzaHVmZmxlUHlyYW1pZChyb20sIHJhbmRvbSk7XG4gIHNodWZmbGVTd2FtcChyb20sIHJhbmRvbSk7XG4gIHNodWZmbGVHb2ExKHJvbSwgcmFuZG9tKTtcbiAgZm9yIChjb25zdCBjYXZlIG9mIFNIVUZGTEVEX0NBVkVTKSB7XG4gICAgc2h1ZmZsZUNhdmUocm9tLmxvY2F0aW9uc1tjYXZlXSwgcmFuZG9tKTtcbiAgfVxuICBpZiAoZmxhZ3MuYWRkRWFzdENhdmUoKSkge1xuICAgIHNodWZmbGVDYXZlKHJvbS5sb2NhdGlvbnMuRWFzdENhdmUxLCByYW5kb20pO1xuICAgIHNodWZmbGVDYXZlKHJvbS5sb2NhdGlvbnMuRWFzdENhdmUyLCByYW5kb20pO1xuICAgIGlmIChyb20ubG9jYXRpb25zLkVhc3RDYXZlMy51c2VkKSB7XG4gICAgICBzaHVmZmxlQ2F2ZShyb20ubG9jYXRpb25zLkVhc3RDYXZlMywgcmFuZG9tKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByZXBhcmVTY3JlZW5zKHJvbTogUm9tKSB7XG4gIGV4dGVuZEdvYVNjcmVlbnMocm9tKTtcbn1cblxuY29uc3QgU0hVRkZMRURfQ0FWRVMgPSBbXG4gIC8vIFNlYWxlZCBDYXZlXG4gIDB4MDQsIDB4MDUsIDB4MDYsIDB4MDcsIDB4MDgsIDB4MDksIDB4MGEsIDB4MGMsXG4gIC8vIFdpbmRtaWxsIENhdmVcbiAgMHgwZSxcbiAgLy8gWmVidSBDYXZlXG4gIDB4MTAsXG4gIC8vIE10IFNhYnJlIFdcbiAgMHgxMSwgMHgyMiwgMHgyMywgMHgyNCwgMHgyNSwgMHgyNiwgMHgyNyxcbiAgLy8gTXQgU2FicmUgTlxuICAweDJhLCAweDJiLCAweDJjLCAweDJkLCAweDJlLCAweDMxLCAweDMzLCAweDM0LCAweDM1LCAweDM4LCAweDM5LFxuICAvLyBLaXJpc2FcbiAgMHg0NCwgMHg0NSwgMHg0NixcbiAgLy8gRm9nIExhbXBcbiAgMHg0OCwgMHg0OSwgMHg0YSwgMHg0YiwgMHg0YywgMHg0ZCwgMHg0ZSwgMHg0ZixcbiAgLy8gV2F0ZXJmYWxsXG4gIDB4NTQsIDB4NTUsIDB4NTYsIDB4NTcsIC8vIGNhbid0IGhhbmRsZSB0aGlzIG9uZSB5ZXRcbiAgLy8gRXZpbCBzcGlyaXRcbiAgMHg2OSwgLy8gMHg2YSwgMHg2YlxuICAvLyBTYWJlcmEgcGFsYWNlIChwcm9iYWJseSBqdXN0IHNraXAgc2FiZXJhIG1hcCA2ZSlcbiAgLy8gMHg2YywgMHg2ZFxuICAvLyBKb2VsIHBhc3NhZ2VcbiAgMHg3MCxcbiAgLy8gTXQgSHlkcmFcbiAgMHg3ZCwgMHg3ZiwgMHg4MCwgMHg4MSwgMHg4MiwgMHg4MywgMHg4NCwgMHg4NSwgMHg4NiwgMHg4NyxcbiAgLy8gU3R4eVxuICAvLyAweDg4LCAweDg5LCAweDhhLFxuICAvLyBHb2EgQmFzZW1lbnRcbiAgMHg4ZixcbiAgLy8gT2FzaXMgQ2F2ZVxuICAvLyAweDkxLCAweGI4LCBcbiAgLy8gQ29ubmVjdG9yc1xuICAweDkyLCAweDk1LFxuICAvLyBQeXJhbWlkXG4gIDB4OWQsIC8vMHg5ZSxcbiAgLy8gQ3J5cHRcbiAgLy8gMHhhMCwgMHhhMSwgMHhhMiwgMHhhMywgMHhhNCwgMHhhNSxcbiAgLy8gR29hIC0gS2VsYmVzcXVlIDJcbiAgLy8gMHhhOCwgMHhhOSwgLy8gTk9URTogYTkgaGFuZGxlZCBieSBzaHVmZmxlR29hMVxuICAvLyBHb2EgLSBTYWJlcmEgMlxuICAweGFiLFxuICAvLyBHb2EgLSBNYWRvIDJcbiAgLy8gMHhhZCwgMHhhZSwgMHhhZiwgMHhiOVxuICAvLyBHb2EgLSBLYXJtaW5lXG4gIDB4YjAsIDB4YjEsIDB4YjIsIDB4YjMsIC8vIDB4YjQsIDB4YjUsIDB4YjgsXG5dO1xuIl19