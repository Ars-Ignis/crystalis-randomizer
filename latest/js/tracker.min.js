(function(){
const global=window;'use strict';var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(b){var a=0;return function(){return a<b.length?{done:!1,value:b[a++]}:{done:!0}}};$jscomp.arrayIterator=function(b){return{next:$jscomp.arrayIteratorImpl(b)}};$jscomp.makeIterator=function(b){var a="undefined"!=typeof Symbol&&Symbol.iterator&&b[Symbol.iterator];return a?a.call(b):$jscomp.arrayIterator(b)};
$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(b,a,c){b!=Array.prototype&&b!=Object.prototype&&(b[a]=c.value)};
$jscomp.polyfill=function(b,a,c,d){if(a){c=$jscomp.global;b=b.split(".");for(d=0;d<b.length-1;d++){var e=b[d];e in c||(c[e]={});c=c[e]}b=b[b.length-1];d=c[b];a=a(d);a!=d&&null!=a&&$jscomp.defineProperty(c,b,{configurable:!0,writable:!0,value:a})}};$jscomp.FORCE_POLYFILL_PROMISE=!1;$jscomp.SYMBOL_PREFIX="jscomp_symbol_";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};
$jscomp.Symbol=function(){var b=0;return function(a){return $jscomp.SYMBOL_PREFIX+(a||"")+b++}}();$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var b=$jscomp.global.Symbol.iterator;b||(b=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[b]&&$jscomp.defineProperty(Array.prototype,b,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}});$jscomp.initSymbolIterator=function(){}};
$jscomp.initSymbolAsyncIterator=function(){$jscomp.initSymbol();var b=$jscomp.global.Symbol.asyncIterator;b||(b=$jscomp.global.Symbol.asyncIterator=$jscomp.global.Symbol("asyncIterator"));$jscomp.initSymbolAsyncIterator=function(){}};$jscomp.iteratorPrototype=function(b){$jscomp.initSymbolIterator();b={next:b};b[$jscomp.global.Symbol.iterator]=function(){return this};return b};$jscomp.underscoreProtoCanBeSet=function(){var b={a:!0},a={};try{return a.__proto__=b,a.a}catch(c){}return!1};
$jscomp.setPrototypeOf="function"==typeof Object.setPrototypeOf?Object.setPrototypeOf:$jscomp.underscoreProtoCanBeSet()?function(b,a){b.__proto__=a;if(b.__proto__!==a)throw new TypeError(b+" is not extensible");return b}:null;$jscomp.generator={};$jscomp.generator.ensureIteratorResultIsObject_=function(b){if(!(b instanceof Object))throw new TypeError("Iterator result "+b+" is not an object");};
$jscomp.generator.Context=function(){this.isRunning_=!1;this.yieldAllIterator_=null;this.yieldResult=void 0;this.nextAddress=1;this.finallyAddress_=this.catchAddress_=0;this.finallyContexts_=this.abruptCompletion_=null};$jscomp.generator.Context.prototype.start_=function(){if(this.isRunning_)throw new TypeError("Generator is already running");this.isRunning_=!0};$jscomp.generator.Context.prototype.stop_=function(){this.isRunning_=!1};
$jscomp.generator.Context.prototype.jumpToErrorHandler_=function(){this.nextAddress=this.catchAddress_||this.finallyAddress_};$jscomp.generator.Context.prototype.next_=function(b){this.yieldResult=b};$jscomp.generator.Context.prototype.throw_=function(b){this.abruptCompletion_={exception:b,isException:!0};this.jumpToErrorHandler_()};$jscomp.generator.Context.prototype.return=function(b){this.abruptCompletion_={return:b};this.nextAddress=this.finallyAddress_};
$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks=function(b){this.abruptCompletion_={jumpTo:b};this.nextAddress=this.finallyAddress_};$jscomp.generator.Context.prototype.yield=function(b,a){this.nextAddress=a;return{value:b}};$jscomp.generator.Context.prototype.yieldAll=function(b,a){b=$jscomp.makeIterator(b);var c=b.next();$jscomp.generator.ensureIteratorResultIsObject_(c);if(c.done)this.yieldResult=c.value,this.nextAddress=a;else return this.yieldAllIterator_=b,this.yield(c.value,a)};
$jscomp.generator.Context.prototype.jumpTo=function(b){this.nextAddress=b};$jscomp.generator.Context.prototype.jumpToEnd=function(){this.nextAddress=0};$jscomp.generator.Context.prototype.setCatchFinallyBlocks=function(b,a){this.catchAddress_=b;void 0!=a&&(this.finallyAddress_=a)};$jscomp.generator.Context.prototype.setFinallyBlock=function(b){this.catchAddress_=0;this.finallyAddress_=b||0};$jscomp.generator.Context.prototype.leaveTryBlock=function(b,a){this.nextAddress=b;this.catchAddress_=a||0};
$jscomp.generator.Context.prototype.enterCatchBlock=function(b){this.catchAddress_=b||0;b=this.abruptCompletion_.exception;this.abruptCompletion_=null;return b};$jscomp.generator.Context.prototype.enterFinallyBlock=function(b,a,c){c?this.finallyContexts_[c]=this.abruptCompletion_:this.finallyContexts_=[this.abruptCompletion_];this.catchAddress_=b||0;this.finallyAddress_=a||0};
$jscomp.generator.Context.prototype.leaveFinallyBlock=function(b,a){a=this.finallyContexts_.splice(a||0)[0];if(a=this.abruptCompletion_=this.abruptCompletion_||a){if(a.isException)return this.jumpToErrorHandler_();void 0!=a.jumpTo&&this.finallyAddress_<a.jumpTo?(this.nextAddress=a.jumpTo,this.abruptCompletion_=null):this.nextAddress=this.finallyAddress_}else this.nextAddress=b};$jscomp.generator.Context.prototype.forIn=function(b){return new $jscomp.generator.Context.PropertyIterator(b)};
$jscomp.generator.Context.PropertyIterator=function(b){this.object_=b;this.properties_=[];for(var a in b)this.properties_.push(a);this.properties_.reverse()};$jscomp.generator.Context.PropertyIterator.prototype.getNext=function(){for(;0<this.properties_.length;){var b=this.properties_.pop();if(b in this.object_)return b}return null};$jscomp.generator.Engine_=function(b){this.context_=new $jscomp.generator.Context;this.program_=b};
$jscomp.generator.Engine_.prototype.next_=function(b){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_.next,b,this.context_.next_);this.context_.next_(b);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.return_=function(b){this.context_.start_();var a=this.context_.yieldAllIterator_;if(a)return this.yieldAllStep_("return"in a?a["return"]:function(a){return{value:a,done:!0}},b,this.context_.return);this.context_.return(b);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.throw_=function(b){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_["throw"],b,this.context_.next_);this.context_.throw_(b);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.yieldAllStep_=function(b,a,c){try{var d=b.call(this.context_.yieldAllIterator_,a);$jscomp.generator.ensureIteratorResultIsObject_(d);if(!d.done)return this.context_.stop_(),d;var e=d.value}catch(f){return this.context_.yieldAllIterator_=null,this.context_.throw_(f),this.nextStep_()}this.context_.yieldAllIterator_=null;c.call(this.context_,e);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.nextStep_=function(){for(;this.context_.nextAddress;)try{var b=this.program_(this.context_);if(b)return this.context_.stop_(),{value:b.value,done:!1}}catch(a){this.context_.yieldResult=void 0,this.context_.throw_(a)}this.context_.stop_();if(this.context_.abruptCompletion_){b=this.context_.abruptCompletion_;this.context_.abruptCompletion_=null;if(b.isException)throw b.exception;return{value:b.return,done:!0}}return{value:void 0,done:!0}};
$jscomp.generator.Generator_=function(b){this.next=function(a){return b.next_(a)};this.throw=function(a){return b.throw_(a)};this.return=function(a){return b.return_(a)};$jscomp.initSymbolIterator();this[Symbol.iterator]=function(){return this}};$jscomp.generator.createGenerator=function(b,a){a=new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(a));$jscomp.setPrototypeOf&&$jscomp.setPrototypeOf(a,b.prototype);return a};
$jscomp.asyncExecutePromiseGenerator=function(b){function a(a){return b.next(a)}function c(a){return b.throw(a)}return new Promise(function(d,e){function f(b){b.done?d(b.value):Promise.resolve(b.value).then(a,c).then(f,e)}f(b.next())})};$jscomp.asyncExecutePromiseGeneratorFunction=function(b){return $jscomp.asyncExecutePromiseGenerator(b())};$jscomp.asyncExecutePromiseGeneratorProgram=function(b){return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(b)))};
$jscomp.checkStringArgs=function(b,a,c){if(null==b)throw new TypeError("The 'this' value for String.prototype."+c+" must not be null or undefined");if(a instanceof RegExp)throw new TypeError("First argument to String.prototype."+c+" must not be a regular expression");return b+""};$jscomp.stringPadding=function(b,a){b=void 0!==b?String(b):" ";return 0<a&&b?b.repeat(Math.ceil(a/b.length)).substring(0,a):""};
$jscomp.polyfill("String.prototype.padStart",function(b){return b?b:function(a,b){var c=$jscomp.checkStringArgs(this,null,"padStart");return $jscomp.stringPadding(b,a-c.length)+c}},"es8","es3");$jscomp.iteratorFromArray=function(b,a){$jscomp.initSymbolIterator();b instanceof String&&(b+="");var c=0,d={next:function(){if(c<b.length){var e=c++;return{value:a(e,b[e]),done:!1}}d.next=function(){return{done:!0,value:void 0}};return d.next()}};d[Symbol.iterator]=function(){return d};return d};
$jscomp.polyfill("Array.prototype.values",function(b){return b?b:function(){return $jscomp.iteratorFromArray(this,function(a,b){return b})}},"es8","es3");$jscomp.polyfill("String.prototype.padEnd",function(b){return b?b:function(a,b){var c=$jscomp.checkStringArgs(this,null,"padStart");return c+$jscomp.stringPadding(b,a-c.length)}},"es8","es3");
$jscomp.polyfill("Array.prototype.includes",function(b){return b?b:function(a,b){var c=this;c instanceof String&&(c=String(c));var e=c.length;b=b||0;for(0>b&&(b=Math.max(b+e,0));b<e;b++){var f=c[b];if(f===a||Object.is(f,a))return!0}return!1}},"es7","es3");
class Assembler$$module$js$6502{constructor(b){this.labels={};this.lines=[];this.pc=0;this.filename=b;this.lineNumber=-1;this.lineContents=""}addLine(b){this.lines.push(b.orig(this.lineNumber,this.lineContents))}addLabel(b,a){if("number"!==typeof a)throw Error("Expected a number");const c=this.labels[b]||[];this.labels[b]=c;b=find$$module$js$6502(c,a);0>b&&c.splice(~b,0,a)}ingest(b){this.lineNumber++;this.lineContents=b;b=b.replace(/;.*/,"");b=b.replace(/\s+/g," ");b=b.replace(/\s$/g,"");var a;if(a=
/^\s*\.org\s+(\S+)/i.exec(b))this.addLine(new OrgLine$$module$js$6502(this.pc=parseNumber$$module$js$6502(a[1])));else if(a=/^\s*\.bank\s+(\S+)\s+(\S+)\s*:\s*(\S+)/i.exec(b)){const [,b,c,f]=a;this.addLine(new BankLine$$module$js$6502(parseNumber$$module$js$6502(b),parseNumber$$module$js$6502(c),parseNumber$$module$js$6502(f)))}else if(a=/^\s*\.(byte|word)\s+(.*)/i.exec(b))a=("word"==a[1]?WordLine$$module$js$6502:ByteLine$$module$js$6502).parse(a[2]),this.addLine(a),this.pc+=a.size();else if(a=/^define\s+(\S+)\s+(.*)/.exec(b))this.addLabel(a[1],
parseNumber$$module$js$6502(a[2]));else{if(a=/^(\S+?):(.*)$/.exec(b)){var c=a[1];b=" "+a[2];this.addLabel(c,~this.pc)}else if(a=/^((?:[-+]+\s+)+)(.*)$/.exec(b)){b=a[1];for(c of b.trim().split(" "))this.addLabel(c,~this.pc);b=" "+a[2]}if(a=/^\s+([a-z]{3})(\s+.*)?$/.exec(b))a=new Opcode$$module$js$6502(a[1],(a[2]||"").trim(),this.pc),this.addLine(a),this.pc+=a.size();else if(/\S/.test(b))throw Error(`Could not parse line ${b} at ${this.filename}:${this.lineNumber}`);}}assemble(){var b=new Context$$module$js$6502(this.labels),
a=[];for(var c of this.lines){try{c.expand(b)}catch(e){throw a=e.stack.replace(`Error: ${e.message}`,""),Error(`${e.message}${` from line ${c.origLineNumber}: \`${c.origContent}\``}${a}\n================`);}if(c instanceof OrgLine$$module$js$6502&&null!=a[c.pc])throw Error(`Collision at $${c.pc.toString(16)}`);for(const d of c.bytes()){if(null!=a[b.pc])throw Error(`Collision at $${b.pc.toString(16)}`);a[b.pc++]=d}}b=[];for(var d in a)d-1 in a||b.push(Number(d));c=[];for(const e of b){d=[];for(b=e;b in
a;b++)d.push(a[b]);c.push(new Chunk$$module$js$6502(e,d))}return c}}class AbstractLine$$module$js$6502{orig(b,a){this.origLineNumber=b;this.origContent=a;return this}expand(){throw Error(`abstract: ${this.constructor}`);}bytes(){throw Error(`abstract: ${this.constructor}`);}}
class ByteLine$$module$js$6502 extends AbstractLine$$module$js$6502{static parse(b){const a=[];for(let c of b.split(","))c=c.trim(),(b=/^"(.*)"$/.exec(c))?a.push(...[...b[1]].map((a)=>a.charCodeAt(0))):a.push(parseNumber$$module$js$6502(c));return new ByteLine$$module$js$6502(a)}constructor(b){super();this.bytes_=b}bytes(){return[...this.bytes_]}size(){return this.bytes_.length}expand(){}}
class WordLine$$module$js$6502 extends AbstractLine$$module$js$6502{static parse(b){const a=[];for(let c of b.split(","))c=c.trim(),c=c.replace(/[()]/g,""),a.push(parseNumber$$module$js$6502(c));return new WordLine$$module$js$6502(a)}constructor(b){super();this.words=b}bytes(){const b=[];for(const a of this.words)b.push(a&255),b.push(a>>>8);return b}size(){return 2*this.words.length}expand(b){for(let a=0;a<this.words.length;a++)"string"==typeof this.words[a]&&(this.words[a]=b.map(this.words[a]))}}
class OrgLine$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(b){super();this.pc=b}bytes(){return[]}size(){return 0}expand(b){b.pc=this.pc}}class BankLine$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(b,a,c){super();this.prg=b;this.cpu=a;this.length=c}bytes(){return[]}size(){return 0}expand(b){b.updateBank(this.prg,this.cpu,this.length)}}
class Context$$module$js$6502{constructor(b){this.pc=0;this.labels=b;this.cpuToPrg=[];this.prgToCpu=[]}updateBank(b,a,c){for(var d=0;d<c;d++){var e=a+d,f=this.cpuToPrg[e];null!=f&&(this.prgToCpu[f]=null,this.cpuToPrg[e]=null)}for(d=0;d<c;d++)e=a+d,f=b+d,this.prgToCpu[f]=e,this.cpuToPrg[e]=f}mapLabel(b,a){let c=this.labels[b];if(!c)throw Error(`Label not found: ${b}`);if(null==a){if(1<c.length)throw Error(`Ambiguous label: ${b}`);return c[0]}a=~(a+2);const d=find$$module$js$6502(c,a);if(0<=d)return c[d];
if(-1==d)return c[0];if(d==~c.length)return c[c.length-1];c=c.slice(~d-1,~d+1);return b.startsWith("-")?c[1]:b.startsWith("+")?c[0]:a<(c[0]+c[1])/2?c[0]:c[1]}mapPrgToCpu(b){const a=this.prgToCpu[b];if(null==a)throw Error(`PRG address unmapped: $${b.toString(16)}`);return a}map(b,a=void 0){if(null==b)return b;"string"==typeof b&&(b=this.mapLabel(b,a));0>b&&(b=this.mapPrgToCpu(~b));return b}}
class Chunk$$module$js$6502 extends Uint8Array{constructor(b,a){super(a.length);this.set(a);this.start=b}apply(b){b.subarray(this.start,this.start+this.length).set(this)}shift(b){return new Chunk$$module$js$6502(this.start+b,this)}}
class Patch$$module$js$6502{static from(b){const a=[];var c=8;new Set;for(var d of b)b=new Uint8Array(d.length+5),b[0]=d.start>>>16,b[1]=d.start>>>8&255,b[2]=d.start&255,b[3]=d.length>>>8,b[4]=d.length&255,b.set(d,5),a.push(b),c+=b.length;c=new Uint8Array(c);d=5;c[0]=80;c[1]=65;c[2]=84;c[3]=67;c[4]=72;for(const b of a)c.subarray(d,d+b.length).set(b),d+=b.length;c[d]=69;c[d+1]=79;c[d+2]=70;return new Patch$$module$js$6502(c)}constructor(b){this.data=b}apply(b){for(const a of this)a.apply(b)}*[Symbol.iterator](){let b=
5;for(;b<this.data.length-3;){const a=this.data[b+3]<<8|this.data[b+4];yield new Chunk$$module$js$6502(this.data[b]<<16|this.data[b+1]<<8|this.data[b+2],this.data.subarray(b+5,b+5+a));b+=a+5}}toHexString(){return[...this.data].map((b)=>b.toString(16).padStart(2,0)).join("")}}
const assemble$$module$js$6502=(b,a="input")=>{a=new Assembler$$module$js$6502(a);let c=0;for(const d of b.split("\n"))c++,a.ingest(d);b=a.assemble();return Patch$$module$js$6502.from(b)},buildRomPatch$$module$js$6502=(b,a=void 0,c=void 0)=>{b=[...b].map((a)=>a.shift(16));a=[...a||[]].map((a)=>a.shift(16+c));return Patch$$module$js$6502.from([...b,...a])};
class Opcode$$module$js$6502 extends AbstractLine$$module$js$6502{constructor(b,a,c){super();this.mnemonic=b;this.arg=mode$$module$js$6502(b,a);this.pc=c}size(){return 1+this.arg[1]}bytes(){let b=this.arg[2];if("Relative"==this.arg[0]&&(b-=this.pc+2,!(128>b&&-128<=b)))throw Error(`Too far to branch: ${b} at input:${this.origLineNumber}`);const a=[opcodes$$module$js$6502[this.mnemonic][this.arg[0]]];let c=this.arg[1];for(;c--;)a.push(b&255),b>>>=8;return a}expand(b){try{this.arg[2]=b.map(this.arg[2],
this.pc)}catch(a){throw console.error(this),a;}this.pc=b.map(~this.pc)}}const find$$module$js$6502=(b,a)=>{let c=0,d=b.length-1;if(0>d||a<b[0])return-1;var e=b[d];if(a==e)return d;if(a>e)return~b.length;for(;1<d-c;)e=c+d>>1,a<b[e]?d=e:c=e;return a==b[c]?c:~d},mode$$module$js$6502=(b,a)=>{for(const [d,e]of modes$$module$js$6502){var c=d.exec(a);if(c){c=e(c[1]);if(!(b in opcodes$$module$js$6502))throw Error(`Bad mnemonic: ${b}`);if(c[0]in opcodes$$module$js$6502[b])return c}}throw Error(`Could not find mode for ${b} ${a}
Expected one of [${Object.keys(opcodes$$module$js$6502[b]).join(", ")}]`);},modes$$module$js$6502=[[/^$/,()=>["Implied",0]],[/^#(.+)$/,(b)=>["Immediate",1,parseNumber$$module$js$6502(b,!0)]],[/^(\$..)$/,(b)=>["ZeroPage",1,parseNumber$$module$js$6502(b,!0)]],[/^(\$..),x$/,(b)=>["ZeroPageX",1,parseNumber$$module$js$6502(b,!0)]],[/^(\$..),y$/,(b)=>["ZeroPageY",1,parseNumber$$module$js$6502(b,!0)]],[/^\((\$..),x\)$/,(b)=>["PreindexedIndirect",1,parseNumber$$module$js$6502(b,!0)]],[/^\((\$..)\),y$/,(b)=>
["PostindexedIndirect",1,parseNumber$$module$js$6502(b,!0)]],[/^\((.+)\)$/,(b)=>["IndirectAbsolute",2,parseNumber$$module$js$6502(b,!0)]],[/^(.+),x$/,(b)=>["AbsoluteX",2,parseNumber$$module$js$6502(b,!0)]],[/^(.+),y$/,(b)=>["AbsoluteY",2,parseNumber$$module$js$6502(b,!0)]],[/^(.+)$/,(b)=>["Absolute",2,parseNumber$$module$js$6502(b,!0)]],[/^(.+)$/,(b)=>["Relative",1,parseNumber$$module$js$6502(b,!0)]]],parseNumber$$module$js$6502=(b,a=!1)=>{if(b.startsWith("$"))return Number.parseInt(b.substring(1),
16);if(b.startsWith("%"))return Number.parseInt(b.substring(1),2);if(b.startsWith("0"))return Number.parseInt(b,8);const c=Number.parseInt(b,10);if(!Number.isNaN(c))return c;if(a)return b;throw Error(`Bad number: ${b}`);},opcodes$$module$js$6502={adc:{Immediate:105,ZeroPage:101,ZeroPageX:117,Absolute:109,AbsoluteX:125,AbsoluteY:121,PreindexedIndirect:97,PostindexedIndirect:113},and:{Immediate:41,ZeroPage:37,ZeroPageX:53,Absolute:45,AbsoluteX:61,AbsoluteY:57,PreindexedIndirect:33,PostindexedIndirect:49},
asl:{Implied:10,ZeroPage:6,ZeroPageX:22,Absolute:14,AbsoluteX:30},bcc:{Relative:144},bcs:{Relative:176},beq:{Relative:240},bit:{ZeroPage:36,Absolute:44},bmi:{Relative:48},bne:{Relative:208},bpl:{Relative:16},brk:{Implied:0},bvc:{Relative:80},bvs:{Relative:112},clc:{Implied:24},cld:{Implied:216},cli:{Implied:88},clv:{Implied:184},cmp:{Immediate:201,ZeroPage:197,ZeroPageX:213,Absolute:205,AbsoluteX:221,AbsoluteY:217,PreindexedIndirect:193,PostindexedIndirect:209},cpx:{Immediate:224,ZeroPage:228,Absolute:236},
cpy:{Immediate:192,ZeroPage:196,Absolute:204},dec:{ZeroPage:198,ZeroPageX:214,Absolute:206,AbsoluteX:222},dex:{Implied:202},dey:{Implied:136},eor:{Immediate:73,ZeroPage:69,ZeroPageX:85,Absolute:77,AbsoluteX:93,AbsoluteY:89,PreindexedIndirect:65,PostindexedIndirect:81},inc:{ZeroPage:230,ZeroPageX:246,Absolute:238,AbsoluteX:254},inx:{Implied:232},iny:{Implied:200},jmp:{Absolute:76,IndirectAbsolute:108},jsr:{Absolute:32},lda:{Immediate:169,ZeroPage:165,ZeroPageX:181,Absolute:173,AbsoluteX:189,AbsoluteY:185,
PreindexedIndirect:161,PostindexedIndirect:177},ldx:{Immediate:162,ZeroPage:166,ZeroPageY:182,Absolute:174,AbsoluteY:190},ldy:{Immediate:160,ZeroPage:164,ZeroPageX:180,Absolute:172,AbsoluteX:188},lsr:{Implied:74,ZeroPage:70,ZeroPageX:86,Absolute:78,AbsoluteX:94},nop:{Implied:234},ora:{Immediate:9,ZeroPage:5,ZeroPageX:21,Absolute:13,AbsoluteX:29,AbsoluteY:25,PreindexedIndirect:1,PostindexedIndirect:17},pha:{Implied:72},php:{Implied:8},pla:{Implied:104},plp:{Implied:40},rol:{Implied:42,ZeroPage:38,
ZeroPageX:54,Absolute:46,AbsoluteX:62},ror:{Implied:106,ZeroPage:102,ZeroPageX:118,Absolute:110,AbsoluteX:126},rti:{Implied:64},rts:{Implied:96},sbc:{Immediate:233,ZeroPage:229,ZeroPageX:245,Absolute:237,AbsoluteX:253,AbsoluteY:249,PreindexedIndirect:225,PostindexedIndirect:241},sec:{Implied:56},sed:{Implied:248},sei:{Implied:120},sta:{ZeroPage:133,ZeroPageX:149,Absolute:141,AbsoluteX:157,AbsoluteY:153,PreindexedIndirect:129,PostindexedIndirect:145},stx:{ZeroPage:134,ZeroPageY:150,Absolute:142},sty:{ZeroPage:132,
ZeroPageX:148,Absolute:140},tax:{Implied:170},tay:{Implied:168},tsx:{Implied:186},txa:{Implied:138},txs:{Implied:154},tya:{Implied:152}};var module$js$6502={};module$js$6502.assemble=assemble$$module$js$6502;module$js$6502.buildRomPatch=buildRomPatch$$module$js$6502;const Bits$$module$js$bits_bigint={},BitsBigInt$$module$js$bits_bigint=Bits$$module$js$bits_bigint;Bits$$module$js$bits_bigint.of=(...b)=>{let a=ZERO$$module$js$bits_bigint;for(const c of b)a|=ONE$$module$js$bits_bigint<<BigInt(c);return a};Bits$$module$js$bits_bigint.from=(b)=>{let a=ZERO$$module$js$bits_bigint;for(const c of b)a|=ONE$$module$js$bits_bigint<<BigInt(c);return a};Bits$$module$js$bits_bigint.containsAll=(b,a)=>!(a&~b);
Bits$$module$js$bits_bigint.with=(b,a)=>b|ONE$$module$js$bits_bigint<<BigInt(a);Bits$$module$js$bits_bigint.without=(b,a)=>b&~(ONE$$module$js$bits_bigint<<BigInt(a));Bits$$module$js$bits_bigint.has=(b,a)=>!!(b&ONE$$module$js$bits_bigint<<BigInt(a));Bits$$module$js$bits_bigint.bits=(b)=>{const a=[];let c=0;for(;b;){let d=Number(b&MAX_UINT32$$module$js$bits_bigint),e=32;for(;d;){const b=Math.clz32(d)+1;e-=b;d<<=b;32==b&&(d=0);a.push(c|e)}b>>=THIRTY_TWO$$module$js$bits_bigint;c+=32}return a};
Bits$$module$js$bits_bigint.clone=(b)=>b;Bits$$module$js$bits_bigint.empty=(b)=>!b;const BIGINT_OK$$module$js$bits_bigint="function"===typeof BigInt&&"bigint"===typeof BigInt(0),ZERO$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&BigInt(0),ONE$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&BigInt(1),MAX_UINT32$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&BigInt(4294967295),THIRTY_TWO$$module$js$bits_bigint=BIGINT_OK$$module$js$bits_bigint&&BigInt(32);
var module$js$bits_bigint={};module$js$bits_bigint.BitsBigInt=Bits$$module$js$bits_bigint;module$js$bits_bigint.BIGINT_OK=BIGINT_OK$$module$js$bits_bigint;const Bits$$module$js$bits_array={},BitsArray$$module$js$bits_array=Bits$$module$js$bits_array;Bits$$module$js$bits_array.of=(...b)=>{let a=[];for(const c of b)a[c>>>5]=(a[c>>>5]||0)|1<<c;return a};Bits$$module$js$bits_array.from=(b)=>{let a=[];for(const c of b)a[c>>>5]=(a[c>>>5]||0)|1<<c;return a};Bits$$module$js$bits_array.containsAll=(b,a)=>{for(let c=Math.max(b.length,a.length)-1;0<=c;c--)if((a[c]||0)&~(b[c]||0))return!1;return!0};
Bits$$module$js$bits_array.with=(b,a)=>{b[a>>>5]=(b[a>>>5]||0)|1<<a;return b};Bits$$module$js$bits_array.without=(b,a)=>{b[a>>>5]=(b[a>>>5]||0)&~(1<<a);return b};Bits$$module$js$bits_array.has=(b,a)=>!!((b[a>>>5]||0)&1<<a);Bits$$module$js$bits_array.bits=(b)=>{const a=[];for(let c=0;c<b.length;c++){let d=b[c],e=32;for(;d;){const b=Math.clz32(d)+1;e-=b;d<<=b;32==b&&(d=0);a.push(c<<5|e)}}return a};Bits$$module$js$bits_array.clone=(b)=>[...b];Bits$$module$js$bits_array.empty=(b)=>b.every((a)=>!a);
var module$js$bits_array={};module$js$bits_array.BitsArray=Bits$$module$js$bits_array;const b$$module$js$bits=BIGINT_OK$$module$js$bits_bigint?Bits$$module$js$bits_bigint:Bits$$module$js$bits_array;class Bits$$module$js$bits{}Bits$$module$js$bits.of=b$$module$js$bits.of;Bits$$module$js$bits.from=b$$module$js$bits.from;Bits$$module$js$bits.containsAll=b$$module$js$bits.containsAll;Bits$$module$js$bits.with=b$$module$js$bits.with;Bits$$module$js$bits.without=b$$module$js$bits.without;Bits$$module$js$bits.has=b$$module$js$bits.has;Bits$$module$js$bits.bits=b$$module$js$bits.bits;
Bits$$module$js$bits.clone=b$$module$js$bits.clone;Bits$$module$js$bits.empty=b$$module$js$bits.empty;var module$js$bits={};module$js$bits.Bits=Bits$$module$js$bits;let table$$module$js$crc32;const buildTable$$module$js$crc32=()=>{let b;const a=Array(256);for(let c=0;256>c;c++){b=c;for(let a=0;8>a;a++)b=b&1?3988292384^b>>>1:b>>>1;a[c]=b}return a},crc32$$module$js$crc32=(b)=>{table$$module$js$crc32||(table$$module$js$crc32=buildTable$$module$js$crc32());let a=-1;for(let c=0;c<b.length;c++)a=a>>>8^table$$module$js$crc32[(a^b[c])&255];return(a^-1)>>>0};var module$js$crc32={};module$js$crc32.crc32=crc32$$module$js$crc32;const REPEATABLE_FLAGS$$module$js$flagset=new Set(["S"]),exclusiveFlags$$module$js$flagset=(b)=>b.startsWith("S")?new RegExp(`S.*[${b.substring(1)}]`):FLAG_CONFLICTS$$module$js$flagset[b],FLAG_CONFLICTS$$module$js$flagset={Hm:/Em/,Hx:/Ex/,Em:/Hm/,Ex:/Hx/,Tw:/Gw/,Gw:/Tw/};
class FlagSet$$module$js$flagset{constructor(b){this.flags={};b=b.replace(/[^A-Za-z0-9!]/g,"");const a=/([A-Z])([a-z0-9!]+)/g;let c;for(;c=a.exec(b);){let [,a,b]=c;REPEATABLE_FLAGS$$module$js$flagset.has(a)&&(b=[b]);for(const c of b)this.set(a+c,!0)}}set(b,a){const c=b[0],d=b.substring(1);a?(this.removeConflicts(b),b=(this.flags[c]||[]).filter((a)=>a!==d),b.push(d),b.sort(),this.flags[c]=b):(b=(this.flags[c]||[]).filter((a)=>a!==d),b.length?this.flags[c]=b:delete this.flags[c])}check(b){const a=this.flags[b[0]];
return!!(a&&0<=a.indexOf(b.substring(1)))}removeConflicts(b){const a=exclusiveFlags$$module$js$flagset(b);if(a)for(const c in this.flags)b=this.flags[c].filter((b)=>!a.test(c+b)),b.length?this.flags[c]=b:delete this.flags[c]}toStringKey(b){return REPEATABLE_FLAGS$$module$js$flagset.has(b)?[...this.flags[b]].sort().map((a)=>b+a).join(" "):b+[...this.flags[b]].sort().join("")}toString(){const b=Object.keys(this.flags);b.sort();return b.map((a)=>this.toStringKey(a)).join(" ")}}
var module$js$flagset={};module$js$flagset.FlagSet=FlagSet$$module$js$flagset;const generate$$module$js$depgraph=(b)=>{const a=new WorldGraph$$module$js$nodes,c=(b,c)=>new Option$$module$js$nodes(a,b,void 0===c?!0:c),d=(b,c)=>new Item$$module$js$nodes(a,b,c,b,null),e=(b,c,...d)=>new Boss$$module$js$nodes(a,b,c,...d),f=(a,c)=>{if(!b)return c;(c=a.startsWith("!"))&&(a=a.substring(1));return b.check(a)^c},g=new TrackerNode$$module$js$nodes(a,TrackerNode$$module$js$nodes.OFF_ROUTE,"Off-route"),k=new TrackerNode$$module$js$nodes(a,TrackerNode$$module$js$nodes.GLITCH,"Glitch"),h=
new TrackerNode$$module$js$nodes(a,TrackerNode$$module$js$nodes.HARD,"Hard"),m=(a)=>a.value?a:k,r=c("Leather Boots grant speed",f("Ts",!0)),n=m(c("Assume ghetto flight",f("Gf",!0))),t=m(c("Assume statue glitch",f("Gt",!0))),l=m(c("Assume teleport skip",f("Gp",!1))),p=m(c("Assume rabbit skip",f("Gr",!1))),y=c("Sword magic optional",f("Hw",!1)),D=c("Matching sword optional",f("Hs",!1)),Ga=c("Gas mask optional",f("Hg",!1)),ib=c("Healed dolphin optional",f("!Rd",!0)),Gd=c("Calmed sea not required",f("!Rl",
!1)),Hd=c("Sword of Thunder teleports to Shyron",f("Rt",!0)),Ob=c("Barrier magic optional",f("Hb",!0)),Pb=c("Refresh magic optional",f("!Er",!0)),Id=c("Lime Tree connects to Leaf",f("Rp",!0)),Jd=m(c("Assume wild warp",f("Gw",!1))),Kd=c("Allow wild warp",f("!Tw",!1)),Ld=m(c("Assume sword charge glitch",f("Gs",!1))),Md=c("Buffed medical herb",f("!Hm",!0)),Q=d(0,"Sword of Wind").weight(5).fromPerson("Leaf elder",13).npcSpawn(94,16,1).dialog(13,192,2).key(),R=d(1,"Sword of Fire").weight(5).fromPerson("Oak elder",
29).dialog(29,null,3).key(),L=d(2,"Sword of Water").weight(10).chest().key(),I=d(3,"Sword of Thunder").weight(15).chest().key(),jb=d(4,"Crystalis").fixed(),Ha=d(5,"Ball of Wind").chest().key(),za=d(6,"Tornado Bracelet").chest().key(),Ia=d(7,"Ball of Fire").bossDrop("Insect",1).dialog(30,null,0).dialog(32,null,0).dialog(33,null,0).dialog(34,null,0).dialog(96,30,0).dialog(29,null,2).dialog(31,null,0).npcSpawn(193).key(),Ja=d(8,"Flame Bracelet").bossDrop("Kelbesque 1",2).npcSpawn(194).key(),Ka=d(9,"Ball of Water").weight(5).direct("Rage",
250679).npcSpawn(195).key(),La=d(10,"Blizzard Bracelet").weight(5).chest().key(),Ma=d(11,"Ball of Thunder").bossDrop("Mado 1",5).trigger(154,1).key(),Na=d(12,"Storm Bracelet").chest().key();d(13,"Carapace Shield").armor();d(14,"Bronze Shield").armor();d(15,"Platinum Shield").armor();d(16,"Mirrored Shield").armor();d(17,"Ceramic Shield").armor();const Nd=d(18,"Sacred Shield").armor().bossDrop("Mado 2",8).npcSpawn(199).bonus();d(19,"Battle Shield").armor();const Od=d(20,"Psycho Shield").armor();d(21,
"Tanned Hide").armor();d(22,"Leather Armor").armor();d(23,"Bronze Armor").armor();d(24,"Platinmum Armor").armor();d(25,"Soldier Suit").armor();d(26,"Ceramic Suit").armor();const Pd=d(27,"Battle Suit").armor(),Qd=d(28,"Psycho Armor").armor().bossDrop("Draygon 1",10).npcSpawn(203).trigger(159).npcSpawn(131).key(),X=d(29,"Medical Herb").consumable(),Oa=d(30,"Antidote").consumable(),kb=d(31,"Lysis Plant").consumable(),Rd=d(32,"Fruit of Lime").consumable(),Aa=d(33,"Fruit of Power").consumable(),Y=d(34,
"Magic Ring").consumable(),Qb=d(35,"Fruit of Repun").consumable().bossDrop("Sabera 2",7).npcSpawn(198).key(),lb=d(36,"Warp Boots").consumable(),Rb=d(37,"Statue of Onyx").chest("Cordel grass").invisible(254882).key(),mb=d(38,"Opel Statue").consumable().bossDrop("Kelbesque 2",6).npcSpawn(197).key(),Sb=d(39,"Insect Flute").fromPerson("Oak mother",30).dialog(30,null,1).key(),Ba=d(40,"Flute of Lime").fromPerson("Portoa queen",56).direct(39161).dialog(56,null,4).key(),Pa=d(41,"Gas Mask").direct("Akahana in Brynmaer",
251902).npcSpawn(22,24).key(),Sd=d(42,"Power Ring").chest().bonus(),Td=d(43,"Warrior Ring").fromPerson("Akahana's friend",84).dialog(84,null,2).bonus(),Ud=d(44,"Iron Necklace").chest().bonus(),Vd=d(45,"Deo's Pendant").fromPerson("Deo",90).dialog(90,null,0).bonus(),nb=d(46,"Rabbit Boots").bossDrop("Vampire 1",0).npcSpawn(192).key(),Tb=d(47,f("Ts",!0)?"Speed Boots":"Leather Boots").chest().bonus(),Ub=d(48,"Shield Ring").direct("Akahana in waterfall cave",250543).npcSpawn(22,87,2).bonus(),ob=d(49,"Alarm Flute").consumable().fixed(),
Vb=d(50,"Windmill Key").fromPerson("Windmill guard",20).dialog(20,14,0).npcSpawn(20,14,1).key(),Wb=d(51,"Key to Prison").chest().key(),Xb=d(52,"Key to Styx").fromPerson("Zebu in Shyron",94,1).trigger(128,2).dialog(94,242,0).dialog(98,242,0).key(),Yb=d(53,"Fog Lamp").chest().key(),pb=d(54,"Shell Flute").fromPerson("Dolphin",99,1).npcSpawn(99).key(),Zb=d(55,"Eye Glasses").fromPerson("Clark",68).dialog(68,233,1).key(),$b=d(56,"Broken Statue").bossDrop("Sabera 1",4).npcSpawn(127,101).npcSpawn(70).npcSpawn(71).npcSpawn(106).npcSpawn(132).npcSpawn(142).dialog(61).dialog(62).dialog(63).dialog(64).dialog(65).dialog(66).dialog(67).dialog(68,
233).trigger(182).key(),ac=d(57,"Glowing Lamp").direct("Kensu in lighthouse",250638).npcSpawn(126,98,1).key(),bc=d(59,"Love Pendant").chest("Underground channel").invisible(254890).key(),cc=d(60,"Kirisa Plant").chest("Kirisa meadow").invisible(254886).key(),qb=d(61,"Ivory Statue").bossDrop("Karmine",9).npcSpawn(200).key(),dc=d(62,"Bow of Moon").fromPerson("Aryllis",35).direct(251624).dialog(35,null,1).key(),ec=d(63,"Bow of Sun").chest().key(),fc=d(64,"Bow of Truth").fromPerson("Azteca",131).npcSpawn(131,
156,1).dialog(131,null,0).key(),Qa=(new Magic$$module$js$nodes(a,65,"Refresh",65,null)).fromPerson("Zebu at windmill",94).requireUnique().direct(251665).dialog(94,16,3).trigger(180,1),Ra=(new Magic$$module$js$nodes(a,66,"Paralysis",66,null)).direct("Zebu at Mt. Sabre summit",251477).requireUnique().trigger(141).trigger(178),ha=(new Magic$$module$js$nodes(a,67,"Telepathy",67,null)).direct("Tornel at Stom's house",223220).npcSpawn(95,30,1).trigger(133,1),gc=(new Magic$$module$js$nodes(a,68,"Teleport",
68,null)).fromPerson("Tornel on Mt. Sabre",95).dialog(95,33,0),Wd=(new Magic$$module$js$nodes(a,69,"Recover",69,null)).direct("Asina in Portoa",250361),hc=(new Magic$$module$js$nodes(a,70,"Barrier",70,null)).direct("Asina on Angry sea",251609).requireUnique().trigger(132,0),na=(new Magic$$module$js$nodes(a,71,"Change",71,null)).direct("Kensu in Swan",251614).npcSpawn(116,241,1),A=(new Magic$$module$js$nodes(a,72,"Flight",72,null)).weight(15).direct("Kensu in Draygonia Fortress",250255),Sa=d(40,"Flute of Lime").chest(void 0,
91).key(),Xd=Aa.bossDrop("Vampire 2",12,97).npcSpawn(204).key(),G=d(112,"Mimic"),ic=(new Trigger$$module$js$nodes(a,"Talked to Leaf Elder")).get(Q),jc=new Trigger$$module$js$nodes(a,"Talked to Leaf Student"),kc=(new Trigger$$module$js$nodes(a,"Buy alarm flute")).get(ob),rb=new Trigger$$module$js$nodes(a,"Talked to Zebu in cave"),Yd=(new Trigger$$module$js$nodes(a,"Woke up Windmill Guard")).get(Vb),Ta=new Trigger$$module$js$nodes(a,"Started Windmill"),lc=(new Trigger$$module$js$nodes(a,"Learned Refresh")).get(Qa),
Zd=(new Trigger$$module$js$nodes(a,"Gave Statue to Akahana")).get(Pa),$d=(new Trigger$$module$js$nodes(a,"Fought Stom")).get(ha),mc=new Trigger$$module$js$nodes(a,"Visited Oak"),nc=new Trigger$$module$js$nodes(a,"Talked to Oak Mother"),sb=new Trigger$$module$js$nodes(a,"Rescued Oak Child"),ae=(new Trigger$$module$js$nodes(a,"Talked to Oak Mother Again")).get(Sb),be=(new Trigger$$module$js$nodes(a,"Talked to Oak Elder")).get(R),ce=(new Trigger$$module$js$nodes(a,"Talked to Tornel on Mt Sabre")).get(gc),
oc=new Trigger$$module$js$nodes(a,"Villagers Abducted"),pc=new Trigger$$module$js$nodes(a,"Talked to Rabbit in Leaf"),de=(new Trigger$$module$js$nodes(a,"Learned Paralysis")).get(Ra),qc=new Trigger$$module$js$nodes(a,"Talked to Portoa Queen"),rc=new Trigger$$module$js$nodes(a,"Talked to Fortune Teller"),sc=new Trigger$$module$js$nodes(a,"Visited Underground Channel"),ee=(new Trigger$$module$js$nodes(a,"Sent to Waterfall Cave")).get(Ba),fe=(new Trigger$$module$js$nodes(a,"Cured Akahana")).get(Ub),
tc=(new Trigger$$module$js$nodes(a,"Talked to Rage")).get(Ka),uc=new Trigger$$module$js$nodes(a,"Mesia recording played"),vc=(new Trigger$$module$js$nodes(a,"Talked to Asina")).get(Wd),wc=(new Trigger$$module$js$nodes(a,"Healed Dolphin")).get(pb),tb=new Trigger$$module$js$nodes(a,"Returned Fog Lamp"),xc=new Trigger$$module$js$nodes(a,"Talked to Kensu in Cabin"),yc=new Trigger$$module$js$nodes(a,"Talked to Joel Elder"),ge=(new Trigger$$module$js$nodes(a,"Talked to Clark")).get(Zb),he=(new Trigger$$module$js$nodes(a,
"Talked to Kensu in Lighthouse")).get(ac),ub=new Trigger$$module$js$nodes(a,"Calmed the Angry Sea"),ie=(new Trigger$$module$js$nodes(a,"Learned Barrier")).get(hc),zc=new Trigger$$module$js$nodes(a,"Talked to Stom in Swan Hut"),Ac=new Trigger$$module$js$nodes(a,"Talked to Kensu in Swan tavern"),Bc=new Trigger$$module$js$nodes(a,"Talked to Kensu at Swan dance"),je=(new Trigger$$module$js$nodes(a,"Returned Kensu's love pendant")).get(na),ke=(new Trigger$$module$js$nodes(a,"Talked to Amazones Queen")).get(dc),
vb=new Trigger$$module$js$nodes(a,"Entered Shyron"),le=(new Trigger$$module$js$nodes(a,"Talked to Zebu in Shyron")).get(Xb),Cc=new Trigger$$module$js$nodes(a,"Shyron Massacre"),me=(new Trigger$$module$js$nodes(a,"Saved Kensu")).get(A),ne=(new Trigger$$module$js$nodes(a,"Talked to Deo")).get(Vd),oe=(new Trigger$$module$js$nodes(a,"Talked to Akahana's Friend")).get(Td),pe=(new Trigger$$module$js$nodes(a,"Get Bow of Truth")).get(fc),qe=(new Trigger$$module$js$nodes(a,"Forged Crystalis")).get(jb),Ua=
(new Condition$$module$js$nodes(a,"Sword charge glitch")).option(Ld),re=(new Condition$$module$js$nodes(a,"Rabbit skip")).option(p),se=(new Condition$$module$js$nodes(a,"Teleport skip")).option(l),wb=(new Condition$$module$js$nodes(a,"Statue glitch")).option(t),te=(new Condition$$module$js$nodes(a,"Wild warp")).option(Jd,Kd),Va=(new Condition$$module$js$nodes(a,"Any level 2 sword")).option(Q,Ha).option(Q,za).option(R,Ia).option(R,Ja).option(L,Ka).option(L,La).option(I,Ma).option(I,Na),v=(new Condition$$module$js$nodes(a,
"Destroy stone")).option(Q,Ha).option(Q,za).option(Ua,Q,Va),w=(new Condition$$module$js$nodes(a,"Destroy ice")).option(R,Ia).option(R,Ja).option(Ua,R,Va),q=(new Condition$$module$js$nodes(a,"Cross rivers")).option(L,Ka).option(L,La).option(A).option(Ua,L,Va),oa=(new Condition$$module$js$nodes(a,"Destroy iron")).option(I,Ma).option(I,Na).option(Ua,I,Va),S=(new Condition$$module$js$nodes(a,"Any sword")).option(Q).option(R).option(L).option(I),ue=(new Condition$$module$js$nodes(a,"Match insect sword (fire/water/thunder)")).option(R).option(L).option(I).option(Pa,
D.value?D:h,Q),Dc=(new Condition$$module$js$nodes(a,"Speed boots")).option(Tb,r),Ec=(new Condition$$module$js$nodes(a,"Climb slopes")).option(nb).option(A).option(Dc),ve=(new Condition$$module$js$nodes(a,"Enter Mt Sabre North (rabbit)")).option(pc).option(re),we=(new Condition$$module$js$nodes(a,"Enter Mt Sabre North (Teleport)")).option(gc).option(se,A),Fc=(new Condition$$module$js$nodes(a,"Asina in her room")).option(uc),xe=(new Condition$$module$js$nodes(a,"Paralysis or Ball of Water")).option(Ra).option(Fc).option(wb),
Gc=(new Condition$$module$js$nodes(a,"Ride dolphin")).option(pb,xc),ye=(new Condition$$module$js$nodes(a,"Ghetto flight")).option(n,Gc,nb),T=(new Condition$$module$js$nodes(a,"Cross sea")).option(Gc).option(A),ze=(new Condition$$module$js$nodes(a,"Cross whirlpool")).option(ub).option(A).option(ye),J=(new Condition$$module$js$nodes(a,"Refresh if needed")).option(Pb.value?Pb:h).option(Qa),Hc=(new Condition$$module$js$nodes(a,"Wind magic")).option(y.value?y:h,J).option(Ha,za,J),Ic=(new Condition$$module$js$nodes(a,
"Fire magic")).option(y.value?y:h,J).option(Ia,Ja,J),Jc=(new Condition$$module$js$nodes(a,"Water magic")).option(y.value?y:h,J).option(y,J).option(Ka,La,J),Ae=(new Condition$$module$js$nodes(a,"Thunder magic")).option(y.value?y:h,J).option(y,J).option(Ma,J).option(Na,J),Be=(new Condition$$module$js$nodes(a,"Flute of lime or glitch")).option(Ba).option(wb).option(Sa.value?Sa:g),Ce=(new Condition$$module$js$nodes(a,"Second flute of lime")).option(Sa).option(Ba.value?Ba:g),Kc=(new Condition$$module$js$nodes(a,
"Change or glitch")).option(na).option(wb),xb=(new Condition$$module$js$nodes(a,"Pass shooting statues")).option(hc).option(Ob.value?Ob:h).option(Qa,Ub),De=(new Condition$$module$js$nodes(a,"Healed dolphin if required")).option(wc).option(ib),Lc=(new Condition$$module$js$nodes(a,"Match sword of wind")).option(Q).option(D.value?D:h,S),Mc=(new Condition$$module$js$nodes(a,"Match sword of fire")).option(R).option(D.value?D:h,S),Nc=(new Condition$$module$js$nodes(a,"Match sword of water")).option(L).option(D.value?
D:h,S),Ee=(new Condition$$module$js$nodes(a,"Match sword of thunder")).option(I).option(D.value?D:h,S),Fe=(new Condition$$module$js$nodes(a,"Swamp run possible")).option(S).option(Dc).option(Md).option(Qa),Ge=(new Condition$$module$js$nodes(a,"Insect possible to kill")).option(Pa),Wa=(new Condition$$module$js$nodes(a,"Travel swamp")).option(Pa).option(Ga.value?Ga:h,Fe),He=(new Condition$$module$js$nodes(a,"Calmed sea if required")).option(ub).option(Gd),Ie=e(0,"Vampire 1",S).get(nb),Je=e(1,"Insect",
Sb,ue,Ge).get(Ia),Ke=e(2,"Kelbesque 1",Lc,Hc).get(Ja),Le=e(12,"Vampire 2",S).get(Xd),Oc=e(4,"Sabera 1",Mc,Ic).get($b),Me=e(5,"Mado 1",Nc,Jc).get(Ma),Ne=e(6,"Kelbesque 2",Lc,Hc).get(mb),Oe=e(7,"Sabera 2",Mc,Ic).get(Qb),Pe=e(8,"Mado 2",Nc,Jc).get(Nd),Qe=e(9,"Karmine",Ee,Ae).get(qb),Re=e(10,"Draygon 1",S).get(Qd),Se=e(null,"Statues",ec,dc),Te=e(11,"Draygon 2",S,fc),Ue=e(13,"Dyna",jb),M=new Area$$module$js$nodes(a,"Leaf"),pa=new Area$$module$js$nodes(a,"Valley of Wind"),K=new Area$$module$js$nodes(a,
"Sealed Cave"),ia=new Area$$module$js$nodes(a,"Cordel Plain"),qa=new Area$$module$js$nodes(a,"Brynmaer"),ra=new Area$$module$js$nodes(a,"Amazones"),B=new Area$$module$js$nodes(a,"Mt Sabre West"),u=new Area$$module$js$nodes(a,"Mt Sabre North"),Xa=new Area$$module$js$nodes(a,"Nadare's"),Ca=new Area$$module$js$nodes(a,"Oak"),Z=new Area$$module$js$nodes(a,"Waterfall Valley"),z=new Area$$module$js$nodes(a,"Portoa"),aa=new Area$$module$js$nodes(a,"Waterfall Cave"),C=new Area$$module$js$nodes(a,"Fog Lamp Cave"),
ba=new Area$$module$js$nodes(a,"Kirisa Plant Cave"),ja=new Area$$module$js$nodes(a,"Angry Sea"),ca=new Area$$module$js$nodes(a,"Joel"),F=new Area$$module$js$nodes(a,"Evil Spirit Island"),da=new Area$$module$js$nodes(a,"Sabera's Castle"),N=new Area$$module$js$nodes(a,"Swan"),x=new Area$$module$js$nodes(a,"Mt Hydra"),ea=new Area$$module$js$nodes(a,"Shyron"),ka=new Area$$module$js$nodes(a,"Styx"),la=new Area$$module$js$nodes(a,"Goa"),Ya=new Area$$module$js$nodes(a,"Draygonia Fortress 1"),O=new Area$$module$js$nodes(a,
"Draygonia Fortress 2"),sa=new Area$$module$js$nodes(a,"Draygonia Fortress 3"),H=new Area$$module$js$nodes(a,"Draygonia Fortress 4"),E=new Area$$module$js$nodes(a,"Oasis Cave");new Area$$module$js$nodes(a,"Desert");const P=new Area$$module$js$nodes(a,"Sahara"),ta=new Area$$module$js$nodes(a,"Pyramid Front"),U=new Area$$module$js$nodes(a,"Pyramid Back"),V=new Area$$module$js$nodes(a,"Tower"),yb=(new Location$$module$js$nodes(a,0,M,"Start")).overworld().start(),Ve=(new Location$$module$js$nodes(a,0,
M,"Mezame Shrine")).overworld().from(yb),We=(new Location$$module$js$nodes(a,1,M,"Outside Start")).overworld().connect(Ve),fa=(new Location$$module$js$nodes(a,2,M,"Town")).town().connect(We),Da=(new Location$$module$js$nodes(a,3,pa,"Main")).overworld().connect(fa).trigger(lc,Ta),Pc=(new Location$$module$js$nodes(a,3,pa,"Outside Windmill")).overworld(),Qc=(new Location$$module$js$nodes(a,4,K,"Tunnel 1 (entrance)")).cave().from(Da,Ta),Xe=(new Location$$module$js$nodes(a,5,K,"Tunnel 2 (over bridge)")).cave().connect(Qc),
Ye=(new Location$$module$js$nodes(a,6,K,"Tunnel 6 (herb dead end)")).cave().chest(X,15),Rc=(new Location$$module$js$nodes(a,7,K,"Tunnel 4a (ball corridor)")).cave().chest(X,20,80).chest(Ha,21);(new Location$$module$js$nodes(a,7,K,"Tunnel 4b (antidote dead end)")).cave().connect(Rc,v).chest(Oa,19);const Ze=(new Location$$module$js$nodes(a,8,K,"Tunnel 5 (warp boots dead end)")).cave().chest(lb,14),$e=(new Location$$module$js$nodes(a,9,K,"Tunnel 3a (branch, front)")).cave().connect(Xe).connectTo(Rc).connectTo(Ze),
af=(new Location$$module$js$nodes(a,9,K,"Tunnel 3b (branch, back)")).cave().connect($e,v).connectTo(Ye),bf=(new Location$$module$js$nodes(a,10,K,"Tunnel 7 (boss)")).cave().connect(af).boss(Ie),cf=(new Location$$module$js$nodes(a,12,K,"Tunnel 8a (exit, above wall)")).cave().connect(bf),df=(new Location$$module$js$nodes(a,12,K,"Tunnel 8b (exit, below wall")).cave().connect(cf,v);(new Location$$module$js$nodes(a,14,pa,"Windmill Cave")).cave().connect(Da).connectTo(Pc).trigger(Yd,ob,rb);(new Location$$module$js$nodes(a,
15,pa,"Windmill")).misc().connect(Pc).trigger(Ta,Vb);const ef=(new Location$$module$js$nodes(a,16,pa,"Zebu's Cave Front")).cave().connect(Da).trigger(rb,ic,jc).trigger(lc,Ta,rb),ff=(new Location$$module$js$nodes(a,16,pa,"Zebu's Cave Back")).cave().trigger(oc).connect(ef,w),gf=(new Location$$module$js$nodes(a,17,B,"Tunnel 1 (to Zebu)")).cave().connect(ff),ua=(new Location$$module$js$nodes(a,20,ia,"West")).overworld().connect(df),hf=(new Location$$module$js$nodes(a,20,ia,"South")).overworld().connect(ua,
q),Sc=(new Location$$module$js$nodes(a,21,ia,"East")).overworld().connect(ua).chest(Rb,24),Ea=(new Location$$module$js$nodes(a,24,qa,"Town")).town().connect(ua).trigger(Zd,Rb),jf=(new Location$$module$js$nodes(a,25,ia,"Outside Stom's House")).town().connect(ua),zb=(new Location$$module$js$nodes(a,26,ia,"Swamp")).overworld().connect(Sc,Wa).trigger(sb,nc,Wa);(new Location$$module$js$nodes(a,26,ia,"Swamp Insect Area")).overworld().connect(zb,Wa).boss(Je);const Za=(new Location$$module$js$nodes(a,27,
ra,"Town")).town().connect(hf),$a=(new Location$$module$js$nodes(a,28,Ca,"Town")).town().connect(zb,Wa).trigger(mc);(new Location$$module$js$nodes(a,30,ia,"Stom's House")).house().connect(jf).trigger($d,mc);const va=(new Location$$module$js$nodes(a,32,B,"Entrance")).overworld().connect(ua).connect(gf),kf=(new Location$$module$js$nodes(a,32,B,"Up Slope")).overworld().from(va,Ec).to(va),lf=(new Location$$module$js$nodes(a,32,B,"Dead End (warp boots)")).overworld().chest(lb,24,106),Tc=(new Location$$module$js$nodes(a,
33,B,"Upper")).overworld().from(va,A).to(va),mf=(new Location$$module$js$nodes(a,33,B,"Tornel Dead End")).overworld().trigger(ce,za).chest(Y,23,105),Uc=(new Location$$module$js$nodes(a,34,B,"Tunnel 2a (fork at start)")).cave().connect(va);(new Location$$module$js$nodes(a,34,B,"Tunnel 2b (left branch to dead end)")).cave().connect(Uc,w).connectTo(lf);const nf=(new Location$$module$js$nodes(a,34,B,"Tunnel 2c (right branch to upper)")).cave().connect(Uc,w),of=(new Location$$module$js$nodes(a,35,B,"Tunnel 3a (tunnel to upper, with herb chest)")).cave().connect(nf).chest(X,
23,82),pf=(new Location$$module$js$nodes(a,35,B,"Tunnel 3b (tunnel to upper, branch below ice)")).cave().connect(of,w).connectTo(Tc),Vc=(new Location$$module$js$nodes(a,36,B,"Tunnel 4a (branch to upper or Tornel)")).cave().connect(pf);(new Location$$module$js$nodes(a,36,B,"Tunnel 4b (out to upper)")).cave().connect(Vc,w).connectTo(Tc);const qf=(new Location$$module$js$nodes(a,37,B,"Tunnel 5 (tiny connector)")).cave().connect(Vc),rf=(new Location$$module$js$nodes(a,38,B,"Tunnel 6a (exit to Tornel, above ice)")).cave().connect(qf);
(new Location$$module$js$nodes(a,38,B,"Tunnel 6b (exit to Tornel, below ice)")).cave().connect(rf,w).connectTo(mf);const sf=(new Location$$module$js$nodes(a,39,B,"Tunnel 7a (tornado bracelet, lower)")).cave().connect(kf),tf=(new Location$$module$js$nodes(a,39,B,"Tunnel 7b (tornado bracelet, middle)")).cave().connect(sf,w);(new Location$$module$js$nodes(a,39,B,"Tunnel 7c (tornado bracelet, upper)")).cave().connect(tf,w).chest(za,25);const ab=(new Location$$module$js$nodes(a,40,u,"Entrance")).overworld().connect(Sc,
we,ve),bb=(new Location$$module$js$nodes(a,40,u,"Upper")).overworld().from(ab,A).to(ab),Ab=(new Location$$module$js$nodes(a,40,u,"Summit (boss)")).overworld().from(bb,A).to(bb).boss(Ke),Wc=(new Location$$module$js$nodes(a,41,u,"Connector")).overworld(),Bb=(new Location$$module$js$nodes(a,41,u,"Middle Left")).overworld(),uf=(new Location$$module$js$nodes(a,41,u,"Middle Right")).overworld().from(Bb,Ec).to(Bb),Xc=(new Location$$module$js$nodes(a,42,u,"Tunnel 2a (from entrance to connector)")).cave().connectTo(Wc);
(new Location$$module$js$nodes(a,42,u,"Tunnel 2b (under bridge, to antidote)")).cave().connect(Xc,w).chest(Oa,23,94);const Yc=(new Location$$module$js$nodes(a,43,u,"Tunnel 3a (branch after connector)")).cave().connect(Wc),vf=(new Location$$module$js$nodes(a,43,u,"Tunnel 3b (right branch)")).cave().connect(Yc,w),wf=(new Location$$module$js$nodes(a,43,u,"Tunnel 3c (upper branch)")).cave().connect(Yc,w);(new Location$$module$js$nodes(a,44,u,"Tunnel 4 (over bridge, to middle)")).cave().connect(wf).connectTo(Bb);
const Zc=(new Location$$module$js$nodes(a,45,u,"Tunnel 5a (E-shaped, from right branch)")).cave().connect(vf).connectTo(uf);(new Location$$module$js$nodes(a,45,u,"Tunnel 5b (dead-end with herb)")).cave().connect(Zc,w).chest(X,22,83);const xf=(new Location$$module$js$nodes(a,46,u,"Tunne; 6a (S-shaped hall, right)")).cave().connect(Zc),yf=(new Location$$module$js$nodes(a,46,u,"Tunne; 6b (S-shaped hall, middle)")).cave().connect(xf,w),zf=(new Location$$module$js$nodes(a,46,u,"Tunnel 6c (S-shaped hall, left)")).cave().connect(yf,
w),$c=(new Location$$module$js$nodes(a,47,u,"Prison (hallway)")).cave().connect(bb),Af=(new Location$$module$js$nodes(a,48,u,"Left Cell (shopkeepers)")).cave().from($c,w);(new Location$$module$js$nodes(a,49,u,"Left Cell 2 (back, with prison key)")).cave().from(Af,w).chest(Wb,13);const Bf=(new Location$$module$js$nodes(a,50,u,"Right Cell (villagers)")).cave().from($c,w),Cf=(new Location$$module$js$nodes(a,51,u,"Tunnel 8 (behind right cell, toward summit)")).cave().from(Bf,w);(new Location$$module$js$nodes(a,
52,u,"Tunnel 9 (connector to summit)")).cave().connect(Cf).connectTo(Ab);const Df=(new Location$$module$js$nodes(a,53,u,"Tunnel 10a (summit cave, front)")).cave().from(Ab,Wb).to(Ab),Ef=(new Location$$module$js$nodes(a,53,u,"Tunnel 10b (summit cave, behind ice)")).cave().connect(Df,w).trigger(de);(new Location$$module$js$nodes(a,56,u,"Tunnel 1 (leads from main entrance)")).cave().connect(ab).connectTo(Xc);(new Location$$module$js$nodes(a,57,u,"Tunnel 7 (to upper)")).cave().connect(zf).connectTo(bb);
const Ff=(new Location$$module$js$nodes(a,60,Xa,"Inn")).town(),Gf=(new Location$$module$js$nodes(a,61,Xa,"Tool Shop")).house(),Hf=(new Location$$module$js$nodes(a,62,Xa,"Back Room")).house(),Cb=(new Location$$module$js$nodes(a,64,Z,"Summit")).overworld().connect(Ef),cb=(new Location$$module$js$nodes(a,64,Z,"Northwest")).overworld().from(Cb).to(Cb,A),If=(new Location$$module$js$nodes(a,64,Z,"Northeast")).overworld().connect(cb,q),ad=(new Location$$module$js$nodes(a,65,Z,"Southwest")).overworld().connect(cb),
Jf=(new Location$$module$js$nodes(a,65,Z,"Southeast")).overworld().connect(ad,q),bd=(new Location$$module$js$nodes(a,66,Z,"Lime Tree Valley")).overworld().connect(ad).connect(Da,Id),Kf=(new Location$$module$js$nodes(a,67,Z,"Lime Tree Lake (Rage)")).cave().connect(bd).trigger(tc,L),Lf=(new Location$$module$js$nodes(a,68,ba,"Tunnel 1a (entrance)")).cave().connect(Jf),Mf=(new Location$$module$js$nodes(a,68,ba,"Tunnel 1b (behind wall)")).cave().connect(Lf,v),cd=(new Location$$module$js$nodes(a,69,ba,
"Tunnel 2a (main path, before wall)")).cave().connect(Mf);(new Location$$module$js$nodes(a,69,ba,"Tunnel 2b (dead end, antidote)")).cave().connect(cd,v).chest(Oa,25,95);const Nf=(new Location$$module$js$nodes(a,69,ba,"Tunnel 2c (main path, after wall)")).cave().connect(cd,v),Of=(new Location$$module$js$nodes(a,70,ba,"Tunnel 3a (last room, before wall)")).cave().connect(Nf),Pf=(new Location$$module$js$nodes(a,70,ba,"Tunnel 3b (last room, after wall)")).cave().connect(Of,v);(new Location$$module$js$nodes(a,
71,ba,"Meadow")).overworld().connect(Pf).chest(cc,14);const Qf=(new Location$$module$js$nodes(a,72,C,"Tunnel 1a (entrance)")).cave().connect(If),dd=(new Location$$module$js$nodes(a,72,C,"Tunnel 1b (past wall)")).cave().connect(Qf,v);(new Location$$module$js$nodes(a,72,C,"Tunnel 1c (dead end, lysisPlant)")).cave().connect(dd,v).chest(kb,24);const Rf=(new Location$$module$js$nodes(a,73,C,"Tunnel 2 (tiny connector)")).cave().connect(dd),ed=(new Location$$module$js$nodes(a,74,C,"Tunnel 3a (upper branch)")).cave().connect(Rf);
(new Location$$module$js$nodes(a,74,C,"Tunnel 3b (dead end, mimic)")).cave().connect(ed,v).chest(G,21,112);const fd=(new Location$$module$js$nodes(a,74,C,"Tunnel 3c (short passage with mimic)")).cave().connect(ed,v).chest(G,22,113),Sf=(new Location$$module$js$nodes(a,74,C,"Tunnel 3d (lower branch)")).cave().connect(fd,v);(new Location$$module$js$nodes(a,75,C,"Tunnel 4 (dead end loop)")).cave().connect(Sf);const gd=(new Location$$module$js$nodes(a,76,C,"Tunnel 5a (right branch over bridge)")).cave().connect(fd),
Tf=(new Location$$module$js$nodes(a,76,C,"Tunnel 5b (past wall over bridge)")).cave().connect(gd,v),Uf=(new Location$$module$js$nodes(a,77,C,"Tunnel 6a (from left branch)")).cave().connect(gd),Vf=(new Location$$module$js$nodes(a,77,C,"Tunnel 6b (reconvergence)")).cave().connect(Uf,v).connect(Tf),Wf=(new Location$$module$js$nodes(a,77,C,"Tunnel 6c (between walls)")).cave().connect(Vf,v),Xf=(new Location$$module$js$nodes(a,77,C,"Tunnel 6d (under bridge)")).cave().connect(Wf,v),Yf=(new Location$$module$js$nodes(a,
78,C,"Tunnel 7a (over second bridge)")).cave().connect(Xf),Zf=(new Location$$module$js$nodes(a,78,C,"Tunnel 7b (past wall)")).cave().connect(Yf,v),$f=(new Location$$module$js$nodes(a,79,C,"Tunnel 8a (under second bridge)")).cave().connect(Zf);(new Location$$module$js$nodes(a,79,C,"Tunnel 8b (fog lamp)")).cave().connect($f,v).chest(Yb,19);const ma=(new Location$$module$js$nodes(a,80,z,"Town")).town().connect(cb),hd=(new Location$$module$js$nodes(a,81,z,"Fishherman Island")).town().connect(ma);(new Location$$module$js$nodes(a,
82,Z,"Mesia Shrine")).cave().trigger(uc).connect(Kf,q,tc);const id=(new Location$$module$js$nodes(a,84,aa,"Tunnel 1a (entrance)")).cave().connect(cb);(new Location$$module$js$nodes(a,84,aa,"Tunnel 1b (dead end, mimic)")).cave().connect(id,w).chest(G,19,114);const ag=(new Location$$module$js$nodes(a,84,aa,"Tunnel 1c (past ice)")).cave().connect(id,w),jd=(new Location$$module$js$nodes(a,85,aa,"Tunnel 2 (stoned pair)")).cave().connect(ag),Db=(new Location$$module$js$nodes(a,86,aa,"Tunnel 3 (wide medusa hallways)")).cave().from(jd,
Be).to(jd,Ba),bg=(new Location$$module$js$nodes(a,87,aa,"Tunnel 4a (left entrance)")).cave().from(Db,w).chest(Sa,25).trigger(fe,Ce);(new Location$$module$js$nodes(a,87,aa,"Tunnel 4b (right entrance)")).cave().from(Db,w).connect(bg,A);(new Location$$module$js$nodes(a,87,aa,"Tunnel 4c (sword of water)")).cave().connect(Db,w).chest(L,24);const kd=(new Location$$module$js$nodes(a,88,V,"Entrance")).misc(),cg=(new Location$$module$js$nodes(a,89,V,"Level 1")).misc().from(kd),dg=(new Location$$module$js$nodes(a,
90,V,"Level 2")).misc().from(cg),eg=(new Location$$module$js$nodes(a,91,V,"Level 3")).misc().from(dg),ld=(new Location$$module$js$nodes(a,92,V,"Outside Mesia Room")).misc().from(eg),fg=(new Location$$module$js$nodes(a,93,V,"Outside Dyna Room")).misc().from(ld,jb);(new Location$$module$js$nodes(a,94,V,"Mesia")).misc().connect(ld).trigger(qe);const gg=(new Location$$module$js$nodes(a,95,V,"Dyna")).misc().from(fg).boss(Ue);(new Location$$module$js$nodes(a,95,V,"Win")).misc().from(gg).end();const Eb=
(new Location$$module$js$nodes(a,96,ja,"Cabin Beach")).sea().from(hd,tb),wa=(new Location$$module$js$nodes(a,96,ja,"South")).sea().connect(Eb,T),hg=(new Location$$module$js$nodes(a,96,ja,"Joel Beach")).sea().connect(wa,T),md=(new Location$$module$js$nodes(a,96,ca,"Outside Lighthouse")).sea();(new Location$$module$js$nodes(a,96,ja,"Altar")).sea().connect(wa,T).trigger(ub,ac,$b);const ig=(new Location$$module$js$nodes(a,96,ja,"North")).sea().to(wa,T).from(wa,T,ze).trigger(ie,He),jg=(new Location$$module$js$nodes(a,
96,ja,"Swan Beach")).sea().connect(ig,T);(new Location$$module$js$nodes(a,97,ja,"Cabin")).misc().connect(Eb).trigger(xc,tb);(new Location$$module$js$nodes(a,98,ca,"Lighthouse")).misc().connect(md).trigger(he,ob);const db=(new Location$$module$js$nodes(a,100,z,"Underground Channel 1 (from throne room)")).sea().trigger(sc),kg=(new Location$$module$js$nodes(a,100,z,"Underground Channel 2 (to fortune teller)")).sea().connect(db,q),nd=(new Location$$module$js$nodes(a,100,z,"Underground Channel 3 (from fortune teller)")).sea().connect(db,
A),od=(new Location$$module$js$nodes(a,100,z,"Underground Channel 4 (asina)")).sea().connect(nd,q),lg=(new Location$$module$js$nodes(a,100,z,"Underground Channel 5 (dolphin)")).sea().connect(od,q).trigger(wc,X,vc);(new Location$$module$js$nodes(a,100,z,"Underground Channel 6 (water)")).sea().connect(lg,T).connectTo(wa,T).chest(bc,17);const Fb=(new Location$$module$js$nodes(a,101,F,"Zombie Town")).town(),mg=(new Location$$module$js$nodes(a,104,F,"Tunnel 1 (entrance)")).sea().connect(wa,yc,T),pd=(new Location$$module$js$nodes(a,
105,F,"Tunnel 2a (start)")).cave().connect(mg);(new Location$$module$js$nodes(a,105,F,"Tunnel 2b (dead end to left)")).cave().connect(pd,q);const ng=(new Location$$module$js$nodes(a,105,F,"Tunnel 2c (across first river)")).cave().connect(pd,q),qd=(new Location$$module$js$nodes(a,105,F,"Tunnel 2d (across second river)")).cave().connect(ng,q);(new Location$$module$js$nodes(a,105,F,"Tunnel 2e (dead end, magic ring)")).cave().connect(qd,v).chest(Y,29);const og=(new Location$$module$js$nodes(a,105,F,"Tunnel 2f (stair down)")).cave().connect(qd,
v),pg=(new Location$$module$js$nodes(a,106,F,"Tunnel 3a (main area)")).cave().connect(og).connectTo(Fb).chest(kb,25,92),qg=(new Location$$module$js$nodes(a,106,F,"Tunnel 3b (left area toward items)")).cave().connect(pg,v),rg=(new Location$$module$js$nodes(a,107,F,"Tunnel 4a (right side, mimic)")).cave().connect(qg).chest(G,14,115);(new Location$$module$js$nodes(a,107,F,"Tunnel 4b (left side, iron necklace)")).cave().connect(rg,q).chest(Ud,15);const Gb=(new Location$$module$js$nodes(a,108,da,"Floor 1")).fortress().connect(Fb),
sg=(new Location$$module$js$nodes(a,108,da,"Miniboss")).fortress().boss(Le).connect(Gb);(new Location$$module$js$nodes(a,109,da,"Floor 2a (left stair)")).fortress().connect(Gb).chest(Aa,19);const tg=(new Location$$module$js$nodes(a,109,da,"Floor 2b (right stair)")).fortress().connect(sg).chest(X,30,85),ug=(new Location$$module$js$nodes(a,110,da,"Floor 3a (toward boss)")).fortress().connect(tg),rd=(new Location$$module$js$nodes(a,110,da,"Floor 3b (boss room)")).fortress().connect(ug);(new Location$$module$js$nodes(a,
110,da,"Boss")).fortress().boss(Oc).connect(rd);(new Location$$module$js$nodes(a,110,da,"Floor 3c (back room trap)")).fortress().from(rd).to(Gb);const vg=(new Location$$module$js$nodes(a,112,ca,"Secret Passage")).cave().connectTo(md),eb=(new Location$$module$js$nodes(a,113,ca,"Town")).town().connect(hg),W=(new Location$$module$js$nodes(a,114,N,"Town")).town().connect(jg),wg=(new Location$$module$js$nodes(a,115,N,"Inside Gate")).overworld().connect(W),xg=(new Location$$module$js$nodes(a,115,N,"Outside Gate")).overworld().from(wg,
na),fb=(new Location$$module$js$nodes(a,120,la,"Valley")).overworld().connect(xg),Hb=(new Location$$module$js$nodes(a,124,x,"Entrance")).overworld().connect(fb),yg=(new Location$$module$js$nodes(a,124,x,"Over first river toward Shyron")).overworld().connect(Hb,q),sd=(new Location$$module$js$nodes(a,124,x,"After first tunnel")).overworld(),td=(new Location$$module$js$nodes(a,124,x,"Door to Styx")).overworld().connect(sd,q),zg=(new Location$$module$js$nodes(a,124,x,"Dead end (no item)")).overworld(),
Ag=(new Location$$module$js$nodes(a,124,x,"Dead end (fruit of lime)")).overworld().chest(Rd,26),Bg=(new Location$$module$js$nodes(a,124,x,"Dead end (magic ring)")).overworld().chest(Y,25,101),ud=(new Location$$module$js$nodes(a,124,x,"Outside tunnel to bow")).overworld();(new Location$$module$js$nodes(a,124,x,"Floating island (bow of sun)")).overworld().connect(ud,A).chest(ec,24);const Cg=(new Location$$module$js$nodes(a,125,x,"Tunnel 1 (to Shyron)")).cave().connect(yg),Dg=(new Location$$module$js$nodes(a,
126,x,"Outside Shyron")).overworld().connect(Cg);(new Location$$module$js$nodes(a,127,x,"Tunnel 2 (fork)")).cave().connect(Hb).connectTo(Ag).connectTo(sd);const vd=(new Location$$module$js$nodes(a,128,x,"Tunnel 3 (caves)")).cave().connect(td).connect(zg),wd=(new Location$$module$js$nodes(a,129,x,"Tunnel 4 (left branch of cave)")).cave().connect(vd);(new Location$$module$js$nodes(a,130,x,"Tunnel 5 (dead end, medical herb)")).cave().connect(wd).chest(X,15,86);const Eg=(new Location$$module$js$nodes(a,
131,x,"Tunnel 6a (left-then-right)")).cave().connect(wd),Fg=(new Location$$module$js$nodes(a,131,x,"Tunnel 6b (past wall)")).cave().connect(Eg,v),Gg=(new Location$$module$js$nodes(a,132,x,"Tunnel 7 (wide hall)")).cave().connect(Fg);(new Location$$module$js$nodes(a,133,x,"Tunnel 8 (red slimes)")).cave().from(Gg,v).connectTo(ud).chest(G,23,116);const Hg=(new Location$$module$js$nodes(a,134,x,"Tunnel 9 (right branch, infinite loop)")).cave().connect(vd),Ig=(new Location$$module$js$nodes(a,135,x,"Tunnel 10a (toward magic ring)")).cave().connect(Hg);
(new Location$$module$js$nodes(a,135,x,"Tunnel 10b (past wall)")).cave().connect(Ig,v).connectTo(Bg);const xd=(new Location$$module$js$nodes(a,136,ka,"Entrance")).fortress().from(td,Xb,xb),Jg=(new Location$$module$js$nodes(a,137,ka,"Left branch")).fortress().connect(xd).chest(G,19,117),Kg=(new Location$$module$js$nodes(a,137,ka,"Left branch, past one bridge")).fortress().connect(Jg,q),Lg=(new Location$$module$js$nodes(a,137,ka,"Left branch, past two bridges")).fortress().connect(Kg,q).chest(X,29,
87),Mg=(new Location$$module$js$nodes(a,137,ka,"Right branch")).fortress().connect(xd);(new Location$$module$js$nodes(a,137,ka,"Right branch, across water")).fortress().connect(Mg,A).chest(G,20,118).chest(G,21,119).chest(Od,28);(new Location$$module$js$nodes(a,138,ka,"Upper floor")).fortress().connect(Lg).chest(I,27);const xa=(new Location$$module$js$nodes(a,140,ea,"Town")).town().connect(Dg,Kc).trigger(vb),Fa=(new Location$$module$js$nodes(a,142,la,"Town")).town().connect(fb),yd=(new Location$$module$js$nodes(a,
143,E,"Draygonia Fortress Basement 1 (front)")).fortress();(new Location$$module$js$nodes(a,143,E,"Draygonia Fortress Basement 2 (power ring)")).fortress().connect(yd,oa).chest(Sd,15);const Ib=(new Location$$module$js$nodes(a,144,la,"Desert 1")).overworld().connect(fb),gb=(new Location$$module$js$nodes(a,145,E,"Area 1 (from entrance)")).cave().chest(Tb,26),zd=(new Location$$module$js$nodes(a,145,E,"Area 2 (across top bridge)")).cave().connect(gb,q);(new Location$$module$js$nodes(a,145,E,"Area 3 (dead-end across top-right bridge)")).cave().connect(zd,
q);const Ng=(new Location$$module$js$nodes(a,145,E,"Area 4 (left across middle-right bridge)")).cave().connect(zd,q),Og=(new Location$$module$js$nodes(a,145,E,"Area 5 (bottom edge)")).cave().connect(Ng,q),Pg=(new Location$$module$js$nodes(a,145,E,"Area 6 (bottom island)")).cave().connect(Og,q),Qg=(new Location$$module$js$nodes(a,145,E,"Area 7 (bottom inner ring)")).cave().connect(Pg,q),Rg=(new Location$$module$js$nodes(a,145,E,"Area 8 (left outer ring)")).cave().connect(Qg,q).connect(gb,q).chest(Aa,
27,100),Sg=(new Location$$module$js$nodes(a,145,E,"Area 9 (top left inner ring)")).cave().connect(Rg,q),Tg=(new Location$$module$js$nodes(a,145,E,"Area 10 (top right inner ring)")).cave().connect(Sg,q);(new Location$$module$js$nodes(a,145,E,"Area 11 (center)")).cave().connect(Tg,q).connectTo(yd);(new Location$$module$js$nodes(a,145,E,"Area 12 (top center islands)")).cave().connect(gb,A).chest(Pd,28);const Ug=(new Location$$module$js$nodes(a,146,P,"Desert Cave 1")).cave().connect(Ib,A),ya=(new Location$$module$js$nodes(a,
147,P,"Town")).town(),Vg=(new Location$$module$js$nodes(a,148,P,"Outside Cave")).overworld().connect(ya),Wg=(new Location$$module$js$nodes(a,149,P,"Desert Cave 2")).cave().connect(Vg);(new Location$$module$js$nodes(a,150,P,"Meadow")).overworld().connect(Ug).connectTo(ya).trigger(ne,na);const Jb=(new Location$$module$js$nodes(a,152,P,"Desert 2")).overworld().connect(Wg),Xg=(new Location$$module$js$nodes(a,156,ta,"Entrance")).fortress().connect(Jb,A),Yg=(new Location$$module$js$nodes(a,156,ta,"Azteca")).fortress().trigger(pe),
Zg=(new Location$$module$js$nodes(a,157,ta,"Fork")).fortress().connect(Xg),Ad=(new Location$$module$js$nodes(a,158,ta,"Main")).fortress().connect(Zg);(new Location$$module$js$nodes(a,158,ta,"Treasure Chest (magic ring)")).fortress().connect(Ad).chest(Y,27,108);(new Location$$module$js$nodes(a,159,ta,"Draygon")).fortress().connect(Ad).to(Yg).boss(Re);const $g=(new Location$$module$js$nodes(a,160,U,"Entrance")).fortress().connect(Jb,A),ah=(new Location$$module$js$nodes(a,160,U,"Statues")).fortress().connect($g).boss(Se),
bh=(new Location$$module$js$nodes(a,161,U,"Hall 1")).fortress().connect(ah),Kb=(new Location$$module$js$nodes(a,162,U,"Branch")).fortress().connect(bh);(new Location$$module$js$nodes(a,163,U,"Left Dead End")).fortress().connect(Kb).chest(G,13,120);(new Location$$module$js$nodes(a,164,U,"Right Dead End")).fortress().connect(Kb);const ch=(new Location$$module$js$nodes(a,165,U,"Hall 2")).fortress().connect(Kb).chest(mb,26,109),dh=(new Location$$module$js$nodes(a,166,U,"Draygon 2")).fortress().connect(ch).boss(Te);
(new Location$$module$js$nodes(a,167,U,"Teleporter")).fortress().from(dh).to(kd);const Bd=(new Location$$module$js$nodes(a,168,Ya,"Entrance")).fortress().connect(Fa,xb).trigger(Cc,I),eh=(new Location$$module$js$nodes(a,169,Ya,"Main")).fortress().from(Bd,oa),fh=(new Location$$module$js$nodes(a,169,Ya,"Boss")).fortress().connect(eh).boss(Ne),gh=(new Location$$module$js$nodes(a,170,Ya,"Zebu")).fortress().connect(fh),hb=(new Location$$module$js$nodes(a,171,O,"Entrance")).fortress().connect(gh);(new Location$$module$js$nodes(a,
171,O,"Dead End Behind Iron (fruit of power)")).fortress().connect(hb,oa).chest(Aa,28,98);(new Location$$module$js$nodes(a,171,O,"Dead End Loop Across Closer Bridges")).fortress().connect(hb,q).connect(hb,q);const hh=(new Location$$module$js$nodes(a,171,O,"Across First Bridge (fruit of repun)")).fortress().connect(hb,q).chest(Qb,30,102),Lb=(new Location$$module$js$nodes(a,171,O,"Across Second Bridge")).fortress().connect(hh,q);(new Location$$module$js$nodes(a,171,O,"Dead End Across Two Bridges ()")).fortress().connect(Lb,
q).connect(Lb,q).chest(kb,29,93);const ih=(new Location$$module$js$nodes(a,171,O,"Across Third Bridge")).fortress().connect(Lb,q),jh=(new Location$$module$js$nodes(a,171,O,"Exit Behind Iron Door")).fortress().connect(ih,oa),kh=(new Location$$module$js$nodes(a,172,O,"Boss")).fortress().connect(jh).boss(Oe),lh=(new Location$$module$js$nodes(a,172,O,"Tornel")).fortress().connect(kh),Cd=(new Location$$module$js$nodes(a,173,sa,"Lower")).fortress().connect(lh).chest(mb,26,99).chest(Y,27,111),mh=(new Location$$module$js$nodes(a,
174,sa,"Upper Loop")).fortress().connect(Cd).chest(Oa,22,96);(new Location$$module$js$nodes(a,174,sa,"Upper Loop Behind Wall (magic ring)")).fortress().connect(mh,oa).chest(Y,23,107);const nh=(new Location$$module$js$nodes(a,175,sa,"Upper Passage (toward Mado)")).fortress().connect(Cd).chest(Y,27,84),Mb=(new Location$$module$js$nodes(a,176,H,"Initial Fork")).fortress(),oh=(new Location$$module$js$nodes(a,177,H,"Left Branch")).fortress().connect(Mb),Dd=(new Location$$module$js$nodes(a,178,H,"Main Area (right branch, over bridges)")).fortress().connect(Mb),
ph=(new Location$$module$js$nodes(a,179,H,"U-shaped Passage (between floors)")).fortress().connect(Dd),qh=(new Location$$module$js$nodes(a,180,H,"Main Area Lower (under bridge)")).fortress().connect(oh).connect(Dd).connect(ph),Ed=(new Location$$module$js$nodes(a,180,H,"Behind Iron Wall")).fortress().connect(qh,oa),rh=(new Location$$module$js$nodes(a,181,H,"Lower")).fortress().connect(Ed).chest(G,13,121).chest(G,14,122).chest(G,15,123).chest(Y,23,88).chest(lb,24,110),sh=(new Location$$module$js$nodes(a,
182,H,"Boss Corridor")).fortress().connect(rh),th=(new Location$$module$js$nodes(a,182,H,"Boss")).fortress().connect(sh,xb).boss(Qe);(new Location$$module$js$nodes(a,182,H,"Behind Boss (stormBracelet)")).fortress().connect(th).chest(Na,18);const Fd=(new Location$$module$js$nodes(a,183,H,"Exit Stairs")).fortress(),uh=(new Location$$module$js$nodes(a,184,E,"Entrance Back (behind river)")).cave().connect(Fd).chest(Aa,13,90);(new Location$$module$js$nodes(a,184,E,"Entrance Front")).cave().connect(uh,
A).connectTo(Ib).connectTo(gb);const vh=(new Location$$module$js$nodes(a,185,sa,"Boss")).fortress().connect(nh).boss(Pe);(new Location$$module$js$nodes(a,185,sa,"Asina")).fortress().connect(vh).connectTo(Mb);(new Location$$module$js$nodes(a,186,H,"Kensu")).fortress().connect(Ed).connectTo(Fd).trigger(me,qb);(new Location$$module$js$nodes(a,187,la,"House")).house().connect(Fa).trigger(oe,na,qb);(new Location$$module$js$nodes(a,188,la,"Inn")).shop().connect(Fa,vb);(new Location$$module$js$nodes(a,190,
la,"Tool Shop")).shop().connect(Fa,vb);(new Location$$module$js$nodes(a,191,la,"Tavern")).shop().connect(Fa);(new Location$$module$js$nodes(a,192,M,"Elder House")).house().connect(fa).trigger(ic);(new Location$$module$js$nodes(a,193,M,"Rabbit Hut")).house().connect(fa).trigger(pc,oc,ha);(new Location$$module$js$nodes(a,194,M,"Inn")).shop().connect(fa);(new Location$$module$js$nodes(a,195,M,"Tool Shop")).shop().connect(fa).trigger(kc);(new Location$$module$js$nodes(a,196,M,"Armor Shop")).shop().connect(fa);
(new Location$$module$js$nodes(a,197,M,"Student House")).house().connect(fa).trigger(jc);(new Location$$module$js$nodes(a,198,qa,"Tavern")).house().connect(Ea);(new Location$$module$js$nodes(a,199,qa,"Pawn Shop")).shop().connect(Ea);(new Location$$module$js$nodes(a,200,qa,"Inn")).shop().connect(Ea);(new Location$$module$js$nodes(a,201,qa,"Armor Shop")).shop().connect(Ea);(new Location$$module$js$nodes(a,203,qa,"Tool Shop")).shop().connect(Ea);(new Location$$module$js$nodes(a,205,Ca,"Elder House")).house().from($a,
ha).trigger(be,sb);(new Location$$module$js$nodes(a,206,Ca,"Mother's House")).house().from($a,ha).trigger(nc,ha).trigger(ae,sb);(new Location$$module$js$nodes(a,207,Ca,"Tool Shop")).shop().from($a,ha);(new Location$$module$js$nodes(a,208,Ca,"Inn")).shop().from($a,ha);(new Location$$module$js$nodes(a,209,ra,"Inn")).shop().connect(Za);(new Location$$module$js$nodes(a,210,ra,"Tool Shop")).shop().connect(Za);(new Location$$module$js$nodes(a,211,ra,"Armor Shop")).shop().connect(Za);const wh=(new Location$$module$js$nodes(a,
212,ra,"Queen's House")).house().from(Za,Kc).trigger(ke,na,cc);(new Location$$module$js$nodes(a,213,Xa,"Nadare's")).house().connect(ab).connectTo(Ff).connectTo(Gf).connectTo(Hf);(new Location$$module$js$nodes(a,214,z,"Fisherman's House")).house().connect(hd).trigger(tb,Yb,pb,De);const Nb=(new Location$$module$js$nodes(a,215,z,"Palace Entrance")).house().connect(ma);(new Location$$module$js$nodes(a,216,z,"Fortune Teller Front")).house().connect(ma).trigger(rc,qc);(new Location$$module$js$nodes(a,216,
z,"Fortune Teller Back")).house().connect(kg).connect(nd);(new Location$$module$js$nodes(a,217,z,"Pawn Shop")).shop().connect(ma);(new Location$$module$js$nodes(a,218,z,"Armor Shop")).shop().connect(ma);(new Location$$module$js$nodes(a,220,z,"Inn")).shop().connect(ma);(new Location$$module$js$nodes(a,221,z,"Tool Shop")).shop().connect(ma);(new Location$$module$js$nodes(a,222,z,"Palace Left")).house().connect(Nb);(new Location$$module$js$nodes(a,223,z,"Palace Throne Room")).house().connect(Nb).to(db,
xe).from(db).trigger(qc).trigger(ee,rc,sc);(new Location$$module$js$nodes(a,224,z,"Palace Right")).house().connect(Nb);(new Location$$module$js$nodes(a,225,z,"Asina's Room")).house().connect(od).trigger(vc,Fc);(new Location$$module$js$nodes(a,226,ra,"Queen Downstairs")).house().connect(wh).chest(La,13);(new Location$$module$js$nodes(a,227,ca,"Elder's House")).house().connect(eb).trigger(yc);(new Location$$module$js$nodes(a,228,ca,"Shed")).house().connect(eb).to(vg,Zb);(new Location$$module$js$nodes(a,
229,ca,"Tool Shop")).shop().connect(eb).trigger(kc);(new Location$$module$js$nodes(a,231,ca,"Inn")).shop().connect(eb);const xh=(new Location$$module$js$nodes(a,232,F,"Zombie Town House")).house().connect(Fb);(new Location$$module$js$nodes(a,233,F,"Zombie Town Basement")).house().connect(xh).trigger(ge,Oc);(new Location$$module$js$nodes(a,235,N,"Tool Shop")).shop().connect(W);(new Location$$module$js$nodes(a,236,N,"Stom's Hut")).house().connect(W).trigger(zc);(new Location$$module$js$nodes(a,237,
N,"Inn")).shop().connect(W);(new Location$$module$js$nodes(a,238,N,"Armor Shop")).shop().connect(W);(new Location$$module$js$nodes(a,239,N,"Tavern")).house().connect(W).trigger(Ac,zc,Ra);(new Location$$module$js$nodes(a,240,N,"Pawn Shop")).shop().connect(W);(new Location$$module$js$nodes(a,241,N,"Dance Hall")).house().connect(W).trigger(Bc,Ac,Ra).trigger(je,Bc,bc);const yh=(new Location$$module$js$nodes(a,242,ea,"Temple (pre-massacre)")).fortress().connect(xa).from(yb,I,Hd).trigger(le);(new Location$$module$js$nodes(a,
242,ea,"Temple (post-massacre)")).fortress().from(yh,Cc).boss(Me);(new Location$$module$js$nodes(a,243,ea,"Training Hall")).house().connect(xa);(new Location$$module$js$nodes(a,244,ea,"Hospital")).house().connect(xa);(new Location$$module$js$nodes(a,245,ea,"Armor Shop")).shop().connect(xa);(new Location$$module$js$nodes(a,246,ea,"Tool Shop")).shop().connect(xa);(new Location$$module$js$nodes(a,247,ea,"Inn")).shop().connect(xa);(new Location$$module$js$nodes(a,248,P,"Inn")).shop().connect(ya);(new Location$$module$js$nodes(a,
249,P,"Tool Shop")).shop().connect(ya);(new Location$$module$js$nodes(a,250,P,"Elder's House")).house().connect(ya);(new Location$$module$js$nodes(a,251,P,"Pawn Shop")).house().connect(ya);const zh=[fa,Da,Qc,ua,zb,va,Cb,bd,Eb,W,fb,Hb,Ib,Bd,Jb];for(const a of zh)a.from(yb,te);return a},shuffle$$module$js$depgraph=(b,a,c,d,e)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){const f=generate$$module$js$depgraph(d);f.nodes.filter((a)=>a instanceof Slot$$module$js$nodes);d||(d=new FlagSet$$module$js$flagset("Sbkm Sct"));
var g={};for(var k of f.nodes)if(k instanceof Slot$$module$js$nodes&&k.slots){var h=k.slotType[0];(g[h]=g[h]||[]).push(k)}k=[];h=[];var m={};for(var r of d.flags.S){var n=[];for(var t of r){m[t]=!0;for(var l of g[t])n.push(l),h.push([l,k.length])}k.push(n)}for(var p of"bc")if(m[p])for(r=g[p],t=r.map((a)=>[a.item,a.itemIndex]),a.shuffle(t),l=0;l<r.length;l++)r[l].set(...t[l]);n=(a)=>f.nodes.find((b)=>b instanceof Slot$$module$js$nodes&&b.name===a);g=n("Sword of Wind");p=n("Sword of Fire");r=n("Ball of Wind");
t=n("Ball of Fire");l=n("Statue of Onyx");n=n("Gas Mask");m.k&&a.nextInt(2)&&(p.swap(g),t.swap(r));m.k&&!a.nextInt(3)&&l.swap(n);m=[1,1,1,1,2,2,2,3,3,3,5,5,8,13];g=[];e&&e.addTasks(10);for(p=0;1E3>p;p++){e&&0==p%100&&(yield new Promise(requestAnimationFrame),e.addCompleted(1));a.shuffle(h);for(var y of k)a.shuffle(y);r=k.map(()=>-1);t=m[a.nextInt(m.length)];l=[];n=(a,b)=>a.itemIndex===b.itemIndex||a.isMimic()&&!b.canHoldMimic()||b.isMimic()&&!a.canHoldMimic()||a.needsChest()&&!b.isChest()||b.needsChest()&&
!a.isChest()?!1:!0;for(let a=0;a<t;a++){const [b,c]=h[a],d=k[c][++r[c]];n(b,d)&&(b.swap(d),l.push([b,d]))}if(!l.length)continue;const {win:b,path:c}=f.traverse();if(b)g=c;else for(;l.length;){const [a,b]=l.pop();a.swap(b)}}for(const a of f.nodes)a instanceof Slot$$module$js$nodes&&a.write(b);if(c){c.items=[];c.route=[];for(const a of g){const [b,d]=a;c.route.push(d);null!=b.slotName&&(y=b.slotName,0>y.indexOf(b.orig)&&(y+=` (normally ${b.orig})`),c.items.push({slotIndex:b.slotIndex,itemIndex:b.itemIndex,
origName:b.vanillaItemName,slotName:b.slotName,itemName:b.item.name,text:`${b.item.name}: ${y}`}))}}}),shuffle2$$module$js$depgraph=(b,a,c,d,e)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){const f=generate$$module$js$depgraph(d),g=f.integrate();e&&e.addTasks(1E3);for(let k=0;1E3>k;k++){if(yield shuffle3$$module$js$depgraph(f,g,b,a,c,d,e)){console.log(`success after ${k} attempts`);return}e&&(e.addCompleted(1),0===k%50&&(yield new Promise(requestAnimationFrame)))}throw Error("failed");
}),shuffle3$$module$js$depgraph=(b,a,c,d,e,f,g)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){var g=b.nodes.filter((a)=>a instanceof Slot$$module$js$nodes&&a.slots&&a.slotName),h=new Map(d.shuffle(g.map((a)=>[a,[a.item,a.itemIndex]])));const m=new Set(d.shuffle(g)),r=new Map,n={};f||(f=new FlagSet$$module$js$flagset("Sbkm Sct"));f.flags.S.forEach((a,b)=>{for(const c of a)n[c]=b});for(var t of m)r.set(t.item,t);const l=(a,b)=>null==n[a.slotType?a.slotType[0]:"c"]?a==b:b.isMimic()&&!a.canHoldMimic()||
"unique"!=b.item.inventoryRow&&a.requiresUnique||"armor"==b.item.inventoryRow&&!a.isChest()?!1:n[a.slotType?a.slotType[0]:"c"]==n[b.slotType?b.slotType[0]:"c"];t=a.assumedFill(d,(a,b)=>l(a,r.get(b)));if(null==t)return!1;const p=new Map;for(let b=0;b<t.length;b++){var y=t[b];if(null!=y){var D=r.get(a.item(y));y=h.get(D);h.delete(D);D=a.location(b);p.set(D,y);m.delete(D)}}t=(a,b)=>{for(const c of m)if(l(c,a)){p.set(c,b);m.delete(c);return}return!1};for(const a of h){const [b,c]=a;b.isMimic()&&(t(b,
c),h.delete(b))}for(const a of h){const [b,c]=a;b.needsChest()&&(t(b,c),h.delete(b))}for(const a of h){const [b,c]=a;t(b,c)}for(const a of p){const [b,c]=a;b.set(...c)}const {win:Ga,path:ib}=b.traverse({wanted:g,dfs:!1});if(!Ga)return!1;if(c)for(const a of b.nodes)a instanceof Slot$$module$js$nodes&&a.write(c);if(!e)return!0;e.items=[];e.route=[];for(const a of ib){const [c,d]=a;e.route.push(d);g=b.nodes[c];null!=g.slotName&&(h=g.slotName,0>h.indexOf(g.orig)&&(h+=` (normally ${g.vanillaItemName})`),
e.items.push({slotIndex:g.slotIndex,itemIndex:g.itemIndex,origName:g.vanillaItemName,slotName:g.slotName,itemName:g.item.name,text:`${g.item.name}: ${h}`}))}return!0});var module$js$depgraph={};module$js$depgraph.generate=generate$$module$js$depgraph;module$js$depgraph.shuffle=shuffle$$module$js$depgraph;module$js$depgraph.shuffle2=shuffle2$$module$js$depgraph;module$js$depgraph.shuffle3=shuffle3$$module$js$depgraph;class Deque$$module$js$util{constructor(){this.buffer=Array(16);this.mask=15;this.size=this.end=this.start=0}get length(){return this.size}upsize(b){for(;this.mask<b;)this.end<=this.start&&(this.start+=this.mask+1),this.mask=this.mask<<1|1,this.buffer=this.buffer.concat(this.buffer);this.size=b}push(...b){this.upsize(this.size+b.length);for(const a of b)this.buffer[this.end]=a,this.end=this.end+1&this.mask}pop(){if(this.size)return this.end=this.end-1&this.mask,this.size--,this.buffer[this.end]}peek(){if(this.size)return this.buffer[this.end-
1&this.mask]}unshift(...b){this.upsize(this.size+b.length);for(const a of b)this.start=this.start-1&this.mask,this.buffer[this.start]=a}shift(){if(this.size){var b=this.buffer[this.start];this.start=this.start+1&this.mask;this.size--;return b}}front(){if(this.size)return this.buffer[this.start]}toString(){const b=Array(this.size);for(let a=0;a<this.size;a++)b[a]=this.buffer[this.start+a&this.mask];return"["+b.join(", ")+"]"}}
class IndexedList$$module$js$util{constructor(){this.list=[];this.map=new Map}add(b){this.map.has(b)||(this.map.set(b,this.list.length),this.list.push(b))}indexOf(b){return this.map.get(b)}remove(b){const a=this.map.get(b);if(null!=a)for(this.list.splice(a,1),this.map.delete(b),b=a;b<this.list.length;b++)this.map.set(this.list[b],b)}[Symbol.iterator](){return this.list[Symbol.iterator]()}}var module$js$util={};module$js$util.Deque=Deque$$module$js$util;module$js$util.IndexedList=IndexedList$$module$js$util;const Edge$$module$js$graph={},EdgeT$$module$js$graph={};Edge$$module$js$graph.of=(...b)=>b.map((a)=>a.uid);class Node$$module$js$graph{constructor(b,a){this.graph=b;this.name=a;this.uid=b.nodes.length;b.nodes.push(this)}get nodeType(){return"Node"}toString(){return`${this.nodeType} ${this.name}`}edges(b){return[]}}
class Graph$$module$js$graph{constructor(){this.nodes=[]}traverse(b={}){const {wanted:a=void 0,dfs:c=!1}=b;b=new Deque$$module$js$util;const d=new Map,e=new Map;for(var f of this.nodes)for(var g of f.edges()){var k=g.join(" ");for(var h=1;h<g.length;h++){const a=g[h];e.has(a)||e.set(a,new Map);e.get(a).set(k,g)}1==g.length&&(k=g[0],d.has(k)||(b.push(k),d.set(k,g)))}f=new Set((a||this.nodes).map((a)=>a instanceof Node$$module$js$graph?a.uid:a));for(g=new Map;f.size&&b.length;){k=c?b.pop():b.shift();
f.delete(k);a:for(const a of(e.get(k)||g).values())if(k=a[0],!d.has(k)){for(h=1;h<a.length;h++)if(!d.has(a[h]))continue a;d.set(k,a);b.push(k)}}return{win:!f.size,seen:d,path:[...d.values()].map(([a,...b])=>{const c=(a)=>[this.nodes[a]];return[a,[...c(a)," (",b.map((a)=>c(a).join("").replace(/\s+\(.*\)/,"")).join(", "),")"].join("")]})}}}
class SparseDependencyGraph$$module$js$graph{constructor(b){this.nodes=Array(b).fill(0).map(()=>new Map);this.finalized=Array(b).fill(!1)}addRoute(b){const a=b[0];if(this.finalized[a])throw Error(`Attempted to add a route for finalized node ${a}`);let c=new Set;for(let a=b.length-1;1<=a;a--)c.add(b[a]);for(;;){b=!1;for(var d of c){if(d===a)return[];if(this.finalized[d]){b=this.nodes[d];if(!b.size)return[];c.delete(d);if(1==b.size){for(const a of b.values().next().value)c.add(a);b=!0;break}d=new Map;
for(var e of b.values())for(var f of this.addRoute([a,...c,...e]))d.set(f.label,f);return[...d.values()]}}if(!b)break}e=[...c].sort();c=new Set(e);e=e.join(" ");f=this.nodes[a];if(f.has(e))return[];for(const [a,b]of f){if(containsAll$$module$js$graph(c,b))return[];containsAll$$module$js$graph(b,c)&&f.delete(a)}f.set(e,c);return[new SparseRoute$$module$js$graph(a,c,`${a}:${e}`)]}finalize(b){if(!this.finalized[b]){this.finalized[b]=!0;for(let a=0;a<this.nodes.length;a++){const c=this.nodes[a];if(c.size)for(const [d,
e]of c)if(e.has(b)){const b=this.finalized[a];this.finalized[a]=!1;c.delete(d);this.addRoute([a,...e.values()]);this.finalized[a]=b}}}}}class SparseRoute$$module$js$graph{constructor(b,a,c){this.target=b;this.deps=a;this.label=c}}const containsAll$$module$js$graph=(b,a)=>{if(b.size<a.size)return!1;for(const c of a)if(!b.has(c))return!1;return!0};var module$js$graph={};module$js$graph.Edge=Edge$$module$js$graph;module$js$graph.Node=Node$$module$js$graph;module$js$graph.Graph=Graph$$module$js$graph;
module$js$graph.SparseDependencyGraph=SparseDependencyGraph$$module$js$graph;class TrackerNode$$module$js$nodes extends Node$$module$js$graph{constructor(b,a,c){super(b,c);this.type=a}get nodeType(){return"Tracker"}edges({}={}){return[]}}TrackerNode$$module$js$nodes.OFF_ROUTE=1;TrackerNode$$module$js$nodes.GLITCH=2;TrackerNode$$module$js$nodes.HARD=3;class Option$$module$js$nodes extends Node$$module$js$graph{constructor(b,a,c){super(b,a);this.value=c}get nodeType(){return"Option"}edges(){return this.value?[Edge$$module$js$graph.of(this)]:[]}}
class Slot$$module$js$nodes extends Node$$module$js$graph{constructor(b,a,c,d,e=[]){super(b,a);this.slotName=a;this.slotIndex=d;this.slotType=c instanceof Magic$$module$js$nodes?"magic":"consumable";this.vanillaItemName=c.name;this.slots=e;this.item=c;this.itemIndex=d;this.requiresUnique=!1}get nodeType(){return"Slot"}toString(){return`${super.toString()} [${this.vanillaItemName} $${this.slotIndex.toString(16).padStart(2,0)}]`}edges(){return null!=this.item&&null!=this.itemIndex?[Edge$$module$js$graph.of(this.item,
this)]:[]}isMimic(){return 112<=this.itemIndex}requireUnique(){this.requiresUnique=!0;return this}canHoldMimic(){return this instanceof Chest$$module$js$nodes&&!this.isInvisible}needsChest(){const b=this.itemIndex;return 13<=b&&36>=b||38===b||40===b||49===b||72<b}isChest(){return(this instanceof Chest$$module$js$nodes||this instanceof BossDrop$$module$js$nodes)&&9!==this.origIndex}get name2(){return this.item==this.vanilla?this.name:`${this.item.name} [${this.vanillaItemName}]`}set(b,a){this.item=
b;this.itemIndex=a}write(b){if(this.slots)for(const a of this.slots)a(b.subarray(16),this)}swap(b){const a=this.item,c=this.itemIndex;this.set(b.item,b.itemIndex);b.set(a,c)}key(){this.slotType="key";return this}bonus(){this.slotType="bonus";return this}direct(b){this.slots.push((a,c)=>{write$$module$js$nodes(a,b,c.itemIndex)});return this}npcSpawn(b,a=null,c=0){this.slots.push((d,e)=>{let f=addr$$module$js$nodes(d,116192,81920,b);for(;null!=a&&d[f]!=a;){for(f++;!(d[f]&128);)f+=2,checkBounds$$module$js$nodes(f,
d,this.name2,a);f+=2;checkBounds$$module$js$nodes(f,d,this.name2,a)}f+=2*c+1;d[f]&=-2;d[f]|=2;write$$module$js$nodes(d,f+1,e.itemIndex)});return this}dialog(b,a=null,c=0,d=null){this.slots.push((e,f)=>{let g=addr$$module$js$nodes(e,117085,81920,b);for(;!(e[g]&128);)g+=4,checkBounds$$module$js$nodes(g,e,this.name2);g+=4;let k=0;for(;255!=e[g];)null!=a&&e[g]==a&&(k=e[g+1]),g+=2,checkBounds$$module$js$nodes(g,e,a);for(g+=k+1;c;){if(e[g]&64){for(g+=5;!(e[g]&64);)g+=2,checkBounds$$module$js$nodes(g,e,
this.name2);g+=2}else g+=5;--c}if(null!=d)for(g+=5;d;)g+=2,--d;e[g]&=-2;e[g]|=2;write$$module$js$nodes(e,g+1,f.itemIndex)});return this}trigger(b,a=0,c=null){this.slots.push((d,e)=>{let f=addr$$module$js$nodes(d,123258,81920,b&127);if(null==c)f+=2*a;else{for(;!(d[f]&128);)f+=2,checkBounds$$module$js$nodes(f,d,this.name2);f=f+4+2*c}d[f]&=-2;d[f]|=2;write$$module$js$nodes(d,f+1,e.itemIndex)});return this}}
class BossDrop$$module$js$nodes extends Slot$$module$js$nodes{get nodeType(){return"BossDrop"}}
class Chest$$module$js$nodes extends Slot$$module$js$nodes{constructor(b,a,c,d){super(b,a,c,d);this.spawnSlot=null;this.isInvisible=!1}get nodeType(){return"Chest"}objectSlot(b,a){this.spawnSlot=a;this.slots.push((c,d)=>{const e=addr$$module$js$nodes(c,102913,65536,b)+4*(a-11);c[e-1]=112<=d.itemIndex?c[e-1]|128:c[e-1]&127;write$$module$js$nodes(c,e,Math.min(112,d.itemIndex))});return this}invisible(b){this.isInvisible=!0;return this.direct(b)}}
const addr$$module$js$nodes=(b,a,c,d)=>(b[a+2*d]|b[a+2*d+1]<<8)+c;
class ItemGet$$module$js$nodes extends Node$$module$js$graph{constructor(b,a,c,d,e){super(b,c);this.id=a;this.shufflePriority=1;this.inventoryRow="unique"}get nodeType(){return"ItemGet"}chest(b=this.name+" chest",a=this.id){return new Chest$$module$js$nodes(this.graph,b,this,a)}fromPerson(b,a,c=0){return this.direct(b,33008|(a&-4)<<6|(a&3)<<2|c)}bossDrop(b,a,c=this.id){return new BossDrop$$module$js$nodes(this.graph,b,this,c,[(b,c)=>{const d=addr$$module$js$nodes(b,129387,81920,a)+4;write$$module$js$nodes(b,
d,c.itemIndex)}])}direct(b,a){return new Slot$$module$js$nodes(this.graph,b,this,this.id,[(b,d)=>{write$$module$js$nodes(b,a,d.itemIndex)}])}fixed(){return new Slot$$module$js$nodes(this.graph,null,this,this.id)}weight(b){this.shufflePriority=b;return this}consumable(){this.inventoryRow="consumable";return this}armor(){this.inventoryRow="armor";return this}}class Item$$module$js$nodes extends ItemGet$$module$js$nodes{get nodeType(){return"Item"}}
class Magic$$module$js$nodes extends ItemGet$$module$js$nodes{get nodeType(){return"Magic"}}class Trigger$$module$js$nodes extends Node$$module$js$graph{constructor(b,a){super(b,a);this.slot=null;this.reqs=[]}get nodeType(){return"Trigger"}edges(){const b=[...this.reqs];this.slot&&b.push(Edge$$module$js$graph.of(this.slot,this));return b}get(b){if(this.slot)throw Error("already have a slot");this.slot=b;return this}}
class Condition$$module$js$nodes extends Node$$module$js$graph{constructor(b,a){super(b,a);this.options=[]}get nodeType(){return"Condition"}edges(){return this.options.map((b)=>Edge$$module$js$graph.of(this,...b))}option(...b){this.options.push(b.map((a)=>a instanceof Slot$$module$js$nodes?a.item:a));return this}}
class Boss$$module$js$nodes extends Trigger$$module$js$nodes{constructor(b,a,c,...d){super(b,c);this.index=a;this.deps=d.map((a)=>a instanceof Slot$$module$js$nodes?a.item:a)}get nodeType(){return"Boss"}}class Area$$module$js$nodes extends Node$$module$js$graph{constructor(b,a){super(b,a);this.name=a}get nodeType(){return"Area"}}
class Connection$$module$js$nodes{constructor(b,a,c=!1,d=[]){this.from=b;this.to=a;this.bidi=c;this.deps=d.map((a)=>a instanceof Slot$$module$js$nodes?a.item:a)}reverse(){return new Connection$$module$js$nodes(this.to,this.from,this.bidi,this.deps)}}
class Location$$module$js$nodes extends Node$$module$js$graph{constructor(b,a,c,d){super(b,c.name+": "+d);this.simpleName=d;this.id=a;this.area=c;this.connections=[];this.chests=[];this.type=this.bossNode=null;this.isEnd=this.isStart=!1}get nodeType(){return"Location"}toString(){return`Location ${this.id.toString(16).padStart(2,0)} ${this.name}`}edges(){const b=[];for(const a of this.connections)b.push(Edge$$module$js$graph.of(a.to,a.from,...a.deps,...a.from.bossNode?[a.from.bossNode]:[])),a.bidi&&
b.push(Edge$$module$js$graph.of(a.from,a.to,...a.deps,...a.to.bossNode?[a.to.bossNode]:[]));for(const a of this.chests)b.push(Edge$$module$js$graph.of(a,this));this.isStart&&b.push(Edge$$module$js$graph.of(this));return b}addConnection(b){b.from.connections.push(b);b.to.connections.push(b);return this}from(b,...a){return this.addConnection(new Connection$$module$js$nodes(b,this,!1,a))}to(b,...a){return this.addConnection(new Connection$$module$js$nodes(this,b,!1,a))}connect(b,...a){return this.addConnection(new Connection$$module$js$nodes(b,
this,!0,a))}connectTo(b,...a){return this.addConnection(new Connection$$module$js$nodes(this,b,!0,a))}chest(b,a,c=void 0){b instanceof Slot$$module$js$nodes&&!(b instanceof Chest$$module$js$nodes)&&null!=c&&(b=b.item);b instanceof ItemGet$$module$js$nodes&&(b=b.chest(void 0,c));a=b.objectSlot(this.id,a);this.chests.push(a);112<=a.itemIndex&&(a.slotType="trap");if(!a.slotName||a.slotName.endsWith(" chest"))a.slotName=b.name+" in "+this.area.name;return this}trigger(b,...a){a=a.map((a)=>a instanceof
Slot$$module$js$nodes?a.item:a);b.reqs.push(Edge$$module$js$graph.of(b,this,...a));return this}boss(b){this.bossNode=b;b.reqs.push(Edge$$module$js$graph.of(b,this,...b.deps));return this}overworld(){this.type="overworld";return this}town(){this.type="town";return this}cave(){this.type="cave";return this}sea(){this.type="sea";return this}fortress(){this.type="fortress";return this}house(){this.type="house";return this}shop(){this.type="house";return this}misc(){this.type="misc";return this}start(){this.isStart=
!0;return this}end(){this.isEnd=!0;return this}fullName(){const b=[this.simpleName];this.bossNode&&b.push(this.bossNode.name);return b.join("\\n")}}const checkBounds$$module$js$nodes=(b,a,...c)=>{if(b>a.length)throw Error("never found: "+c.map((a)=>"number"==typeof a?a.toString(16):a).join(" "));};
class WorldGraph$$module$js$nodes extends Graph$$module$js$graph{integrate(b={}){const {tracker:a=!1}=b;var c=!a;const d=new SparseDependencyGraph$$module$js$graph(this.nodes.length),e=[],f=[],g=new Set,k=new Map;var h=[],m=[];const r=[];var n=[];const t=[];b=new Set;for(var l of this.nodes)if(l instanceof Location$$module$js$nodes){if(l.isStart){const [a]=d.addRoute([l.uid]);k.set(a.label,a)}e[l.uid]=[];f[l.uid]=[];for(const a of l.connections)g.has(a)||(g.add(a),a.bidi&&g.add(a.reverse()));for(const a of l.chests)d.addRoute([a.uid,
l.uid])}else if(l instanceof Slot$$module$js$nodes&&"Alarm Flute"===l.item.name)d.addRoute([l.item.uid]),d.finalize(l.item.uid);else if(l instanceof ItemGet$$module$js$nodes&&"Medical Herb"===l.name&&(d.addRoute([l.uid]),d.finalize(l.uid)),l instanceof Option$$module$js$nodes)h.push(l);else if(l instanceof TrackerNode$$module$js$nodes)m.push(l);else if(l instanceof Condition$$module$js$nodes)r.push(l);else if(l instanceof Trigger$$module$js$nodes)n.push(l);else if(l instanceof ItemGet$$module$js$nodes)t.push(l);
else if(l instanceof Slot$$module$js$nodes)b.add(l);else if(!(l instanceof Area$$module$js$nodes))throw Error(`Unknown node type: ${l.nodeType}`);for(const a of g)e[a.from.uid].push(a),f[a.to.uid].push(a);l=(b)=>{for(const c of b){for(const b of c.edges({tracker:a}))d.addRoute(b);d.finalize(c.uid)}};l(h);c&&l(m);l(n);for(c=k.values();!(h=c.next()).done;){h=h.value;m=h.target;for(var p of e[m]){m=[p.to.uid,...h.deps];for(n=p.deps.length-1;0<=n;n--)m.push(p.deps[n].uid);p.from.bossNode&&m.push(p.from.bossNode.uid);
for(const a of d.addRoute(m))k.has(a.label)||k.set(a.label,a)}}l(r);for(p=0;p<this.nodes.length;p++)this.nodes[p]instanceof ItemGet$$module$js$nodes||this.nodes[p]instanceof TrackerNode$$module$js$nodes||d.finalize(p);p=new LocationList$$module$js$nodes(this);for(const a of b)for(const b of d.nodes[a.uid].values())p.addRoute([a.uid,...b]);return p}}
class LocationList$$module$js$nodes{constructor(b){this.worldGraph=b;this.uidToLocation=[];this.locationToUid=[];this.uidToItem=[];this.itemToUid=[];this.routes=[];this.unlocks=[];this.win=null}item(b){return this.worldGraph.nodes[this.itemToUid[b]]}location(b){return this.worldGraph.nodes[this.locationToUid[b]]}addRoute(b){let a=Bits$$module$js$bits.of(),c;const d=[];for(let e=b.length-1;0<=e;e--){const f=e?this.uidToItem:this.uidToLocation,g=e?this.itemToUid:this.locationToUid,k=b[e];let h=f[k];
null==h&&(h=g.length,g.push(k),f[k]=h,e||null!=this.worldGraph.nodes[k].slotName||(this.win=h));e?(a=Bits$$module$js$bits.with(a,h),d.push(this.unlocks[h]||(this.unlocks[h]=new Set))):c=h}(this.routes[c]||(this.routes[c]=[])).push(a);for(const a of d)a.add(c)}canReach(b,a){b=this.uidToLocation(b.uid);b=this.routes[b];for(let c=0;c<b.length;c++)if(Bits$$module$js$bits.containsAll(a,b[c]))return!0;return!1}traverse(b=Bits$$module$js$bits.of(),a=[]){b=Bits$$module$js$bits.clone(b);const c=new Set;let d=
new Set;for(var e=0;e<this.locationToUid.length;e++)d.add(e);e=d[Symbol.iterator]();for(var f;!(f=e.next()).done;){f=f.value;d.delete(f);if(c.has(f))continue;const e=this.routes[f];for(let g=0;g<e.length;g++)if(Bits$$module$js$bits.containsAll(b,e[g])){c.add(f);if(a[f]){b=Bits$$module$js$bits.with(b,a[f]);for(let b of this.unlocks[a[f]])d.add(b)}break}}return c}toString(){const b=[];for(let a=0;a<this.routes.length;a++){const c=this.worldGraph.nodes[this.locationToUid[a]],d=this.routes[a],e=[];for(let a=
0;a<d.length;a++){const b=[];for(const c of Bits$$module$js$bits.bits(d[a]))b.push(this.worldGraph.nodes[this.itemToUid[c]]);e.push("("+b.join(" & ")+")")}b.push(`${c}: ${e.join(" | ")}`)}return b.join("\n")}assumedFill(b,a=(a,b)=>!0,c=FillStrategy$$module$js$nodes){const d=c.shuffleItems(this.itemToUid.map((a)=>this.worldGraph.nodes[a]),b);let e=Bits$$module$js$bits.from(d);const f=Array(this.locationToUid.length).fill(null);for(;d.length;){const g=d.pop();if(!Bits$$module$js$bits.has(e,g))continue;
const k=this.worldGraph.nodes[this.itemToUid[g]];e=Bits$$module$js$bits.without(e,g);const h=[...this.traverse(e,f)].filter((a)=>null==f[a]);c.shuffleSlots(k,h,b);let m=!1;for(const b of h)if(null==f[b]&&b!=this.win&&a(this.worldGraph.nodes[this.locationToUid[b]],k)){f[b]=g;m=!0;break}if(!m)return null}return f}}
class FillStrategy$$module$js$nodes{shuffleSlots(b,a,c){}static shuffleSlots(b,a,c){c.shuffle(a)}shuffleItems(b,a){}static shuffleItems(b,a){const c=[];for(let a=0;a<b.length;a++){const {shufflePriority:d=1}=b[a];for(let b=0;b<d;b++)c.push(a)}a.shuffle(c);return c}}const write$$module$js$nodes=(b,a,c)=>{b[a]=c};var module$js$nodes={};module$js$nodes.TrackerNode=TrackerNode$$module$js$nodes;module$js$nodes.Option=Option$$module$js$nodes;module$js$nodes.Slot=Slot$$module$js$nodes;
module$js$nodes.BossDrop=BossDrop$$module$js$nodes;module$js$nodes.Chest=Chest$$module$js$nodes;module$js$nodes.ItemGet=ItemGet$$module$js$nodes;module$js$nodes.Item=Item$$module$js$nodes;module$js$nodes.Magic=Magic$$module$js$nodes;module$js$nodes.Trigger=Trigger$$module$js$nodes;module$js$nodes.Condition=Condition$$module$js$nodes;module$js$nodes.Boss=Boss$$module$js$nodes;module$js$nodes.Area=Area$$module$js$nodes;module$js$nodes.Connection=Connection$$module$js$nodes;
module$js$nodes.Location=Location$$module$js$nodes;module$js$nodes.WorldGraph=WorldGraph$$module$js$nodes;module$js$nodes.LocationList=LocationList$$module$js$nodes;module$js$nodes.FillStrategy=FillStrategy$$module$js$nodes;const seq$$module$js$rom=(b,a)=>{a=void 0===a?(a)=>a:a;return Array(b).fill(0).map((b,d)=>a(d))},slice$$module$js$rom=(b,a,c)=>b.slice(a,a+c),signed$$module$js$rom=(b)=>128>b?b:b-256,varSlice$$module$js$rom=(b,a,c,d,e)=>{e=void 0===e?Infinity:e;const f=[];for(;a+c<=e&&b[a]!=d;)f.push(b.slice(a,a+c)),a+=c;return f},addr$$module$js$rom=(b,a,c)=>(b[a]|b[a+1]<<8)+(void 0===c?0:c),group$$module$js$rom=(b,a)=>seq$$module$js$rom(Math.max(0,Math.floor(a.length/b)),(c)=>slice$$module$js$rom(a,c*b,b)),reverseBits$$module$js$rom=
(b)=>65793*(2050*b&139536|32800*b&558144)>>>16&255,countBits$$module$js$rom=(b)=>{b-=b>>1&85;b=(b&51)+(b>>2&51);return b+(b>>4)&15},INVALID_LOCATIONS$$module$js$rom=new Set([11,13,18,19,22,23,29,31,54,55,58,59,63,83,99,102,103,111,116,117,118,119,121,122,123,139,141,151,153,154,155,189,202,204,219,230,234,252,253,254,255]),LOCATION_NAMES$$module$js$rom={[0]:"Mezame Shrine",[1]:"Leaf - Outside Start",[2]:"Leaf",[3]:"Valley of Wind",[4]:"Sealed Cave 1",[5]:"Sealed Cave 2",[6]:"Sealed Cave 3",[7]:"Sealed Cave 4",
[8]:"Sealed Cave 5",[9]:"Sealed Cave 6",[10]:"Sealed Cave 7",[12]:"Sealed Cave 8",[14]:"Windmill Cave",[15]:"Windmill",[16]:"Zebu Cave",[17]:"Mt Sabre West - Cave 1",[20]:"Cordel Plains West",[21]:"Cordel Plains East",[24]:"Brynmaer",[25]:"Outside Stom House",[26]:"Swamp",[27]:"Amazones",[28]:"Oak",[30]:"Stom House",[32]:"Mt Sabre West - Lower",[33]:"Mt Sabre West - Upper",[34]:"Mt Sabre West - Cave 2",[35]:"Mt Sabre West - Cave 3",[36]:"Mt Sabre West - Cave 4",[37]:"Mt Sabre West - Cave 5",[38]:"Mt Sabre West - Cave 6",
[39]:"Mt Sabre West - Cave 7",[40]:"Mt Sabre North - Main",[41]:"Mt Sabre North - Middle",[42]:"Mt Sabre North - Cave 1",[43]:"Mt Sabre North - Cave 2",[44]:"Mt Sabre North - Cave 3",[45]:"Mt Sabre North - Cave 4",[46]:"Mt Sabre North - Cave 5",[47]:"Mt Sabre North - Cave 6",[48]:"Mt Sabre North - Left Cell",[49]:"Mt Sabre North - Prison Key Hall",[50]:"Mt Sabre North - Right Cell",[51]:"Mt Sabre North - Cave 7",[52]:"Mt Sabre North - Cave 8",[53]:"Mt Sabre North - Summit Cave",[56]:"Mt Sabre North - Entrance Cave",
[57]:"Mt Sabre North - Cave 5a",[60]:"Nadare - Inn",[61]:"Nadare - Tool Shop",[62]:"Nadare - Back Room",[64]:"Waterfall Valley North",[65]:"Waterfall Valley South",[66]:"Lime Tree Valley",[67]:"Lime Tree Lake",[68]:"Kirisa Plant Cave 1",[69]:"Kirisa Plant Cave 2",[70]:"Kirisa Plant Cave 3",[71]:"Kirisa Meadow",[72]:"Fog Lamp Cave 1",[73]:"Fog Lamp Cave 2",[74]:"Fog Lamp Cave 3",[75]:"Fog Lamp Cave Dead End",[76]:"Fog Lamp Cave 4",[77]:"Fog Lamp Cave 5",[78]:"Fog Lamp Cave 6",[79]:"Fog Lamp Cave 7",
[80]:"Portoa",[81]:"Portoa - Fisherman Island",[82]:"Mesia Shrine",[84]:"Waterfall Cave 1",[85]:"Waterfall Cave 2",[86]:"Waterfall Cave 3",[87]:"Waterfall Cave 4",[88]:"Tower - Entrance",[89]:"Tower 1",[90]:"Tower 2",[91]:"Tower 3",[92]:"Tower - Outside Mesia",[93]:"Tower - Outside Dyna",[94]:"Tower - Mesia",[95]:"Tower - Dyna",[96]:"Angry Sea",[97]:"Boat House",[98]:"Joel - Lighthouse",[100]:"Underground Channel",[101]:"Zombie Town",[104]:"Evil Spirit Island 1",[105]:"Evil Spirit Island 2",[106]:"Evil Spirit Island 3",
[107]:"Evil Spirit Island 4",[108]:"Sabera Palace 1",[109]:"Sabera Palace 2",[110]:"Sabera Palace 3",[112]:"Joel - Secret Passage",[113]:"Joel",[114]:"Swan",[115]:"Swan - Gate",[120]:"Goa Valley",[124]:"Mt Hydra",[125]:"Mt Hydra - Cave 1",[126]:"Mt Hydra - Outside Shyron",[127]:"Mt Hydra - Cave 2",[128]:"Mt Hydra - Cave 3",[129]:"Mt Hydra - Cave 4",[130]:"Mt Hydra - Cave 5",[131]:"Mt Hydra - Cave 6",[132]:"Mt Hydra - Cave 7",[133]:"Mt Hydra - Cave 8",[134]:"Mt Hydra - Cave 9",[135]:"Mt Hydra - Cave 10",
[136]:"Styx 1",[137]:"Styx 2",[138]:"Styx 3",[140]:"Shyron",[142]:"Goa",[143]:"Goa Fortress - Oasis Entrance",[144]:"Desert 1",[145]:"Oasis Cave - Main",[146]:"Desert Cave 1",[147]:"Sahara",[148]:"Sahara - Outside Cave",[149]:"Desert Cave 2",[150]:"Sahara Meadow",[152]:"Desert 2",[156]:"Pyramid Front - Entrance",[157]:"Pyramid Front - Branch",[158]:"Pyramid Front - Main",[159]:"Pyramid Front - Draygon",[160]:"Pyramid Back - Entrance",[161]:"Pyramid Back - Hall 1",[162]:"Pyramid Back - Branch",[163]:"Pyramid Back - Dead End Left",
[164]:"Pyramid Back - Dead End Right",[165]:"Pyramid Back - Hall 2",[166]:"Pyramid Back - Draygon Revisited",[167]:"Pyramid Back - Teleporter",[168]:"Goa Fortress - Entrance",[169]:"Goa Fortress - Kelbesque",[170]:"Goa Fortress - Zebu",[171]:"Goa Fortress - Sabera",[172]:"Goa Fortress - Tornel",[173]:"Goa Fortress - Mado 1",[174]:"Goa Fortress - Mado 2",[175]:"Goa Fortress - Mado 3",[176]:"Goa Fortress - Karmine 1",[177]:"Goa Fortress - Karmine 2",[178]:"Goa Fortress - Karmine 3",[179]:"Goa Fortress - Karmine 4",
[180]:"Goa Fortress - Karmine 5",[181]:"Goa Fortress - Karmine 6",[182]:"Goa Fortress - Karmine 7",[183]:"Goa Fortress - Exit",[184]:"Oasis Cave - Entrance",[185]:"Goa Fortress - Asina",[186]:"Goa Fortress - Kensu",[187]:"Goa - House",[188]:"Goa - Inn",[190]:"Goa - Tool Shop",[191]:"Goa - Tavern",[192]:"Leaf - Elder House",[193]:"Leaf - Rabbit Hut",[194]:"Leaf - Inn",[195]:"Leaf - Tool Shop",[196]:"Leaf - Armor Shop",[197]:"Leaf - Student House",[198]:"Brynmaer - Tavern",[199]:"Brynmaer - Pawn Shop",
[200]:"Brynmaer - Inn",[201]:"Brynmaer - Armor Shop",[203]:"Brynmaer - Item Shop",[205]:"Oak - Elder House",[206]:"Oak - Mother House",[207]:"Oak - Tool Shop",[208]:"Oak - Inn",[209]:"Amazones - Inn",[210]:"Amazones - Item Shop",[211]:"Amazones - Armor Shop",[212]:"Amazones - Elder",[213]:"Nadare",[214]:"Portoa - Fisherman House",[215]:"Portoa - Palace Entrance",[216]:"Portoa - Fortune Teller",[217]:"Portoa - Pawn Shop",[218]:"Portoa - Armor Shop",[220]:"Portoa - Inn",[221]:"Portoa - Tool Shop",[222]:"Portoa - Palace Left",
[223]:"Portoa - Palace Throne Room",[224]:"Portoa - Palace Right",[225]:"Portoa - Asina Room",[226]:"Amazones - Elder Downstairs",[227]:"Joel - Elder House",[228]:"Joel - Shed",[229]:"Joel - Tool Shop",[231]:"Joel - Inn",[232]:"Zombie Town - House",[233]:"Zombie Town - House Basement",[235]:"Swan - Tool Shop",[236]:"Swan - Stom Hut",[237]:"Swan - Inn",[238]:"Swan - Armor Shop",[239]:"Swan - Tavern",[240]:"Swan - Pawn Shop",[241]:"Swan - Dance Hall",[242]:"Shyron - Fortress",[243]:"Shyron - Training Hall",
[244]:"Shyron - Hospital",[245]:"Shyron - Armor Shop",[246]:"Shyron - Tool Shop",[247]:"Shyron - Inn",[248]:"Sahara - Inn",[249]:"Sahara - Tool Shop",[250]:"Sahara - Elder House",[251]:"Sahara - Pawn Shop"};class Entity$$module$js$rom{constructor(b,a){this.rom=b;this.id=a}toString(){return this.constructor.name+" $"+this.id.toString(16).padStart(2,0)}}
class Screen$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=(255<a?64+a:a)<<8;this.tiles=seq$$module$js$rom(15,(a)=>slice$$module$js$rom(b.prg,this.base|a<<4,16))}metatile(b,a){return this.rom.metatiles[this.tiles[b][a]]}}
class Tileset$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);a&=63;this.tileBase=65536|a<<8;this.attrBase=77824|a<<4;this.alternatesBase=81408|a<<3;this.tiles=seq$$module$js$rom(4,(a)=>slice$$module$js$rom(b.prg,this.tileBase|a<<8,256));this.attrs=seq$$module$js$rom(256,(a)=>b.prg[this.attrBase|a>>2]>>((a&3)<<1)&3);this.alternates=slice$$module$js$rom(b.prg,this.alternatesBase,32)}}
class TileEffects$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=a<<8&8191|73728;this.effects=slice$$module$js$rom(b.prg,this.base,256)}}class Palette$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=(a&3)<<2|(a&252)<<6|16624;this.colors=slice$$module$js$rom(b.prg,this.base,4)}color(b){return this.colors[b]&63}}
class Pattern$$module$js$rom extends Entity$$module$js$rom{constructor(b,a,c){super(b,a);this.pixels=c||slice$$module$js$rom(b.chr,a<<4,16)}pixelAt(b,a){return(this.pixels[b|8]>>a&1)<<1|this.pixels[b]>>a&1}flipH(){return new Pattern$$module$js$rom(this.rom,-1,this.pixels.map(reverseBits$$module$js$rom))}flipV(){return new Pattern$$module$js$rom(this.rom,-1,seq$$module$js$rom(16,(b)=>this.pixels[b&8|~b&7]))}flip(b){let a=this;b&64&&(a=a.flipH());b&128&&(a=a.flipV());return a}}
class TileAnimation$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=255865+(a<<3);this.pages=slice$$module$js$rom(b.prg,this.base,8)}}
class Hitbox$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=218769+(a<<2);this.coordinates=slice$$module$js$rom(b.prg,this.base,4)}get w(){return this.coordinates[1]}get x0(){return signed$$module$js$rom(this.coordinates[0])}get x1(){return this.x0+this.w}get h(){return this.coordinates[3]}get y0(){return signed$$module$js$rom(this.coordinates[2])}get y1(){return this.y0+this.h}}
class AdHocSpawn$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=(a<<2)+171008;this.lowerSlot=b.prg[this.base];this.upperSlot=b.prg[this.base+1];this.object=b.prg[this.base+2];this.count=b.prg[this.base+3]}}
class ItemGet$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.itemPointer=122214+a;this.item=b.prg[this.itemPointer];this.tablePointer=121600+2*a;this.tableBase=addr$$module$js$rom(b.prg,this.tablePointer,81920);a=[];let c=this.tableBase;a.push(b.prg[c++]);a.push(b.prg[c++]);a.push(b.prg[c++]);for(a.push(b.prg[c++]);;){const d=b.prg[c++];a.push(d);a.push(b.prg[c++]);if(d&64)break}a.push(b.prg[c++]);this.table=Uint8Array.from(a)}write(b){b=void 0===b?this.rom:b;b.prg[this.itemPointer]=
this.item;const a=this.table;b.prg.subarray(this.tableBase,this.tableBase+a.length).set(a)}}class Npc$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=33008|(a&252)<<6|(a&3)<<2;this.data=slice$$module$js$rom(b.prg,this.base,4)}}
class Location$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.mapDataPointer=82688+(a<<1);this.mapDataBase=addr$$module$js$rom(b.prg,this.mapDataPointer,49152);this.valid=49152<this.mapDataBase&&!!LOCATION_NAMES$$module$js$rom[a];this.name=LOCATION_NAMES$$module$js$rom[a];this.layoutBase=addr$$module$js$rom(b.prg,this.mapDataBase,49152);this.graphicsBase=addr$$module$js$rom(b.prg,this.mapDataBase+2,49152);this.entrancesBase=addr$$module$js$rom(b.prg,this.mapDataBase+
4,49152);this.exitsBase=addr$$module$js$rom(b.prg,this.mapDataBase+6,49152);this.flagsBase=addr$$module$js$rom(b.prg,this.mapDataBase+8,49152);this.pitsBase=this.layoutBase==this.mapDataBase+10?null:addr$$module$js$rom(b.prg,this.mapDataBase+10,49152);this.bgm=b.prg[this.layoutBase];this.layoutWidth=b.prg[this.layoutBase+1];this.layoutHeight=b.prg[this.layoutBase+2];this.animation=b.prg[this.layoutBase+3];this.extended=b.prg[this.layoutBase+4];this.screens=seq$$module$js$rom(this.height,(a)=>slice$$module$js$rom(b.prg,
this.layoutBase+5+a*this.width,this.width));this.tilePalettes=slice$$module$js$rom(b.prg,this.graphicsBase,3);this.tileset=b.prg[this.graphicsBase+3];this.tileEffects=b.prg[this.graphicsBase+4];this.tilePatterns=slice$$module$js$rom(b.prg,this.graphicsBase+5,2);this.entrances=group$$module$js$rom(4,b.prg.slice(this.entrancesBase,this.exitsBase));this.exits=varSlice$$module$js$rom(b.prg,this.exitsBase,4,255,this.flagsBase);this.flags=varSlice$$module$js$rom(b.prg,this.flagsBase,2,255);this.pits=this.pitsBase?
varSlice$$module$js$rom(b.prg,this.pitsBase,4,255):[];this.npcDataPointer=102913+(a<<1);this.npcDataBase=addr$$module$js$rom(b.prg,this.npcDataPointer,65536);this.spritePalettes=(a=65536!=this.npcDataBase)?slice$$module$js$rom(b.prg,this.npcDataBase+1,2):null;this.spritePatterns=a?slice$$module$js$rom(b.prg,this.npcDataBase+3,2):null;this.objects=a?varSlice$$module$js$rom(b.prg,this.npcDataBase+5,4,255):null}get width(){return this.layoutWidth+1}get height(){return this.layoutHeight+1}monsters(){return this.objects?
this.objects.flatMap((b,a)=>{var [,,c,d]=b;return c&7||!this.rom.objects[d+80]?[]:[[this.id,a+13,c&128?1:0,d+80,this.spritePatterns[c&128?1:0],this.rom.objects[d+80].palettes()[0],this.spritePalettes[this.rom.objects[d+80].palettes()[0]-2]]]}):[]}}
class ObjectData$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.objectDataPointer=109568+(a<<1);this.objectDataBase=addr$$module$js$rom(b.prg,this.objectDataPointer,65536);this.sfx=b.prg[this.objectDataBase];a=this.objectDataBase+1;this.objectData=[];let c=0;for(let d=0;32>d;d++)d&7||(c=b.prg[a++]),this.objectData.push(c&128?b.prg[a++]:0),c<<=1}serialize(){const b=[this.sfx];for(let a=0;4>a;a++){let c=b.length;b.push(0);for(let d=0;8>d;d++)this.objectData[8*a+d]&&(b[c]|=
128>>>d,b.push(this.objectData[8*a+d]))}return Uint8Array.from(b)}write(b){b=void 0===b?this.rom:b;b.prg[this.objectDataPointer]=this.objectDataBase&255;b.prg[this.objectDataPointer+1]=this.objectDataBase>>>8&255;const a=this.serialize();b.prg.subarray(this.objectDataBase,this.objectDataBase+a.length).set(a)}get(b){return this.objectData[b-768>>>5]}static setupProps(){const b=(...a)=>({get(){let b=0;for(const c of a){const [a,d=255,g=0]=c;b|=(this.objectData[a-768>>>5]&d)>>>(0>g?0:g)<<(0>g?-g:0)}return b},
set(b){for(const c of a){const [a,d=255,g=0]=c;{const c=a-768>>>5;this.objectData[c]=this.objectData[c]&~d|b>>>(0>g?-g:0)<<(0>g?0:g)&d}}}});Object.defineProperties(this.prototype,{metasprite:b([768]),collisionPlane:b([928,240,4]),hitbox:b([1056,64,2],[928,15]),hp:b([960]),atk:b([992]),def:b([1024]),level:b([1056,31]),child:b([1088]),terrainSusceptibility:b([1120]),immobile:b([1184,128,7]),action:b([1184,127]),replacement:b([1216]),goldDrop:b([1280,240,4]),elements:b([1280,15]),expReward:b([1312]),
attackType:b([1344])})}parents(){return this.rom.monsters.filter((b)=>b.child&&this.rom.adHocSpawns[b.child].object==this.id)}locations(){return this.rom.locations.filter((b)=>b&&b.objects&&b.objects.some((a)=>0==(a[2]&7)&&(a[3]+80&255)==this.id))}palettes(b){if(34==this.action)return[3];let a=this.objectData[0];42==this.action&&(a=this.objectData[31]|1);41==this.action&&(a=107);38==this.action&&(a=156);b=(void 0===b?0:b)&&this.child?this.rom.metasprites[this.rom.objects[this.rom.adHocSpawns[this.child].object].objectData[0]]:
null;return[...new Set([...this.rom.metasprites[a].palettes(),...b?b.palettes():[]])]}}ObjectData$$module$js$rom.setupProps();
class Metasprite$$module$js$rom extends Entity$$module$js$rom{constructor(b,a){super(b,a);this.base=addr$$module$js$rom(b.prg,230492+(this.id<<1),196608);this.valid=196608<this.base;if(255==b.prg[this.base]){const c=addr$$module$js$rom(b.prg,this.base+1);for(let a=0;256>a;a++)if(addr$$module$js$rom(b.prg,230492+(a<<1))==c){this.mirrored=a;break}if(null==this.mirrored)throw Error("could not find mirrored sprite for "+a.toString(16));this.frames=this.frameMask=this.size=0;this.sprites=[]}else this.mirrored=
null,this.size=b.prg[this.base],this.frameMask=b.prg[this.base+1],this.frames=this.frameMask+1,this.sprites=seq$$module$js$rom(this.frames,(a)=>{a=this.base+2+4*a*this.size;const c=[];for(let d=0;d<this.size&&128!=b.prg[a+4*d];d++)c.push(slice$$module$js$rom(b.prg,a+4*d,4));return c})}palettes(){if(!this.valid)return[];let b=this;b.mirrored&&(b=this.rom.metasprites[b.mirrored]);const a=new Set;for(const c of b.sprites)for(let b of c){let [c,,d]=b;if(128==c)break;a.add(d&3)}return[...a]}}
class DataTable$$module$js$rom extends Array{constructor(b,a,c,d,e){e=void 0===e?1<d?(...a)=>a:(a)=>a:e;super(c);this.rom=b;this.base=a;this.count=c;this.width=d;for(let f=0;f<c;f++)this[f]=e(...slice$$module$js$rom(b.prg,a+f*d,d))}}
class AddressTable$$module$js$rom extends Array{constructor(b,a,c,d,e){e=void 0===e?(a)=>a:e;super(c);this.rom=b;this.base=a;this.count=c;this.offset=d;this.addresses=seq$$module$js$rom(this.count,(c)=>addr$$module$js$rom(b.prg,a+2*c,d));for(let a=0;a<c;a++)this[a]=e(this.addresses[a],a,this.addresses)}}
class Message$$module$js$rom{constructor(b,a,c,d){this.messages=b;this.part=a;this.id=c;this.addr=d;a=b.rom.prg;c=[];for(this.bytes=[];a[d];d++){let e=a[d];this.bytes.push(e);if(1!=e)if(2==e)c.push("\n");else if(3==e)c.push("\u25bc\n");else if(4==e)c.push("SIMEA");else if(8==e)c.push("ITEM");else if(5<=e&&9>=e){const f=a[++d];9==e?c.push(" ".repeat(f)):(c.push(b.extraWords[e][f]),PUNCTUATION$$module$js$rom[String.fromCharCode(a[d+1])]||c.push(" "))}else if(128<=e)c.push(b.basicWords[e-128]),PUNCTUATION$$module$js$rom[String.fromCharCode(a[d+
1])]||c.push(" ");else if(32<=e)c.push(String.fromCharCode(e));else throw Error(`Non-exhaustive switch: ${e} at ${d.toString(16)}`);}this.text=c.join("")}}const PUNCTUATION$$module$js$rom={"\x00":!0,".":!0,",":!0,_:!0,":":!0,"!":!0,"?":!0,"'":!0," ":!0};
class Messages$$module$js$rom{constructor(b){this.rom=b;const a=(a)=>readString$$module$js$rom(b.prg,a);this.basicWords=new AddressTable$$module$js$rom(b,166144,128,131072,a);this.extraWords={5:new AddressTable$$module$js$rom(b,166400,10,131072,a),6:new AddressTable$$module$js$rom(b,166420,36,131072,a),7:new AddressTable$$module$js$rom(b,166492,74,131072,a)};this.banks=new DataTable$$module$js$rom(b,164862,36,1);this.parts=new AddressTable$$module$js$rom(b,164898,34,131072,(a,d,e)=>new AddressTable$$module$js$rom(b,
a,33==d?3:e[d+1]-a>>>1,(this.banks[d]<<13)-40960,(a,b)=>new Message$$module$js$rom(this,d,b,a)))}}
class Rom$$module$js$rom{constructor(b){this.prg=b.subarray(16,262160);this.chr=b.subarray(262160);this.screens=seq$$module$js$rom(259,(a)=>new Screen$$module$js$rom(this,a));this.tilesets=seq$$module$js$rom(12,(a)=>new Tileset$$module$js$rom(this,a<<2|128));this.tileEffects=seq$$module$js$rom(11,(a)=>new TileEffects$$module$js$rom(this,a+179));this.patterns=seq$$module$js$rom(this.chr.length>>4,(a)=>new Pattern$$module$js$rom(this,a));this.palettes=seq$$module$js$rom(256,(a)=>new Palette$$module$js$rom(this,
a));this.locations=seq$$module$js$rom(256,(a)=>LOCATION_NAMES$$module$js$rom[a]?new Location$$module$js$rom(this,a):null);this.tileAnimations=seq$$module$js$rom(4,(a)=>new TileAnimation$$module$js$rom(this,a));this.hitboxes=seq$$module$js$rom(24,(a)=>new Hitbox$$module$js$rom(this,a));this.objects=seq$$module$js$rom(256,(a)=>new ObjectData$$module$js$rom(this,a));this.adHocSpawns=seq$$module$js$rom(96,(a)=>new AdHocSpawn$$module$js$rom(this,a));this.metasprites=seq$$module$js$rom(256,(a)=>new Metasprite$$module$js$rom(this,
a));this.messages=new Messages$$module$js$rom(this);this.itemGets=seq$$module$js$rom(113,(a)=>new ItemGet$$module$js$rom(this,a));this.npcs=seq$$module$js$rom(205,(a)=>new Npc$$module$js$rom(this,a))}get monsters(){let b=new Set;for(const a of this.locations)if(a&&a.objects)for(const c of a.objects)0==(c[2]&7)&&b.add(this.objects[c[3]+80&255]);b=[...b];b.sort((a,b)=>a.id-b.id);return b}get projectiles(){let b=new Set;for(const a of this.monsters)a.child&&b.add(this.objects[this.adHocSpawns[a.child].object]);
b=[...b];b.sort((a,b)=>a.id-b.id);return b}get monsterGraphics(){const b={};for(const a of this.locations)if(a&&a.objects)for(const c of a.objects)if(!(c[2]&7)){const d=c[2]&128?1:0,e=(c[3]+80).toString(16).padStart(2,0);(b[e]=b[e]||{})[`${d}:${a.spritePatterns[d].toString(16)}:${a.spritePalettes[d].toString(16)}`]={slot:d,pat:a.spritePatterns[d],pal:a.spritePalettes[d]}}return b}get locationMonsters(){const b={};for(const a of this.locations){if(!a||!a.objects)continue;const c=b["$"+a.id.toString(16).padStart(2,
0)]={};for(const b of a.objects)if(!(b[2]&7)){const a=b[2]&128?1:0,d=b[3]+80;c[`${a}:${d.toString(16)}`]=(c[`${a}:${d.toString(16)}`]||0)+1}}return b}static load(b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const a=yield pickFile$$module$js$rom();b&&(yield b(a));return new Rom$$module$js$rom(a)})}writeNpcData(){for(const b of this.locations){if(!b)continue;let a=b.npcDataBase;b.spritePalettes&&this.prg.subarray(a+1,a+3).set(b.spritePalettes);b.spritePatterns&&this.prg.subarray(a+
3,a+5).set(b.spritePatterns);a+=5;for(const c of b.objects||[])this.prg.subarray(a,a+4).set(c),a+=4}}writeObjectData(){let b=110080;const a={};for(const c of this.objects){const d=c.serialize(),e=d.join(" ");e in a?c.objectDataBase=a[e]:(c.objectDataBase=b,a[e]=b,b+=d.length);c.write()}return b}}
const readString$$module$js$rom=(b,a)=>{const c=[];for(;b[a];)c.push(b[a++]);return String.fromCharCode(...c)},pickFile$$module$js$rom=()=>new Promise((b,a)=>{if("#reset"!=window.location.hash){const a=window.localStorage.getItem("rom");if(a)return b(Uint8Array.from(Array(a.length/2).fill(0).map((b,c)=>Number.parseInt(a[2*c]+a[2*c+1],16))))}const c=document.createElement("input");document.body.appendChild(c);c.type="file";c.addEventListener("change",()=>{const a=c.files[0],e=new FileReader;e.addEventListener("loadend",
()=>{const a=new Uint8Array(e.result),d=Array.from(a,(a)=>a.toString(16).padStart(2,0)).join("");window.localStorage.setItem("rom",d);c.remove();b(a)});e.readAsArrayBuffer(a)})}),EXPECTED_CRC32$$module$js$rom=466849842;var module$js$rom={};module$js$rom.Rom=Rom$$module$js$rom;module$js$rom.EXPECTED_CRC32=EXPECTED_CRC32$$module$js$rom;const IM1$$module$js$random=2147483563,IM2$$module$js$random=2147483399,AM$$module$js$random=1/IM1$$module$js$random,IMM1$$module$js$random=IM1$$module$js$random-1,IA1$$module$js$random=40014,IA2$$module$js$random=40692,IQ1$$module$js$random=53668,IQ2$$module$js$random=52774,IR1$$module$js$random=12211,IR2$$module$js$random=3791,NTAB$$module$js$random=32,NDIV$$module$js$random=1+Math.floor(IMM1$$module$js$random/NTAB$$module$js$random),EPS$$module$js$random=1.2E-7,RNMX$$module$js$random=1-EPS$$module$js$random;
class Random$$module$js$random{constructor(b=Math.floor(4294967296*Math.random())){this.seed(b)}seed(b){this.idum2=this.idum=Math.max(1,Math.floor(b));this.iy=0;this.iv=Array(NTAB$$module$js$random).fill(0);for(b=NTAB$$module$js$random+7;0<=b;b--){const a=Math.floor(this.idum/IQ1$$module$js$random);this.idum=IA1$$module$js$random*(this.idum-a*IQ1$$module$js$random)-a*IR1$$module$js$random;0>this.idum&&(this.idum+=IM1$$module$js$random);b<NTAB$$module$js$random&&(this.iv[b]=this.idum)}this.iy=this.iv[0]}next(){var b=
Math.floor(this.idum/IQ1$$module$js$random);this.idum=IA1$$module$js$random*(this.idum-b*IQ1$$module$js$random)-b*IR1$$module$js$random;0>this.idum&&(this.idum+=IM1$$module$js$random);b=Math.floor(this.idum2/IQ2$$module$js$random);this.idum2=IA2$$module$js$random*(this.idum2-b*IQ2$$module$js$random)-b*IR2$$module$js$random;0>this.idum2&&(this.idum2+=IM2$$module$js$random);b=Math.floor(this.iy/NDIV$$module$js$random);this.iy=this.iv[b]-this.idum2;this.iv[b]=this.idum;1>this.iy&&(this.iy+=IMM1$$module$js$random);
return Math.min(AM$$module$js$random*this.iy,RNMX$$module$js$random)}nextInt(b){return Math.floor(this.next()*b)}shuffle(b){for(let a=b.length;a;){const c=this.nextInt(a--);[b[a],b[c]]=[b[c],b[a]]}return b}}var module$js$random={};module$js$random.Random=Random$$module$js$random;const STATUS$$module$js$version="unstable",VERSION$$module$js$version="latest",LABEL$$module$js$version="latest a461f0e",HASH$$module$js$version="a461f0e23255feb02795b9e3aee0e47dd64186ff",DATE$$module$js$version=new Date(1552592641E3);var module$js$version={};module$js$version.STATUS=STATUS$$module$js$version;module$js$version.VERSION=VERSION$$module$js$version;module$js$version.LABEL=LABEL$$module$js$version;module$js$version.HASH=HASH$$module$js$version;module$js$version.DATE=DATE$$module$js$version;var $jscompDefaultExport$$module$js$patch={apply(b,a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){let c;a.seed||(a.seed=parseSeed$$module$js$patch("").toString(16),window.location.hash+="&seed="+a.seed);c=a.flags?new FlagSet$$module$js$flagset(a.flags):new FlagSet$$module$js$flagset("Em Gt Mr Rlpt Sbk Sct Sm Tasd");for(const b in a)"false"===a[b]&&(a[b]=!1);yield shuffle$$module$js$patch(b,parseSeed$$module$js$patch(a.seed),c)})}};
const parseSeed$$module$js$patch=(b)=>b?/^[0-9a-f]{1,8}$/i.test(b)?Number.parseInt(b,16):crc32$$module$js$crc32(b):Math.floor(4294967296*Math.random()),shuffle$$module$js$patch=(b,a,c,d,e)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){if("number"!==typeof a)throw Error("Bad seed");var f=crc32$$module$js$crc32(a.toString(16).padStart(8,0)+String(c))>>>0;watchForFlag0$$module$js$patch.apply(b);rearrangeTriggersAndNpcs$$module$js$patch.apply(b);c.check("Rd")&&requireHealedDolphinToRide$$module$js$patch.apply(b);
c.check("Rp")&&connectLeafToLimeTree$$module$js$patch.apply(b);openSwanFromEitherSide$$module$js$patch.apply(b);f=new Random$$module$js$random(f);yield shuffle2$$module$js$depgraph(b,f,d,c,e);const g=new Rom$$module$js$rom(b);rescaleMonsters$$module$js$patch(b,g);c.check("Mr")&&shuffleMonsters$$module$js$patch(b,g,f);identifyKeyItemsForDifficultyBuffs$$module$js$patch(g);fixShaking$$module$js$patch.apply(b);fixOpelStatue$$module$js$patch.apply(b);upgradeBallsToBracelets$$module$js$patch.apply(b);
preventNpcDespawns$$module$js$patch.apply(b);allowTeleportOutOfTower$$module$js$patch.apply(b);c.check("Td")&&buffDeosPendant$$module$js$patch.apply(b);c.check("Rl")&&barrierRequiresCalmSea$$module$js$patch.apply(b);preventSoftlockFromZeroHpOrMp$$module$js$patch.apply(b);scaleDifficultyLib$$module$js$patch.apply(b);nerfArmors$$module$js$patch.apply(b);fixVampire$$module$js$patch.apply(b);displayDifficulty$$module$js$patch.apply(b);itemLib$$module$js$patch.apply(b);c.check("Em")?buffMedicalHerb3x$$module$js$patch.apply(b):
c.check("Hm")||buffMedicalHerb2x$$module$js$patch.apply(b);c.check("Rt")?asinaTeleportsToMezameShrine$$module$js$patch.apply(b):noTeleportOnThunderSword$$module$js$patch.apply(b);c.check("Ts")&&leatherBootsForSpeed$$module$js$patch.apply(b);c.check("Di")&&neverDie$$module$js$patch.apply(b);c.check("Ta")&&autoEquipBracelet$$module$js$patch.apply(b);c.check("Tw")&&nerfWildWarp$$module$js$patch.apply(b);return stampVersionSeedAndHash$$module$js$patch(b,a,c)}),stampVersionSeedAndHash$$module$js$patch=
(b,a,c)=>{const d=crc32$$module$js$crc32(b).toString(16).padStart(8,0).toUpperCase(),e="unstable"==STATUS$$module$js$version?HASH$$module$js$version.substring(0,7).padStart(7,0).toUpperCase()+"     ":VERSION$$module$js$version.substring(0,12).padEnd(12," ");a=a.toString(16).padStart(8,0).toUpperCase();const f=(a,c)=>{for(let d=0;d<c.length;d++)b[a+16+d]=c.charCodeAt(d)},g=(a,b)=>{const c=[];for(let d=0;d<a.length||d<b.length;d++)c.push(a[d]||" "),c.push(b[d]||" ");return c.join("")};f(161743,g("  VERSION     SEED      ",
`  ${e}${a}`));a=String(c);let k;if(46<a.length){if(92<a.length)throw Error("Flag string way too long!");k=a.substring(46,92).padEnd(46," ");a=a.substring(0,46)}a=a.padEnd(46," ");f(161791,g(a.substring(0,23),a.substring(23)));k&&f(161839,g(k.substring(0,23),k.substring(23)));f(161925,g(d.substring(0,4),d.substring(4)));f(153366,"RANDOMIZER");"unstable"==STATUS$$module$js$version&&f(153404,"BETA");return d},watchForFlag0$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000\n\n;;;; TODO - REMOVE THIS ONCE IT'S SOLVED\n.org $3cb62 ; main game mode jump 08\n  jsr CheckFlag0\n.org $3fe80\nReadControllersWithDirections:\n.org $3d347\nInitiateDialog:\n\n.org $3fdd0 ; !!! - note itemLib (I think) uses this space, too\nCheckFlag0:\n  lda $6480\n  lsr\n  bcc +\n   asl\n   sta $6480\n   lda #$00\n   sta $20\n   sta $21\n   ldx #$0c\n-   lda $6140,x\n    eor #$ff\n    sta $6140,x\n    dex\n   bpl -\n   jsr InitiateDialog\n+ jmp ReadControllersWithDirections\n\n",
"watchForFlag0")),preventSoftlockFromZeroHpOrMp$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502('\n.bank $3c000 $c000:$4000 ; fixed bank\n.bank $2e000 $a000:$2000\n.org $2fbd5 ; start of unused block\nCheckForLowHpMp:\n  cmp #$05\n  bcs +\n   lda #$05\n+ sta $03c1\n  lda $0708\n  bne +\n   lda #$01\n   sta $0708\n+ rts\n.org $2fbe9 ; tight bound, in case we need space on this page later\n.org $2fc00 ; end of unused block\n\n.org $2fd82 ; normally "sta $03c1"\n  jsr CheckForLowHpMp\n\n',
"preventSoftlockFromZeroHpOrMp")),openSwanFromEitherSide$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000\n.bank $18000 $8000:$4000\n\n.org $192e7\n  .byte $a3,$ab  ; 73 swan gate\n.org $1aba3 ; empty space at end of npcdata\n  .byte $00,$ff,$09,$6b,$ff\n  .byte $04,$01,$02,$b3\n  .byte $04,$0a,$04,$2c\n  .byte $07,$06,$01,$2d\n  .byte $07,$09,$01,$2d\n  .byte $02,$0a,$01,$2d ; new soldier (they need to come in pairs)\n  .byte $02,$0b,$01,$2d ; new soldier\n  .byte $0a,$0e,$02,$b3 ; new trigger to erase guards\n  .byte $ff\n.org $1ac00\n",
"openSwanFromEitherSide")),connectLeafToLimeTree$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000\n.bank $14000 $8000:$4000\n\n;; Valley of Wind\n.org $145dd\n  .byte $e7,$93 ; new valley of wind entrance table\n  .byte $22,$86 ; move exit table up a little\n.org $14605\n  .byte $10\n.org $153e7\n  .byte $80,$03,$df,$06\n  .byte $40,$01,$60,$01\n  .byte $80,$02,$70,$00\n  .byte $c8,$01,$98,$01\n  .byte $98,$01,$98,$01\n  .byte $a8,$00,$90,$03\n  .byte $ef,$04,$78,$05 ; new entrance from lime tree\n.org $14622\n  .byte $4f,$56,$42,$02 ; new exit to lime tree valley\n  .byte $4f,$57,$42,$02\n\n;; Lime Tree Valley\n.org $1544c\n  .byte $12,$86 ; new entrance table (inside v.wind area)\n  .byte $67,$94 ; move exit table up a little\n.org $14612 ; lime tree entrances\n  .byte $ef,$02,$78,$01\n  .byte $80,$01,$30,$00\n  .byte $10,$00,$c0,$01 ; new entrance from valley of wind\n.org $1545a\n  .byte $1a ; left-middle screen\n.org $1545d\n  .byte $0c ; bottom-left (just nicer matched mountains)\n.org $15467\n  .byte $00,$1b,$03,$06 ; new exits to valley of wind\n  .byte $00,$1c,$03,$06\n\n;; Waterfall Valley South\n.org $153dd\n  .byte $60,$93 ; share layout and graphics tables w/ north half\n  .byte $92,$93\n;;.org $153e7  ;; Newly-freed space\n;;.org $1541e\n\n\n\n  ; find/make a free block for some new exit/entrance tables\n",
"connectLeafToLimeTree")),rearrangeTriggersAndNpcs$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000\n.bank $1c000 $8000:$4000\n\ndefine Difficulty $64a2\ndefine ShouldRedisplayDifficulty $64a3\n\n;; Move Draygon's spawn condition up about $100 bytes to make 3 bytes\n;; extra space for a spawn flag check for Draygon 2.\n.org $1c776         ; cb draygon 1 and 2\n  .byte $54,$88     ; ($1c854)\n.org $1c854\n  .byte $9f,$a1,$0b ; pyramid front: 10b NOT defeated draygon 1\n  .byte $ff,$ff,$ff\n  .byte $ff\n\n;; Move 'Learn Barrier' trigger into 'Shyron Massacre' to get 2 extra\n;; bytes for the 'Calmed Sea' condition.\n.org $1e182      ; 84 learn barrier\n  .byte $00,$a2  ; ($1e200)\n\n.org $1e200\n  .byte $20,$51  ; Condition: 051 NOT learned barrier\n  .byte $a0,$00  ; Condition: 000 NOT false\n  .byte $5b,$b2  ; Message: 1d:12  Action: 0b\n  .byte $40,$51  ; Set: 051 learned barrier\n.org $1e208\n\n;; Move 'Shyron Massacre' trigger to the unused space in triggers\n;; 87 and 88 to get 2 extra bytes (leaves 8 more bytes in that spot).\n.org $1e17a      ; 80 shyron massacre\n  .byte $32,$a2  ; ($1e232)\n.org $1e232\n  .byte $20,$27  ; Condition: 027 NOT shyron massacre\n  .byte $00,$5f  ; Condition: 05f sword of thunder\n  .byte $80,$3b  ; Condition: 03b talked to zebu in shyron -> SLOT(key to styx)\n  .byte $03,$b3  ; Message: 1d:13\n  .byte $40,$27  ; Set: 027 shyron massacre\n.org $1e244\n\n;; Reorder Zebu cave dialog to spawn windmill guard first\n;; Alternatively: consider just having him always spawned?\n;; NOTE: this reordering requires adjusting the offset for\n;; the refresh give condition.\n.org $1d76c ; zebu dialog 10 cave\n  .byte $60,$3a,$00,$1a,$00 ; 03a NOT talked to zebu in cave -> 00:1a\n  .byte         $40,$3a     ;     Set: 03a talked to zebu in cave\n  .byte $00,$0d,$00,$1d,$00 ; 00d leaf villagers rescued -> 00:1d\n  .byte $00,$38,$00,$1c,$00 ; 038 leaf attacked -> 00:1c\n  .byte $00,$39,$00,$1d,$00 ; 039 learned refresh -> 00:1d\n  .byte $40,$0a,$18,$1b,$00 ; 00a windmill key used -> 00:1b (action 03)\n  .byte         $c0,$00     ;     Clear: 000 (set on item get instead)\n;;.byte         $40,$39     ;     Set: 039 learned refresh\n\n;; Give key to styx regardless of whether sword of thunder found\n;; Also don't duplicate-set 03b, it's already handled by ItemGet.\n.org $1d78e ; zebu dialog f2 shyron temple\n  .byte $60,$3b,$8a,$97,$22,$c0,$00  ; 03b NOT -> 14:17 (action 11)\n  .byte $00,$2d,$02,$c3,$22          ; 02d -> 16:03\n\n;; Windmill guard shouldn't despawn on massacre\n.org $1c7d6\n  .byte $00 ; no despawn at all\n\n;; Don't check unwritten 104 flag for mado spawn\n.org $1c93a\n  .byte $a0,$00\n\n;; Remove redundant dialog itemget flag sets\n.org $1cb67 ; sword of wind\n  .byte $c0,$00\n.org $1cde1 ; sword of fire\n  .byte $c0,$00\n.org $1ce0c ; insect flute\n  .byte $c0,$00\n.org $1d5db ; warrior ring\n  .byte $c0,$00\n.org $1d662 ; deo\n  .byte $c0,$00\n.org $1d6ee ; shield ring\n  .byte $c0,$00\n.org $1ccdf ; windmill key\n  .byte $c0,$00\n;.org $1d798 ; key to styx (zebu)\n;  .byte $c0,$00\n.org $1e208 ; key to styx (trigger)\n  .byte $a0,$00\n.org $1d3b4 ; eye glasses (clark)\n  .byte $a0,$00\n.org $1d852 ; kensu lighthouse\n  .byte $c0,$00\n\n; Move NpcDialog_2d to the unused space at 1d1fd..1f21b\n.org $1c9b7\n  .byte $fd,$91\n.org $1d1fd\n  .byte $80,$00,$00,$00\n  .byte $28,$00\n  .byte $73,$05\n  .byte $ff\n  ;; 00: 28 Mt Sabre North - Main\n  .byte $a0,$00,$08,$b0,$00 ; default -> 05:10 (action 01)\n  ;; 05: 73 Swan - Gate\n  .byte $40,$2a,$42,$75,$05 ; 02a change:soldier -> 13:15 (action 08)\n  .byte         $41,$0d     ;     Set: 10d\n  .byte $a0,$00,$0a,$74,$05 ; default -> 13:14 (action 01) -> @ 05\n.org $1d21b\n\n.org $1e34c ; trigger b3: despawn swan guards\n  .byte $81,$0d ; 10d talked to guards from other side -> despawn\n\n;; NOTE: we could use 2 less bytes if necessary by moving a smaller\n;; entry here that's otherwise adjacent to some free space.  Or\n;; just defrag that table.\n.org $1db06\n  .byte $79,$8f ; ItemGetData_03 pointer\n.org $1cf79 ; space freed by moving Dialog_2d\nItemGetData_03: ; sword of thunder\n  .byte $03,$80 ; slot\n  .byte $08,$00 ; action 01 -> teleport to shyron\n  .byte $02,$fd ; Set: 2fd warp:shyron\n  .byte $40,$5f ; Set: 05f chest:03:sword of thunder\n  .byte $ff\n.org $1cf82\n  ; 15 bytes still available\n.org $1cf91\n\n\n;; queen will try to give flute of lime even if got sword first\n.org $1cfab ; queen \"you found sword of water\" message action\n  .byte $19 ; add action 03\n;.org $3d1f5 ; call to WaitForDialogToBeDismissed\n;  jsr PatchAsinaReveal\n\n;; asina will also give flute of lime if queen never did (after recover)\n.org $098f9\n  .byte $28 ; asina persondata[1] -> flute of lime\n.org $1d80a\n  .byte $89 ; asina love pendant dialog -> give second item\n.org $1d816\n  .byte $89 ; asina default dialog -> give second item\n\n.org $3ff44\n; TODO - 60 bytes we could use here (now 36)\nPatchGrantItemInRegisterA:\n  ;; Version of GrantItemInRegisterA that bails out if the\n  ;; item is already owned.\n  sta $057f\n  lsr\n  lsr\n  lsr\n  tax\n  lda $057f\n  and #$07\n  tay\n  lda $64c0,x\n  and $3c000,y ; powers of two\n  beq +\n   pla\n   pla\n+ rts\n.org $3ff5c\n\n;;PatchAsinaReveal:\n;;  jsr WaitForDialogToBeDismissed\n;;  jmp DialogFollowupActionJump_03\n.org $3ff62\n; this space is used by nerfArmors\n;.org $3ff77\n;.org $3ff80\n\n;.org $3d225\n;DialogFollowupActionJump_03:\n;.org $3d354\n;WaitForDialogToBeDismissed:\n\n\n.org $3d223 ; part of DialogFollowupActionJump_11 (give 2nd item)\n  bpl GrantItemInRegisterA ; change from bne to handle sword of wind\n\n.org $3d22b\nGrantItemInRegisterA:\n  jsr PatchGrantItemInRegisterA\n\n;; If LookingAt is $1f and the item goes into the $20 row then we can't\n;; just reject - instead, add the item to an overflow chest.\n;; We use the bytes at 64b8..64bf to store the overflow.\n\n;; asina reveal depends on mesia recording (01b), not ball of water (01f)\n;; - this ensures you have both sword and ball to get to her --\x3e ???\n.org $1c81f\n  .byte $1b\n.org $1c822\n  .byte $1b\n.org $1c82a\n  .byte $1b\n.org $1cf9c\n  .byte $1b\n.org $1d047\n  .byte $1b\n.org $1e389\n  .byte $1b\n\n\n;; bow of truth extra triggers\n.org $1d8dc ;; Azteca dialog\n  .byte $80,$00,$c0,$00\n\n;; refresh triggers\n;.org $1d780\n;  .byte $c0,$00\n.org $1e358\n  .byte $c0,$00\n\n;; paralysis triggers\n.org $1e34a\n  .byte $c0,$00\n\n;; teleport triggers\n.org $1d7d0\n  .byte $c0,$00\n\n;; barrier triggers\n.org $1c7e2\n  .byte $20,$00 ; akahana cave\n.org $1c7ef\n  .byte $a0,$00 ; akahana stoned\n.org $1c886\n  .byte $a0,$00 ; zebu\n.org $1c898\n  .byte $a0,$00 ; tornel\n.org $1c8ac\n  .byte $a0,$00 ; stom\n.org $1e222\n  .byte $c0,$00 ; trigger set flag\n\n;; insect/dwarf items\n;; Change all the post-insect messages to action 03\n.org $1cdc6\n  .byte $18\n.org $1cdcb\n  .byte $18\n.org $1cdd2\n  .byte $18\n.org $1cdd9\n  .byte $18\n.org $1cdff\n  .byte $18\n.org $1ce04\n  .byte $18\n\n;; kensu in the cabin needs to be available even after visiting joel.\n;; just have him disappear after setting the flag. but also require\n;; having returned the fog lamp before he shows up - this requires\n;; moving him up a word.\n.org $1c6b0\n  .byte $f6,$88 ; pointer to kensu 68\n.org $1c8f6\n  .byte $61,$20,$9b,$80,$21,$ff\n.org $1d867\n  .byte $12,$21 ; message 11:01 (action 02 disappear)\n\n\n;; Treasure chest spawns don't need to be so complicated.\n;; Instead, just use the new dedicated ItemGet flags 200..27f\n.org $1c5c3\n  ;; Read the flag 200+chest, where chest is in $23\n  lda #$a2\n  sta $61\n  lda $23\n  sta $62\n  lda #$61\n  sta $24\n  lda #$00\n  sta $25\n  tay\n  jsr ReadFlagFromBytePair_24y\n  beq +\n   inc $20\n+ rts\n.org $1c5de\n\n;; Patches to ItemGet to update the dedicated flag and\n;; leave room for calling the difficulty methods\n.org $1c287\n  jsr ItemGet_PickSlotAndAdd\n.org $1c299\n  jmp ItemGetFollowup\n.org $1c29c\nItemGet_PickSlotAndAdd:  ; move this up 4 bytes\n  sty $62\n  nop\n  nop\n.org $1c2a0\n\n.org $1c26f\nItemGet:\n.org $1c135\nReadFlagFromBytePair_24y:\n.org $1c112\nSetOrClearFlagsFromBytePair_24y:\n\n;; Freed from the chest spawn pointer table\n.org $1dc82\n.org $1dd64\n\n;; Freed from the chest spawn data\n.org $1e106\nItemGetRedisplayDifficulty:\n  rts  ; change to nop to enable this code\n  lda #$01\n  sta ShouldRedisplayDifficulty\n  rts\n.org $1e110\nItemGetFollowup:\n  ;; We have room to exactly copy this behavior, but it does appear\n  ;; to be dead.\n  lda ($24),y\n  pha  ; later -> pla and if pl then repeat ItemGet with A -> $23\n   ;; Maybe increase difficulty (if last element is FE)\n   bpl +\n   lsr\n   bcs +\n    lda Difficulty\n    cmp #$2f\n    bcs +\n     inc Difficulty\n     jsr ItemGetRedisplayDifficulty\n   ;; Always set the dedicated 200+chest flag.\n+  lda #$42\n   sta $61\n   ;; $62 is already the item number, saved from earlier\n   lda #$61\n   sta $24\n   lda #$00\n   sta $25\n   tay\n   jsr SetOrClearFlagsFromBytePair_24y\n  ;; Now finish by maybe chaining to another item if positive\n  pla\n  bmi +\n   sta $23\n   jmp ItemGet\n+ rts\n\nItemGet_FindOpenSlotWithOverflow:\n  tay ; copied from 1c2a8\n  bmi +\n   pla ; make the call into this actually a jump...\n   pla\n   stx $61  ; save this for now\n   jsr ItemGet_FindOpenSlot\n   ;; if 23 nonzero then we failed to find a slot\n   ;; if 61 is 20 then we really need to put it somewhere\n   ;; in that case, add it to the overflow.  when we\n   ;; delete a key item, it will fall in\n   lda $23\n    beq +\n   lda $61\n   cmp #$20\n    bne +\n   ;; need to find a place\n   ldx #$07\n-   lda $64b8,x\n    beq ++\n    dex\n    bpl -\n+ rts\n++  lda $29\n    sta $64b8,x\n    lda #$00\n    sta $23\n    rts\n\n;; TODO - still plenty of space here\n\n.org $1e179 ; 1e17a is above...\n\n\n.org $1c308\nItemGet_FindOpenSlot:\n.org $1c2a8\n  jsr ItemGet_FindOpenSlotWithOverflow\n\n\n;; Replace \"drop item\" code for key items to use an overflow buffer\n\n.bank $20000 $8000:$2000\n\n.org $20372\n  jsr CheckDroppable\n\n.org $20434\n  jsr MaybeDrop\n  nop\n  nop\n\n.org $20ff0\nInvItemData:\n\n.org $21471 ; unused space, 130 or so bytes\nCheckDroppable:\n  ;; Loads A with something that has the :40 bit set if the item\n  ;; is not droppable.\n  lda $64bf\n  beq +\n   ;; there's overflow, so allow deleting if selecting from 3rd row\n   lda $6427\n   and #$38\n   cmp #$10\n   bne +\n    lda #$00\n    rts\n+ lda InvItemData,x\n  rts\nMaybeDrop:  ; 21486\n  txa\n  and #$f0\n  cmp #$20\n  beq +\n   lda #$ff\n   sta $6430,x\n   rts\n  ;; This is a key item and we have overflow.\n  ;; Substitute the overflow and cycle...\n+ lda $6430,x\n  pha\n   lda $64bf\n   sta $6430,x\n   ldx #$07\n-   lda $64b7,x\n    beq +\n    sta $64b8,x\n    dex\n    bne -\n+ pla\n  sta $64b8,x\n  rts\nFillQuestItemsFromBuffer: ; 214af\n  ;; If there's anything in the buffer and any space in the inventory,\n  ;; fill them in.  Just take the most recently added ones, not worrying\n  ;; about cycling the queue (that's only needed for dropping).\n  ldy #$08     ; predecrement, so start at $64c0\n-  dey\n   bmi +       ; buffer is full\n   lda $64b8,y\n  bne -        ; occupied, decrement and look at the next\n  ;; If y == #$08 then buffer is empty - return.\n+ iny\n  cpy #$08\n  beq +\n  ;; Look for open spots in the quest item row\n  ldx #$08\n-   dex\n    bmi +\n    lda $6450,x\n   bpl -\n   ;; We're looking at an open slot in x and an available item in y\n   lda $64b8,y\n   sta $6450,x\n   lda #$00\n   sta $64b8,y\n   iny\n   cpy #$08\n  bne -\n  ;; The following is copied from $20534, patched to not sort\n  ;; the swords or powerups (so it loads 2 instead of 0)\n+ lda #$02\n  sta $2e\n  rts\n\n.org $21500\n\n;; MUST BE EXACTLY 4 BYTES\n.org $20534\n  nop\n  jsr FillQuestItemsFromBuffer\n\n;; NOTE: This is copied from preventSwordClobber, which is no longer\n;; used on its own since we need to do slightly different initialization\n;; to refill from the buffer.\n;.org $20534\n;  lda #$02\n.org $205a7\n  .byte $0c\n.org $205a9\n  .byte $04\n\n",
"rearrangeTriggers")),fixOpelStatue$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $26000 $a000:$2000\n.bank $3c000 $c000:$4000\n\ndefine SelectedItemIndex       $642c\ndefine EquippedConsumableItem  $0715\n\n;; First thing to do is read which item is selected.\n.org $2788d ; START OF FREE SPACE ???\n.org $278e9\nCheckOpelStatue:\n  lda $6440,x\n  cmp #$26\n  beq +\n  dex\n  bpl CheckOpelStatue\n  bmi PlayerDeath\n+ stx SelectedItemIndex\n  lda #$0a\n  sta EquippedConsumableItem\n  jmp ActivateOpelStatue\n.org $27900 ; END OF FREE SPACE\n\n.org $27912\n  ldx #$07\n  bne CheckOpelStatue\n.org $2791c\nPlayerDeath:\n.org $279b0\nActivateOpelStatue:\n\n; Don't select opel statue at all...\n.org $21061\n  .byte $00\n\n.org $3db0d\nReturn:\n.org $3db0e\n    ;; Figure out what's equipped\n    ldy $642c\n    bmi +\n    lda $6440,y\n    cmp #$26\n    bne ++\n+   ldy $642e\n    bmi Return\n    lda $6450,y\n++  sec\n    jmp FinishEquippingConsumable\n\n.org $3fe72\nFinishEquippingConsumable:\n    sbc #$1c\n    sta EquippedConsumableItem\n    rts\n.org $3fe78\n\n",
"fixOpelStatue")),requireHealedDolphinToRide$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n;; move portoa fisherman up 1 word, make him only\n;; appear if both shell flute AND healed dolphin\n;; NOTE: 8b is the traditional itemget and 25\n;; is tied to the slot (healing dolphin)\n;; We could delete the slot one, but it's actually\n;; convenient to have both...\n.org $1c6a8\n  .byte $99,$87\n.org $1c799\n  .byte $d6,$00,$25,$80,$8b,$ff\n;; daughter's dialog should trigger on both, too\n.org $1d1c5\n  .byte $80,$2a,$03,$cc,$ff\n  .byte $20,$25,$01,$26,$00\n  .byte $20,$8b,$01,$26,$00\n  .byte $00,$21,$01,$25,$00\n  .byte $a0,$00,$01,$24,$00\n",
"requireHealedDolphinToRide")),buffDeosPendant$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.org $3f026\n  nop\n  nop\n","buffDeosPendant")),allowTeleportOutOfTower$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.bank $1c000 $8000:$4000\n\n;; draygon 2 does not reappear after defeated\n;; (points to moved memory location).\n.org $1c857\n  .byte $a6,$a2,$8d\n\n.org $3db39\n  .byte $00   ; don't jump away to prevent warp, just goto next line\n\n",
"allowTeleportOutOfTower")),preventNpcDespawns$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.bank $1a000 $8000:$2000\n\n.org $1a181 ;; npcdata a9 slot 0d second byte\n  .byte $67 ;; move kelbesque 2 one tile left\n\n.bank $1c000 $8000:$4000\n\n;; akahana does not disappear from waterfall cave after barrier\n.org $1c7e3\n  .byte $00\n\n;; stoned akahana does not disappear from waterfall cave after barrier\n.org $1c7f0\n  .byte $00\n\n;; zebu does not disappear from his cave after barrier\n.org $1c887\n  .byte $00\n\n;; asina does not disappear after defeating sabera\n.org $1c8b9\n  .byte $00\n\n;; clark moves back to joel after giving item, not after calming sea\n;; TODO - this is slightly awkward in that you can go up the stairs\n;; and back down and he's disappeared.  An alternative would be to\n;; put a trigger somewhere far away that checks 08d and sets some\n;; other (fresh/unused) flag to key off of.  (disappearing would be\n;; weird for clark, tho)\n.org $1c842\n  .byte $8d\n.org $1c845\n  .byte $8d\n\n;; Prevent soft-lock when encountering sabera and mado from reverse\n;; Double-returns if the boss's sprite is not in the top quarter of\n;; the screen. This is unused space at the end of the triggers.\n.org $1e3c0\nCheckBelowBoss:\n   lda $0380,x\n    bmi ++\n   ; skip the check for sabera 1 and mado 1\n   lda $04a0,x\n   and #$fe\n   cmp #$e6  ; sabera and mado\n   bne +\n    lda #$dc\n    cmp $04c0,x  ; first version has #$cf, second has #$dc\n    bne ++\n+  sec\n   lda $d0\n   sbc $d0,x\n    bmi ++\n   lda $b0\n   sbc $b0,x\n    bmi ++\n   sbc #$40\n++ rts\n.org $1e3e5\n.org $1e3f0\n\n.org $1e48b  ; vampire pattern 0\n  jsr CheckBelowBoss\n.org $1e971  ; kelbesque pattern 0\n  jsr CheckBelowBoss\n.org $1ec8f  ; sabera pattern 0\n  jsr CheckBelowBoss\n.org $1ede8  ; mado pattern 0\n  jsr CheckBelowBoss\n\n;; TODO - despawning swan guards closes the door forever\n;; instead, pick an unused flag, then set it as a prereq for\n;; trigger_b3 (1e34c) and set it as result of dialog_2d @73 +0 (1cf87)\n;;   => need 2 extra bytes to do this...\n;;   ... or add a jump to DialogFollowupActionJump_08 () to\n;;       set the flag manually if $6c==#$73\n\n;; Also fix softlock issue with zebu in reverse fortress.\n;; Remove the $c4,$29 spawn that locks the screen.\n.bank $1a000 $a000:$2000\n.org $1a1c0  ; npcdata_aa slot 0e\n  .byte $ff  ; just delete the spawn entirely\n.org $1a220  ; npcdata_ac slot 0f\n  .byte $ff  ; same for tornel\n.org $1a2e8  ; npcdata_b9 slot 0f\n  .byte $ff  ; same for asina\n;; NOTE - changing this for kensu seems broken and is unnecessary...\n;; except that it seems to be broken.\n;;.org $1a3ac  ; npcdata_ba slot 0e\n;;  .byte $00,$00,$02,$80 ; more npcs follow so instead change to off-screen trigger\n\n",
"preventNpcDespawns")),barrierRequiresCalmSea$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.bank $1c000 $8000:$4000\n\n.org $1e202\n  .byte $80,$8f  ; Condition: 283 calmed angy sea (also 283)\n","barrierRequiresCalmSea")),noTeleportOnThunderSword$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.org $3d565\n  .word ($d78c)\n","noTeleportOnThunderSword")),asinaTeleportsToMezameShrine$$module$js$patch=
buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.bank $1c000 $8000:$2000\n\n;; Add an extra dialog followup for asina to conditionally use to\n;; warp back to leaf from shyron\n\n.org $1d81b\n  .byte $fa ; 03b -> action 1f\n.org $1d820\n  .byte $fa ; 03b -> action 1f\n.org $1d82c\n  .byte $fa ; default -> action 1f\n\n.org $3d161\n  .byte $45,$fe ; DialogFollowupActionJump 1f\n\n.org $3fe45\n  lda #$00\n  sta $6c\n  sta $6d\n  lda #$01\n  sta $41\n  rts\n.org $3fe50\n.org $3fe78 ; end of unused space\n\n",
"asinaTeleportsToMezameShrine")),saharaBunniesRequireTelepathy$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $1c000 $8000:$2000\n.org $1d653 ; dialog 5a deo\n  ;; replace akahana's dialog - would be nice to add an extra stanza instead,\n  ;; but there's not immediately space - if we ever defrag then we should do it\n  ;; or else remove all the changed forms (except maybe soldier)\n  .byte $c2,$43   ; 243 NOT telepathy -> 1a:13\n.org $1d671 ; dialog 59 generic sahara bunnies\n  ;; replace stom - he can talk to bunnies just fine\n  .byte $c2,$43   ; 243 NOT telepathy -> 1a:12\n\n",
"saharaBunniesRequireTelepathy")),fixShaking$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n\n.org $3f4eb\n  ldx #$03\nloop1:\n  dex\n  bpl loop1\n\n.org $3f455\n  ldx #$07\n  nop\n","fixShaking")),displayDifficulty$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.bank $1e000 $a000:$2000\n\ndefine ShouldRedisplayDifficulty $64a3\n\n.org $1fd27\n  lda #$0e                      ; refer to moved LV(menu) display\n\n.bank $26000 $a000:$2000\n.org $27aca\n  ldx #$06                      ; also show diff\n\n.bank $34000 $8000:$2000\n.org $34ee9  ; NOTE - Difficulty goes here!\n  .byte $a2,$64,$3c,$2b,$03,$00 ; display difficulty right of lvl\n.org $34f19\n  .byte $21,$04,$29,$29,$03,$00 ; copied from $34ee9\n\n.bank $1c000 $8000:$2000\n.org $1e106\n  .byte $ea    ; change rts to nop\n\n.org $3ffa9\nDisplayNumber:\n\n.org $3cb84\nCheckForPlayerDeath:\n\n.org $3cb65  ; inside GameModeJump_08_Normal\n  jsr CheckToRedisplayDifficulty\n\n.org $3ffe3 ; we have 23 bytes to spend here\nCheckToRedisplayDifficulty:\n  lda ShouldRedisplayDifficulty\n  beq +\n   lda #$00\n   sta ShouldRedisplayDifficulty\n   lda #$06\n   jsr DisplayNumber\n+ jmp CheckForPlayerDeath\n.org $3fffa\n",
"displayDifficulty")),buffMedicalHerb3x$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $1c000 $8000:$4000\n.org $1c4ea\n  .byte $60\n","buffMedicalHerb3x")),buffMedicalHerb2x$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $1c000 $8000:$4000\n.org $1c4ea\n  .byte $40\n","buffMedicalHerb2x")),removeWildWarp$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n;;; NOTE: this actually recovers 36 bytes of prime real estate PRG.\n;;; Alternatively, restrict it to only go to leaf?\n.bank $3c000 $c000:$4000\n.org $3cbc7\n  rts\n",
"removeWildWarp")),nerfWildWarp$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n;;; Wild warp only goes to start.\n.bank $3c000 $c000:$4000\n.org $3cbec\n  .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00\n","nerfWildWarp")),preventSwordClobber$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000\n.bank $20000 $8000:$4000\n\n.org $20534\n  lda #$02\n.org $205a7\n  .byte $0c\n.org $205a9\n  .byte $04\n",
"preventSwordClobber")),upgradeBallsToBracelets$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000\n.bank $1c000 $8000:$2000\n\n.org $1c2de\n  lda $29\n  bcc +\n   inc $6430,x\n   bne ItemGet_Bracelet\n   lsr\n   lda $29\n   sbc #$00\n   sta $23\n+ sta $6430,x\n  rts\n.org $1c2f4\nItemGet_Bracelet:\n","upgradeBallsToBracelets")),neverDie$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000\n\n.org $3cb89\n  lda $03c0\n  sta $03c1\n  nop\n.org $3cbaf\n  bne label\n.org $3cbc0\nlabel:\n",
"neverDie")),fixVampire$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n;;; Fix the vampire to allow >60 HP\n.bank $3c000 $c000:$4000\n.bank $1e000 $a000:$2000\n.org $1e576\n  jsr ComputeVampireAnimationStart\n  nop\n.org $1ff97 ; This looks like it's just junk at the end, but we could\n            ; probably go to $1ff47 if we don't care about developer mode\nComputeVampireAnimationStart:\n   bcs +\n   asl\n   bcs +\n   adc #$10\n   bcc ++\n+  lda #$ff\n++ rts\n","fixVampire")),
itemLib$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n\n.org $3c0f8\n  jsr PostUpdateEquipment\n  jmp RestoreBanksAndReturn\n\n.org $3c446\nPostUpdateEquipment:\n  ;; Change 'lda' (ad) to 'jsr' (20) to enable these\n  lda ApplySpeedBoots\n  rts\nApplySpeedBoots:\n  lda #$06   ; normal speed\n  sta $0341  ; player speed\n  lda $0716  ; equipped passive item\n  cmp #$13   ; leather boots\n  bne +\n   inc $0341 ; speed up by 1\n+ rts\n.org $3c482  ; end of empty area\n\n.org $3c008\nUpdateEquipmentAndStatus:\n\n.org $3d91f\n  jsr PostInventoryMenu\n.org $3d971\n  jsr PostInventoryMenu\n\n;;; Call 3f9ba instead of 3c008 after the inventory menu\n.org $3f9ba\nPostInventoryMenu:\n  ;; Change 'lda' (ad) to 'jsr' (20) to enable these\n  lda AutoEquipBracelets\n  jmp UpdateEquipmentAndStatus\nAutoEquipBracelets:\n  lda $6428\n  bpl +\n   ;; deselect all\n-  lda #$80\n   sta $642b\n   lda #00\n   sta $0718\n   sta $0719\n   rts\n+ tay\n  cmp $6430,y ; check for crystalis\n   bne -\n  lda $643c,y ; which power-up do we have?\n   bmi -\n  ;; need to store $718 (0=nothing, 1..4=ball, 5..8=bracelet), $719 (0..2), $642b (0..3)\n  lsr\n  lda #$01\n  bcs +\n   lda #$02\n+ sta $719\n  and #$02\n  asl\n  sta $61\n  tya\n  sta $642b\n  sec\n  adc $61\n  sta $0718\n  rts\n\n.org $3f9f8\nFinishTriggerSquare:\n  beq +\n   lda #$08  ; game mode normal\n   sta $41\n+ jmp MainLoop_01_Game\n  \n.org $3fa10\n\n.org $3fdf0\n\n.org $3d354\nWaitForDialogToBeDismissed:\n.org $3d3ff\nMainLoopItemGet:\n.org $3e756\nRestoreBanksAndReturn:\n\n\n.org $3cab6\nMainLoop_01_Game:\n\n;; End of ActivateTriggerSquare restores game mode to normal,\n;; but if sword of thunder comes from trigger square, this will\n;; clobber the LOCATION_CHANGE mode.  Patch it to call out to\n;; FinishTriggerSquare to check for mode 02 and if it is, don't\n;; change it back.\n.org $3d54b ; change this to call FinishTriggerSquare\n  lda $41\n  cmp #$01  ; game mode: location change\n  jmp FinishTriggerSquare\n.org $3d552\n\n",
"itemLib")),quickChangeItems$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n\n;;.org $3fe75\n;;  jmp\n\n;; REPLACE ALL CALLS to ReadControllersWithDirections\n;; to instead use ReadControllersAndUpdateStart\n\n;;  - will thhis even work?\n\n.org $3fe80\nReadControllersWithDirections:\n\n\n\n.org $3cb62\n  jsr ReadControllersAndUpdateStart\n.org $3d8ea\n  jsr ReadControllersAndUpdateStart\n\n.org $3f9f8 ; whereever AutoEquipBracelet left off -- TODO - seat's taken\nReadControllersAndUpdateStart:\n  lda $43    ; Pressed buttons last frame\n  and #$30   ; Start and Select\n  sta $61\n  jsr ReadControllersWithDirections\n  ;; Cahnge $4b to report start/select only on button-up, and\n  ;; only if no quick select happened.  We store a mask #$30 in\n  ;; $42 on button-down for start and select, and zero it out\n  ;; on quick change, so that ANDing with it before setting\n  ;; $4b is sufficient to meet the requirement.\n  lda #$30\n  bit $4b\n  beq +\n   sta $42\n+ lda $43\n  eor #$ff\n  and $61\n  and $42\n  sta $61\n  lda $4b\n  and #$cf  ; ~$30\n  ora $61\n  sta $4b\n  rts\n",
"quickChangeItems")),leatherBootsForSpeed$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502('\n.bank $3c000 $c000:$4000 ; fixed bank\n\n.org $3c446\n  .byte $20\n\n.bank $28000 $8000:$2000\n.org $29105\n  .byte "Speed Boots",$00\n.org $2134a\n  .byte "Speed Boots",$ff\n\n',"leatherBootsForSpeed")),autoEquipBracelet$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.org $3f9ba\n  .byte $20\n","autoEquipBracelets")),
scaleDifficultyLib$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n\ndefine Difficulty $64a2\ndefine PlayerLevel $421\ndefine ObjectRecoil $340\ndefine ObjectHP $3c0\ndefine PlayerMaxHP $3c0\ndefine ObjectAtk $3e0\ndefine PlayerAtk $3e1\ndefine ObjectDef $400\ndefine ObjectActionScript $4a0\ndefine ObjectGold $500\ndefine ObjectElementalDefense $500\ndefine ObjectExp $520\n\ndefine SFX_MONSTER_HIT       $21\ndefine SFX_ATTACK_IMMUNE     $3a\n\n.org $34bde\nCoinAmounts:\n  .word 0,1,2,4,8,16,30,50,100,200,300,400,500,600,700,800\n\n.bank $1c000 $8000:$4000 ; item use code\n\n.org $3fe2e\nSubtractEnemyHP:\n  ;; NOTE: we could probably afford to move a few of these back if needed\n  lda ObjectElementalDefense,y\n  and #$0f\n  cmp #$0f\n  sec\n   beq +   ; don't damage anything that's invincible.\n  lda ObjectHP,y\n  sbc $63\n  sta ObjectHP,y\n+ lda $61\n  sbc #$00\n  rts\n.org $3fe45\n; NOTE - this space used by TeleportToMezameShrine\n.org $3fe78 ; end of unused space\n\n;;.org $3c010\n;;;; Adjusted inventory update - use level instead of sword\n;;   ldy $0719  ; max charge level\n;;   lda #$01\n;;-   asl\n;;    dey\n;;   bpl -\n;;   ldy $0716  ; equipped passive item\n;;-   clc\n;;    adc $0421  ; player level\n;;    dey\n;;    cpy #$0d   ; power ring - 1\n;;   beq -\n;;   sta $03e1  ; player attack\n;;   lda $0421  ; player level\n;;   cpy #$0f   ; iron necklace - 1\n;;.org $3c02d   ; NOTE - MUST BE EXACT!!!!\n\n\n.org $3c010\n;; Adjusted inventory update - use level instead of sword\n;; Also nerf power ring to only double the sword value, rather than the level.\n   ldy $0719  ; max charge level\n   lda #$01\n-   asl\n    dey\n   bpl -\n   ldy $0716  ; equipped passive item\n   cpy #$0e   ; power ring\n   bne +\n    asl\n+  clc\n   adc $0421  ; player level\n   sta $03e1  ; player attack\n   lda $0421  ; player level\n.org $3c02b   ; NOTE - MUST BE EXACT!!!!\n\n\n.bank $34000 $8000:$4000 ; item use code\n\n\n;; Adjusted stab damage for populating sword object ($02)\n.org $35c5f\n  lda #$02\n  sta $03e2\n  rts\n\n\n;; ADJUSTED DAMAGE CALCULATIONS\n;; $61 is extra HP bit(s)\n;; $62 is DEF\n;; $63 is damage\n.org $350fa\n    lda #$00\n    sta $61\n    sta $63 ; damage we're actually going to do\n    ;; Check elemental immunity\n    lda ObjectElementalDefense,y\n    and ObjectElementalDefense,x\n    and #$0f\n    php\n     lda ObjectDef,y\n     lsr     ; Just pull one extra bit for HP, could do one more if needed\n     rol $61\n     sta $62 ; Store actual shifted DEF in $62\n     lda PlayerAtk\n     adc ObjectAtk,x\n     sec\n     sbc $62 ; A <- atk - def\n     bcc +\n    plp\n    bne ++\n     sta $63 ; will do damage\n     pha ; to prevent pla from screwing up\n+   pla  ; to compensate for skipping the plp above\n++  stx $10\n    sty $11\n    lda $63\n    bne ++\n      sta ObjectActionScript,x\n      lda ObjectActionScript,y\n      bmi +\n       jsr KnockbackObject\n+     lda #SFX_ATTACK_IMMUNE\n      inc $63\n      bne +++\n++   jsr KnockbackObject\n     lda #SFX_MONSTER_HIT\n+++ jsr StartAudioTrack\n    jsr SubtractEnemyHP\n     bcc KillObject\n    lsr\n    lda $62\n    rol\n    sta ObjectDef,y\n    rts\n;;; NOTE: must finish before 35152\n.org $35152\nKillObject:\n.org $355c0\nKnockbackObject:\n.org $3c125\nStartAudioTrack:\n\n\n.bank $1a000 $a000:$2000 ; object data\n.org $3c409\n  jmp ComputeEnemyStats\n\n.org $1bb00  ; This should leave some space after compression\n\nDiffAtk:   ; PAtk*8\n  .byte $28,$2C,$30,$33,$37,$3B,$3F,$42,$46,$4A,$4E,$51,$55,$59,$5D,$60\n  .byte $64,$68,$6C,$6F,$73,$77,$7B,$7E,$82,$86,$8A,$8D,$91,$95,$99,$9C\n  .byte $A0,$A4,$A8,$AB,$AF,$B3,$B7,$BA,$BE,$C2,$C6,$C9,$CD,$D1,$D5,$D8\nDiffDef:   ; PDef * 4\n  .byte $0C,$0F,$12,$15,$18,$1B,$1E,$21,$24,$27,$2A,$2D,$30,$33,$36,$39\n  .byte $3C,$3F,$42,$45,$48,$4B,$4E,$51,$54,$57,$5A,$5D,$60,$63,$66,$69\n  .byte $6C,$6F,$72,$75,$78,$7B,$7E,$81,$84,$87,$8A,$8D,$90,$93,$96,$99\nDiffHP:    ; PHP (0..$26)\n  .byte $30,$36,$3B,$41,$46,$4C,$51,$57,$5C,$62,$67,$6D,$72,$78,$7D,$83\n  .byte $88,$8E,$93,$99,$9E,$A4,$A9,$AF,$B4,$BA,$BF,$C5,$CA,$D0,$D5,$DB\n  .byte $E0,$E6,$EB,$F1,$F6,$FC,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF\nDiffExp:   ; ExpBase * 4, encoded in standard EXP encoding\n  .byte $05,$06,$08,$0A,$0C,$0E,$12,$16,$1A,$20,$27,$30,$3A,$47,$56,$69\n  .byte $88,$89,$8B,$8E,$91,$95,$99,$9F,$A6,$AE,$B8,$C4,$D2,$E4,$FA,$FF\n  .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF\n\n;;; $12 and $13 are free RAM at this point\n\n.org $1bbd0  ; Note: this follows immediately from the tables.\nComputeEnemyStats:\n  lda ObjectRecoil,x\n  bmi +\n   jmp $3c2af ; exit point\n+ and #$7f\n  sta ObjectRecoil,x\n  ldy Difficulty\nRescaleDefAndHP:\n   ;; HP = max(PAtk + SWRD - DEF, 1) * HITS - 1\n   ;; DiffAtk = 8 * PAtk\n   ;; DEF = (8 * PAtk) * SDEF / 64   (alt, SDEF = 8 * DEF / PAtk)\n   lda ObjectHP,x\n    beq RescaleAtk\n   ;; Start by computing 8*DEF, but don't write it to DEF yet.\n+  lda ObjectDef,x\n   pha\n    and #$0f\n    sta $62 ; SDEF\n   pla\n   and #$f0\n   lsr\n   sta $12 ; 8*SWRD (Note: we could store this on the stack)\n   lda DiffAtk,y\n   sta $61 ; 8 * PAtk\n   jsr Multiply16Bit  ; $61$62 <- 64*DEF\n   ;; Multiply by 4 and read off the high byte.\n   lda $62\n   asl $61\n   rol\n   asl $61\n   rol\n   sta ObjectDef,x\n   ;; Now compute 8*PAtk + 8*SWRD - 8*DEF\n   asl\n   bcs +\n    asl\n    bcs +\n     asl\n     bcc ++\n+     lda #$ff        ; overflow, so just use $ff.\n++ sta $61            ; $61 <- 8*DEF\n   ;; Subtract from 8*PAtk.  This may go negative, in which case\n   ;; we store the #$ff in $62.  We start with 1 and unconditionally\n   ;; decrement at the end so that we can check its zeroness and sign\n   ;; without destroying the accumulator.\n   lda #$01\n   sta $62\n   lda DiffAtk,y\n   sec\n   sbc $61\n   bcs +\n    dec $62\n   ;; Now add 8*SWRD, again carrying into $62.\n+  clc\n   adc $12\n   bcc +\n    inc $62\n+  dec $62\n   ;; Check for overflow - if $62 == 1 then set A <- $ff\n   beq ++\n    bpl +\n     lda #$ff\n     bmi ++\n+   lda #$00\n++ sta $61\n   ;; Now check if A is zero, in which case we need to increment it.\n   ora #$0\n   bne +\n    inc $61\n   ;; Multiply by hits, then divide by 8\n   ;; $1bc3c:\n+  lda ObjectHP,x\n   sta $62\n   jsr Multiply16Bit\n   ;; Subtract 1\n   lda $61\n   sec\n   sbc #$01\n   bcs +\n    dec $62\n   ;; Divide by 8\n+  lsr $62\n   ror\n   lsr $62\n   ror\n   lsr $62\n   ror                ; A is low byte of HP, $62 is high byte.\n   ;; Check the high part of HP.  One bit will be rotated into the DEF byte.\n   lsr $62\n   ;; If there's anything left in $62 then we've overflowed.\n   beq +\n    lda #$ff\n    sec\n+  rol ObjectDef,x\n   sta ObjectHP,x\nRescaleAtk:   ; $1bc63\n  ;; DiffDef = 4 * PDef\n  ;; DiffHP = PHP\n  ;; ATK = (4 * PDef + PHP * SAtk / 32) / 4\n  lda ObjectAtk,x\n   beq RescaleGold\n  sta $61\n  lda DiffHP,y\n  sta $62\n  jsr Multiply16Bit\n  lda $61\n  lsr $62\n  ror\n  lsr $62\n  ror\n  lsr $62\n  ror\n  lsr $62\n  ror\n  lsr $62\n  ror\n  clc\n  adc DiffDef,y\n  sta $61\n  lda $62\n  adc #$00\n  lsr\n  ror $61\n  lsr\n  lda $61\n  ror\n  sta ObjectAtk,x\nRescaleGold:   ; $1bc98\n  ;; GOLD = min(15, (8 * DGLD + 3 * DIFF) / 16)\n  lda ObjectGold,x\n  and #$f0\n   beq RescaleExp\n  lsr\n  sta $61\n  lda Difficulty\n  asl\n  adc Difficulty\n  adc $61\n  bcc +\n   lda #$f0\n+ and #$f0\n  sta $61\n  lda ObjectGold,x\n  and #$0f\n  ora $61\n  sta ObjectGold,x\nRescaleExp:   ; $1bcbd\n  ;; EXP = min(2032, DiffExp * SEXP)\n  ;; NOTE: SEXP is compressed for values > $7f.\n  lda ObjectExp,x\n   beq RescaleDone\n  sta $61\n  lda DiffExp,y\n  php ; keep track of whether we were compressed or not.\n   and #$7f\n   sta $62\n   jsr Multiply16Bit  \n   lda $62\n  plp\n  bmi ++\n    ;; No scaling previously.  $61$62 is 128*EXP.\n    ;; If EXP >= 128 then 128*EXP >= #$4000\n    cmp #$40\n    bcc +\n     ;; $62 >= #$40 - need scaling now.\n     ;; EXP/16 = ($80*EXP)/$800\n     lsr\n     lsr\n     lsr\n     ora #$80\n     bne +++ ; uncond\n    ;; No rescaling needed, rotate left one.\n+   asl $61\n    rol\n    ;; Now A is EXP, A<128 guaranteed.  Make sure it's not zero.\n    bne +++\n    lda #$01\n    bne +++ ; uncond\n   ;; Was previously scaled - just re-add and carry.\n++ asl $61\n   rol\n   bcs +\n    adc #$80\n    bcc +++\n+    lda #$ff\n+++ sta ObjectExp,x\nRescaleDone:\n   jmp $3c2af\n\nMultiply16Bit:\n  ;; Multiplies inputs in $61 and $62, then shifts\n  ;; right A times.\n  ;; Result goes $61$62 (lo hi), preserves XY\n  ;; Sets carry if result doesn't fit in 8 bits\n  txa\n  pha\n  lda #$00\n  ldx #$08\n  clc\n-  bcc +\n    clc\n    adc $62\n+  ror\n   ror $61\n   dex\n  bpl -\n  sta $62\n  cmp #$01 ; set carry if A != 0\n  pla\n  tax\n  rts\n.org $1bff0\n",
"scaleDifficultyLib")),nerfArmors$$module$js$patch=buildRomPatch$$module$js$6502(assemble$$module$js$6502("\n.bank $3c000 $c000:$4000\n.bank $1a000 $a000:$2000\n.org $1bb30\nDiffDef:   ; PDef' * 4\n  .byte $08,$0A,$0C,$0E,$10,$12,$14,$16,$18,$1A,$1C,$1E,$20,$22,$24,$26\n  .byte $28,$2A,$2C,$2E,$30,$32,$34,$36,$38,$3A,$3C,$3E,$40,$42,$44,$46\n  .byte $48,$4A,$4C,$4E,$50,$52,$54,$56,$58,$5A,$5C,$5E,$60,$62,$64,$66\n\n.bank $34000 $8000:$2000\n.org $34bc0\nArmorDefense:\n  .byte $00,$01,$03,$05,$07,$09,$0c,$0a,$10\nShieldDefense:\n  .byte $00,$01,$03,$04,$06,$09,$08,$0c,$10\n\n;; Max out armor and shield def at 2*level\n.org $3c02b\n  sta $61\n  asl $61\n  ldy $0713\n  lda ArmorDefense,y\n  cmp $61\n  bcc +\n   lda $61\n+ ldy $0716 ; equipped passive item\n  cpy #$10  ; iron necklace\n  bne +\n   asl\n+ clc\n  adc $0421 ; armor defense\n  sta $0401\n.org $3c04a\n  jsr PatchUpdateShieldDefense\n  nop\n  nop\n.org $3c04f ; NOTE: must be exact!\n  ; STA PLAYER_DEF\n\n.org $3ff62\nPatchUpdateShieldDefense:\n  ldy $0714\n  lda ShieldDefense,y\n  cmp $61\n  bcc +\n   lda $61\n+ ldy $0716 ; equipped passive item\n  cpy #$14  ; shield ring\n  bne +\n   asl\n+ clc\n  adc $0421 ; shield defense\n  sta $0400\n  rts\n.org $3ff80\n\n;; We could try to be cleverer about not reloading the equipped item.\n;; If we just ASL the whole defense then we can do them simultaneously,\n;; and then go into power ring.\n\n",
"nerfArmors")),rescaleMonsters$$module$js$patch=(b,a)=>{for(var c of SCALED_MONSTERS$$module$js$patch.keys())for(const b in a.objects){if(SCALED_MONSTERS$$module$js$patch.has(b))return;a.objects[c].objectDataBase==a.objects[b].objectDataBase&&(SCALED_MONSTERS$$module$js$patch[b]=SCALED_MONSTERS$$module$js$patch[c])}for(const d of SCALED_MONSTERS$$module$js$patch){const [e,{sdef:f,swrd:g,hits:k,satk:h,dgld:m,sexp:r}]=d;b=a.objects[e].objectData;c=[87,94,104,125,136,151,155,158].includes(e)?1:0;b[2]|=
128;b[6]=k;b[7]=h;b[8]=f|g<<4;b[9]=b[9]&224|c;b[16]=b[16]&15|m<<4;b[17]=r}a.objects[125].objectData[16]|=8;a.writeObjectData()},shuffleMonsters$$module$js$patch=(b,a,c,d)=>{b=new MonsterPool$$module$js$patch({});for(const c of a.locations)c&&b.populate(c);b.shuffle(c);a.writeNpcData()},identifyKeyItemsForDifficultyBuffs$$module$js$patch=(b)=>{for(const a of b.itemGets){const c=ITEMS$$module$js$patch.get(a.item);if(c&&c.key){if(!a.table)throw Error(`No table for ${c.name}`);if(255==a.table[a.table.length-
1])a.table[a.table.length-1]=254;else throw Error(`Expected FF at end of ItemGet table: ${a.id.toString(16)}: ${Array.from(a.table).map((a)=>a.toString(16).padStart(2,0)).join(" ")}`);a.write(b)}}},SCALED_MONSTERS$$module$js$patch=new Map([[63,"p","Sorceror shot",,,,19,,,],[75,"m","wraith??",2,,2,22,4,61],[79,"m","wraith",1,,2,20,4,61],[80,"m","Blue Slime",,,1,16,2,32],[81,"m","Weretiger",,,1,21,4,40],[82,"m","Green Jelly",4,,3,16,4,36],[83,"m","Red Slime",6,,4,16,4,48],[84,"m","Rock Golem",6,,11,
24,6,85],[85,"m","Blue Bat",,,,4,,32],[86,"m","Green Wyvern",4,,4,24,6,52],[87,"b","Vampire",3,,13,18,,,],[88,"m","Orc",3,,4,21,4,57],[89,"m","Red Flying Swamp Insect",3,,1,21,4,57],[90,"m","Blue Mushroom",2,,1,21,4,44],[91,"m","Swamp Tomato",3,,2,35,4,52],[92,"m","Flying Meadow Insect",3,,3,23,4,81],[93,"m","Swamp Plant",,,,,,36],[94,"b","Insect",,1,8,6,,,],[95,"m","Large Blue Slime",5,,3,20,4,52],[96,"m","Ice Zombie",5,,7,14,4,57],[97,"m","Green Living Rock",,,1,9,4,28],[98,"m","Green Spider",4,
,4,22,4,44],[99,"m","Red/Purple Wyvern",3,,4,30,4,65],[100,"m","Draygonia Soldier",6,,11,36,4,89],[101,"m","Ice Entity",3,,2,24,4,52],[102,"m","Red Living Rock",,,1,13,4,40],[103,"m","Ice Golem",7,2,11,28,4,81],[104,"b","Kelbesque",4,6,12,29,,,],[105,"m","Giant Red Slime",7,,40,90,4,102],[106,"m","Troll",2,,3,24,4,65],[107,"m","Red Jelly",2,,2,14,4,44],[108,"m","Medusa",3,,4,36,8,77],[109,"m","Red Crab",2,,1,21,4,44],[110,"m","Medusa Head",,,1,29,4,36],[111,"m","Evil Bird",,,2,30,6,65],[113,"m","Red/Purple Mushroom",
3,,5,19,6,69],[114,"m","Violet Earth Entity",3,,3,18,6,61],[115,"m","Mimic",,,3,26,15,73],[116,"m","Red Spider",3,,4,22,6,48],[117,"m","Fishman",4,,6,19,5,61],[118,"m","Jellyfish",,,3,14,3,48],[119,"m","Kraken",5,,11,25,7,73],[120,"m","Dark Green Wyvern",4,,5,21,5,61],[121,"m","Sand Monster",5,,8,6,4,57],[123,"m","Wraith Shadow 1",,,,9,7,44],[124,"m","Killer Moth",,,2,35,,77],[125,"b","Sabera",3,7,13,24,,,],[128,"m","Draygonia Archer",1,,3,20,6,61],[129,"m","Evil Bomber Bird",,,1,19,4,65],[130,"m",
"Lavaman/blob",3,,3,24,6,85],[132,"m","Lizardman (w/ flail(",2,,3,30,6,81],[133,"m","Giant Eye",3,,5,33,4,81],[134,"m","Salamander",2,,4,29,8,77],[135,"m","Sorceror",2,,5,31,6,65],[136,"b","Mado",4,8,10,30,,,],[137,"m","Draygonia Knight",2,,3,24,4,77],[138,"m","Devil",,,1,18,4,52],[139,"b","Kelbesque 2",4,6,11,27,,,],[140,"m","Wraith Shadow 2",,,,17,4,48],[144,"b","Sabera 2",5,7,21,27,,,],[145,"m","Tarantula",3,,3,21,6,73],[146,"m","Skeleton",,,4,30,6,69],[147,"b","Mado 2",4,8,11,25,,,],[148,"m",
"Purple Giant Eye",4,,10,23,6,102],[149,"m","Black Knight (w/ flail)",3,,7,26,6,89],[150,"m","Scorpion",3,,5,29,2,73],[151,"b","Karmine",4,,14,26,,,],[152,"m","Sandman/blob",3,,5,36,6,98],[153,"m","Mummy",5,,19,36,6,110],[154,"m","Tomb Guardian",7,,60,37,6,106],[155,"b","Draygon",5,6,16,41,,,],[158,"b","Draygon 2",7,6,28,40,,,],[160,"m","Ground Sentry (1)",4,,12,26,,],[161,"m","Tower Defense Mech (2)",5,,16,36,,],[162,"m","Tower Sentinel",,,2,,,],[163,"m","Air Sentry",3,,4,26,,],[164,"b","Dyna",6,
5,16,,,,],[165,"b","Vampire 2",2,,6,27,,,],[180,"b","dyna pod",15,,255,26,,,],[184,"p","dyna counter",,,,26,,,],[185,"p","dyna laser",,,,26,,,],[186,"p","dyna bubble",,,,36,,,],[188,"m","vamp2 bat",,,,16,,40],[191,"p","draygon2 fireball",,,,26,,,],[193,"m","vamp1 bat",,,,16,,40],[195,"p","giant insect spit",,,,35,,,],[196,"m","summoned insect",4,,2,42,,98],[197,"p","kelby1 rock",,,,22,,,],[198,"p","sabera1 balls",,,,19,,,],[199,"p","kelby2 fireballs",,,,11,,,],[200,"p","sabera2 fire",,,1,6,,,],[201,
"p","sabera2 balls",,,,17,,,],[202,"p","karmine balls",,,,25,,,],[203,"p","sun/moon statue fireballs",,,,39,,,],[204,"p","draygon1 lightning",,,,37,,,],[205,"p","draygon2 laser",,,,36,,,],[206,"p","draygon2 breath",,,,36,,,],[224,"p","evil bomber bird bomb",,,,2,,,],[226,"p","summoned insect bomb",,,,47,,,],[227,"p","paralysis beam",,,,23,,,],[228,"p","stone gaze",,,,33,,,],[229,"p","rock golem rock",,,,24,,,],[230,"p","curse beam",,,,10,,,],[231,"p","mp drain web",,,,11,,,],[232,"p","fishman trident",
,,,15,,,],[233,"p","orc axe",,,,24,,,],[234,"p","Swamp Pollen",,,,37,,,],[235,"p","paralysis powder",,,,17,,,],[236,"p","draygonia solider sword",,,,28,,,],[237,"p","ice golem rock",,,,20,,,],[238,"p","troll axe",,,,27,,,],[239,"p","kraken ink",,,,24,,,],[240,"p","draygonia archer arrow",,,,12,,,],[241,"p","??? unused",,,,16,,,],[242,"p","draygonia knight sword",,,,9,,,],[243,"p","moth residue",,,,19,,,],[244,"p","ground sentry laser",,,,13,,,],[245,"p","tower defense mech laser",,,,23,,,],[246,"p",
"tower sentinel laser",,,,8,,,],[247,"p","skeleton shot",,,,11,,,],[248,"p","lavaman shot",,,,14,,,],[249,"p","black knight flail",,,,18,,,],[250,"p","lizardman flail",,,,21,,,],[252,"p","mado shuriken",,,,36,,,],[253,"p","guardian statue missile",,,,23,,,],[254,"p","demon wall fire",,,,23,,,]].map((b)=>{var [a,c,d,e=0,f=0,g=0,k=0,h=0,m=0]=b;return[a,{id:a,type:c,name:d,sdef:e,swrd:f,hits:g,satk:k,dgld:h,sexp:m}]}));
class MonsterPool$$module$js$patch{constructor(b){this.report=b;this.monsters=[];this.used=[];this.locations=[]}populate(b){var a=MONSTER_ADJUSTMENTS$$module$js$patch[b.id]||{},c=Object.assign({},a);a=a.skip;c=(delete c.maxFlyers,delete c.nonFlyers,delete c.skip,delete c.fixedSlots,c);for(var d in c)throw Error(`Unexpected property '${d}' in MONSTER_ADJUSTMENTS[${b.id}]`);if(!0!==a&&b.spritePatterns&&b.spritePalettes){d=[];c=[];var e=12;for(const a of b.objects||[]){++e;if(a[2]&7)continue;const h=
a[3]+80;if(h in UNTOUCHED_MONSTERS$$module$js$patch||!SCALED_MONSTERS$$module$js$patch.has(h)||"m"!=SCALED_MONSTERS$$module$js$patch.get(h).type)continue;var f=b.rom.objects[h];if(!f)continue;const k=a[2]&128?1:0,r=b.spritePatterns[k];var g=f.palettes(!0);f=g.includes(2)?b.spritePalettes[0]:null;g=g.includes(3)?b.spritePalettes[1]:null;d.push({id:h,pat:r,pal2:f,pal3:g,patBank:k});(this.report[`start-${h.toString(16)}`]=this.report[`start-${h.toString(16)}`]||[]).push("$"+b.id.toString(16));c.push(e)}d.length&&
(a||this.locations.push({location:b,slots:c}),this.monsters.push(...d))}}shuffle(b){this.report["pre-shuffle locations"]=this.locations.map((a)=>a.location.id);this.report["pre-shuffle monsters"]=this.monsters.map((a)=>a.id);b.shuffle(this.locations);b.shuffle(this.monsters);this.report["post-shuffle locations"]=this.locations.map((a)=>a.location.id);for(this.report["post-shuffle monsters"]=this.monsters.map((a)=>a.id);this.locations.length;){const {location:d,slots:e}=this.locations.pop();let f=
this.report["$"+d.id.toString(16).padStart(2,0)]=[];const {maxFlyers:g,nonFlyers:k={},fixedSlots:h={}}=MONSTER_ADJUSTMENTS$$module$js$patch[d.id]||{};let m=h.pat0||null,r=h.pat1||null,n=h.pal2||null,t=h.pal3||null,l=g,p=!1;for(const b of d.objects||[])if(2==(b[2]&7)&&(p=!0),!(b[2]&7)){var a=b[3]+80;126==a||127==a||159==a?r=98:143==a&&(m=97)}if(21==d.id||71==d.id)p=!1;f.push(`Initial pass: ${[p,m,r,n,t].join(", ")}`);a=(a)=>{var b=FLYERS$$module$js$patch.has(a.id),c=MOTHS_AND_BATS$$module$js$patch.has(a.id);
if(b){if(!l)return!1;--l}if(null!=n&&null!=a.pal2&&n!=a.pal2||null!=t&&null!=a.pal3&&t!=a.pal3)return!1;var g=!p||TREASURE_CHEST_BANKS$$module$js$patch.has(a.pat);let h;if(d.rom.objects[a.id].child||RETAIN_SLOTS$$module$js$patch.has(a.id)){const b=(h=a.patSlot?128:0)?r:m;if(null!=b&&b!=a.pat)return!1;if(h)r=a.pat;else if(g)m=a.pat;else return!1;f.push(`  Adding ${a.id.toString(16)}: pat(${h}) <-  ${a.pat.toString(16)}`)}else if(null==m&&g||m==a.pat)m=a.pat,h=0,f.push(`  Adding ${a.id.toString(16)}: pat0 <-  ${a.pat.toString(16)}`);
else if(null==r||r==a.pat)r=a.pat,h=128,f.push(`  Adding ${a.id.toString(16)}: pat1 <-  ${a.pat.toString(16)}`);else return!1;null!=a.pal2&&(n=a.pal2);null!=a.pal3&&(t=a.pal3);f.push(`    ${Object.keys(a).map((b)=>`${b}: ${a[b]}`).join(", ")}`);f.push(`    pal: ${(a.pal2||0).toString(16)} ${(a.pal3||0).toString(16)}`);g=0;if(b||c)for(b=0;b<e.length;b++){if(e[b]in k){g=b;break}}else for(b=0;b<e.length;b++)if(!(e[b]in k)){g=b;break}(this.report[`mon-${a.id.toString(16)}`]=this.report[`mon-${a.id.toString(16)}`]||
[]).push("$"+d.id.toString(16));b=e[g];c=d.objects[b-13];b in k&&(c[0]+=k[b][0],c[1]+=k[b][1]);c[2]=c[2]&127|h;c[3]=a.id-80;f.push(`    slot ${b.toString(16)}: objData=${c}`);e.splice(g,1);return!0};if(l)for(var c=0;c<Math.min(40,this.monsters.length);c++)FLYERS$$module$js$patch.has(this.monsters[c].id)&&a(this.monsters[c])&&this.monsters.splice(c,1),b.shuffle(this.monsters);for(c=0;c<this.monsters.length&&e.length;c++)if(a(this.monsters[c])){const [a]=this.monsters.splice(c,1);FLYERS$$module$js$patch.has(a.id)||
this.used.push(a);c--}for(c=0;c<this.used.length&&e.length;c++)a(this.used[c])&&(this.used.push(...this.used.splice(c,1)),c--);null!=m&&(d.spritePatterns[0]=m);null!=r&&(d.spritePatterns[1]=r);null!=n&&(d.spritePalettes[0]=n);null!=t&&(d.spritePalettes[1]=t);if(e.length){f.push(`Failed to fill location ${d.id.toString(16)}: ${e.length} remaining`);for(const b of e)a=d.objects[b-13],a[0]=a[1]=0}}}}
const FLYERS$$module$js$patch=new Set([89,92,110,111,129,138,163,196]),MOTHS_AND_BATS$$module$js$patch=new Set([85,93,124,188,193]),SWIMMERS$$module$js$patch=new Set([117,118]),STATIONARY$$module$js$patch=new Set([119,135]),TREASURE_CHEST_BANKS$$module$js$patch=new Set([94,95,96,97,100,101,102,103,104,105,106,108,109,110,111,112,116,117,118,119]),MONSTER_ADJUSTMENTS$$module$js$patch={[3]:{maxFlyers:2,fixedSlots:{pat1:96}},[7]:{nonFlyers:{[15]:[0,-3],[16]:[-10,0],[17]:[0,4]}},[20]:{maxFlyers:2},[21]:{maxFlyers:2},
[26]:{maxFlyers:2,fixedSlots:{pat1:79,pal3:35},nonFlyers:{[16]:[4,0],[17]:[5,0],[18]:[4,0],[19]:[5,0],[20]:[4,0],[21]:[4,0]}},[27]:{skip:!0},[32]:{maxFlyers:1},[33]:{maxFlyers:1,fixedSlots:{pat1:80}},[39]:{nonFlyers:{[13]:[0,16]}},[40]:{maxFlyers:1},[41]:{maxFlyers:1},[43]:{nonFlyers:{[20]:[32,-8]}},[64]:{maxFlyers:2,nonFlyers:{[19]:[12,-16]}},[65]:{maxFlyers:2,nonFlyers:{[21]:[0,-6]}},[66]:{maxFlyers:2,nonFlyers:{[13]:[0,8],[14]:[-8,8]}},[71]:{maxFlyers:1,nonFlyers:{[13]:[-8,-8]}},[74]:{maxFlyers:1,
nonFlyers:{[14]:[4,0],[15]:[0,-3],[16]:[0,4]}},[76]:{},[77]:{maxFlyers:1},[78]:{maxFlyers:1},[79]:{},[87]:{fixedSlots:{pat1:77}},[89]:{skip:!0},[90]:{skip:!0},[91]:{skip:!0},[96]:{skip:!0,maxFlyers:2,fixedSlots:{pat1:82,pal3:8}},[100]:{skip:!0,fixedSlots:{pat1:82,pal3:8}},[104]:{skip:!0,fixedSlots:{pat1:82,pal3:8}},[105]:{maxFlyers:1,nonFlyers:{[23]:[4,6]}},[106]:{maxFlyers:1,nonFlyers:{[21]:[0,24]}},[108]:{maxFlyers:1,nonFlyers:{[23]:[0,24]}},[109]:{maxFlyers:1,nonFlyers:{[17]:[16,0],[27]:[0,0],
[28]:[6,0]}},[120]:{maxFlyers:1,nonFlyers:{[22]:[-8,-8]}},[124]:{maxFlyers:1,nonFlyers:{[21]:[-39,84]}},[132]:{nonFlyers:{[18]:[0,-4],[19]:[0,4],[20]:[-6,0],[21]:[14,12]}},[136]:{maxFlyers:1},[137]:{maxFlyers:1},[138]:{maxFlyers:1,nonFlyers:{[13]:[7,0],[14]:[0,0],[15]:[7,3],[16]:[0,6],[17]:[11,-16]}},[143]:{skip:!0},[144]:{maxFlyers:2,nonFlyers:{[20]:[-11,-3],[21]:[0,16]}},[145]:{maxFlyers:2,nonFlyers:{[24]:[0,14],[25]:[4,-16]}},[152]:{maxFlyers:2,nonFlyers:{[20]:[-6,6],[21]:[0,-16]}},[158]:{maxFlyers:2},
[162]:{maxFlyers:1,nonFlyers:{[18]:[0,11],[19]:[6,0]}},[165]:{nonFlyers:{[23]:[6,6],[24]:[-6,0],[25]:[-1,-7]}},[166]:{skip:!0},[168]:{skip:!0},[169]:{maxFlyers:2,nonFlyers:{[22]:[26,-16],[23]:[0,32]}},[171]:{maxFlyers:2,nonFlyers:{[13]:[1,0],[14]:[2,-2]}},[173]:{maxFlyers:2,nonFlyers:{[24]:[0,8],[25]:[0,-8]}},[175]:{nonFlyers:{[13]:[0,0],[14]:[0,0],[19]:[59,-38]}},[180]:{maxFlyers:2,nonFlyers:{[17]:[6,0],[18]:[0,6]}},[215]:{skip:!0}},ITEMS$$module$js$patch=new Map([[0,"Sword of Wind",!0],[1,"Sword of Fire",
!0],[2,"Sword of Water",!0],[3,"Sword of Thunder",!0],[4,"Crystalis",!0],[5,"Ball of Wind",!0],[6,"Tornado Bracelet",!0],[7,"Ball of Fire",!0],[8,"Flame Bracelet",!0],[9,"Ball of Water",!0],[10,"Blizzard Bracelet",!0],[11,"Ball of Thunder",!0],[12,"Storm Bracelet",!0],[13,"Carapace Shield"],[14,"Bronze Shield"],[15,"Platinum Shield"],[16,"Mirrored Shield"],[17,"Ceramic Shield"],[18,"Sacred Shield"],[19,"Battle Shield"],[20,"Psycho Shield",!0],[21,"Tanned Hide"],[22,"Leather Armor"],[23,"Bronze Armor"],
[24,"Platinum Armor"],[25,"Soldier Suit"],[26,"Ceramic Suit"],[27,"Battle Armor",!0],[28,"Psycho Armor",!0],[29,"Medical Herb"],[30,"Antidote"],[31,"Lysis Plant"],[32,"Fruit of Lime"],[33,"Fruit of Power"],[34,"Magic Ring"],[35,"Fruit of Repun"],[36,"Warp Boots"],[37,"Statue of Onyx",!0],[38,"Opel Statue",!0],[39,"Insect Flute",!0],[40,"Flute of Lime",!0],[41,"Gas Mask",!0],[42,"Power Ring",!0],[43,"Warrior Ring",!0],[44,"Iron Necklace",!0],[45,"Deo's Pendant",!0],[46,"Rabbit Boots",!0],[47,"Leather Boots",
!0],[48,"Shield Ring",!0],[49,"Alarm Flute"],[50,"Windmill Key",!0],[51,"Key to Prison",!0],[52,"Key to Styx",!0],[53,"Fog Lamp",!0],[54,"Shell Flute",!0],[55,"Eye Glasses",!0],[56,"Broken Statue",!0],[57,"Glowing Lamp",!0],[58,"Statue of Gold",!0],[59,"Love Pendant",!0],[60,"Kirisa Plant",!0],[61,"Ivory Statue",!0],[62,"Bow of Moon",!0],[63,"Bow of Sun",!0],[64,"Bow of Truth",!0],[65,"Refresh",!0],[66,"Paralysis",!0],[67,"Telepathy",!0],[68,"Teleport",!0],[69,"Recover",!0],[70,"Barrier",!0],[71,
"Change",!0],[72,"Flight",!0]].map((b)=>{var [a,c,d]=b;return[a,{id:a,name:c,key:d}]})),RETAIN_SLOTS$$module$js$patch=new Set([80,83]),UNTOUCHED_MONSTERS$$module$js$patch={[126]:!0,[127]:!0,[131]:!0,[141]:!0,[142]:!0,[143]:!0,[159]:!0,[166]:!0};var module$js$patch={};module$js$patch.default=$jscompDefaultExport$$module$js$patch;module$js$patch.parseSeed=parseSeed$$module$js$patch;module$js$patch.shuffle=shuffle$$module$js$patch;module$js$patch.stampVersionSeedAndHash=stampVersionSeedAndHash$$module$js$patch;
module$js$patch.watchForFlag0=watchForFlag0$$module$js$patch;module$js$patch.preventSoftlockFromZeroHpOrMp=preventSoftlockFromZeroHpOrMp$$module$js$patch;module$js$patch.openSwanFromEitherSide=openSwanFromEitherSide$$module$js$patch;module$js$patch.connectLeafToLimeTree=connectLeafToLimeTree$$module$js$patch;module$js$patch.rearrangeTriggersAndNpcs=rearrangeTriggersAndNpcs$$module$js$patch;module$js$patch.fixOpelStatue=fixOpelStatue$$module$js$patch;module$js$patch.requireHealedDolphinToRide=requireHealedDolphinToRide$$module$js$patch;
module$js$patch.buffDeosPendant=buffDeosPendant$$module$js$patch;module$js$patch.allowTeleportOutOfTower=allowTeleportOutOfTower$$module$js$patch;module$js$patch.preventNpcDespawns=preventNpcDespawns$$module$js$patch;module$js$patch.barrierRequiresCalmSea=barrierRequiresCalmSea$$module$js$patch;module$js$patch.noTeleportOnThunderSword=noTeleportOnThunderSword$$module$js$patch;module$js$patch.asinaTeleportsToMezameShrine=asinaTeleportsToMezameShrine$$module$js$patch;
module$js$patch.saharaBunniesRequireTelepathy=saharaBunniesRequireTelepathy$$module$js$patch;module$js$patch.fixShaking=fixShaking$$module$js$patch;module$js$patch.displayDifficulty=displayDifficulty$$module$js$patch;module$js$patch.buffMedicalHerb3x=buffMedicalHerb3x$$module$js$patch;module$js$patch.buffMedicalHerb2x=buffMedicalHerb2x$$module$js$patch;module$js$patch.removeWildWarp=removeWildWarp$$module$js$patch;module$js$patch.nerfWildWarp=nerfWildWarp$$module$js$patch;
module$js$patch.preventSwordClobber=preventSwordClobber$$module$js$patch;module$js$patch.upgradeBallsToBracelets=upgradeBallsToBracelets$$module$js$patch;module$js$patch.neverDie=neverDie$$module$js$patch;module$js$patch.fixVampire=fixVampire$$module$js$patch;module$js$patch.itemLib=itemLib$$module$js$patch;module$js$patch.quickChangeItems=quickChangeItems$$module$js$patch;module$js$patch.leatherBootsForSpeed=leatherBootsForSpeed$$module$js$patch;module$js$patch.autoEquipBracelet=autoEquipBracelet$$module$js$patch;
module$js$patch.scaleDifficultyLib=scaleDifficultyLib$$module$js$patch;const BOXES$$module$js$tracker="\nsword-of-wind $00 WIND\nsword-of-fire $01 FIRE\nsword-of-water $02 WATER\nsword-of-thunder $03 THUN\nwindmill-key $32 MILL\nstatue-of-onyx $25 ONYX\ninsect-flute $27 INSECT\nkey-to-prison $33 PRISON\nflute-of-lime $28 LIME\n# flute-of-lime $5b LIME\n\nball-of-wind $05 \nball-of-fire $07\nball-of-water $09\nball-of-thunder $0b\nkirisa-plant $3c KIRISA\nfog-lamp $35 FOG\nshell-flute $36 SHELL\nbroken-statue $38 BRKN\neye-glasses $37 EYE\nglowing-lamp $39 GLOW\n\ntornado-bracelet $06\nflame-bracelet $08\nblizzard-bracelet $0a\nstorm-bracelet $0c\nlove-pendant $3b LOVE\nkey-to-styx $34 STXY\nopel-statue $26 OPEL\nfruit-of-repun $23 REPUN\nsacred-shield $12 SCRD\nivory-statue $3d IVORY\n\nrabbit-boots $2e RABBIT\ngas-mask $29 GAS\nshield-ring $30 SHIELD\niron-necklace $2c IRON\nleather-boots $2f LTHR\npower-ring $2a POWER\nwarrior-ring $2b WARR\ndeos-pendant $2d DEO\nbow-of-moon $3e MOON\nbow-of-sun $3f SUN\n\nrefresh $41\nparalysis $42\ntelepathy $43\nteleport $44\nrecover $45\nbarrier $46\nchange $47\nflight $48\npsycho-armor $1c PSYCH\nbow-of-truth $40 TRUTH\n",
SLOTS$$module$js$tracker=[[0,121,192],[1,274,176],[2,335,123],[3,77,10],[5,89,107],[6,115,224],[7,282,187],[8,47,182],[9,251,232],[10,206,249],[11,83,63],[12,23,9],[18,49,48],[20,77,3],[112,71,3,137,20],[112,83,3,137,21],[27,168,97],[28,199,110],[29,82,95],[30,82,101],[31,346,147],[112,346,153,74,21],[112,346,159,74,22],[32,126,52],[33,227,97],[34,256,73],[35,58,115],[36,82,113],[37,189,180],[38,18,172],[39,267,185],[40,275,147],[41,147,206],[42,172,104],[43,203,5],[44,249,69],[45,191,110],[46,89,
99],[47,164,104],[48,319,123],[112,320,130,84,19],[50,105,94],[51,64,198],[52,83,71],[53,345,140],[54,301,119],[55,233,118],[56,234,88],[57,295,92],[59,274,117],[60,338,226],[61,23,17],[62,206,241],[63,101,6],[64,207,110],[65,92,117],[66,279,126],[67,202,138],[68,124,202],[69,304,128],[70,248,35],[71,277,3],[72,15,25],[80,82,107],[82,134,219],[83,59,219],[84,52,55],[85,241,97],[86,123,23],[112,115,3,133,23],[87,70,9],[112,84,9,137,19],[88,32,38],[112,32,16,181,13],[112,40,16,181,14],[112,40,38,181,
15],[90,162,97],[91,327,123],[92,256,79],[93,36,139],[94,14,229],[95,345,225],[96,18,94],[97,234,96],[98,18,118],[99,36,54],[100,174,97],[101,139,40],[102,66,160],[105,131,201],[106,76,226],[107,18,100],[108,193,103],[112,199,103,163,13],[109,205,103],[112,256,67,107,14],[110,24,38],[111,44,97]];
class Graph$$module$js$tracker{constructor(b){this.depgraph=b.integrate({tracker:!0});this.slotElts=new Map;this.itemElts=new Map;this.always=new Set;this.checked=new Set;this.grid=document.getElementsByClassName("grid")[0];this.map=document.getElementsByClassName("map")[0];this.nodeFromSlot=new Map;this.mimicSlots=new Map;this.nodes=new Map;this.route=[];for(const a of b.nodes)if(this.nodes.set(a.uid,a.name),this.route[a.uid]=4,a instanceof Slot$$module$js$nodes){if(a.isMimic()||this.nodeFromSlot.set(a.slotIndex,
a),"Alarm Flute"==a.name||"Medical Herb"==a.name)this.always.add(a.item.uid),this.route[a.item.uid]=0}else if(a instanceof Location$$module$js$nodes)for(const b of a.chests)b.isMimic()&&this.mimicSlots.set(a.id<<8|b.spawnSlot,b);else a instanceof TrackerNode$$module$js$nodes&&null!=this.depgraph.uidToItem[a.uid]&&(b=4,a.type===TrackerNode$$module$js$nodes.OFF_ROUTE&&(b=1),a.type===TrackerNode$$module$js$nodes.GLITCH&&(b=2),a.type===TrackerNode$$module$js$nodes.HARD&&(b=3),this.route[a.uid]=b);const a=
(a,b)=>{b=b||!!a.button;let c=a.target;for(var e=b?"slot":"item";c&&!c.dataset[e];)c=c.parentElement;c&&(e=Number(c.dataset[e]),b&&a.shiftKey?d(e):(b?this.checked.has(e)?this.checked.delete(e):this.checked.add(e):this.route[e]=4-this.route[e],b||c.classList.toggle("got",!this.route[e]),this.update(),a.preventDefault()))},c=document.getElementById("reqs");this.grid.addEventListener("click",(b)=>a(b,!1));this.grid.addEventListener("contextmenu",a);this.map.addEventListener("click",(b)=>a(b,!0));const d=
(a)=>{if(Number(c.dataset.showing)!=a){for(c.dataset.showing="";c.children.length;)c.children[0].remove();c.dataset.showing=a;var b=document.createElement("span");b.textContent=`${this.nodes.get(a)} requires`;c.appendChild(b);b=document.createElement("ul");c.appendChild(b);var d=[];for(const b of this.depgraph.routes[this.depgraph.uidToLocation[a]]){a=0;const c=document.createElement("li"),e=[];for(const c of Bits$$module$js$bits.bits(b)){const b=this.depgraph.itemToUid[c];a=Math.max(a,this.route[b]);
e.push(this.nodes.get(b))}c.textContent=e.join(" AND ");c.classList.add(["available","off-route","glitched","hard","blocked"][a]);d.push([c,a])}d.sort((a,b)=>a[1]-b[1]||a[0].textContent.length-b[0].textContent.length);for(const a of d)b.appendChild(a[0])}}}addSlot(b,a,c,d,e){const f=112===b;b=f?this.mimicSlots.get(d<<8|e):this.nodeFromSlot.get(b);if(!b)debugger;d=document.createElement("div");if("key"==b.slotType||"magic"==b.slotType||"bonus"==b.slotType)d.classList.add("key"),a--,c--;a--;c--;d.dataset.slot=
b.uid;d.style.left=a+"px";d.style.top=c+"px";a=document.createElement("div");d.appendChild(a);a.textContent=f?"Mimic":b.name.replace(" ","\u00a0");this.slotElts.set(b.uid,d);this.map.appendChild(d)}addBox(b,a){a=Number.parseInt(a.substring(1),16);b=document.getElementsByClassName(b)[0];const c=document.createElement("div");b.appendChild(c);a=this.nodeFromSlot.get(a);b.dataset.slot=a.uid;b.dataset.item=a.item.uid;this.itemElts.set(a.item.uid,b)}update(){for(const [b,a]of this.slotElts)if(a.classList.remove("checked"),
a.classList.remove("blocked"),a.classList.remove("available"),a.classList.remove("glitched"),a.classList.remove("off-route"),a.classList.remove("hard"),this.checked.has(b))a.classList.add("checked");else{let c=4;for(const a of this.depgraph.routes[this.depgraph.uidToLocation[b]]){let b=0;for(const c of Bits$$module$js$bits.bits(a))if(b=Math.max(b,this.route[this.depgraph.itemToUid[c]]),!(4>b))break;c=Math.min(c,b);if(!c)break}a.classList.add(["available","off-route","glitched","hard","blocked"][c])}}}
let flags$$module$js$tracker="Rlpt Ts";for(const b of location.hash.substring(1).split("&")){const [a,c]=b.split("=");"flags"===a&&(flags$$module$js$tracker=decodeURIComponent(c))}const graph$$module$js$tracker=new Graph$$module$js$tracker(generate$$module$js$depgraph(new FlagSet$$module$js$flagset(flags$$module$js$tracker+" Dt")));for(let b of BOXES$$module$js$tracker.split("\n"))(b=b.replace(/#.*/,"").trim())&&graph$$module$js$tracker.addBox(...b.split(/ +/g));for(const b of SLOTS$$module$js$tracker)graph$$module$js$tracker.addSlot(...b);
graph$$module$js$tracker.update();document.getElementById("toggle-map").addEventListener("click",()=>{graph$$module$js$tracker.map.classList.toggle("hidden")});document.getElementById("clear-all").addEventListener("click",()=>{for(let b=0;b<graph$$module$js$tracker.route.length;b++)0==graph$$module$js$tracker.route[b]&&(graph$$module$js$tracker.route[b]=graph$$module$js$tracker.always.has(b)?0:4);graph$$module$js$tracker.checked.clear();graph$$module$js$tracker.update();for(const b of document.querySelectorAll(".slot.got"))b.classList.remove("got")});
var module$js$tracker={};
}).call(this)
