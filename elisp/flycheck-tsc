#!/usr/bin/perl

# NOTE: this requires `flycheck-tsc-sink` to be running piped from `tsc watch`

use strict;
use warnings;

use FindBin;
use File::Basename qw/dirname/;
use Time::HiRes qw/usleep/;

my $log = 1;

# Start by documenting the call, just so that we can get some diagnostics.
open LOG, '>', '/tmp/flycheck.log' if $log;
print LOG "FLYCHECK: @ARGV\n" if $log;
print LOG "Bin: $FindBin::Bin\n" if $log;

my $root = dirname($FindBin::Bin);
my $path = $ARGV[0];
my $rel = $path;
$rel =~ s|$root/||;
my $base = $path;
$base =~ s|\.ts|| or die "Not a .ts file!";

print LOG "Path: $path\n" if $log;
print LOG "Rel $rel\n" if $log;

chdir $root;
print LOG ("pwd: " . `pwd`) if $log;
print LOG "PATH: $ENV{PATH}\n" if $log;

usleep 400000;

while (-e "$root/.tsc.run") {
  usleep 10000;
}
open TSC, '<', "$root/.tsc.out";

while ($_ = <TSC>) {
  print LOG "LINE: $_" if $log;
  next unless /^$rel\(/;
  s/$rel/$path/g;
  print STDERR $_;
}
close LOG if $log;
system "rm -f $base.js*";
close TSC or exit 1;

#print STDERR "$ARGV[0]:5:5: ERROR - something\n";
