(function(){
const global=window;'use strict';var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(b){var a=0;return function(){return a<b.length?{done:!1,value:b[a++]}:{done:!0}}};$jscomp.arrayIterator=function(b){return{next:$jscomp.arrayIteratorImpl(b)}};$jscomp.makeIterator=function(b){var a="undefined"!=typeof Symbol&&Symbol.iterator&&b[Symbol.iterator];return a?a.call(b):$jscomp.arrayIterator(b)};
$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(b,a,c){b!=Array.prototype&&b!=Object.prototype&&(b[a]=c.value)};
$jscomp.polyfill=function(b,a,c,d){if(a){c=$jscomp.global;b=b.split(".");for(d=0;d<b.length-1;d++){var e=b[d];e in c||(c[e]={});c=c[e]}b=b[b.length-1];d=c[b];a=a(d);a!=d&&null!=a&&$jscomp.defineProperty(c,b,{configurable:!0,writable:!0,value:a})}};$jscomp.FORCE_POLYFILL_PROMISE=!1;$jscomp.SYMBOL_PREFIX="jscomp_symbol_";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};
$jscomp.Symbol=function(){var b=0;return function(a){return $jscomp.SYMBOL_PREFIX+(a||"")+b++}}();$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var b=$jscomp.global.Symbol.iterator;b||(b=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[b]&&$jscomp.defineProperty(Array.prototype,b,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}});$jscomp.initSymbolIterator=function(){}};
$jscomp.initSymbolAsyncIterator=function(){$jscomp.initSymbol();var b=$jscomp.global.Symbol.asyncIterator;b||(b=$jscomp.global.Symbol.asyncIterator=$jscomp.global.Symbol("asyncIterator"));$jscomp.initSymbolAsyncIterator=function(){}};$jscomp.iteratorPrototype=function(b){$jscomp.initSymbolIterator();b={next:b};b[$jscomp.global.Symbol.iterator]=function(){return this};return b};$jscomp.underscoreProtoCanBeSet=function(){var b={a:!0},a={};try{return a.__proto__=b,a.a}catch(c){}return!1};
$jscomp.setPrototypeOf="function"==typeof Object.setPrototypeOf?Object.setPrototypeOf:$jscomp.underscoreProtoCanBeSet()?function(b,a){b.__proto__=a;if(b.__proto__!==a)throw new TypeError(b+" is not extensible");return b}:null;$jscomp.generator={};$jscomp.generator.ensureIteratorResultIsObject_=function(b){if(!(b instanceof Object))throw new TypeError("Iterator result "+b+" is not an object");};
$jscomp.generator.Context=function(){this.isRunning_=!1;this.yieldAllIterator_=null;this.yieldResult=void 0;this.nextAddress=1;this.finallyAddress_=this.catchAddress_=0;this.finallyContexts_=this.abruptCompletion_=null};$jscomp.generator.Context.prototype.start_=function(){if(this.isRunning_)throw new TypeError("Generator is already running");this.isRunning_=!0};$jscomp.generator.Context.prototype.stop_=function(){this.isRunning_=!1};
$jscomp.generator.Context.prototype.jumpToErrorHandler_=function(){this.nextAddress=this.catchAddress_||this.finallyAddress_};$jscomp.generator.Context.prototype.next_=function(b){this.yieldResult=b};$jscomp.generator.Context.prototype.throw_=function(b){this.abruptCompletion_={exception:b,isException:!0};this.jumpToErrorHandler_()};$jscomp.generator.Context.prototype.return=function(b){this.abruptCompletion_={return:b};this.nextAddress=this.finallyAddress_};
$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks=function(b){this.abruptCompletion_={jumpTo:b};this.nextAddress=this.finallyAddress_};$jscomp.generator.Context.prototype.yield=function(b,a){this.nextAddress=a;return{value:b}};$jscomp.generator.Context.prototype.yieldAll=function(b,a){b=$jscomp.makeIterator(b);var c=b.next();$jscomp.generator.ensureIteratorResultIsObject_(c);if(c.done)this.yieldResult=c.value,this.nextAddress=a;else return this.yieldAllIterator_=b,this.yield(c.value,a)};
$jscomp.generator.Context.prototype.jumpTo=function(b){this.nextAddress=b};$jscomp.generator.Context.prototype.jumpToEnd=function(){this.nextAddress=0};$jscomp.generator.Context.prototype.setCatchFinallyBlocks=function(b,a){this.catchAddress_=b;void 0!=a&&(this.finallyAddress_=a)};$jscomp.generator.Context.prototype.setFinallyBlock=function(b){this.catchAddress_=0;this.finallyAddress_=b||0};$jscomp.generator.Context.prototype.leaveTryBlock=function(b,a){this.nextAddress=b;this.catchAddress_=a||0};
$jscomp.generator.Context.prototype.enterCatchBlock=function(b){this.catchAddress_=b||0;b=this.abruptCompletion_.exception;this.abruptCompletion_=null;return b};$jscomp.generator.Context.prototype.enterFinallyBlock=function(b,a,c){c?this.finallyContexts_[c]=this.abruptCompletion_:this.finallyContexts_=[this.abruptCompletion_];this.catchAddress_=b||0;this.finallyAddress_=a||0};
$jscomp.generator.Context.prototype.leaveFinallyBlock=function(b,a){a=this.finallyContexts_.splice(a||0)[0];if(a=this.abruptCompletion_=this.abruptCompletion_||a){if(a.isException)return this.jumpToErrorHandler_();void 0!=a.jumpTo&&this.finallyAddress_<a.jumpTo?(this.nextAddress=a.jumpTo,this.abruptCompletion_=null):this.nextAddress=this.finallyAddress_}else this.nextAddress=b};$jscomp.generator.Context.prototype.forIn=function(b){return new $jscomp.generator.Context.PropertyIterator(b)};
$jscomp.generator.Context.PropertyIterator=function(b){this.object_=b;this.properties_=[];for(var a in b)this.properties_.push(a);this.properties_.reverse()};$jscomp.generator.Context.PropertyIterator.prototype.getNext=function(){for(;0<this.properties_.length;){var b=this.properties_.pop();if(b in this.object_)return b}return null};$jscomp.generator.Engine_=function(b){this.context_=new $jscomp.generator.Context;this.program_=b};
$jscomp.generator.Engine_.prototype.next_=function(b){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_.next,b,this.context_.next_);this.context_.next_(b);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.return_=function(b){this.context_.start_();var a=this.context_.yieldAllIterator_;if(a)return this.yieldAllStep_("return"in a?a["return"]:function(a){return{value:a,done:!0}},b,this.context_.return);this.context_.return(b);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.throw_=function(b){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_["throw"],b,this.context_.next_);this.context_.throw_(b);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.yieldAllStep_=function(b,a,c){try{var d=b.call(this.context_.yieldAllIterator_,a);$jscomp.generator.ensureIteratorResultIsObject_(d);if(!d.done)return this.context_.stop_(),d;var e=d.value}catch(f){return this.context_.yieldAllIterator_=null,this.context_.throw_(f),this.nextStep_()}this.context_.yieldAllIterator_=null;c.call(this.context_,e);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.nextStep_=function(){for(;this.context_.nextAddress;)try{var b=this.program_(this.context_);if(b)return this.context_.stop_(),{value:b.value,done:!1}}catch(a){this.context_.yieldResult=void 0,this.context_.throw_(a)}this.context_.stop_();if(this.context_.abruptCompletion_){b=this.context_.abruptCompletion_;this.context_.abruptCompletion_=null;if(b.isException)throw b.exception;return{value:b.return,done:!0}}return{value:void 0,done:!0}};
$jscomp.generator.Generator_=function(b){this.next=function(a){return b.next_(a)};this.throw=function(a){return b.throw_(a)};this.return=function(a){return b.return_(a)};$jscomp.initSymbolIterator();this[Symbol.iterator]=function(){return this}};$jscomp.generator.createGenerator=function(b,a){a=new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(a));$jscomp.setPrototypeOf&&$jscomp.setPrototypeOf(a,b.prototype);return a};
$jscomp.asyncExecutePromiseGenerator=function(b){function a(a){return b.next(a)}function c(a){return b.throw(a)}return new Promise(function(d,e){function f(b){b.done?d(b.value):Promise.resolve(b.value).then(a,c).then(f,e)}f(b.next())})};$jscomp.asyncExecutePromiseGeneratorFunction=function(b){return $jscomp.asyncExecutePromiseGenerator(b())};$jscomp.asyncExecutePromiseGeneratorProgram=function(b){return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(b)))};
$jscomp.checkStringArgs=function(b,a,c){if(null==b)throw new TypeError("The 'this' value for String.prototype."+c+" must not be null or undefined");if(a instanceof RegExp)throw new TypeError("First argument to String.prototype."+c+" must not be a regular expression");return b+""};$jscomp.stringPadding=function(b,a){b=void 0!==b?String(b):" ";return 0<a&&b?b.repeat(Math.ceil(a/b.length)).substring(0,a):""};
$jscomp.polyfill("String.prototype.padStart",function(b){return b?b:function(a,b){var c=$jscomp.checkStringArgs(this,null,"padStart");return $jscomp.stringPadding(b,a-c.length)+c}},"es8","es3");$jscomp.iteratorFromArray=function(b,a){$jscomp.initSymbolIterator();b instanceof String&&(b+="");var c=0,d={next:function(){if(c<b.length){var e=c++;return{value:a(e,b[e]),done:!1}}d.next=function(){return{done:!0,value:void 0}};return d.next()}};d[Symbol.iterator]=function(){return d};return d};
$jscomp.polyfill("Array.prototype.values",function(b){return b?b:function(){return $jscomp.iteratorFromArray(this,function(a,b){return b})}},"es8","es3");$jscomp.polyfill("String.prototype.padEnd",function(b){return b?b:function(a,b){var c=$jscomp.checkStringArgs(this,null,"padStart");return c+$jscomp.stringPadding(b,a-c.length)}},"es8","es3");
$jscomp.polyfill("Array.prototype.includes",function(b){return b?b:function(a,b){var c=this;c instanceof String&&(c=String(c));var e=c.length;b=b||0;for(0>b&&(b=Math.max(b+e,0));b<e;b++){var f=c[b];if(f===a||Object.is(f,a))return!0}return!1}},"es7","es3");
class Assembler$$module$6502{constructor(b){this.labels={};this.lines=[];this.pc=0;this.filename=b;this.lineNumber=-1;this.lineContents=""}addLine(b){this.lines.push(b.orig(this.lineNumber,this.lineContents))}addLabel(b,a){if("number"!==typeof a)throw Error("Expected a number");const c=this.labels[b]||[];this.labels[b]=c;b=find$$module$6502(c,a);0>b&&c.splice(~b,0,a)}ingest(b){this.lineNumber++;this.lineContents=b;b=b.replace(/;.*/,"");b=b.replace(/\s+/g," ");b=b.replace(/\s$/g,"");var a;if(a=/^\s*\.org\s+(\S+)/i.exec(b))this.addLine(new OrgLine$$module$6502(this.pc=
parseNumber$$module$6502(a[1])));else if(a=/^\s*\.bank\s+(\S+)\s+(\S+)\s*:\s*(\S+)/i.exec(b)){const [,b,c,f]=a;this.addLine(new BankLine$$module$6502(parseNumber$$module$6502(b),parseNumber$$module$6502(c),parseNumber$$module$6502(f)))}else if(a=/^\s*\.(byte|word)\s+(.*)/i.exec(b))a=("word"==a[1]?WordLine$$module$6502:ByteLine$$module$6502).parse(a[2]),this.addLine(a),this.pc+=a.size();else if(a=/^define\s+(\S+)\s+(.*)/.exec(b))this.addLabel(a[1],parseNumber$$module$6502(a[2]));else{if(a=/^(\S+?):(.*)$/.exec(b)){var c=
a[1];b=" "+a[2];this.addLabel(c,~this.pc)}else if(a=/^((?:[-+]+\s+)+)(.*)$/.exec(b)){b=a[1];for(c of b.trim().split(" "))this.addLabel(c,~this.pc);b=" "+a[2]}if(a=/^\s+([a-z]{3})(\s+.*)?$/.exec(b))a=new Opcode$$module$6502(a[1],(a[2]||"").trim(),this.pc),this.addLine(a),this.pc+=a.size();else if(/\S/.test(b))throw Error(`Could not parse line ${b} at ${this.filename}:${this.lineNumber}`);}}assemble(){var b=new Context$$module$6502(this.labels),a=[];for(var c of this.lines){try{c.expand(b)}catch(e){throw a=
e.stack.replace(`Error: ${e.message}`,""),Error(`${e.message}${` from line ${c.origLineNumber}: \`${c.origContent}\``}${a}\n================`);}if(c instanceof OrgLine$$module$6502&&null!=a[c.pc])throw Error(`Collision at $${c.pc.toString(16)}`);for(const d of c.bytes()){if(null!=a[b.pc])throw Error(`Collision at $${b.pc.toString(16)}`);a[b.pc++]=d}}b=[];for(var d in a)d-1 in a||b.push(Number(d));c=[];for(const e of b){d=[];for(b=e;b in a;b++)d.push(a[b]);c.push(new Chunk$$module$6502(e,d))}return c}}
class AbstractLine$$module$6502{orig(b,a){this.origLineNumber=b;this.origContent=a;return this}expand(){throw Error(`abstract: ${this.constructor}`);}bytes(){throw Error(`abstract: ${this.constructor}`);}}
class ByteLine$$module$6502 extends AbstractLine$$module$6502{static parse(b){const a=[];for(let c of b.split(","))c=c.trim(),(b=/^"(.*)"$/.exec(c))?a.push(...[...b[1]].map((a)=>a.charCodeAt(0))):a.push(parseNumber$$module$6502(c));return new ByteLine$$module$6502(a)}constructor(b){super();this.bytes_=b}bytes(){return[...this.bytes_]}size(){return this.bytes_.length}expand(){}}
class WordLine$$module$6502 extends AbstractLine$$module$6502{static parse(b){const a=[];for(let c of b.split(","))c=c.trim(),c=c.replace(/[()]/g,""),a.push(parseNumber$$module$6502(c));return new WordLine$$module$6502(a)}constructor(b){super();this.words=b}bytes(){const b=[];for(const a of this.words)b.push(a&255),b.push(a>>>8);return b}size(){return 2*this.words.length}expand(b){for(let a=0;a<this.words.length;a++)"string"==typeof this.words[a]&&(this.words[a]=b.map(this.words[a]))}}
class OrgLine$$module$6502 extends AbstractLine$$module$6502{constructor(b){super();this.pc=b}bytes(){return[]}size(){return 0}expand(b){b.pc=this.pc}}class BankLine$$module$6502 extends AbstractLine$$module$6502{constructor(b,a,c){super();this.prg=b;this.cpu=a;this.length=c}bytes(){return[]}size(){return 0}expand(b){b.updateBank(this.prg,this.cpu,this.length)}}
class Context$$module$6502{constructor(b){this.pc=0;this.labels=b;this.cpuToPrg=[];this.prgToCpu=[]}updateBank(b,a,c){for(var d=0;d<c;d++){var e=a+d,f=this.cpuToPrg[e];null!=f&&(this.prgToCpu[f]=null,this.cpuToPrg[e]=null)}for(d=0;d<c;d++)e=a+d,f=b+d,this.prgToCpu[f]=e,this.cpuToPrg[e]=f}mapLabel(b,a){let c=this.labels[b];if(!c)throw Error(`Label not found: ${b}`);if(null==a){if(1<c.length)throw Error(`Ambiguous label: ${b}`);return c[0]}a=~(a+2);const d=find$$module$6502(c,a);if(0<=d)return c[d];
if(-1==d)return c[0];if(d==~c.length)return c[c.length-1];c=c.slice(~d-1,~d+1);return b.startsWith("-")?c[1]:b.startsWith("+")?c[0]:a<(c[0]+c[1])/2?c[0]:c[1]}mapPrgToCpu(b){const a=this.prgToCpu[b];if(null==a)throw Error(`PRG address unmapped: $${b.toString(16)}`);return a}map(b,a=void 0){if(null==b)return b;"string"==typeof b&&(b=this.mapLabel(b,a));0>b&&(b=this.mapPrgToCpu(~b));return b}}
class Chunk$$module$6502 extends Uint8Array{constructor(b,a){super(a.length);this.set(a);this.start=b}apply(b){b.subarray(this.start,this.start+this.length).set(this)}shift(b){return new Chunk$$module$6502(this.start+b,this)}}
class Patch$$module$6502{static from(b){const a=[];var c=8;new Set;for(var d of b)b=new Uint8Array(d.length+5),b[0]=d.start>>>16,b[1]=d.start>>>8&255,b[2]=d.start&255,b[3]=d.length>>>8,b[4]=d.length&255,b.set(d,5),a.push(b),c+=b.length;c=new Uint8Array(c);d=5;c[0]=80;c[1]=65;c[2]=84;c[3]=67;c[4]=72;for(const b of a)c.subarray(d,d+b.length).set(b),d+=b.length;c[d]=69;c[d+1]=79;c[d+2]=70;return new Patch$$module$6502(c)}constructor(b){this.data=b}apply(b){for(const a of this)a.apply(b)}*[Symbol.iterator](){let b=
5;for(;b<this.data.length-3;){const a=this.data[b+3]<<8|this.data[b+4];yield new Chunk$$module$6502(this.data[b]<<16|this.data[b+1]<<8|this.data[b+2],this.data.subarray(b+5,b+5+a));b+=a+5}}toHexString(){return[...this.data].map((b)=>b.toString(16).padStart(2,0)).join("")}}
const assemble$$module$6502=(b,a="input")=>{a=new Assembler$$module$6502(a);let c=0;for(const d of b.split("\n"))c++,a.ingest(d);b=a.assemble();return Patch$$module$6502.from(b)},buildRomPatch$$module$6502=(b,a=void 0,c=void 0)=>{b=[...b].map((a)=>a.shift(16));a=[...a||[]].map((a)=>a.shift(16+c));return Patch$$module$6502.from([...b,...a])};
class Opcode$$module$6502 extends AbstractLine$$module$6502{constructor(b,a,c){super();this.mnemonic=b;this.arg=mode$$module$6502(b,a);this.pc=c}size(){return 1+this.arg[1]}bytes(){let b=this.arg[2];if("Relative"==this.arg[0]&&(b-=this.pc+2,!(128>b&&-128<=b)))throw Error(`Too far to branch: ${b} at input:${this.origLineNumber}`);const a=[opcodes$$module$6502[this.mnemonic][this.arg[0]]];let c=this.arg[1];for(;c--;)a.push(b&255),b>>>=8;return a}expand(b){try{this.arg[2]=b.map(this.arg[2],this.pc)}catch(a){throw console.error(this),
a;}this.pc=b.map(~this.pc)}}const find$$module$6502=(b,a)=>{let c=0,d=b.length-1;if(0>d||a<b[0])return-1;var e=b[d];if(a==e)return d;if(a>e)return~b.length;for(;1<d-c;)e=c+d>>1,a<b[e]?d=e:c=e;return a==b[c]?c:~d},mode$$module$6502=(b,a)=>{for(const [d,e]of modes$$module$6502){var c=d.exec(a);if(c){c=e(c[1]);if(!(b in opcodes$$module$6502))throw Error(`Bad mnemonic: ${b}`);if(c[0]in opcodes$$module$6502[b])return c}}throw Error(`Could not find mode for ${b} ${a}
Expected one of [${Object.keys(opcodes$$module$6502[b]).join(", ")}]`);},modes$$module$6502=[[/^$/,()=>["Implied",0]],[/^#(.+)$/,(b)=>["Immediate",1,parseNumber$$module$6502(b,!0)]],[/^(\$..)$/,(b)=>["ZeroPage",1,parseNumber$$module$6502(b,!0)]],[/^(\$..),x$/,(b)=>["ZeroPageX",1,parseNumber$$module$6502(b,!0)]],[/^(\$..),y$/,(b)=>["ZeroPageY",1,parseNumber$$module$6502(b,!0)]],[/^\((\$..),x\)$/,(b)=>["PreindexedIndirect",1,parseNumber$$module$6502(b,!0)]],[/^\((\$..)\),y$/,(b)=>["PostindexedIndirect",
1,parseNumber$$module$6502(b,!0)]],[/^\((.+)\)$/,(b)=>["IndirectAbsolute",2,parseNumber$$module$6502(b,!0)]],[/^(.+),x$/,(b)=>["AbsoluteX",2,parseNumber$$module$6502(b,!0)]],[/^(.+),y$/,(b)=>["AbsoluteY",2,parseNumber$$module$6502(b,!0)]],[/^(.+)$/,(b)=>["Absolute",2,parseNumber$$module$6502(b,!0)]],[/^(.+)$/,(b)=>["Relative",1,parseNumber$$module$6502(b,!0)]]],parseNumber$$module$6502=(b,a=!1)=>{if(b.startsWith("$"))return Number.parseInt(b.substring(1),16);if(b.startsWith("%"))return Number.parseInt(b.substring(1),
2);if(b.startsWith("0"))return Number.parseInt(b,8);const c=Number.parseInt(b,10);if(!Number.isNaN(c))return c;if(a)return b;throw Error(`Bad number: ${b}`);},opcodes$$module$6502={adc:{Immediate:105,ZeroPage:101,ZeroPageX:117,Absolute:109,AbsoluteX:125,AbsoluteY:121,PreindexedIndirect:97,PostindexedIndirect:113},and:{Immediate:41,ZeroPage:37,ZeroPageX:53,Absolute:45,AbsoluteX:61,AbsoluteY:57,PreindexedIndirect:33,PostindexedIndirect:49},asl:{Implied:10,ZeroPage:6,ZeroPageX:22,Absolute:14,AbsoluteX:30},
bcc:{Relative:144},bcs:{Relative:176},beq:{Relative:240},bit:{ZeroPage:36,Absolute:44},bmi:{Relative:48},bne:{Relative:208},bpl:{Relative:16},brk:{Implied:0},bvc:{Relative:80},bvs:{Relative:112},clc:{Implied:24},cld:{Implied:216},cli:{Implied:88},clv:{Implied:184},cmp:{Immediate:201,ZeroPage:197,ZeroPageX:213,Absolute:205,AbsoluteX:221,AbsoluteY:217,PreindexedIndirect:193,PostindexedIndirect:209},cpx:{Immediate:224,ZeroPage:228,Absolute:236},cpy:{Immediate:192,ZeroPage:196,Absolute:204},dec:{ZeroPage:198,
ZeroPageX:214,Absolute:206,AbsoluteX:222},dex:{Implied:202},dey:{Implied:136},eor:{Immediate:73,ZeroPage:69,ZeroPageX:85,Absolute:77,AbsoluteX:93,AbsoluteY:89,PreindexedIndirect:65,PostindexedIndirect:81},inc:{ZeroPage:230,ZeroPageX:246,Absolute:238,AbsoluteX:254},inx:{Implied:232},iny:{Implied:200},jmp:{Absolute:76,IndirectAbsolute:108},jsr:{Absolute:32},lda:{Immediate:169,ZeroPage:165,ZeroPageX:181,Absolute:173,AbsoluteX:189,AbsoluteY:185,PreindexedIndirect:161,PostindexedIndirect:177},ldx:{Immediate:162,
ZeroPage:166,ZeroPageY:182,Absolute:174,AbsoluteY:190},ldy:{Immediate:160,ZeroPage:164,ZeroPageX:180,Absolute:172,AbsoluteX:188},lsr:{Implied:74,ZeroPage:70,ZeroPageX:86,Absolute:78,AbsoluteX:94},nop:{Implied:234},ora:{Immediate:9,ZeroPage:5,ZeroPageX:21,Absolute:13,AbsoluteX:29,AbsoluteY:25,PreindexedIndirect:1,PostindexedIndirect:17},pha:{Implied:72},php:{Implied:8},pla:{Implied:104},plp:{Implied:40},rol:{Implied:42,ZeroPage:38,ZeroPageX:54,Absolute:46,AbsoluteX:62},ror:{Implied:106,ZeroPage:102,
ZeroPageX:118,Absolute:110,AbsoluteX:126},rti:{Implied:64},rts:{Implied:96},sbc:{Immediate:233,ZeroPage:229,ZeroPageX:245,Absolute:237,AbsoluteX:253,AbsoluteY:249,PreindexedIndirect:225,PostindexedIndirect:241},sec:{Implied:56},sed:{Implied:248},sei:{Implied:120},sta:{ZeroPage:133,ZeroPageX:149,Absolute:141,AbsoluteX:157,AbsoluteY:153,PreindexedIndirect:129,PostindexedIndirect:145},stx:{ZeroPage:134,ZeroPageY:150,Absolute:142},sty:{ZeroPage:132,ZeroPageX:148,Absolute:140},tax:{Implied:170},tay:{Implied:168},
tsx:{Implied:186},txa:{Implied:138},txs:{Implied:154},tya:{Implied:152}};var module$6502={};module$6502.assemble=assemble$$module$6502;module$6502.buildRomPatch=buildRomPatch$$module$6502;const Bits$$module$bits_bigint={},BitsBigInt$$module$bits_bigint=Bits$$module$bits_bigint;Bits$$module$bits_bigint.of=(...b)=>{let a=ZERO$$module$bits_bigint;for(const c of b)a|=ONE$$module$bits_bigint<<BigInt(c);return a};Bits$$module$bits_bigint.from=(b)=>{let a=ZERO$$module$bits_bigint;for(const c of b)a|=ONE$$module$bits_bigint<<BigInt(c);return a};Bits$$module$bits_bigint.containsAll=(b,a)=>!(a&~b);Bits$$module$bits_bigint.with=(b,a)=>b|ONE$$module$bits_bigint<<BigInt(a);
Bits$$module$bits_bigint.without=(b,a)=>b&~(ONE$$module$bits_bigint<<BigInt(a));Bits$$module$bits_bigint.has=(b,a)=>!!(b&ONE$$module$bits_bigint<<BigInt(a));Bits$$module$bits_bigint.bits=(b)=>{const a=[];let c=0;for(;b;){let d=Number(b&MAX_UINT32$$module$bits_bigint),e=32;for(;d;){const b=Math.clz32(d)+1;e-=b;d<<=b;32==b&&(d=0);a.push(c|e)}b>>=THIRTY_TWO$$module$bits_bigint;c+=32}return a};Bits$$module$bits_bigint.clone=(b)=>b;Bits$$module$bits_bigint.empty=(b)=>!b;
const BIGINT_OK$$module$bits_bigint="function"===typeof BigInt&&"bigint"===typeof BigInt(0),ZERO$$module$bits_bigint=BIGINT_OK$$module$bits_bigint&&BigInt(0),ONE$$module$bits_bigint=BIGINT_OK$$module$bits_bigint&&BigInt(1),MAX_UINT32$$module$bits_bigint=BIGINT_OK$$module$bits_bigint&&BigInt(4294967295),THIRTY_TWO$$module$bits_bigint=BIGINT_OK$$module$bits_bigint&&BigInt(32);var module$bits_bigint={};module$bits_bigint.BitsBigInt=Bits$$module$bits_bigint;module$bits_bigint.BIGINT_OK=BIGINT_OK$$module$bits_bigint;const Bits$$module$bits_array={},BitsArray$$module$bits_array=Bits$$module$bits_array;Bits$$module$bits_array.of=(...b)=>{let a=[];for(const c of b)a[c>>>5]=(a[c>>>5]||0)|1<<c;return a};Bits$$module$bits_array.from=(b)=>{let a=[];for(const c of b)a[c>>>5]=(a[c>>>5]||0)|1<<c;return a};Bits$$module$bits_array.containsAll=(b,a)=>{for(let c=Math.max(b.length,a.length)-1;0<=c;c--)if((a[c]||0)&~(b[c]||0))return!1;return!0};Bits$$module$bits_array.with=(b,a)=>{b[a>>>5]=(b[a>>>5]||0)|1<<a;return b};
Bits$$module$bits_array.without=(b,a)=>{b[a>>>5]=(b[a>>>5]||0)&~(1<<a);return b};Bits$$module$bits_array.has=(b,a)=>!!((b[a>>>5]||0)&1<<a);Bits$$module$bits_array.bits=(b)=>{const a=[];for(let c=0;c<b.length;c++){let d=b[c],e=32;for(;d;){const b=Math.clz32(d)+1;e-=b;d<<=b;32==b&&(d=0);a.push(c<<5|e)}}return a};Bits$$module$bits_array.clone=(b)=>[...b];Bits$$module$bits_array.empty=(b)=>b.every((a)=>!a);var module$bits_array={};module$bits_array.BitsArray=Bits$$module$bits_array;const b$$module$bits=BIGINT_OK$$module$bits_bigint?Bits$$module$bits_bigint:Bits$$module$bits_array;class Bits$$module$bits{}Bits$$module$bits.of=b$$module$bits.of;Bits$$module$bits.from=b$$module$bits.from;Bits$$module$bits.containsAll=b$$module$bits.containsAll;Bits$$module$bits.with=b$$module$bits.with;Bits$$module$bits.without=b$$module$bits.without;Bits$$module$bits.has=b$$module$bits.has;Bits$$module$bits.bits=b$$module$bits.bits;Bits$$module$bits.clone=b$$module$bits.clone;
Bits$$module$bits.empty=b$$module$bits.empty;var module$bits={};module$bits.Bits=Bits$$module$bits;let table$$module$crc32;const buildTable$$module$crc32=()=>{let b;const a=Array(256);for(let c=0;256>c;c++){b=c;for(let a=0;8>a;a++)b=b&1?3988292384^b>>>1:b>>>1;a[c]=b}return a},crc32$$module$crc32=(b)=>{table$$module$crc32||(table$$module$crc32=buildTable$$module$crc32());let a=-1;for(let c=0;c<b.length;c++)a=a>>>8^table$$module$crc32[(a^b[c])&255];return(a^-1)>>>0};var module$crc32={};module$crc32.crc32=crc32$$module$crc32;const REPEATABLE_FLAGS$$module$flagset=new Set(["S"]),exclusiveFlags$$module$flagset=(b)=>b.startsWith("S")?new RegExp(`S.*[${b.substring(1)}]`):FLAG_CONFLICTS$$module$flagset[b],FLAG_CONFLICTS$$module$flagset={Hm:/Em/,Hx:/Ex/,Em:/Hm/,Ex:/Hx/,Tw:/Gw/,Gw:/Tw/};
class FlagSet$$module$flagset{constructor(b){this.flags={};b=b.replace(/[^A-Za-z0-9!]/g,"");const a=/([A-Z])([a-z0-9!]+)/g;let c;for(;c=a.exec(b);){let [,a,b]=c;REPEATABLE_FLAGS$$module$flagset.has(a)&&(b=[b]);for(const c of b)this.set(a+c,!0)}}set(b,a){const c=b[0],d=b.substring(1);a?(this.removeConflicts(b),b=(this.flags[c]||[]).filter((a)=>a!==d),b.push(d),b.sort(),this.flags[c]=b):(b=(this.flags[c]||[]).filter((a)=>a!==d),b.length?this.flags[c]=b:delete this.flags[c])}check(b){const a=this.flags[b[0]];
return!!(a&&0<=a.indexOf(b.substring(1)))}removeConflicts(b){const a=exclusiveFlags$$module$flagset(b);if(a)for(const c in this.flags)b=this.flags[c].filter((b)=>!a.test(c+b)),b.length?this.flags[c]=b:delete this.flags[c]}toStringKey(b){return REPEATABLE_FLAGS$$module$flagset.has(b)?[...this.flags[b]].sort().map((a)=>b+a).join(" "):b+[...this.flags[b]].sort().join("")}toString(){const b=Object.keys(this.flags);b.sort();return b.map((a)=>this.toStringKey(a)).join(" ")}}var module$flagset={};
module$flagset.FlagSet=FlagSet$$module$flagset;const generate$$module$depgraph=(b)=>{const a=new WorldGraph$$module$nodes,c=(b,c)=>new Option$$module$nodes(a,b,void 0===c?!0:c),d=(b,c)=>new Item$$module$nodes(a,b,c,b,null),e=(b,c,...d)=>new Boss$$module$nodes(a,b,c,...d),f=(a,c)=>{if(!b)return c;(c=a.startsWith("!"))&&(a=a.substring(1));return b.check(a)^c},g=c("Leather Boots grant speed",f("Ts",!0)),h=c("Assume ghetto flight",f("Gf",!0)),k=c("Assume talk glitch",f("Gt",!0)),n=c("Assume rabbit skip",f("Gr",!1)),m=c("Sword magic optional",f("Hw",
!1)),q=c("Matching sword optional",f("Hs",!1)),p=c("Gas mask optional",f("Hg",!1)),u=c("Healed dolphin optional",f("!Rd",!0)),l=c("Calmed sea not required",f("!Rl",!1)),y=c("Sword of Thunder teleports to Shyron",f("Rt",!0)),z=c("Barrier magic optional",f("Hb",!0)),ja=c("Refresh magic optional",f("!Er",!0)),kb=c("Early flight route",f("Rf",!1)),Ba=c("Lime Tree connects to Leaf",f("Rp",!0)),Gd=c("Assume wild warp",f("Gw",!1)),Hd=c("Allow wild warp",f("!Tw",!1)),Id=c("Assume sword charge glitch",f("Gs",
!1));c("Tracker only",f("Dt",!1));const lb=new TrackerNode$$module$nodes(a,"Off-route"),Ca=new TrackerNode$$module$nodes(a,"Glitch"),G=new TrackerNode$$module$nodes(a,"Hard"),M=d(0,"Sword of Wind").weight(3).fromPerson("Leaf elder",13).npcSpawn(94,16,1).dialog(13,192,2).key(),S=d(1,"Sword of Fire").weight(3).fromPerson("Oak elder",29).dialog(29,null,3).key(),N=d(2,"Sword of Water").weight(3).chest().key(),K=d(3,"Sword of Thunder").weight(5).chest().key(),mb=d(4,"Crystalis").fixed(),Ka=d(5,"Ball of Wind").chest().key(),
Da=d(6,"Tornado Bracelet").chest().key(),La=d(7,"Ball of Fire").bossDrop("Insect",1).dialog(30,null,0).dialog(32,null,0).dialog(33,null,0).dialog(34,null,0).dialog(96,30,0).dialog(29,null,2).dialog(31,null,0).npcSpawn(193).key(),Ma=d(8,"Flame Bracelet").bossDrop("Kelbesque 1",2).npcSpawn(194).key(),Ea=d(9,"Ball of Water").direct("Rage",250679).npcSpawn(195).key(),Na=d(10,"Blizzard Bracelet").chest().key(),Oa=d(11,"Ball of Thunder").bossDrop("Mado 1",5).trigger(154,1).key(),Pa=d(12,"Storm Bracelet").chest().key();
d(13,"Carapace Shield");d(14,"Bronze Shield");d(15,"Platinum Shield");d(16,"Mirrored Shield");d(17,"Ceramic Shield");const Jd=d(18,"Sacred Shield").bossDrop("Mado 2",8).npcSpawn(199).bonus();d(19,"Battle Shield");const Kd=d(20,"Psycho Shield");d(21,"Tanned Hide");d(22,"Leather Armor");d(23,"Bronze Armor");d(24,"Platinmum Armor");d(25,"Soldier Suit");d(26,"Ceramic Suit");const Ld=d(27,"Battle Suit"),Md=d(28,"Psycho Armor").bossDrop("Draygon 1",10).npcSpawn(203).trigger(159).npcSpawn(131).key(),X=d(29,
"Medical Herb"),Qa=d(30,"Antidote"),nb=d(31,"Lysis Plant"),Nd=d(32,"Fruit of Lime"),Fa=d(33,"Fruit of Power"),Y=d(34,"Magic Ring"),Sb=d(35,"Fruit of Repun").bossDrop("Sabera 2",7).npcSpawn(198).key(),ob=d(36,"Warp Boots"),Tb=d(37,"Statue of Onyx").chest("Cordel grass").invisible(254882).key(),pb=d(38,"Opel Statue").bossDrop("Kelbesque 2",6).npcSpawn(197).key(),Ub=d(39,"Insect Flute").fromPerson("Oak mother",30).dialog(30,null,1).key(),Ra=d(40,"Flute of Lime").fromPerson("Portoa queen",56).direct(39161).dialog(56,
null,4).dialog(56,null,5,0).key(),Sa=d(41,"Gas Mask").direct("Akahana in Brynmaer",251902).npcSpawn(22,24).key(),Od=d(42,"Power Ring").chest().bonus(),Pd=d(43,"Warrior Ring").fromPerson("Akahana's friend",84).dialog(84,null,2).bonus(),Qd=d(44,"Iron Necklace").chest().bonus(),Rd=d(45,"Deo's Pendant").fromPerson("Deo",90).dialog(90,null,0).bonus(),Vb=d(46,"Rabbit Boots").bossDrop("Vampire 1",0).npcSpawn(192).key(),Wb=d(47,f("Ts",!0)?"Speed Boots":"Leather Boots").chest().bonus(),Xb=d(48,"Shield Ring").direct("Akahana in waterfall cave",
250543).npcSpawn(22,87,2).bonus(),qb=d(49,"Alarm Flute").fixed(),Yb=d(50,"Windmill Key").fromPerson("Windmill guard",20).dialog(20,14,0).npcSpawn(20,14,1).key(),Zb=d(51,"Key to Prison").chest().key(),$b=d(52,"Key to Styx").fromPerson("Zebu in Shyron",94,1).trigger(128,2).dialog(94,242,0).dialog(98,242,0).key(),ac=d(53,"Fog Lamp").chest().key(),rb=d(54,"Shell Flute").fromPerson("Dolphin",99,1).npcSpawn(99).key(),bc=d(55,"Eye Glasses").fromPerson("Clark",68).dialog(68,233,1).key(),cc=d(56,"Broken Statue").bossDrop("Sabera 1",
4).npcSpawn(127,101).npcSpawn(70).npcSpawn(71).npcSpawn(106).npcSpawn(132).npcSpawn(142).dialog(61).dialog(62).dialog(63).dialog(64).dialog(65).dialog(66).dialog(67).dialog(68,233).trigger(182).key(),dc=d(57,"Glowing Lamp").direct("Kensu in lighthouse",250638).npcSpawn(126,98,1).key(),ec=d(59,"Love Pendant").chest("Underground channel").invisible(254890).key(),fc=d(60,"Kirisa Plant").chest("Kirisa meadow").invisible(254886).key(),sb=d(61,"Ivory Statue").bossDrop("Karmine",9).npcSpawn(200).key(),gc=
d(62,"Bow of Moon").fromPerson("Aryllis",35).direct(251624).dialog(35,null,1).key(),hc=d(63,"Bow of Sun").chest().key(),ic=d(64,"Bow of Truth").fromPerson("Azteca",131).npcSpawn(131,156,1).dialog(131,null,0).key(),tb=(new Magic$$module$nodes(a,65,"Refresh",65,null)).fromPerson("Zebu at windmill",94).direct(251665).dialog(94,16,3).trigger(180,1),Ta=(new Magic$$module$nodes(a,66,"Paralysis",66,null)).direct("Zebu at Mt. Sabre summit",251477).trigger(141).trigger(178),Z=(new Magic$$module$nodes(a,67,
"Telepathy",67,null)).direct("Tornel at Stom's house",223220).npcSpawn(95,30,1).trigger(133,1),jc=(new Magic$$module$nodes(a,68,"Teleport",68,null)).fromPerson("Tornel on Mt. Sabre",95).dialog(95,33,0),Sd=(new Magic$$module$nodes(a,69,"Recover",69,null)).direct("Asina in Portoa",250361),kc=(new Magic$$module$nodes(a,70,"Barrier",70,null)).direct("Asina on Angry sea",251609).trigger(132,0),pa=(new Magic$$module$nodes(a,71,"Change",71,null)).direct("Kensu in Swan",251614).npcSpawn(116,241,1),D=(new Magic$$module$nodes(a,
72,"Flight",72,null)).weight(5).direct("Kensu in Draygonia Fortress",250255),ub=d(40,"Flute of Lime").chest(void 0,91).key(),Td=Fa.bossDrop("Vampire 2",12,97).npcSpawn(204).key(),H=d(112,"Mimic"),lc=(new Trigger$$module$nodes(a,"Talked to Leaf Elder")).get(M),mc=new Trigger$$module$nodes(a,"Talked to Leaf Student"),nc=(new Trigger$$module$nodes(a,"Buy alarm flute")).get(qb),vb=new Trigger$$module$nodes(a,"Talked to Zebu in cave"),Ud=(new Trigger$$module$nodes(a,"Woke up Windmill Guard")).get(Yb),
Ua=new Trigger$$module$nodes(a,"Started Windmill"),oc=(new Trigger$$module$nodes(a,"Learned Refresh")).get(tb),Vd=(new Trigger$$module$nodes(a,"Gave Statue to Akahana")).get(Sa),Wd=(new Trigger$$module$nodes(a,"Fought Stom")).get(Z),pc=new Trigger$$module$nodes(a,"Visited Oak"),qc=new Trigger$$module$nodes(a,"Talked to Oak Mother"),wb=new Trigger$$module$nodes(a,"Rescued Oak Child"),Xd=(new Trigger$$module$nodes(a,"Talked to Oak Mother Again")).get(Ub),Yd=(new Trigger$$module$nodes(a,"Talked to Oak Elder")).get(S),
Zd=(new Trigger$$module$nodes(a,"Talked to Tornel on Mt Sabre")).get(jc),rc=new Trigger$$module$nodes(a,"Villagers Abducted"),sc=new Trigger$$module$nodes(a,"Talked to Rabbit in Leaf"),$d=(new Trigger$$module$nodes(a,"Learned Paralysis")).get(Ta),tc=new Trigger$$module$nodes(a,"Talked to Portoa Queen"),uc=new Trigger$$module$nodes(a,"Talked to Fortune Teller"),vc=new Trigger$$module$nodes(a,"Visited Underground Channel"),ae=(new Trigger$$module$nodes(a,"Sent to Waterfall Cave")).get(Ra),be=(new Trigger$$module$nodes(a,
"Cured Akahana")).get(Xb),wc=(new Trigger$$module$nodes(a,"Talked to Rage")).get(Ea),xc=new Trigger$$module$nodes(a,"Mesia recording played"),ce=(new Trigger$$module$nodes(a,"Talked to Asina")).get(Sd),yc=(new Trigger$$module$nodes(a,"Healed Dolphin")).get(rb),xb=new Trigger$$module$nodes(a,"Returned Fog Lamp"),zc=new Trigger$$module$nodes(a,"Talked to Kensu in Cabin"),Ac=new Trigger$$module$nodes(a,"Talked to Joel Elder"),de=(new Trigger$$module$nodes(a,"Talked to Clark")).get(bc),ee=(new Trigger$$module$nodes(a,
"Talked to Kensu in Lighthouse")).get(dc),yb=new Trigger$$module$nodes(a,"Calmed the Angry Sea"),fe=(new Trigger$$module$nodes(a,"Learned Barrier")).get(kc),Bc=new Trigger$$module$nodes(a,"Talked to Stom in Swan Hut"),Cc=new Trigger$$module$nodes(a,"Talked to Kensu in Swan tavern"),Dc=new Trigger$$module$nodes(a,"Talked to Kensu at Swan dance"),ge=(new Trigger$$module$nodes(a,"Returned Kensu's love pendant")).get(pa),he=(new Trigger$$module$nodes(a,"Talked to Amazones Queen")).get(gc),zb=new Trigger$$module$nodes(a,
"Entered Shyron"),ie=(new Trigger$$module$nodes(a,"Talked to Zebu in Shyron")).get($b),Ec=new Trigger$$module$nodes(a,"Shyron Massacre"),je=(new Trigger$$module$nodes(a,"Saved Kensu")).get(D),ke=(new Trigger$$module$nodes(a,"Talked to Deo")).get(Rd),le=(new Trigger$$module$nodes(a,"Talked to Akahana's Friend")).get(Pd),me=(new Trigger$$module$nodes(a,"Get Bow of Truth")).get(ic),ne=(new Trigger$$module$nodes(a,"Forged Crystalis")).get(mb),oe=new Trigger$$module$nodes(a,"Win"),Va=(new Condition$$module$nodes(a,
"Early flight")).option(kb).option(lb),Wa=(new Condition$$module$nodes(a,"Sword charge glitch")).option(Id).option(Ca),pe=(new Condition$$module$nodes(a,"Rabbit skip")).option(n).option(Ca),Ab=(new Condition$$module$nodes(a,"Talk glitch")).option(k).option(Ca),qe=(new Condition$$module$nodes(a,"Ghetto flight")).option(h).option(Ca),re=(new Condition$$module$nodes(a,"Wild warp")).option(Gd).option(Ca,Hd),Xa=(new Condition$$module$nodes(a,"Any level 2 sword")).option(M,Ka).option(M,Da).option(S,La).option(S,
Ma).option(N,Ea).option(N,Na).option(K,Oa).option(K,Pa),v=(new Condition$$module$nodes(a,"Destroy stone")).option(M,Ka).option(M,Da).option(Wa,M,Xa),w=(new Condition$$module$nodes(a,"Destroy ice")).option(S,La).option(S,Ma).option(Wa,S,Xa),r=(new Condition$$module$nodes(a,"Cross rivers")).option(N,Ea).option(N,Na).option(D,Va).option(Wa,N,Xa),qa=(new Condition$$module$nodes(a,"Destroy iron")).option(K,Oa).option(K,Pa).option(Wa,K,Xa),I=(new Condition$$module$nodes(a,"Any sword")).option(M).option(S).option(N).option(K),
se=(new Condition$$module$nodes(a,"Match insect sword (fire/water/thunder)")).option(S).option(N).option(K).option(Sa,q,M).option(Sa,G,M),te=(new Condition$$module$nodes(a,"Speed boots")).option(Wb,g),Fc=(new Condition$$module$nodes(a,"Climb slopes")).option(Vb).option(D,Va).option(te),ue=(new Condition$$module$nodes(a,"Enter Mt Sabre North")).option(sc).option(pe),Gc=(new Condition$$module$nodes(a,"Asina in her room")).option(xc),ve=(new Condition$$module$nodes(a,"Paralysis or Ball of Water")).option(Ta).option(Gc).option(Ab),
we=(new Condition$$module$nodes(a,"Ride dolphin")).option(rb,zc),T=(new Condition$$module$nodes(a,"Cross sea")).option(we).option(D,Va),xe=(new Condition$$module$nodes(a,"Cross whirlpool")).option(yb).option(D,Va).option(qe),U=(new Condition$$module$nodes(a,"Refresh if needed")).option(G).option(ja).option(tb),Hc=(new Condition$$module$nodes(a,"Wind magic")).option(G).option(m,U).option(Ka,Da,U),Ic=(new Condition$$module$nodes(a,"Fire magic")).option(G).option(m,U).option(La,Ma,U),Jc=(new Condition$$module$nodes(a,
"Water magic")).option(G).option(m,U).option(Ea,Na,U),ye=(new Condition$$module$nodes(a,"Thunder magic")).option(G).option(m,U).option(Oa,U).option(Pa,U),ze=(new Condition$$module$nodes(a,"Flute of lime or glitch")).option(Ra).option(Ab).option(lb,ub),Ae=(new Condition$$module$nodes(a,"Second flute of lime")).option(ub).option(lb,Ra),Kc=(new Condition$$module$nodes(a,"Change or glitch")).option(pa).option(Ab),Bb=(new Condition$$module$nodes(a,"Pass shooting statues")).option(kc).option(tb,Xb).option(G).option(z),
Be=(new Condition$$module$nodes(a,"Healed dolphin if required")).option(yc).option(u),Lc=(new Condition$$module$nodes(a,"Match sword of wind")).option(M).option(G,I).option(q,I),Mc=(new Condition$$module$nodes(a,"Match sword of fire")).option(S).option(G,I).option(q,I),Nc=(new Condition$$module$nodes(a,"Match sword of water")).option(N).option(G,I).option(q,I),Ce=(new Condition$$module$nodes(a,"Match sword of thunder")).option(K).option(G,I).option(q,I),Ya=(new Condition$$module$nodes(a,"Travel swamp")).option(Sa).option(p).option(G),
De=(new Condition$$module$nodes(a,"Calmed sea if required")).option(yb).option(l),Ee=e(0,"Vampire 1",I).get(Vb),Fe=e(1,"Insect",Ub,se).get(La),Ge=e(2,"Kelbesque 1",Lc,Hc).get(Ma),He=e(12,"Vampire 2",I).get(Td),Oc=e(4,"Sabera 1",Mc,Ic).get(cc),Ie=e(5,"Mado 1",Nc,Jc).get(Oa),Je=e(6,"Kelbesque 2",Lc,Hc).get(pb),Ke=e(7,"Sabera 2",Mc,Ic).get(Sb),Le=e(8,"Mado 2",Nc,Jc).get(Jd),Me=e(9,"Karmine",Ce,ye).get(sb),Ne=e(10,"Draygon 1",I).get(Md),Oe=e(null,"Statues",hc,gc),Pe=e(11,"Draygon 2",I,ic),Qe=e(13,"Dyna",
mb),O=new Area$$module$nodes(a,"Leaf"),ra=new Area$$module$nodes(a,"Valley of Wind"),L=new Area$$module$nodes(a,"Sealed Cave"),ka=new Area$$module$nodes(a,"Cordel Plain"),sa=new Area$$module$nodes(a,"Brynmaer"),ta=new Area$$module$nodes(a,"Amazones"),B=new Area$$module$nodes(a,"Mt Sabre West"),t=new Area$$module$nodes(a,"Mt Sabre North"),Za=new Area$$module$nodes(a,"Nadare's"),Ga=new Area$$module$nodes(a,"Oak"),aa=new Area$$module$nodes(a,"Waterfall Valley"),A=new Area$$module$nodes(a,"Portoa"),ba=
new Area$$module$nodes(a,"Waterfall Cave"),C=new Area$$module$nodes(a,"Fog Lamp Cave"),ca=new Area$$module$nodes(a,"Kirisa Plant Cave"),la=new Area$$module$nodes(a,"Angry Sea"),da=new Area$$module$nodes(a,"Joel"),F=new Area$$module$nodes(a,"Evil Spirit Island"),ea=new Area$$module$nodes(a,"Sabera's Castle"),P=new Area$$module$nodes(a,"Swan"),x=new Area$$module$nodes(a,"Mt Hydra"),fa=new Area$$module$nodes(a,"Shyron"),ma=new Area$$module$nodes(a,"Styx"),na=new Area$$module$nodes(a,"Goa"),$a=new Area$$module$nodes(a,
"Draygonia Fortress 1"),Q=new Area$$module$nodes(a,"Draygonia Fortress 2"),ua=new Area$$module$nodes(a,"Draygonia Fortress 3"),J=new Area$$module$nodes(a,"Draygonia Fortress 4"),E=new Area$$module$nodes(a,"Oasis Cave");new Area$$module$nodes(a,"Desert");const R=new Area$$module$nodes(a,"Sahara"),va=new Area$$module$nodes(a,"Pyramid Front"),V=new Area$$module$nodes(a,"Pyramid Back"),ha=new Area$$module$nodes(a,"Tower"),Cb=(new Location$$module$nodes(a,0,O,"Start")).overworld().start(),Re=(new Location$$module$nodes(a,
0,O,"Mezame Shrine")).overworld().from(Cb),Se=(new Location$$module$nodes(a,1,O,"Outside Start")).overworld().connect(Re),ia=(new Location$$module$nodes(a,2,O,"Town")).town().connect(Se),Ha=(new Location$$module$nodes(a,3,ra,"Main")).overworld().connect(ia).trigger(oc,Ua),Pc=(new Location$$module$nodes(a,3,ra,"Outside Windmill")).overworld(),Qc=(new Location$$module$nodes(a,4,L,"Tunnel 1 (entrance)")).cave().from(Ha,Ua),Te=(new Location$$module$nodes(a,5,L,"Tunnel 2 (over bridge)")).cave().connect(Qc),
Ue=(new Location$$module$nodes(a,6,L,"Tunnel 6 (herb dead end)")).cave().chest(X,15),Rc=(new Location$$module$nodes(a,7,L,"Tunnel 4a (ball corridor)")).cave().chest(X,20,80).chest(Ka,21);(new Location$$module$nodes(a,7,L,"Tunnel 4b (antidote dead end)")).cave().connect(Rc,v).chest(Qa,19);const Ve=(new Location$$module$nodes(a,8,L,"Tunnel 5 (warp boots dead end)")).cave().chest(ob,14),We=(new Location$$module$nodes(a,9,L,"Tunnel 3a (branch, front)")).cave().connect(Te).connectTo(Rc).connectTo(Ve),
Xe=(new Location$$module$nodes(a,9,L,"Tunnel 3b (branch, back)")).cave().connect(We,v).connectTo(Ue),Ye=(new Location$$module$nodes(a,10,L,"Tunnel 7 (boss)")).cave().connect(Xe).boss(Ee),Ze=(new Location$$module$nodes(a,12,L,"Tunnel 8a (exit, above wall)")).cave().connect(Ye),$e=(new Location$$module$nodes(a,12,L,"Tunnel 8b (exit, below wall")).cave().connect(Ze,v);(new Location$$module$nodes(a,14,ra,"Windmill Cave")).cave().connect(Ha).connectTo(Pc).trigger(Ud,qb,vb);(new Location$$module$nodes(a,
15,ra,"Windmill")).misc().connect(Pc).trigger(Ua,Yb);const af=(new Location$$module$nodes(a,16,ra,"Zebu's Cave Front")).cave().connect(Ha).trigger(vb,lc,mc).trigger(oc,Ua,vb),bf=(new Location$$module$nodes(a,16,ra,"Zebu's Cave Back")).cave().trigger(rc).connect(af,w),cf=(new Location$$module$nodes(a,17,B,"Tunnel 1 (to Zebu)")).cave().connect(bf),wa=(new Location$$module$nodes(a,20,ka,"West")).overworld().connect($e),df=(new Location$$module$nodes(a,20,ka,"South")).overworld().connect(wa,r),Sc=(new Location$$module$nodes(a,
21,ka,"East")).overworld().connect(wa).chest(Tb,24),Ia=(new Location$$module$nodes(a,24,sa,"Town")).town().connect(wa).trigger(Vd,Tb),ef=(new Location$$module$nodes(a,25,ka,"Outside Stom's House")).town().connect(wa),Db=(new Location$$module$nodes(a,26,ka,"Swamp")).overworld().connect(Sc,Ya).trigger(wb,qc,Ya);(new Location$$module$nodes(a,26,ka,"Swamp Insect Area")).overworld().connect(Db,Ya).boss(Fe);const ab=(new Location$$module$nodes(a,27,ta,"Town")).town().connect(df),bb=(new Location$$module$nodes(a,
28,Ga,"Town")).town().connect(Db,Ya).trigger(pc);(new Location$$module$nodes(a,30,ka,"Stom's House")).house().connect(ef).trigger(Wd,pc);const xa=(new Location$$module$nodes(a,32,B,"Entrance")).overworld().connect(wa).connect(cf),ff=(new Location$$module$nodes(a,32,B,"Up Slope")).overworld().from(xa,Fc).to(xa),gf=(new Location$$module$nodes(a,32,B,"Dead End (warp boots)")).overworld().chest(ob,24,106),Tc=(new Location$$module$nodes(a,33,B,"Upper")).overworld().from(xa,D).to(xa),hf=(new Location$$module$nodes(a,
33,B,"Tornel Dead End")).overworld().trigger(Zd,Da).chest(Y,23,105),Uc=(new Location$$module$nodes(a,34,B,"Tunnel 2a (fork at start)")).cave().connect(xa);(new Location$$module$nodes(a,34,B,"Tunnel 2b (left branch to dead end)")).cave().connect(Uc,w).connectTo(gf);const jf=(new Location$$module$nodes(a,34,B,"Tunnel 2c (right branch to upper)")).cave().connect(Uc,w),kf=(new Location$$module$nodes(a,35,B,"Tunnel 3a (tunnel to upper, with herb chest)")).cave().connect(jf).chest(X,23,82),lf=(new Location$$module$nodes(a,
35,B,"Tunnel 3b (tunnel to upper, branch below ice)")).cave().connect(kf,w).connectTo(Tc),Vc=(new Location$$module$nodes(a,36,B,"Tunnel 4a (branch to upper or Tornel)")).cave().connect(lf);(new Location$$module$nodes(a,36,B,"Tunnel 4b (out to upper)")).cave().connect(Vc,w).connectTo(Tc);const mf=(new Location$$module$nodes(a,37,B,"Tunnel 5 (tiny connector)")).cave().connect(Vc),nf=(new Location$$module$nodes(a,38,B,"Tunnel 6a (exit to Tornel, above ice)")).cave().connect(mf);(new Location$$module$nodes(a,
38,B,"Tunnel 6b (exit to Tornel, below ice)")).cave().connect(nf,w).connectTo(hf);const of=(new Location$$module$nodes(a,39,B,"Tunnel 7a (tornado bracelet, lower)")).cave().connect(ff),pf=(new Location$$module$nodes(a,39,B,"Tunnel 7b (tornado bracelet, middle)")).cave().connect(of,w);(new Location$$module$nodes(a,39,B,"Tunnel 7c (tornado bracelet, upper)")).cave().connect(pf,w).chest(Da,25);const cb=(new Location$$module$nodes(a,40,t,"Entrance")).overworld().connect(Sc,jc,ue),db=(new Location$$module$nodes(a,
40,t,"Upper")).overworld().from(cb,D).to(cb),Eb=(new Location$$module$nodes(a,40,t,"Summit (boss)")).overworld().from(db,D).to(db).boss(Ge),Wc=(new Location$$module$nodes(a,41,t,"Connector")).overworld(),Fb=(new Location$$module$nodes(a,41,t,"Middle Left")).overworld(),qf=(new Location$$module$nodes(a,41,t,"Middle Right")).overworld().from(Fb,Fc).to(Fb),Xc=(new Location$$module$nodes(a,42,t,"Tunnel 2a (from entrance to connector)")).cave().connectTo(Wc);(new Location$$module$nodes(a,42,t,"Tunnel 2b (under bridge, to antidote)")).cave().connect(Xc,
w).chest(Qa,23,94);const Yc=(new Location$$module$nodes(a,43,t,"Tunnel 3a (branch after connector)")).cave().connect(Wc),rf=(new Location$$module$nodes(a,43,t,"Tunnel 3b (right branch)")).cave().connect(Yc,w),sf=(new Location$$module$nodes(a,43,t,"Tunnel 3c (upper branch)")).cave().connect(Yc,w);(new Location$$module$nodes(a,44,t,"Tunnel 4 (over bridge, to middle)")).cave().connect(sf).connectTo(Fb);const Zc=(new Location$$module$nodes(a,45,t,"Tunnel 5a (E-shaped, from right branch)")).cave().connect(rf).connectTo(qf);
(new Location$$module$nodes(a,45,t,"Tunnel 5b (dead-end with herb)")).cave().connect(Zc,w).chest(X,22,83);const tf=(new Location$$module$nodes(a,46,t,"Tunne; 6a (S-shaped hall, right)")).cave().connect(Zc),uf=(new Location$$module$nodes(a,46,t,"Tunne; 6b (S-shaped hall, middle)")).cave().connect(tf,w),vf=(new Location$$module$nodes(a,46,t,"Tunnel 6c (S-shaped hall, left)")).cave().connect(uf,w),$c=(new Location$$module$nodes(a,47,t,"Prison (hallway)")).cave().connect(db),wf=(new Location$$module$nodes(a,
48,t,"Left Cell (shopkeepers)")).cave().from($c,w);(new Location$$module$nodes(a,49,t,"Left Cell 2 (back, with prison key)")).cave().from(wf,w).chest(Zb,13);const xf=(new Location$$module$nodes(a,50,t,"Right Cell (villagers)")).cave().from($c,w),yf=(new Location$$module$nodes(a,51,t,"Tunnel 8 (behind right cell, toward summit)")).cave().from(xf,w);(new Location$$module$nodes(a,52,t,"Tunnel 9 (connector to summit)")).cave().connect(yf).connectTo(Eb);const zf=(new Location$$module$nodes(a,53,t,"Tunnel 10a (summit cave, front)")).cave().from(Eb,
Zb).to(Eb),Af=(new Location$$module$nodes(a,53,t,"Tunnel 10b (summit cave, behind ice)")).cave().connect(zf,w).trigger($d);(new Location$$module$nodes(a,56,t,"Tunnel 1 (leads from main entrance)")).cave().connect(cb).connectTo(Xc);(new Location$$module$nodes(a,57,t,"Tunnel 7 (to upper)")).cave().connect(vf).connectTo(db);const Bf=(new Location$$module$nodes(a,60,Za,"Inn")).town(),Cf=(new Location$$module$nodes(a,61,Za,"Tool Shop")).house(),Df=(new Location$$module$nodes(a,62,Za,"Back Room")).house(),
Gb=(new Location$$module$nodes(a,64,aa,"Summit")).overworld().connect(Af),eb=(new Location$$module$nodes(a,64,aa,"Northwest")).overworld().from(Gb).to(Gb,D),Ef=(new Location$$module$nodes(a,64,aa,"Northeast")).overworld().connect(eb,r),ad=(new Location$$module$nodes(a,65,aa,"Southwest")).overworld().connect(eb),Ff=(new Location$$module$nodes(a,65,aa,"Southeast")).overworld().connect(ad,r),bd=(new Location$$module$nodes(a,66,aa,"Lime Tree Valley")).overworld().connect(ad).connect(Ha,Ba),Gf=(new Location$$module$nodes(a,
67,aa,"Lime Tree Lake (Rage)")).cave().connect(bd).trigger(wc,N),Hf=(new Location$$module$nodes(a,68,ca,"Tunnel 1a (entrance)")).cave().connect(Ff),If=(new Location$$module$nodes(a,68,ca,"Tunnel 1b (behind wall)")).cave().connect(Hf,v),cd=(new Location$$module$nodes(a,69,ca,"Tunnel 2a (main path, before wall)")).cave().connect(If);(new Location$$module$nodes(a,69,ca,"Tunnel 2b (dead end, antidote)")).cave().connect(cd,v).chest(Qa,25,95);const Jf=(new Location$$module$nodes(a,69,ca,"Tunnel 2c (main path, after wall)")).cave().connect(cd,
v),Kf=(new Location$$module$nodes(a,70,ca,"Tunnel 3a (last room, before wall)")).cave().connect(Jf),Lf=(new Location$$module$nodes(a,70,ca,"Tunnel 3b (last room, after wall)")).cave().connect(Kf,v);(new Location$$module$nodes(a,71,ca,"Meadow")).overworld().connect(Lf).chest(fc,14);const Mf=(new Location$$module$nodes(a,72,C,"Tunnel 1a (entrance)")).cave().connect(Ef),dd=(new Location$$module$nodes(a,72,C,"Tunnel 1b (past wall)")).cave().connect(Mf,v);(new Location$$module$nodes(a,72,C,"Tunnel 1c (dead end, lysisPlant)")).cave().connect(dd,
v).chest(nb,24);const Nf=(new Location$$module$nodes(a,73,C,"Tunnel 2 (tiny connector)")).cave().connect(dd),ed=(new Location$$module$nodes(a,74,C,"Tunnel 3a (upper branch)")).cave().connect(Nf);(new Location$$module$nodes(a,74,C,"Tunnel 3b (dead end, mimic)")).cave().connect(ed,v).chest(H,21);const fd=(new Location$$module$nodes(a,74,C,"Tunnel 3c (short passage with mimic)")).cave().connect(ed,v).chest(H,22),Of=(new Location$$module$nodes(a,74,C,"Tunnel 3d (lower branch)")).cave().connect(fd,v);
(new Location$$module$nodes(a,75,C,"Tunnel 4 (dead end loop)")).cave().connect(Of);const gd=(new Location$$module$nodes(a,76,C,"Tunnel 5a (right branch over bridge)")).cave().connect(fd),Pf=(new Location$$module$nodes(a,76,C,"Tunnel 5b (past wall over bridge)")).cave().connect(gd,v),Qf=(new Location$$module$nodes(a,77,C,"Tunnel 6a (from left branch)")).cave().connect(gd),Rf=(new Location$$module$nodes(a,77,C,"Tunnel 6b (reconvergence)")).cave().connect(Qf,v).connect(Pf),Sf=(new Location$$module$nodes(a,
77,C,"Tunnel 6c (between walls)")).cave().connect(Rf,v),Tf=(new Location$$module$nodes(a,77,C,"Tunnel 6d (under bridge)")).cave().connect(Sf,v),Uf=(new Location$$module$nodes(a,78,C,"Tunnel 7a (over second bridge)")).cave().connect(Tf),Vf=(new Location$$module$nodes(a,78,C,"Tunnel 7b (past wall)")).cave().connect(Uf,v),Wf=(new Location$$module$nodes(a,79,C,"Tunnel 8a (under second bridge)")).cave().connect(Vf);(new Location$$module$nodes(a,79,C,"Tunnel 8b (fog lamp)")).cave().connect(Wf,v).chest(ac,
19);const oa=(new Location$$module$nodes(a,80,A,"Town")).town().connect(eb),hd=(new Location$$module$nodes(a,81,A,"Fishherman Island")).town().connect(oa);(new Location$$module$nodes(a,82,aa,"Mesia Shrine")).cave().trigger(xc).connect(Gf,r,wc);const id=(new Location$$module$nodes(a,84,ba,"Tunnel 1a (entrance)")).cave().connect(eb);(new Location$$module$nodes(a,84,ba,"Tunnel 1b (dead end, mimic)")).cave().connect(id,w).chest(H,19);const Xf=(new Location$$module$nodes(a,84,ba,"Tunnel 1c (past ice)")).cave().connect(id,
w),jd=(new Location$$module$nodes(a,85,ba,"Tunnel 2 (stoned pair)")).cave().connect(Xf),Hb=(new Location$$module$nodes(a,86,ba,"Tunnel 3 (wide medusa hallways)")).cave().from(jd,ze).to(jd,Ra),Yf=(new Location$$module$nodes(a,87,ba,"Tunnel 4a (left entrance)")).cave().from(Hb,w).chest(ub,25).trigger(be,Ae);(new Location$$module$nodes(a,87,ba,"Tunnel 4b (right entrance)")).cave().from(Hb,w).connect(Yf,D);(new Location$$module$nodes(a,87,ba,"Tunnel 4c (sword of water)")).cave().connect(Hb,w).chest(N,
24);const kd=(new Location$$module$nodes(a,88,ha,"Entrance")).misc(),Zf=(new Location$$module$nodes(a,89,ha,"Level 1")).misc().from(kd),$f=(new Location$$module$nodes(a,90,ha,"Level 2")).misc().from(Zf),ag=(new Location$$module$nodes(a,91,ha,"Level 3")).misc().from($f),ld=(new Location$$module$nodes(a,92,ha,"Outside Mesia Room")).misc().from(ag),bg=(new Location$$module$nodes(a,93,ha,"Outside Dyna Room")).misc().from(ld,mb);(new Location$$module$nodes(a,94,ha,"Mesia")).misc().connect(ld).trigger(ne);
(new Location$$module$nodes(a,95,ha,"Dyna")).misc().from(bg).boss(Qe).trigger(oe);const Ib=(new Location$$module$nodes(a,96,la,"Cabin Beach")).sea().from(hd,xb),ya=(new Location$$module$nodes(a,96,la,"South")).sea().connect(Ib,T),cg=(new Location$$module$nodes(a,96,la,"Joel Beach")).sea().connect(ya,T),md=(new Location$$module$nodes(a,96,da,"Outside Lighthouse")).sea();(new Location$$module$nodes(a,96,la,"Altar")).sea().connect(ya,T).trigger(yb,dc,cc);const dg=(new Location$$module$nodes(a,96,la,
"North")).sea().to(ya,T).from(ya,T,xe).trigger(fe,De),eg=(new Location$$module$nodes(a,96,la,"Swan Beach")).sea().connect(dg,T);(new Location$$module$nodes(a,97,la,"Cabin")).misc().connect(Ib).trigger(zc,xb);(new Location$$module$nodes(a,98,da,"Lighthouse")).misc().connect(md).trigger(ee,qb);const fb=(new Location$$module$nodes(a,100,A,"Underground Channel 1 (from throne room)")).sea().trigger(vc),fg=(new Location$$module$nodes(a,100,A,"Underground Channel 2 (to fortune teller)")).sea().connect(fb,
r),nd=(new Location$$module$nodes(a,100,A,"Underground Channel 3 (from fortune teller)")).sea().connect(fb,D),od=(new Location$$module$nodes(a,100,A,"Underground Channel 4 (asina)")).sea().connect(nd,r),gg=(new Location$$module$nodes(a,100,A,"Underground Channel 5 (dolphin)")).sea().connect(od,r).trigger(yc,X,Ea);(new Location$$module$nodes(a,100,A,"Underground Channel 6 (water)")).sea().connect(gg,T).connectTo(ya,T).chest(ec,17);const Jb=(new Location$$module$nodes(a,101,F,"Zombie Town")).town(),
hg=(new Location$$module$nodes(a,104,F,"Tunnel 1 (entrance)")).sea().connect(ya,Ac,T),pd=(new Location$$module$nodes(a,105,F,"Tunnel 2a (start)")).cave().connect(hg);(new Location$$module$nodes(a,105,F,"Tunnel 2b (dead end to left)")).cave().connect(pd,r);const ig=(new Location$$module$nodes(a,105,F,"Tunnel 2c (across first river)")).cave().connect(pd,r),qd=(new Location$$module$nodes(a,105,F,"Tunnel 2d (across second river)")).cave().connect(ig,r);(new Location$$module$nodes(a,105,F,"Tunnel 2e (dead end, magic ring)")).cave().connect(qd,
v).chest(Y,29);const jg=(new Location$$module$nodes(a,105,F,"Tunnel 2f (stair down)")).cave().connect(qd,v),kg=(new Location$$module$nodes(a,106,F,"Tunnel 3a (main area)")).cave().connect(jg).connectTo(Jb).chest(nb,25,92),lg=(new Location$$module$nodes(a,106,F,"Tunnel 3b (left area toward items)")).cave().connect(kg,v),mg=(new Location$$module$nodes(a,107,F,"Tunnel 4a (right side, mimic)")).cave().connect(lg).chest(H,14);(new Location$$module$nodes(a,107,F,"Tunnel 4b (left side, iron necklace)")).cave().connect(mg,
r).chest(Qd,15);const Kb=(new Location$$module$nodes(a,108,ea,"Floor 1")).fortress().connect(Jb),ng=(new Location$$module$nodes(a,108,ea,"Miniboss")).fortress().boss(He).connect(Kb);(new Location$$module$nodes(a,109,ea,"Floor 2a (left stair)")).fortress().connect(Kb).chest(Fa,19);const og=(new Location$$module$nodes(a,109,ea,"Floor 2b (right stair)")).fortress().connect(ng).chest(X,30,85),pg=(new Location$$module$nodes(a,110,ea,"Floor 3a (toward boss)")).fortress().connect(og),rd=(new Location$$module$nodes(a,
110,ea,"Floor 3b (boss room)")).fortress().connect(pg);(new Location$$module$nodes(a,110,ea,"Boss")).fortress().boss(Oc).connect(rd);(new Location$$module$nodes(a,110,ea,"Floor 3c (back room trap)")).fortress().from(rd).to(Kb);const qg=(new Location$$module$nodes(a,112,da,"Secret Passage")).cave().connectTo(md),gb=(new Location$$module$nodes(a,113,da,"Town")).town().connect(cg),W=(new Location$$module$nodes(a,114,P,"Town")).town().connect(eg),rg=(new Location$$module$nodes(a,115,P,"Inside Gate")).overworld().connect(W),
sg=(new Location$$module$nodes(a,115,P,"Outside Gate")).overworld().from(rg,pa),hb=(new Location$$module$nodes(a,120,na,"Valley")).overworld().connect(sg),Lb=(new Location$$module$nodes(a,124,x,"Entrance")).overworld().connect(hb),tg=(new Location$$module$nodes(a,124,x,"Over first river toward Shyron")).overworld().connect(Lb,r),sd=(new Location$$module$nodes(a,124,x,"After first tunnel")).overworld(),td=(new Location$$module$nodes(a,124,x,"Door to Styx")).overworld().connect(sd,r),ug=(new Location$$module$nodes(a,
124,x,"Dead end (no item)")).overworld(),vg=(new Location$$module$nodes(a,124,x,"Dead end (fruit of lime)")).overworld().chest(Nd,26),wg=(new Location$$module$nodes(a,124,x,"Dead end (magic ring)")).overworld().chest(Y,25,101),ud=(new Location$$module$nodes(a,124,x,"Outside tunnel to bow")).overworld();(new Location$$module$nodes(a,124,x,"Floating island (bow of sun)")).overworld().connect(ud,D).chest(hc,24);const xg=(new Location$$module$nodes(a,125,x,"Tunnel 1 (to Shyron)")).cave().connect(tg),
yg=(new Location$$module$nodes(a,126,x,"Outside Shyron")).overworld().connect(xg);(new Location$$module$nodes(a,127,x,"Tunnel 2 (fork)")).cave().connect(Lb).connectTo(vg).connectTo(sd);const vd=(new Location$$module$nodes(a,128,x,"Tunnel 3 (caves)")).cave().connect(td).connect(ug),wd=(new Location$$module$nodes(a,129,x,"Tunnel 4 (left branch of cave)")).cave().connect(vd);(new Location$$module$nodes(a,130,x,"Tunnel 5 (dead end, medical herb)")).cave().connect(wd).chest(X,15,86);const zg=(new Location$$module$nodes(a,
131,x,"Tunnel 6a (left-then-right)")).cave().connect(wd),Ag=(new Location$$module$nodes(a,131,x,"Tunnel 6b (past wall)")).cave().connect(zg,v),Bg=(new Location$$module$nodes(a,132,x,"Tunnel 7 (wide hall)")).cave().connect(Ag);(new Location$$module$nodes(a,133,x,"Tunnel 8 (red slimes)")).cave().from(Bg,v).connectTo(ud).chest(H,23);const Cg=(new Location$$module$nodes(a,134,x,"Tunnel 9 (right branch, infinite loop)")).cave().connect(vd),Dg=(new Location$$module$nodes(a,135,x,"Tunnel 10a (toward magic ring)")).cave().connect(Cg);
(new Location$$module$nodes(a,135,x,"Tunnel 10b (past wall)")).cave().connect(Dg,v).connectTo(wg);const xd=(new Location$$module$nodes(a,136,ma,"Entrance")).fortress().from(td,$b,Bb),Eg=(new Location$$module$nodes(a,137,ma,"Left branch")).fortress().connect(xd).chest(H,19),Fg=(new Location$$module$nodes(a,137,ma,"Left branch, past one bridge")).fortress().connect(Eg,r),Gg=(new Location$$module$nodes(a,137,ma,"Left branch, past two bridges")).fortress().connect(Fg,r).chest(X,29,87),Hg=(new Location$$module$nodes(a,
137,ma,"Right branch")).fortress().connect(xd);(new Location$$module$nodes(a,137,ma,"Right branch, across water")).fortress().connect(Hg,D).chest(H,20).chest(H,21).chest(Kd,28);(new Location$$module$nodes(a,138,ma,"Upper floor")).fortress().connect(Gg).chest(K,27);const za=(new Location$$module$nodes(a,140,fa,"Town")).town().connect(yg,Kc).trigger(zb),Ja=(new Location$$module$nodes(a,142,na,"Town")).town().connect(hb),yd=(new Location$$module$nodes(a,143,E,"Draygonia Fortress Basement 1 (front)")).fortress();
(new Location$$module$nodes(a,143,E,"Draygonia Fortress Basement 2 (power ring)")).fortress().connect(yd,qa).chest(Od,15);const Mb=(new Location$$module$nodes(a,144,na,"Desert 1")).overworld().connect(hb),ib=(new Location$$module$nodes(a,145,E,"Area 1 (from entrance)")).cave().chest(Wb,26),zd=(new Location$$module$nodes(a,145,E,"Area 2 (across top bridge)")).cave().connect(ib,r);(new Location$$module$nodes(a,145,E,"Area 3 (dead-end across top-right bridge)")).cave().connect(zd,r);const Ig=(new Location$$module$nodes(a,
145,E,"Area 4 (left across middle-right bridge)")).cave().connect(zd,r),Jg=(new Location$$module$nodes(a,145,E,"Area 5 (bottom edge)")).cave().connect(Ig,r),Kg=(new Location$$module$nodes(a,145,E,"Area 6 (bottom island)")).cave().connect(Jg,r),Lg=(new Location$$module$nodes(a,145,E,"Area 7 (bottom inner ring)")).cave().connect(Kg,r),Mg=(new Location$$module$nodes(a,145,E,"Area 8 (left outer ring)")).cave().connect(Lg,r).connect(ib,r).chest(Fa,27,100),Ng=(new Location$$module$nodes(a,145,E,"Area 9 (top left inner ring)")).cave().connect(Mg,
r),Og=(new Location$$module$nodes(a,145,E,"Area 10 (top right inner ring)")).cave().connect(Ng,r);(new Location$$module$nodes(a,145,E,"Area 11 (center)")).cave().connect(Og,r).connectTo(yd);(new Location$$module$nodes(a,145,E,"Area 12 (top center islands)")).cave().connect(ib,D).chest(Ld,28);const Pg=(new Location$$module$nodes(a,146,R,"Desert Cave 1")).cave().connect(Mb,D),Aa=(new Location$$module$nodes(a,147,R,"Town")).town(),Qg=(new Location$$module$nodes(a,148,R,"Outside Cave")).overworld().connect(Aa),
Rg=(new Location$$module$nodes(a,149,R,"Desert Cave 2")).cave().connect(Qg);(new Location$$module$nodes(a,150,R,"Meadow")).overworld().connect(Pg).connectTo(Aa).trigger(ke,pa,Z);const Nb=(new Location$$module$nodes(a,152,R,"Desert 2")).overworld().connect(Rg),Sg=(new Location$$module$nodes(a,156,va,"Entrance")).fortress().connect(Nb,D),Tg=(new Location$$module$nodes(a,156,va,"Azteca")).fortress().trigger(me),Ug=(new Location$$module$nodes(a,157,va,"Fork")).fortress().connect(Sg),Ad=(new Location$$module$nodes(a,
158,va,"Main")).fortress().connect(Ug);(new Location$$module$nodes(a,158,va,"Treasure Chest (magic ring)")).fortress().connect(Ad).chest(Y,27,108);(new Location$$module$nodes(a,159,va,"Draygon")).fortress().connect(Ad).to(Tg).boss(Ne);const Vg=(new Location$$module$nodes(a,160,V,"Entrance")).fortress().connect(Nb,D),Wg=(new Location$$module$nodes(a,160,V,"Statues")).fortress().connect(Vg).boss(Oe),Xg=(new Location$$module$nodes(a,161,V,"Hall 1")).fortress().connect(Wg),Ob=(new Location$$module$nodes(a,
162,V,"Branch")).fortress().connect(Xg);(new Location$$module$nodes(a,163,V,"Left Dead End")).fortress().connect(Ob).chest(H,13);(new Location$$module$nodes(a,164,V,"Right Dead End")).fortress().connect(Ob);const Yg=(new Location$$module$nodes(a,165,V,"Hall 2")).fortress().connect(Ob).chest(pb,26,109),Zg=(new Location$$module$nodes(a,166,V,"Draygon 2")).fortress().connect(Yg).boss(Pe);(new Location$$module$nodes(a,167,V,"Teleporter")).fortress().from(Zg).to(kd);const Bd=(new Location$$module$nodes(a,
168,$a,"Entrance")).fortress().connect(Ja,Bb).trigger(Ec,K),$g=(new Location$$module$nodes(a,169,$a,"Main")).fortress().from(Bd,qa),ah=(new Location$$module$nodes(a,169,$a,"Boss")).fortress().connect($g).boss(Je),bh=(new Location$$module$nodes(a,170,$a,"Zebu")).fortress().connect(ah),jb=(new Location$$module$nodes(a,171,Q,"Entrance")).fortress().connect(bh);(new Location$$module$nodes(a,171,Q,"Dead End Behind Iron (fruit of power)")).fortress().connect(jb,qa).chest(Fa,28,98);(new Location$$module$nodes(a,
171,Q,"Dead End Loop Across Closer Bridges")).fortress().connect(jb,r).connect(jb,r);const ch=(new Location$$module$nodes(a,171,Q,"Across First Bridge (fruit of repun)")).fortress().connect(jb,r).chest(Sb,30,102),Pb=(new Location$$module$nodes(a,171,Q,"Across Second Bridge")).fortress().connect(ch,r);(new Location$$module$nodes(a,171,Q,"Dead End Across Two Bridges ()")).fortress().connect(Pb,r).connect(Pb,r).chest(nb,29,93);const dh=(new Location$$module$nodes(a,171,Q,"Across Third Bridge")).fortress().connect(Pb,
r),eh=(new Location$$module$nodes(a,171,Q,"Exit Behind Iron Door")).fortress().connect(dh,qa),fh=(new Location$$module$nodes(a,172,Q,"Boss")).fortress().connect(eh).boss(Ke),gh=(new Location$$module$nodes(a,172,Q,"Tornel")).fortress().connect(fh),Cd=(new Location$$module$nodes(a,173,ua,"Lower")).fortress().connect(gh).chest(pb,26,99).chest(Y,27,111),hh=(new Location$$module$nodes(a,174,ua,"Upper Loop")).fortress().connect(Cd).chest(Qa,22,96);(new Location$$module$nodes(a,174,ua,"Upper Loop Behind Wall (magic ring)")).fortress().connect(hh,
qa).chest(Y,23,107);const ih=(new Location$$module$nodes(a,175,ua,"Upper Passage (toward Mado)")).fortress().connect(Cd).chest(Y,27,84),Qb=(new Location$$module$nodes(a,176,J,"Initial Fork")).fortress(),jh=(new Location$$module$nodes(a,177,J,"Left Branch")).fortress().connect(Qb),Dd=(new Location$$module$nodes(a,178,J,"Main Area (right branch, over bridges)")).fortress().connect(Qb),kh=(new Location$$module$nodes(a,179,J,"U-shaped Passage (between floors)")).fortress().connect(Dd),lh=(new Location$$module$nodes(a,
180,J,"Main Area Lower (under bridge)")).fortress().connect(jh).connect(Dd).connect(kh),Ed=(new Location$$module$nodes(a,180,J,"Behind Iron Wall")).fortress().connect(lh,qa),mh=(new Location$$module$nodes(a,181,J,"Lower")).fortress().connect(Ed).chest(H,13).chest(H,14).chest(H,15).chest(Y,23,88).chest(ob,24,110),nh=(new Location$$module$nodes(a,182,J,"Boss Corridor")).fortress().connect(mh),oh=(new Location$$module$nodes(a,182,J,"Boss")).fortress().connect(nh,Bb).boss(Me);(new Location$$module$nodes(a,
182,J,"Behind Boss (stormBracelet)")).fortress().connect(oh).chest(Pa,18);const Fd=(new Location$$module$nodes(a,183,J,"Exit Stairs")).fortress(),ph=(new Location$$module$nodes(a,184,E,"Entrance Back (behind river)")).cave().connect(Fd).chest(Fa,13,90);(new Location$$module$nodes(a,184,E,"Entrance Front")).cave().connect(ph,D).connectTo(Mb).connectTo(ib);const qh=(new Location$$module$nodes(a,185,ua,"Boss")).fortress().connect(ih).boss(Le);(new Location$$module$nodes(a,185,ua,"Asina")).fortress().connect(qh).connectTo(Qb);
(new Location$$module$nodes(a,186,J,"Kensu")).fortress().connect(Ed).connectTo(Fd).trigger(je,sb);(new Location$$module$nodes(a,187,na,"House")).house().connect(Ja).trigger(le,pa,sb);(new Location$$module$nodes(a,188,na,"Inn")).shop().connect(Ja,zb);(new Location$$module$nodes(a,190,na,"Tool Shop")).shop().connect(Ja,zb);(new Location$$module$nodes(a,191,na,"Tavern")).shop().connect(Ja);(new Location$$module$nodes(a,192,O,"Elder House")).house().connect(ia).trigger(lc);(new Location$$module$nodes(a,
193,O,"Rabbit Hut")).house().connect(ia).trigger(sc,rc,Z);(new Location$$module$nodes(a,194,O,"Inn")).shop().connect(ia);(new Location$$module$nodes(a,195,O,"Tool Shop")).shop().connect(ia).trigger(nc);(new Location$$module$nodes(a,196,O,"Armor Shop")).shop().connect(ia);(new Location$$module$nodes(a,197,O,"Student House")).house().connect(ia).trigger(mc);(new Location$$module$nodes(a,198,sa,"Tavern")).house().connect(Ia);(new Location$$module$nodes(a,199,sa,"Pawn Shop")).shop().connect(Ia);(new Location$$module$nodes(a,
200,sa,"Inn")).shop().connect(Ia);(new Location$$module$nodes(a,201,sa,"Armor Shop")).shop().connect(Ia);(new Location$$module$nodes(a,203,sa,"Tool Shop")).shop().connect(Ia);(new Location$$module$nodes(a,205,Ga,"Elder House")).house().from(bb,Z).trigger(Yd,wb);(new Location$$module$nodes(a,206,Ga,"Mother's House")).house().from(bb,Z).trigger(qc,Z).trigger(Xd,wb);(new Location$$module$nodes(a,207,Ga,"Tool Shop")).shop().from(bb,Z);(new Location$$module$nodes(a,208,Ga,"Inn")).shop().from(bb,Z);(new Location$$module$nodes(a,
209,ta,"Inn")).shop().connect(ab);(new Location$$module$nodes(a,210,ta,"Tool Shop")).shop().connect(ab);(new Location$$module$nodes(a,211,ta,"Armor Shop")).shop().connect(ab);const rh=(new Location$$module$nodes(a,212,ta,"Queen's House")).house().from(ab,Kc).trigger(he,pa,fc);(new Location$$module$nodes(a,213,Za,"Nadare's")).house().connect(cb).connectTo(Bf).connectTo(Cf).connectTo(Df);(new Location$$module$nodes(a,214,A,"Fisherman's House")).house().connect(hd).trigger(xb,ac,rb,Be);const Rb=(new Location$$module$nodes(a,
215,A,"Palace Entrance")).house().connect(oa);(new Location$$module$nodes(a,216,A,"Fortune Teller Front")).house().connect(oa).trigger(uc,tc);(new Location$$module$nodes(a,216,A,"Fortune Teller Back")).house().connect(fg).connect(nd);(new Location$$module$nodes(a,217,A,"Pawn Shop")).shop().connect(oa);(new Location$$module$nodes(a,218,A,"Armor Shop")).shop().connect(oa);(new Location$$module$nodes(a,220,A,"Inn")).shop().connect(oa);(new Location$$module$nodes(a,221,A,"Tool Shop")).shop().connect(oa);
(new Location$$module$nodes(a,222,A,"Palace Left")).house().connect(Rb);(new Location$$module$nodes(a,223,A,"Palace Throne Room")).house().connect(Rb).to(fb,ve).from(fb).trigger(tc).trigger(ae,uc,vc);(new Location$$module$nodes(a,224,A,"Palace Right")).house().connect(Rb);(new Location$$module$nodes(a,225,A,"Asina's Room")).house().connect(od).trigger(ce,Gc);(new Location$$module$nodes(a,226,ta,"Queen Downstairs")).house().connect(rh).chest(Na,13);(new Location$$module$nodes(a,227,da,"Elder's House")).house().connect(gb).trigger(Ac);
(new Location$$module$nodes(a,228,da,"Shed")).house().connect(gb).to(qg,bc);(new Location$$module$nodes(a,229,da,"Tool Shop")).shop().connect(gb).trigger(nc);(new Location$$module$nodes(a,231,da,"Inn")).shop().connect(gb);const sh=(new Location$$module$nodes(a,232,F,"Zombie Town House")).house().connect(Jb);(new Location$$module$nodes(a,233,F,"Zombie Town Basement")).house().connect(sh).trigger(de,Oc);(new Location$$module$nodes(a,235,P,"Tool Shop")).shop().connect(W);(new Location$$module$nodes(a,
236,P,"Stom's Hut")).house().connect(W).trigger(Bc);(new Location$$module$nodes(a,237,P,"Inn")).shop().connect(W);(new Location$$module$nodes(a,238,P,"Armor Shop")).shop().connect(W);(new Location$$module$nodes(a,239,P,"Tavern")).house().connect(W).trigger(Cc,Bc,Ta);(new Location$$module$nodes(a,240,P,"Pawn Shop")).shop().connect(W);(new Location$$module$nodes(a,241,P,"Dance Hall")).house().connect(W).trigger(Dc,Cc,Ta).trigger(ge,Dc,ec);const th=(new Location$$module$nodes(a,242,fa,"Temple (pre-massacre)")).fortress().connect(za).from(Cb,
K,y).trigger(ie);(new Location$$module$nodes(a,242,fa,"Temple (post-massacre)")).fortress().from(th,Ec).boss(Ie);(new Location$$module$nodes(a,243,fa,"Training Hall")).house().connect(za);(new Location$$module$nodes(a,244,fa,"Hospital")).house().connect(za);(new Location$$module$nodes(a,245,fa,"Armor Shop")).shop().connect(za);(new Location$$module$nodes(a,246,fa,"Tool Shop")).shop().connect(za);(new Location$$module$nodes(a,247,fa,"Inn")).shop().connect(za);(new Location$$module$nodes(a,248,R,"Inn")).shop().connect(Aa);
(new Location$$module$nodes(a,249,R,"Tool Shop")).shop().connect(Aa);(new Location$$module$nodes(a,250,R,"Elder's House")).house().connect(Aa);(new Location$$module$nodes(a,251,R,"Pawn Shop")).house().connect(Aa);const uh=[ia,Ha,Qc,wa,Db,xa,Gb,bd,Ib,W,hb,Lb,Mb,Bd,Nb];for(const a of uh)a.from(Cb,re);return a},shuffle$$module$depgraph=(b,a,c,d,e)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){const f=generate$$module$depgraph(d);f.nodes.filter((a)=>a instanceof Slot$$module$nodes);d||(d=
new FlagSet$$module$flagset("Sbkm Sct"));var g={};for(var h of f.nodes)if(h instanceof Slot$$module$nodes&&h.slots){var k=h.slotType?h.slotType[0]:"c";(g[k]=g[k]||[]).push(h)}h=[];k=[];var n={};for(var m of d.flags.S){var q=[];for(var p of m){n[p]=!0;for(var u of g[p])q.push(u),k.push([u,h.length])}h.push(q)}for(var l of"bc")if(n[l])for(m=g[l],p=m.map((a)=>[a.item,a.itemIndex]),a.shuffle(p),u=0;u<m.length;u++)m[u].set(...p[u]);q=(a)=>f.nodes.find((b)=>b instanceof Slot$$module$nodes&&b.name===a);
g=q("Sword of Wind");l=q("Sword of Fire");m=q("Ball of Wind");p=q("Ball of Fire");u=q("Statue of Onyx");q=q("Gas Mask");n.k&&a.nextInt(2)&&(l.swap(g),p.swap(m));n.k&&!a.nextInt(3)&&u.swap(q);n=[1,1,1,1,2,2,2,3,3,3,5,5,8,13];g=[];e&&e.addTasks(10);for(l=0;1E3>l;l++){e&&0==l%100&&(yield new Promise(requestAnimationFrame),e.addCompleted(1));a.shuffle(k);for(var y of h)a.shuffle(y);m=h.map(()=>-1);p=n[a.nextInt(n.length)];u=[];const b=(a)=>(a instanceof Chest$$module$nodes||a instanceof BossDrop$$module$nodes)&&
9!==a.origIndex,c=(a)=>13<=a&&36>=a||38===a||40===a||49===a||72<a;q=(a,d)=>a.itemIndex===d.itemIndex||!(112!==a.itemIndex||d instanceof Chest$$module$nodes&&!d.isInvisible)||!(112!==d.itemIndex||a instanceof Chest$$module$nodes&&!a.isInvisible)||c(a.itemIndex)&&!b(d)||c(d.itemIndex)&&!b(a)?!1:!0;for(let a=0;a<p;a++){const [b,c]=k[a],d=h[c][++m[c]];q(b,d)&&(b.swap(d),u.push([b,d]))}if(!u.length)continue;const {win:d,path:Ba}=f.traverse();if(d)g=Ba;else for(;u.length;){const [a,b]=u.pop();a.swap(b)}}for(const a of f.nodes)a instanceof
Slot$$module$nodes&&a.write(b);if(c){c.items=[];c.route=[];for(const a of g){const [b,d]=a;c.route.push(d);null!=b.slotName&&(y=b.slotName,0>y.indexOf(b.orig)&&(y+=` (normally ${b.orig})`),c.items.push({slotIndex:b.slotIndex,itemIndex:b.itemIndex,origName:b.vanillaItemName,slotName:b.slotName,itemName:b.item.name,text:`${b.item.name}: ${y}`}))}}}),shuffle2$$module$depgraph=(b,a,c,d,e)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){e&&e.addTasks(100);for(let f=0;100>f;f++){try{yield shuffle3$$module$depgraph(b,
a,c,d,e)}catch(g){e&&(e.addCompleted(1),0===f%5&&(yield new Promise(requestAnimationFrame)));continue}console.log(`success after ${f} attempts`);return}throw Error("failed");}),shuffle3$$module$depgraph=(b,a,c,d,e)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){const e=generate$$module$depgraph(d);var g=e.integrate(),h=e.nodes.filter((a)=>a instanceof Slot$$module$nodes&&a.slots&&a.slotName),k=new Map(a.shuffle(h.map((a)=>[a,[a.item,a.itemIndex]])));const n=new Set(a.shuffle(h)),m=new Map,
q={};d||(d=new FlagSet$$module$flagset("Sbkm Sct"));d.flags.S.forEach((a,b)=>{for(const c of a)q[c]=b});for(var p of n)m.set(p.item,p);const u=(a)=>13<=a&&36>=a||38===a||40===a||49===a||72<a&&91!=a,l=(a,b)=>q[a.slotType?a.slotType[0]:"c"]==q[b.slotType?b.slotType[0]:"c"]&&(112!==b.itemIndex||a instanceof Chest$$module$nodes&&!a.isInvisible)&&(!u(b.itemIndex)||(a instanceof Chest$$module$nodes||a instanceof BossDrop$$module$nodes)&&9!==a.origIndex)?!0:!1;p=g.assumedFill(a,(a,b)=>l(a,m.get(b)));if(null==
p)throw Error("Could not fill!");const y=new Map;for(let a=0;a<p.length;a++){var z=p[a];if(null!=z){var ja=m.get(g.item(z));z=k.get(ja);k.delete(ja);ja=g.location(a);y.set(ja,z);n.delete(ja)}}g=(a,b)=>{for(const c of n)if(l(c,a)){y.set(c,b);n.delete(c);return}throw Error("Could not fill extra items");};for(const a of k){const [b,c]=a;112===b.itemIndex&&(g(b,c),k.delete(b))}for(const a of k){const [b,c]=a;u(b.itemIndex)&&(g(b,c),k.delete(b))}for(const a of k){const [b,c]=a;g(b,c)}for(const a of y){const [b,
c]=a;b.set(...c)}const {win:kb,path:Ba}=e.traverse({wanted:h,dfs:!1});if(!kb)throw Error("FAIL");for(const a of e.nodes)a instanceof Slot$$module$nodes&&a.write(b);if(c){c.items=[];c.route=[];for(const a of Ba){const [b,d]=a;c.route.push(d);h=e.nodes[b];null!=h.slotName&&(k=h.slotName,0>k.indexOf(h.orig)&&(k+=` (normally ${h.vanillaItemName})`),c.items.push({slotIndex:h.slotIndex,itemIndex:h.itemIndex,origName:h.vanillaItemName,slotName:h.slotName,itemName:h.item.name,text:`${h.item.name}: ${k}`}))}}});
var module$depgraph={};module$depgraph.generate=generate$$module$depgraph;module$depgraph.shuffle=shuffle$$module$depgraph;module$depgraph.shuffle2=shuffle2$$module$depgraph;module$depgraph.shuffle3=shuffle3$$module$depgraph;class Deque$$module$util{constructor(){this.buffer=Array(16);this.mask=15;this.size=this.end=this.start=0}get length(){return this.size}upsize(b){for(;this.mask<b;)this.end<=this.start&&(this.start+=this.mask+1),this.mask=this.mask<<1|1,this.buffer=this.buffer.concat(this.buffer);this.size=b}push(...b){this.upsize(this.size+b.length);for(const a of b)this.buffer[this.end]=a,this.end=this.end+1&this.mask}pop(){if(this.size)return this.end=this.end-1&this.mask,this.size--,this.buffer[this.end]}peek(){if(this.size)return this.buffer[this.end-
1&this.mask]}unshift(...b){this.upsize(this.size+b.length);for(const a of b)this.start=this.start-1&this.mask,this.buffer[this.start]=a}shift(){if(this.size){var b=this.buffer[this.start];this.start=this.start+1&this.mask;this.size--;return b}}front(){if(this.size)return this.buffer[this.start]}toString(){const b=Array(this.size);for(let a=0;a<this.size;a++)b[a]=this.buffer[this.start+a&this.mask];return"["+b.join(", ")+"]"}}
class IndexedList$$module$util{constructor(){this.list=[];this.map=new Map}add(b){this.map.has(b)||(this.map.set(b,this.list.length),this.list.push(b))}indexOf(b){return this.map.get(b)}remove(b){const a=this.map.get(b);if(null!=a)for(this.list.splice(a,1),this.map.delete(b),b=a;b<this.list.length;b++)this.map.set(this.list[b],b)}[Symbol.iterator](){return this.list[Symbol.iterator]()}}var module$util={};module$util.Deque=Deque$$module$util;module$util.IndexedList=IndexedList$$module$util;const Edge$$module$graph={of:(...b)=>b.map((a)=>a.uid)};class Node$$module$graph{constructor(b,a){this.graph=b;this.name=a;this.uid=b.nodes.length;b.nodes.push(this)}get nodeType(){return"Node"}toString(){return`${this.nodeType} ${this.name}`}edges(){return[]}}
class Graph$$module$graph{constructor(){this.nodes=[]}traverse(b={}){const {wanted:a=void 0,dfs:c=!1}=b;b=new Deque$$module$util;const d=new Map,e=new Map;for(var f of this.nodes)for(var g of f.edges()){var h=g.join(" ");for(var k=1;k<g.length;k++){const a=g[k];e.has(a)||e.set(a,new Map);e.get(a).set(h,g)}1==g.length&&(h=g[0],d.has(h)||(b.push(h),d.set(h,g)))}f=new Set((a||this.nodes).map((a)=>a instanceof Node$$module$graph?a.uid:a));for(g=new Map;f.size&&b.length;){h=c?b.pop():b.shift();f.delete(h);
a:for(const a of(e.get(h)||g).values())if(h=a[0],!d.has(h)){for(k=1;k<a.length;k++)if(!d.has(a[k]))continue a;d.set(h,a);b.push(h)}}return{win:!f.size,seen:d,path:[...d.values()].map(([a,...b])=>{const c=(a)=>[this.nodes[a]];return[a,[...c(a)," (",b.map((a)=>c(a).join("").replace(/\s+\(.*\)/,"")).join(", "),")"].join("")]})}}}
class SparseDependencyGraph$$module$graph{constructor(b){this.nodes=Array(b).fill(0).map(()=>new Map);this.finalized=Array(b).fill(!1)}addRoute(b){const a=b[0];if(this.finalized[a])throw Error(`Attempted to add a route for finalized node ${a}`);let c=new Set;for(let a=b.length-1;1<=a;a--)c.add(b[a]);for(;;){b=!1;for(var d of c){if(d===a)return[];if(this.finalized[d]){b=this.nodes[d];if(!b.size)return[];c.delete(d);if(1==b.size){for(const a of b.values().next().value)c.add(a);b=!0;break}d=new Map;
for(var e of b.values())for(var f of this.addRoute([a,...c,...e]))d.set(f.label,f);return[...d.values()]}}if(!b)break}e=[...c].sort();c=new Set(e);e=e.join(" ");f=this.nodes[a];if(f.has(e))return[];for(const [a,b]of f){if(containsAll$$module$graph(c,b))return[];containsAll$$module$graph(b,c)&&f.delete(a)}f.set(e,c);return[new SparseRoute$$module$graph(a,c,`${a}:${e}`)]}finalize(b){if(!this.finalized[b]){this.finalized[b]=!0;for(let a=0;a<this.nodes.length;a++){const c=this.nodes[a];if(c.size)for(const [d,
e]of c)if(e.has(b)){const b=this.finalized[a];this.finalized[a]=!1;c.delete(d);this.addRoute([a,...e.values()]);this.finalized[a]=b}}}}}class SparseRoute$$module$graph{constructor(b,a,c){this.target=b;this.deps=a;this.label=c}}const containsAll$$module$graph=(b,a)=>{if(b.size<a.size)return!1;for(const c of a)if(!b.has(c))return!1;return!0};var module$graph={};module$graph.Node=Node$$module$graph;module$graph.Graph=Graph$$module$graph;module$graph.SparseDependencyGraph=SparseDependencyGraph$$module$graph;class TrackerNode$$module$nodes extends Node$$module$graph{constructor(b,a){super(b,a)}get nodeType(){return"Tracker"}}class Option$$module$nodes extends Node$$module$graph{constructor(b,a,c){super(b,a);this.value=c}get nodeType(){return"Option"}edges(){return this.value?[module$graph.Edge.of(this)]:[]}}
class Slot$$module$nodes extends Node$$module$graph{constructor(b,a,c,d,e=[]){super(b,a);this.slotName=a;this.slotIndex=d;this.slotType=c instanceof Magic$$module$nodes?"magic":null;this.vanillaItemName=c.name;this.slots=e;this.item=c;this.itemIndex=d}get nodeType(){return"Slot"}toString(){return`${super.toString()} [${this.vanillaItemName} $${this.slotIndex.toString(16).padStart(2,0)}]`}edges(){return null!=this.item&&null!=this.itemIndex?[module$graph.Edge.of(this.item,this)]:[]}get name2(){return this.item==
this.vanilla?this.name:`${this.item.name} [${this.vanillaItemName}]`}set(b,a){this.item=b;this.itemIndex=a}write(b){if(this.slots)for(const a of this.slots)a(b.subarray(16),this)}swap(b){const a=this.item,c=this.itemIndex;this.set(b.item,b.itemIndex);b.set(a,c)}key(){this.slotType="key";return this}bonus(){this.slotType="bonus";return this}direct(b){this.slots.push((a,c)=>{a[b]=c.itemIndex});return this}npcSpawn(b,a=null,c=0){this.slots.push((d,e)=>{let f=addr$$module$nodes(d,116192,81920,b);for(;null!=
a&&d[f]!=a;){for(f++;!(d[f]&128);)f+=2,checkBounds$$module$nodes(f,d,this.name2,a);f+=2;checkBounds$$module$nodes(f,d,this.name2,a)}f+=2*c+1;d[f]&=-2;d[f]|=2;d[f+1]=e.itemIndex});return this}dialog(b,a=null,c=0,d=null){this.slots.push((e,f)=>{let g=addr$$module$nodes(e,117085,81920,b);for(;e[g]&128;)g+=4,checkBounds$$module$nodes(g,e,this.name2);let h=0;for(;255!=e[g];)null!=a&&e[g]==a&&(h=e[g+1]),g+=2,checkBounds$$module$nodes(g,e,a);for(g+=h+1;c;){if(e[g]&64){for(g+=5;!(e[g]&64);)g+=2,checkBounds$$module$nodes(g,
e,this.name2);g+=2}else g+=5;--c}if(null!=d)for(g+=5;d;)g+=2,--d;e[g]&=-2;e[g]|=2;e[g+1]=f.itemIndex});return this}trigger(b,a=0,c=null){this.slots.push((d,e)=>{let f=addr$$module$nodes(d,123258,81920,b&127);if(null==c)f+=2*a;else{for(;!(d[f]&128);)f+=2,checkBounds$$module$nodes(f,d,this.name2);f=f+4+2*c}d[f]&=-2;d[f]|=2;d[f+1]=e.itemIndex});return this}}class BossDrop$$module$nodes extends Slot$$module$nodes{get nodeType(){return"BossDrop"}}
class Chest$$module$nodes extends Slot$$module$nodes{constructor(b,a,c,d){super(b,a,c,d);this.spawnSlot=null;this.isInvisible=!1}get nodeType(){return"Chest"}objectSlot(b,a){this.spawnSlot=a;this.slots.push((c,d)=>{const e=addr$$module$nodes(c,102913,65536,b)+4*(a-11);c[e-1]=112===d.itemIndex?c[e-1]|128:c[e-1]&127;c[e]=d.itemIndex});return this}invisible(b){this.isInvisible=!0;return this.direct(b)}}const addr$$module$nodes=(b,a,c,d)=>(b[a+2*d]|b[a+2*d+1]<<8)+c;
class ItemGet$$module$nodes extends Node$$module$graph{constructor(b,a,c,d,e){super(b,c);this.id=a;this.shufflePriority=1}get nodeType(){return"ItemGet"}chest(b=this.name+" chest",a=this.id){return new Chest$$module$nodes(this.graph,b,this,a)}fromPerson(b,a,c=0){return this.direct(b,33008|(a&-4)<<6|(a&3)<<2|c)}bossDrop(b,a,c=this.id){return new BossDrop$$module$nodes(this.graph,b,this,c,[(b,c)=>{const d=addr$$module$nodes(b,129387,81920,a)+4;b[d]=c.itemIndex}])}direct(b,a){return new Slot$$module$nodes(this.graph,
b,this,this.id,[(b,d)=>{b[a]=d.itemIndex}])}fixed(){return new Slot$$module$nodes(this.graph,null,this,this.id)}weight(b){this.shufflePriority=b;return this}}class Item$$module$nodes extends ItemGet$$module$nodes{get nodeType(){return"Item"}}class Magic$$module$nodes extends ItemGet$$module$nodes{get nodeType(){return"Magic"}}
class Trigger$$module$nodes extends Node$$module$graph{constructor(b,a){super(b,a);this.slot=null;this.reqs=[]}get nodeType(){return"Trigger"}edges(){const b=[...this.reqs];this.slot&&b.push(module$graph.Edge.of(this.slot,this));return b}get(b){if(this.slot)throw Error("already have a slot");this.slot=b;return this}}
class Condition$$module$nodes extends Node$$module$graph{constructor(b,a){super(b,a);this.options=[]}get nodeType(){return"Condition"}edges(){return this.options.map((b)=>module$graph.Edge.of(this,...b))}option(...b){this.options.push(b.map((a)=>a instanceof Slot$$module$nodes?a.item:a));return this}}class Boss$$module$nodes extends Trigger$$module$nodes{constructor(b,a,c,...d){super(b,c);this.index=a;this.deps=d.map((a)=>a instanceof Slot$$module$nodes?a.item:a)}get nodeType(){return"Boss"}}
class Area$$module$nodes extends Node$$module$graph{constructor(b,a){super(b,a);this.name=a}get nodeType(){return"Area"}}class Connection$$module$nodes{constructor(b,a,c=!1,d=[]){this.from=b;this.to=a;this.bidi=c;this.deps=d.map((a)=>a instanceof Slot$$module$nodes?a.item:a)}reverse(){return new Connection$$module$nodes(this.to,this.from,this.bidi,this.deps)}}
class Location$$module$nodes extends Node$$module$graph{constructor(b,a,c,d){super(b,c.name+": "+d);this.simpleName=d;this.id=a;this.area=c;this.connections=[];this.chests=[];this.type=this.bossNode=null;this.isStart=!1}get nodeType(){return"Location"}toString(){return`Location ${this.id.toString(16).padStart(2,0)} ${this.name}`}edges(){const b=[];for(const a of this.connections)b.push(module$graph.Edge.of(a.to,a.from,...a.deps,...a.from.bossNode?[a.from.bossNode]:[])),a.bidi&&b.push(module$graph.Edge.of(a.from,
a.to,...a.deps,...a.to.bossNode?[a.to.bossNode]:[]));for(const a of this.chests)b.push(module$graph.Edge.of(a,this));this.isStart&&b.push(module$graph.Edge.of(this));return b}addConnection(b){b.from.connections.push(b);b.to.connections.push(b);return this}from(b,...a){return this.addConnection(new Connection$$module$nodes(b,this,!1,a))}to(b,...a){return this.addConnection(new Connection$$module$nodes(this,b,!1,a))}connect(b,...a){return this.addConnection(new Connection$$module$nodes(b,this,!0,a))}connectTo(b,
...a){return this.addConnection(new Connection$$module$nodes(this,b,!0,a))}chest(b,a,c=void 0){b instanceof Slot$$module$nodes&&!(b instanceof Chest$$module$nodes)&&null!=c&&(b=b.item);b instanceof ItemGet$$module$nodes&&(b=b.chest(void 0,c));a=b.objectSlot(this.id,a);this.chests.push(a);112==a.itemIndex&&(a.slotType="trap");if(!a.slotName||a.slotName.endsWith(" chest"))a.slotName=b.name+" in "+this.area.name;return this}trigger(b,...a){a=a.map((a)=>a instanceof Slot$$module$nodes?a.item:a);b.reqs.push(module$graph.Edge.of(b,
this,...a));return this}boss(b){this.bossNode=b;b.reqs.push(module$graph.Edge.of(b,this,...b.deps));return this}overworld(){this.type="overworld";return this}town(){this.type="town";return this}cave(){this.type="cave";return this}sea(){this.type="sea";return this}fortress(){this.type="fortress";return this}house(){this.type="house";return this}shop(){this.type="house";return this}misc(){this.type="misc";return this}start(){this.isStart=!0;return this}fullName(){const b=[this.simpleName];this.bossNode&&
b.push(this.bossNode.name);return b.join("\\n")}}const checkBounds$$module$nodes=(b,a,...c)=>{if(b>a.length)throw Error("never found: "+c.map((a)=>"number"==typeof a?a.toString(16):a).join(" "));};
class WorldGraph$$module$nodes extends Graph$$module$graph{integrate(b={}){const {removeConditions:a=!0,removeTriggers:c=!0,removeOptions:d=!0,removeTrackers:e=!0}=b,f=new SparseDependencyGraph$$module$graph(this.nodes.length),g=[],h=new Set,k=new Map;var n=[],m=[];const q=[];var p=[];const u=[];b=new Set;for(var l of this.nodes)if(l instanceof Location$$module$nodes){if(l.isStart){const [a]=f.addRoute([l.uid]);k.set(a.label,a)}g[l.uid]=[];for(var y of l.connections)h.has(y)||(h.add(y),y.bidi&&h.add(y.reverse()));
for(const a of l.chests)f.addRoute([a.uid,l.uid])}else if(l instanceof Slot$$module$nodes&&"Alarm Flute"===l.item.name)f.addRoute([l.item.uid]),f.finalize(l.item.uid);else if(!(l instanceof Slot$$module$nodes&&null==l.slotName))if(l instanceof ItemGet$$module$nodes&&"Medical Herb"===l.name&&(f.addRoute([l.uid]),f.finalize(l.uid)),l instanceof Option$$module$nodes)n.push(l);else if(l instanceof TrackerNode$$module$nodes)m.push(l);else if(l instanceof Condition$$module$nodes)q.push(l);else if(l instanceof
Trigger$$module$nodes)p.push(l);else if(l instanceof ItemGet$$module$nodes)u.push(l);else if(l instanceof Slot$$module$nodes)b.add(l);else if(!(l instanceof Area$$module$nodes))throw Error(`Unknown node type: ${l.nodeType}`);for(const a of h)g[a.from.uid].push(a);l=(a)=>{for(const b of a){for(const a of b.edges())f.addRoute(a);f.finalize(b.uid)}};d&&l(n);e&&l(m);c&&l(p);for(n=k.values();!(m=n.next()).done;){m=m.value;p=m.target;for(var z of g[p]){p=[z.to.uid,...m.deps];for(y=z.deps.length-1;0<=y;y--)p.push(z.deps[y].uid);
z.from.bossNode&&p.push(z.from.bossNode.uid);for(const a of f.addRoute(p))k.has(a.label)||k.set(a.label,a)}}a&&l(q);for(z=0;z<this.nodes.length;z++)this.nodes[z]instanceof ItemGet$$module$nodes||f.finalize(z);z=new LocationList$$module$nodes(this);for(const a of b)for(const b of f.nodes[a.uid].values())z.addRoute([a.uid,...b]);return z}}
class LocationList$$module$nodes{constructor(b){this.worldGraph=b;this.uidToLocation=[];this.locationToUid=[];this.uidToItem=[];this.itemToUid=[];this.routes=[];this.unlocks=[]}item(b){return this.worldGraph.nodes[this.itemToUid[b]]}location(b){return this.worldGraph.nodes[this.locationToUid[b]]}addRoute(b){let a=Bits$$module$bits.of(),c;const d=[];for(let e=b.length-1;0<=e;e--){const f=e?this.uidToItem:this.uidToLocation,g=e?this.itemToUid:this.locationToUid,h=b[e];let k=f[h];null==k&&(k=g.length,
g.push(h),f[h]=k);e?(a=Bits$$module$bits.with(a,k),d.push(this.unlocks[k]||(this.unlocks[k]=new Set))):c=k}(this.routes[c]||(this.routes[c]=[])).push(a);for(const a of d)a.add(c)}canReach(b,a){b=this.uidToLocation(b.uid);b=this.routes[b];for(let c=0;c<b.length;c++)if(Bits$$module$bits.containsAll(a,b[c]))return!0;return!1}traverse(b,a){b=Bits$$module$bits.clone(b);const c=new Set;let d=new Set;for(var e=0;e<this.locationToUid.length;e++)d.add(e);e=d[Symbol.iterator]();for(var f;!(f=e.next()).done;){f=
f.value;d.delete(f);if(c.has(f))continue;const e=this.routes[f];for(let g=0;g<e.length;g++)if(Bits$$module$bits.containsAll(b,e[g])){c.add(f);if(a[f]){b=Bits$$module$bits.with(b,a[f]);for(let b of this.unlocks[a[f]])d.add(b)}break}}return c}toString(){const b=[];for(let a=0;a<this.routes.length;a++){const c=this.worldGraph.nodes[this.locationToUid[a]],d=this.routes[a],e=[];for(let a=0;a<d.length;a++){const b=[];for(const c of Bits$$module$bits.bits(d[a]))b.push(this.worldGraph.nodes[this.itemToUid[c]]);
e.push("("+b.join(" & ")+")")}b.push(`${c}: ${e.join(" | ")}`)}return b.join("\n")}assumedFill(b,a=(a,b)=>!0){const c=[];for(var d=this.itemToUid.length-1;0<=d;d--){var {shufflePriority:e=1}=this.worldGraph.nodes[this.itemToUid[d]];for(var f=0;f<e;f++)c.push(d)}b.shuffle(c);d=Bits$$module$bits.from(c);const g=Array(this.locationToUid.length).fill(null);for(;c.length;){e=c.pop();if(!Bits$$module$bits.has(d,e))continue;d=Bits$$module$bits.without(d,e);f=[...this.traverse(d,g)].filter((a)=>null==g[a]);
b.shuffle(f);let h=!1;for(let b=f.length-1;0<=b;b--){const c=f[b];if(null==g[c]&&a(this.worldGraph.nodes[this.locationToUid[c]],this.worldGraph.nodes[this.itemToUid[e]])){g[c]=e;h=!0;break}}if(!h)return null}return g}}var module$nodes={};module$nodes.TrackerNode=TrackerNode$$module$nodes;module$nodes.Option=Option$$module$nodes;module$nodes.Slot=Slot$$module$nodes;module$nodes.BossDrop=BossDrop$$module$nodes;module$nodes.Chest=Chest$$module$nodes;module$nodes.ItemGet=ItemGet$$module$nodes;
module$nodes.Item=Item$$module$nodes;module$nodes.Magic=Magic$$module$nodes;module$nodes.Trigger=Trigger$$module$nodes;module$nodes.Condition=Condition$$module$nodes;module$nodes.Boss=Boss$$module$nodes;module$nodes.Area=Area$$module$nodes;module$nodes.Connection=Connection$$module$nodes;module$nodes.Location=Location$$module$nodes;module$nodes.WorldGraph=WorldGraph$$module$nodes;module$nodes.LocationList=LocationList$$module$nodes;const seq$$module$rom=(b,a)=>{a=void 0===a?(a)=>a:a;return Array(b).fill(0).map((b,d)=>a(d))},slice$$module$rom=(b,a,c)=>b.slice(a,a+c),signed$$module$rom=(b)=>128>b?b:b-256,varSlice$$module$rom=(b,a,c,d,e)=>{e=void 0===e?Infinity:e;const f=[];for(;a+c<=e&&b[a]!=d;)f.push(b.slice(a,a+c)),a+=c;return f},addr$$module$rom=(b,a,c)=>(b[a]|b[a+1]<<8)+(void 0===c?0:c),group$$module$rom=(b,a)=>seq$$module$rom(Math.max(0,Math.floor(a.length/b)),(c)=>slice$$module$rom(a,c*b,b)),reverseBits$$module$rom=(b)=>
65793*(2050*b&139536|32800*b&558144)>>>16&255,countBits$$module$rom=(b)=>{b-=b>>1&85;b=(b&51)+(b>>2&51);return b+(b>>4)&15},INVALID_LOCATIONS$$module$rom=new Set([11,13,18,19,22,23,29,31,54,55,58,59,63,83,99,102,103,111,116,117,118,119,121,122,123,139,141,151,153,154,155,189,202,204,219,230,234,252,253,254,255]),LOCATION_NAMES$$module$rom={[0]:"Mezame Shrine",[1]:"Leaf - Outside Start",[2]:"Leaf",[3]:"Valley of Wind",[4]:"Sealed Cave 1",[5]:"Sealed Cave 2",[6]:"Sealed Cave 3",[7]:"Sealed Cave 4",
[8]:"Sealed Cave 5",[9]:"Sealed Cave 6",[10]:"Sealed Cave 7",[12]:"Sealed Cave 8",[14]:"Windmill Cave",[15]:"Windmill",[16]:"Zebu Cave",[17]:"Mt Sabre West - Cave 1",[20]:"Cordel Plains West",[21]:"Cordel Plains East",[24]:"Brynmaer",[25]:"Outside Stom House",[26]:"Swamp",[27]:"Amazones",[28]:"Oak",[30]:"Stom House",[32]:"Mt Sabre West - Lower",[33]:"Mt Sabre West - Upper",[34]:"Mt Sabre West - Cave 2",[35]:"Mt Sabre West - Cave 3",[36]:"Mt Sabre West - Cave 4",[37]:"Mt Sabre West - Cave 5",[38]:"Mt Sabre West - Cave 6",
[39]:"Mt Sabre West - Cave 7",[40]:"Mt Sabre North - Main",[41]:"Mt Sabre North - Middle",[42]:"Mt Sabre North - Cave 1",[43]:"Mt Sabre North - Cave 2",[44]:"Mt Sabre North - Cave 3",[45]:"Mt Sabre North - Cave 4",[46]:"Mt Sabre North - Cave 5",[47]:"Mt Sabre North - Cave 6",[48]:"Mt Sabre North - Left Cell",[49]:"Mt Sabre North - Prison Key Hall",[50]:"Mt Sabre North - Right Cell",[51]:"Mt Sabre North - Cave 7",[52]:"Mt Sabre North - Cave 8",[53]:"Mt Sabre North - Summit Cave",[56]:"Mt Sabre North - Entrance Cave",
[57]:"Mt Sabre North - Cave 5a",[60]:"Nadare - Inn",[61]:"Nadare - Tool Shop",[62]:"Nadare - Back Room",[64]:"Waterfall Valley North",[65]:"Waterfall Valley South",[66]:"Lime Tree Valley",[67]:"Lime Tree Lake",[68]:"Kirisa Plant Cave 1",[69]:"Kirisa Plant Cave 2",[70]:"Kirisa Plant Cave 3",[71]:"Kirisa Meadow",[72]:"Fog Lamp Cave 1",[73]:"Fog Lamp Cave 2",[74]:"Fog Lamp Cave 3",[75]:"Fog Lamp Cave Dead End",[76]:"Fog Lamp Cave 4",[77]:"Fog Lamp Cave 5",[78]:"Fog Lamp Cave 6",[79]:"Fog Lamp Cave 7",
[80]:"Portoa",[81]:"Portoa - Fisherman Island",[82]:"Mesia Shrine",[84]:"Waterfall Cave 1",[85]:"Waterfall Cave 2",[86]:"Waterfall Cave 3",[87]:"Waterfall Cave 4",[88]:"Tower - Entrance",[89]:"Tower 1",[90]:"Tower 2",[91]:"Tower 3",[92]:"Tower - Outside Mesia",[93]:"Tower - Outside Dyna",[94]:"Tower - Mesia",[95]:"Tower - Dyna",[96]:"Angry Sea",[97]:"Boat House",[98]:"Joel - Lighthouse",[100]:"Underground Channel",[101]:"Zombie Town",[104]:"Evil Spirit Island 1",[105]:"Evil Spirit Island 2",[106]:"Evil Spirit Island 3",
[107]:"Evil Spirit Island 4",[108]:"Sabera Palace 1",[109]:"Sabera Palace 2",[110]:"Sabera Palace 3",[112]:"Joel - Secret Passage",[113]:"Joel",[114]:"Swan",[115]:"Swan - Gate",[120]:"Goa Valley",[124]:"Mt Hydra",[125]:"Mt Hydra - Cave 1",[126]:"Mt Hydra - Outside Shyron",[127]:"Mt Hydra - Cave 2",[128]:"Mt Hydra - Cave 3",[129]:"Mt Hydra - Cave 4",[130]:"Mt Hydra - Cave 5",[131]:"Mt Hydra - Cave 6",[132]:"Mt Hydra - Cave 7",[133]:"Mt Hydra - Cave 8",[134]:"Mt Hydra - Cave 9",[135]:"Mt Hydra - Cave 10",
[136]:"Styx 1",[137]:"Styx 2",[138]:"Styx 3",[140]:"Shyron",[142]:"Goa",[143]:"Goa Fortress - Oasis Entrance",[144]:"Desert 1",[145]:"Oasis Cave - Main",[146]:"Desert Cave 1",[147]:"Sahara",[148]:"Sahara - Outside Cave",[149]:"Desert Cave 2",[150]:"Sahara Meadow",[152]:"Desert 2",[156]:"Pyramid Front - Entrance",[157]:"Pyramid Front - Branch",[158]:"Pyramid Front - Main",[159]:"Pyramid Front - Draygon",[160]:"Pyramid Back - Entrance",[161]:"Pyramid Back - Hall 1",[162]:"Pyramid Back - Branch",[163]:"Pyramid Back - Dead End Left",
[164]:"Pyramid Back - Dead End Right",[165]:"Pyramid Back - Hall 2",[166]:"Pyramid Back - Draygon Revisited",[167]:"Pyramid Back - Teleporter",[168]:"Goa Fortress - Entrance",[169]:"Goa Fortress - Kelbesque",[170]:"Goa Fortress - Zebu",[171]:"Goa Fortress - Sabera",[172]:"Goa Fortress - Tornel",[173]:"Goa Fortress - Mado 1",[174]:"Goa Fortress - Mado 2",[175]:"Goa Fortress - Mado 3",[176]:"Goa Fortress - Karmine 1",[177]:"Goa Fortress - Karmine 2",[178]:"Goa Fortress - Karmine 3",[179]:"Goa Fortress - Karmine 4",
[180]:"Goa Fortress - Karmine 5",[181]:"Goa Fortress - Karmine 6",[182]:"Goa Fortress - Karmine 7",[183]:"Goa Fortress - Exit",[184]:"Oasis Cave - Entrance",[185]:"Goa Fortress - Asina",[186]:"Goa Fortress - Kensu",[187]:"Goa - House",[188]:"Goa - Inn",[190]:"Goa - Tool Shop",[191]:"Goa - Tavern",[192]:"Leaf - Elder House",[193]:"Leaf - Rabbit Hut",[194]:"Leaf - Inn",[195]:"Leaf - Tool Shop",[196]:"Leaf - Armor Shop",[197]:"Leaf - Student House",[198]:"Brynmaer - Tavern",[199]:"Brynmaer - Pawn Shop",
[200]:"Brynmaer - Inn",[201]:"Brynmaer - Armor Shop",[203]:"Brynmaer - Item Shop",[205]:"Oak - Elder House",[206]:"Oak - Mother House",[207]:"Oak - Tool Shop",[208]:"Oak - Inn",[209]:"Amazones - Inn",[210]:"Amazones - Item Shop",[211]:"Amazones - Armor Shop",[212]:"Amazones - Elder",[213]:"Nadare",[214]:"Portoa - Fisherman House",[215]:"Portoa - Palace Entrance",[216]:"Portoa - Fortune Teller",[217]:"Portoa - Pawn Shop",[218]:"Portoa - Armor Shop",[220]:"Portoa - Inn",[221]:"Portoa - Tool Shop",[222]:"Portoa - Palace Left",
[223]:"Portoa - Palace Throne Room",[224]:"Portoa - Palace Right",[225]:"Portoa - Asina Room",[226]:"Amazones - Elder Downstairs",[227]:"Joel - Elder House",[228]:"Joel - Shed",[229]:"Joel - Tool Shop",[231]:"Joel - Inn",[232]:"Zombie Town - House",[233]:"Zombie Town - House Basement",[235]:"Swan - Tool Shop",[236]:"Swan - Stom Hut",[237]:"Swan - Inn",[238]:"Swan - Armor Shop",[239]:"Swan - Tavern",[240]:"Swan - Pawn Shop",[241]:"Swan - Dance Hall",[242]:"Shyron - Fortress",[243]:"Shyron - Training Hall",
[244]:"Shyron - Hospital",[245]:"Shyron - Armor Shop",[246]:"Shyron - Tool Shop",[247]:"Shyron - Inn",[248]:"Sahara - Inn",[249]:"Sahara - Tool Shop",[250]:"Sahara - Elder House",[251]:"Sahara - Pawn Shop"};class Entity$$module$rom{constructor(b,a){this.rom=b;this.id=a}toString(){return this.constructor.name+" $"+this.id.toString(16).padStart(2,0)}}
class Screen$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);this.base=(255<a?64+a:a)<<8;this.tiles=seq$$module$rom(15,(a)=>slice$$module$rom(b.prg,this.base|a<<4,16))}metatile(b,a){return this.rom.metatiles[this.tiles[b][a]]}}
class Tileset$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);a&=63;this.tileBase=65536|a<<8;this.attrBase=77824|a<<4;this.alternatesBase=81408|a<<3;this.tiles=seq$$module$rom(4,(a)=>slice$$module$rom(b.prg,this.tileBase|a<<8,256));this.attrs=seq$$module$rom(256,(a)=>b.prg[this.attrBase|a>>2]>>((a&3)<<1)&3);this.alternates=slice$$module$rom(b.prg,this.alternatesBase,32)}}
class TileEffects$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);this.base=a<<8&8191|73728;this.effects=slice$$module$rom(b.prg,this.base,256)}}class Palette$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);this.base=(a&3)<<2|(a&252)<<6|16624;this.colors=slice$$module$rom(b.prg,this.base,4)}color(b){return this.colors[b]&63}}
class Pattern$$module$rom extends Entity$$module$rom{constructor(b,a,c){super(b,a);this.pixels=c||slice$$module$rom(b.chr,a<<4,16)}pixelAt(b,a){return(this.pixels[b|8]>>a&1)<<1|this.pixels[b]>>a&1}flipH(){return new Pattern$$module$rom(this.rom,-1,this.pixels.map(reverseBits$$module$rom))}flipV(){return new Pattern$$module$rom(this.rom,-1,seq$$module$rom(16,(b)=>this.pixels[b&8|~b&7]))}flip(b){let a=this;b&64&&(a=a.flipH());b&128&&(a=a.flipV());return a}}
class TileAnimation$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);this.base=255865+(a<<3);this.pages=slice$$module$rom(b.prg,this.base,8)}}
class Hitbox$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);this.base=218769+(a<<2);this.coordinates=slice$$module$rom(b.prg,this.base,4)}get w(){return this.coordinates[1]}get x0(){return signed$$module$rom(this.coordinates[0])}get x1(){return this.x0+this.w}get h(){return this.coordinates[3]}get y0(){return signed$$module$rom(this.coordinates[2])}get y1(){return this.y0+this.h}}
class AdHocSpawn$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);this.base=(a<<2)+171008;this.lowerSlot=b.prg[this.base];this.upperSlot=b.prg[this.base+1];this.object=b.prg[this.base+2];this.count=b.prg[this.base+3]}}
class ItemGet$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);this.itemPointer=122214+a;this.item=b.prg[this.itemPointer];this.tablePointer=121600+2*a;this.tableBase=addr$$module$rom(b.prg,this.tablePointer,81920);a=[];let c=this.tableBase;a.push(b.prg[c++]);a.push(b.prg[c++]);a.push(b.prg[c++]);for(a.push(b.prg[c++]);;){const d=b.prg[c++];a.push(d);a.push(b.prg[c++]);if(d&64)break}a.push(b.prg[c++]);this.table=Uint8Array.from(a)}write(b){b=void 0===b?this.rom:b;b.prg[this.itemPointer]=
this.item;const a=this.table;b.prg.subarray(this.tableBase,this.tableBase+a.length).set(a)}}class Npc$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);this.base=33008|(a&252)<<6|(a&3)<<2;this.data=slice$$module$rom(b.prg,this.base,4)}}
class Location$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);this.mapDataPointer=82688+(a<<1);this.mapDataBase=addr$$module$rom(b.prg,this.mapDataPointer,49152);this.valid=49152<this.mapDataBase&&!!LOCATION_NAMES$$module$rom[a];this.name=LOCATION_NAMES$$module$rom[a];this.layoutBase=addr$$module$rom(b.prg,this.mapDataBase,49152);this.graphicsBase=addr$$module$rom(b.prg,this.mapDataBase+2,49152);this.entrancesBase=addr$$module$rom(b.prg,this.mapDataBase+4,49152);this.exitsBase=
addr$$module$rom(b.prg,this.mapDataBase+6,49152);this.flagsBase=addr$$module$rom(b.prg,this.mapDataBase+8,49152);this.pitsBase=this.layoutBase==this.mapDataBase+10?null:addr$$module$rom(b.prg,this.mapDataBase+10,49152);this.bgm=b.prg[this.layoutBase];this.layoutWidth=b.prg[this.layoutBase+1];this.layoutHeight=b.prg[this.layoutBase+2];this.animation=b.prg[this.layoutBase+3];this.extended=b.prg[this.layoutBase+4];this.screens=seq$$module$rom(this.height,(a)=>slice$$module$rom(b.prg,this.layoutBase+
5+a*this.width,this.width));this.tilePalettes=slice$$module$rom(b.prg,this.graphicsBase,3);this.tileset=b.prg[this.graphicsBase+3];this.tileEffects=b.prg[this.graphicsBase+4];this.tilePatterns=slice$$module$rom(b.prg,this.graphicsBase+5,2);this.entrances=group$$module$rom(4,b.prg.slice(this.entrancesBase,this.exitsBase));this.exits=varSlice$$module$rom(b.prg,this.exitsBase,4,255,this.flagsBase);this.flags=varSlice$$module$rom(b.prg,this.flagsBase,2,255);this.pits=this.pitsBase?varSlice$$module$rom(b.prg,
this.pitsBase,4,255):[];this.npcDataPointer=102913+(a<<1);this.npcDataBase=addr$$module$rom(b.prg,this.npcDataPointer,65536);this.spritePalettes=(a=65536!=this.npcDataBase)?slice$$module$rom(b.prg,this.npcDataBase+1,2):null;this.spritePatterns=a?slice$$module$rom(b.prg,this.npcDataBase+3,2):null;this.objects=a?varSlice$$module$rom(b.prg,this.npcDataBase+5,4,255):null}get width(){return this.layoutWidth+1}get height(){return this.layoutHeight+1}monsters(){return this.objects?this.objects.flatMap((b,
a)=>{var [,,c,d]=b;return c&7||!this.rom.objects[d+80]?[]:[[this.id,a+13,c&128?1:0,d+80,this.spritePatterns[c&128?1:0],this.rom.objects[d+80].palettes()[0],this.spritePalettes[this.rom.objects[d+80].palettes()[0]-2]]]}):[]}}
class ObjectData$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);this.objectDataPointer=109568+(a<<1);this.objectDataBase=addr$$module$rom(b.prg,this.objectDataPointer,65536);this.sfx=b.prg[this.objectDataBase];a=this.objectDataBase+1;this.objectData=[];let c=0;for(let d=0;32>d;d++)d&7||(c=b.prg[a++]),this.objectData.push(c&128?b.prg[a++]:0),c<<=1}serialize(){const b=[this.sfx];for(let a=0;4>a;a++){let c=b.length;b.push(0);for(let d=0;8>d;d++)this.objectData[8*a+d]&&(b[c]|=128>>>
d,b.push(this.objectData[8*a+d]))}return Uint8Array.from(b)}write(b){b=void 0===b?this.rom:b;b.prg[this.objectDataPointer]=this.objectDataBase&255;b.prg[this.objectDataPointer+1]=this.objectDataBase>>>8&255;const a=this.serialize();b.prg.subarray(this.objectDataBase,this.objectDataBase+a.length).set(a)}get(b){return this.objectData[b-768>>>5]}static setupProps(){const b=(...a)=>({get(){let b=0;for(const c of a){const [a,d=255,g=0]=c;b|=(this.objectData[a-768>>>5]&d)>>>(0>g?0:g)<<(0>g?-g:0)}return b},
set(b){for(const c of a){const [a,d=255,g=0]=c;{const c=a-768>>>5;this.objectData[c]=this.objectData[c]&~d|b>>>(0>g?-g:0)<<(0>g?0:g)&d}}}});Object.defineProperties(this.prototype,{metasprite:b([768]),collisionPlane:b([928,240,4]),hitbox:b([1056,64,2],[928,15]),hp:b([960]),atk:b([992]),def:b([1024]),level:b([1056,31]),child:b([1088]),terrainSusceptibility:b([1120]),immobile:b([1184,128,7]),action:b([1184,127]),replacement:b([1216]),goldDrop:b([1280,240,4]),elements:b([1280,15]),expReward:b([1312]),
attackType:b([1344])})}parents(){return this.rom.monsters.filter((b)=>b.child&&this.rom.adHocSpawns[b.child].object==this.id)}locations(){return this.rom.locations.filter((b)=>b&&b.objects&&b.objects.some((a)=>0==(a[2]&7)&&(a[3]+80&255)==this.id))}palettes(b){if(34==this.action)return[3];let a=this.objectData[0];42==this.action&&(a=this.objectData[31]|1);41==this.action&&(a=107);38==this.action&&(a=156);b=(void 0===b?0:b)&&this.child?this.rom.metasprites[this.rom.objects[this.rom.adHocSpawns[this.child].object].objectData[0]]:
null;return[...new Set([...this.rom.metasprites[a].palettes(),...b?b.palettes():[]])]}}ObjectData$$module$rom.setupProps();
class Metasprite$$module$rom extends Entity$$module$rom{constructor(b,a){super(b,a);this.base=addr$$module$rom(b.prg,230492+(this.id<<1),196608);this.valid=196608<this.base;if(255==b.prg[this.base]){const c=addr$$module$rom(b.prg,this.base+1);for(let a=0;256>a;a++)if(addr$$module$rom(b.prg,230492+(a<<1))==c){this.mirrored=a;break}if(null==this.mirrored)throw Error("could not find mirrored sprite for "+a.toString(16));this.frames=this.frameMask=this.size=0;this.sprites=[]}else this.mirrored=null,this.size=
b.prg[this.base],this.frameMask=b.prg[this.base+1],this.frames=this.frameMask+1,this.sprites=seq$$module$rom(this.frames,(a)=>{a=this.base+2+4*a*this.size;const c=[];for(let d=0;d<this.size&&128!=b.prg[a+4*d];d++)c.push(slice$$module$rom(b.prg,a+4*d,4));return c})}palettes(){if(!this.valid)return[];let b=this;b.mirrored&&(b=this.rom.metasprites[b.mirrored]);const a=new Set;for(const c of b.sprites)for(let b of c){let [c,,d]=b;if(128==c)break;a.add(d&3)}return[...a]}}
class DataTable$$module$rom extends Array{constructor(b,a,c,d,e){e=void 0===e?1<d?(...a)=>a:(a)=>a:e;super(c);this.rom=b;this.base=a;this.count=c;this.width=d;for(let f=0;f<c;f++)this[f]=e(...slice$$module$rom(b.prg,a+f*d,d))}}
class AddressTable$$module$rom extends Array{constructor(b,a,c,d,e){e=void 0===e?(a)=>a:e;super(c);this.rom=b;this.base=a;this.count=c;this.offset=d;this.addresses=seq$$module$rom(this.count,(c)=>addr$$module$rom(b.prg,a+2*c,d));for(let a=0;a<c;a++)this[a]=e(this.addresses[a],a,this.addresses)}}
class Message$$module$rom{constructor(b,a,c,d){this.messages=b;this.part=a;this.id=c;this.addr=d;a=b.rom.prg;c=[];for(this.bytes=[];a[d];d++){let e=a[d];this.bytes.push(e);if(1!=e)if(2==e)c.push("\n");else if(3==e)c.push("\u25bc\n");else if(4==e)c.push("SIMEA");else if(8==e)c.push("ITEM");else if(5<=e&&9>=e){const f=a[++d];9==e?c.push(" ".repeat(f)):(c.push(b.extraWords[e][f]),PUNCTUATION$$module$rom[String.fromCharCode(a[d+1])]||c.push(" "))}else if(128<=e)c.push(b.basicWords[e-128]),PUNCTUATION$$module$rom[String.fromCharCode(a[d+
1])]||c.push(" ");else if(32<=e)c.push(String.fromCharCode(e));else throw Error(`Non-exhaustive switch: ${e} at ${d.toString(16)}`);}this.text=c.join("")}}const PUNCTUATION$$module$rom={"\x00":!0,".":!0,",":!0,_:!0,":":!0,"!":!0,"?":!0,"'":!0," ":!0};
class Messages$$module$rom{constructor(b){this.rom=b;const a=(a)=>readString$$module$rom(b.prg,a);this.basicWords=new AddressTable$$module$rom(b,166144,128,131072,a);this.extraWords={5:new AddressTable$$module$rom(b,166400,10,131072,a),6:new AddressTable$$module$rom(b,166420,36,131072,a),7:new AddressTable$$module$rom(b,166492,74,131072,a)};this.banks=new DataTable$$module$rom(b,164862,36,1);this.parts=new AddressTable$$module$rom(b,164898,34,131072,(a,d,e)=>new AddressTable$$module$rom(b,a,33==d?
3:e[d+1]-a>>>1,(this.banks[d]<<13)-40960,(a,b)=>new Message$$module$rom(this,d,b,a)))}}
class Rom$$module$rom{constructor(b){this.prg=b.subarray(16,262160);this.chr=b.subarray(262160);this.screens=seq$$module$rom(259,(a)=>new Screen$$module$rom(this,a));this.tilesets=seq$$module$rom(12,(a)=>new Tileset$$module$rom(this,a<<2|128));this.tileEffects=seq$$module$rom(11,(a)=>new TileEffects$$module$rom(this,a+179));this.patterns=seq$$module$rom(this.chr.length>>4,(a)=>new Pattern$$module$rom(this,a));this.palettes=seq$$module$rom(256,(a)=>new Palette$$module$rom(this,a));this.locations=seq$$module$rom(256,
(a)=>LOCATION_NAMES$$module$rom[a]?new Location$$module$rom(this,a):null);this.tileAnimations=seq$$module$rom(4,(a)=>new TileAnimation$$module$rom(this,a));this.hitboxes=seq$$module$rom(24,(a)=>new Hitbox$$module$rom(this,a));this.objects=seq$$module$rom(256,(a)=>new ObjectData$$module$rom(this,a));this.adHocSpawns=seq$$module$rom(96,(a)=>new AdHocSpawn$$module$rom(this,a));this.metasprites=seq$$module$rom(256,(a)=>new Metasprite$$module$rom(this,a));this.messages=new Messages$$module$rom(this);this.itemGets=
seq$$module$rom(113,(a)=>new ItemGet$$module$rom(this,a));this.npcs=seq$$module$rom(205,(a)=>new Npc$$module$rom(this,a))}get monsters(){let b=new Set;for(const a of this.locations)if(a&&a.objects)for(const c of a.objects)0==(c[2]&7)&&b.add(this.objects[c[3]+80&255]);b=[...b];b.sort((a,b)=>a.id-b.id);return b}get projectiles(){let b=new Set;for(const a of this.monsters)a.child&&b.add(this.objects[this.adHocSpawns[a.child].object]);b=[...b];b.sort((a,b)=>a.id-b.id);return b}get monsterGraphics(){const b=
{};for(const a of this.locations)if(a&&a.objects)for(const c of a.objects)if(!(c[2]&7)){const d=c[2]&128?1:0,e=(c[3]+80).toString(16).padStart(2,0);(b[e]=b[e]||{})[`${d}:${a.spritePatterns[d].toString(16)}:${a.spritePalettes[d].toString(16)}`]={slot:d,pat:a.spritePatterns[d],pal:a.spritePalettes[d]}}return b}get locationMonsters(){const b={};for(const a of this.locations){if(!a||!a.objects)continue;const c=b["$"+a.id.toString(16).padStart(2,0)]={};for(const b of a.objects)if(!(b[2]&7)){const a=b[2]&
128?1:0,d=b[3]+80;c[`${a}:${d.toString(16)}`]=(c[`${a}:${d.toString(16)}`]||0)+1}}return b}static load(b){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){const a=yield pickFile$$module$rom();b&&(yield b(a));return new Rom$$module$rom(a)})}writeNpcData(){for(const b of this.locations){if(!b)continue;let a=b.npcDataBase;b.spritePalettes&&this.prg.subarray(a+1,a+3).set(b.spritePalettes);b.spritePatterns&&this.prg.subarray(a+3,a+5).set(b.spritePatterns);a+=5;for(const c of b.objects||
[])this.prg.subarray(a,a+4).set(c),a+=4}}writeObjectData(){let b=110080;const a={};for(const c of this.objects){const d=c.serialize(),e=d.join(" ");e in a?c.objectDataBase=a[e]:(c.objectDataBase=b,a[e]=b,b+=d.length);c.write()}return b}}
const readString$$module$rom=(b,a)=>{const c=[];for(;b[a];)c.push(b[a++]);return String.fromCharCode(...c)},pickFile$$module$rom=()=>new Promise((b,a)=>{if("#reset"!=window.location.hash){const a=window.localStorage.getItem("rom");if(a)return b(Uint8Array.from(Array(a.length/2).fill(0).map((b,c)=>Number.parseInt(a[2*c]+a[2*c+1],16))))}const c=document.createElement("input");document.body.appendChild(c);c.type="file";c.addEventListener("change",()=>{const a=c.files[0],e=new FileReader;e.addEventListener("loadend",
()=>{const a=new Uint8Array(e.result),d=Array.from(a,(a)=>a.toString(16).padStart(2,0)).join("");window.localStorage.setItem("rom",d);c.remove();b(a)});e.readAsArrayBuffer(a)})}),EXPECTED_CRC32$$module$rom=466849842;var module$rom={};module$rom.Rom=Rom$$module$rom;module$rom.EXPECTED_CRC32=EXPECTED_CRC32$$module$rom;const IM1$$module$random=2147483563,IM2$$module$random=2147483399,AM$$module$random=1/IM1$$module$random,IMM1$$module$random=IM1$$module$random-1,IA1$$module$random=40014,IA2$$module$random=40692,IQ1$$module$random=53668,IQ2$$module$random=52774,IR1$$module$random=12211,IR2$$module$random=3791,NTAB$$module$random=32,NDIV$$module$random=1+Math.floor(IMM1$$module$random/NTAB$$module$random),EPS$$module$random=1.2E-7,RNMX$$module$random=1-EPS$$module$random;
class Random$$module$random{constructor(b=Math.floor(4294967296*Math.random())){this.seed(b)}seed(b){this.idum2=this.idum=Math.max(1,Math.floor(b));this.iy=0;this.iv=Array(NTAB$$module$random).fill(0);for(b=NTAB$$module$random+7;0<=b;b--){const a=Math.floor(this.idum/IQ1$$module$random);this.idum=IA1$$module$random*(this.idum-a*IQ1$$module$random)-a*IR1$$module$random;0>this.idum&&(this.idum+=IM1$$module$random);b<NTAB$$module$random&&(this.iv[b]=this.idum)}this.iy=this.iv[0]}next(){var b=Math.floor(this.idum/
IQ1$$module$random);this.idum=IA1$$module$random*(this.idum-b*IQ1$$module$random)-b*IR1$$module$random;0>this.idum&&(this.idum+=IM1$$module$random);b=Math.floor(this.idum2/IQ2$$module$random);this.idum2=IA2$$module$random*(this.idum2-b*IQ2$$module$random)-b*IR2$$module$random;0>this.idum2&&(this.idum2+=IM2$$module$random);b=Math.floor(this.iy/NDIV$$module$random);this.iy=this.iv[b]-this.idum2;this.iv[b]=this.idum;1>this.iy&&(this.iy+=IMM1$$module$random);return Math.min(AM$$module$random*this.iy,
RNMX$$module$random)}nextInt(b){return Math.floor(this.next()*b)}shuffle(b){for(let a=b.length;a;){const c=this.nextInt(a--);[b[a],b[c]]=[b[c],b[a]]}return b}}var module$random={};module$random.Random=Random$$module$random;const STATUS$$module$version="unstable",VERSION$$module$version="assumed",LABEL$$module$version="assumed df9b808",HASH$$module$version="df9b8081ed7e3952a6b924477cac45255486db6e",DATE$$module$version=new Date(1551182378E3);var module$version={};module$version.STATUS=STATUS$$module$version;module$version.VERSION=VERSION$$module$version;module$version.LABEL=LABEL$$module$version;module$version.HASH=HASH$$module$version;module$version.DATE=DATE$$module$version;var $jscompDefaultExport$$module$patch={apply(b,a){return $jscomp.asyncExecutePromiseGeneratorFunction(function*(){let c;a.seed||(a.seed=parseSeed$$module$patch("").toString(16),window.location.hash+="&seed="+a.seed);c=a.flags?new FlagSet$$module$flagset(a.flags):new FlagSet$$module$flagset("Em Gt Mr Rlpt Sbk Sct Sm Tasd");for(const b in a)"false"===a[b]&&(a[b]=!1);yield shuffle$$module$patch(b,parseSeed$$module$patch(a.seed),c)})}};
const parseSeed$$module$patch=(b)=>b?/^[0-9a-f]{1,8}$/i.test(b)?Number.parseInt(b,16):crc32$$module$crc32(b):Math.floor(4294967296*Math.random()),shuffle$$module$patch=(b,a,c,d,e)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){if("number"!==typeof a)throw Error("Bad seed");var f=crc32$$module$crc32(a.toString(16).padStart(8,0)+String(c))>>>0;watchForFlag0$$module$patch.apply(b);rearrangeTriggersAndNpcs$$module$patch.apply(b);c.check("Rd")&&requireHealedDolphinToRide$$module$patch.apply(b);
c.check("Rp")&&connectLeafToLimeTree$$module$patch.apply(b);openSwanFromEitherSide$$module$patch.apply(b);f=new Random$$module$random(f);yield shuffle2$$module$depgraph(b,f,d,c,e);const g=new Rom$$module$rom(b);rescaleMonsters$$module$patch(b,g);c.check("Mr")&&shuffleMonsters$$module$patch(b,g,f);identifyKeyItemsForDifficultyBuffs$$module$patch(g);fixShaking$$module$patch.apply(b);upgradeBallsToBracelets$$module$patch.apply(b);preventNpcDespawns$$module$patch.apply(b);allowTeleportOutOfTower$$module$patch.apply(b);
c.check("Td")&&buffDeosPendant$$module$patch.apply(b);c.check("Rl")&&barrierRequiresCalmSea$$module$patch.apply(b);scaleDifficultyLib$$module$patch.apply(b);nerfArmors$$module$patch.apply(b);fixVampire$$module$patch.apply(b);displayDifficulty$$module$patch.apply(b);itemLib$$module$patch.apply(b);c.check("Em")?buffMedicalHerb3x$$module$patch.apply(b):c.check("Hm")||buffMedicalHerb2x$$module$patch.apply(b);c.check("Rt")?asinaTeleportsToMezameShrine$$module$patch.apply(b):noTeleportOnThunderSword$$module$patch.apply(b);
c.check("Ts")&&leatherBootsForSpeed$$module$patch.apply(b);c.check("Di")&&neverDie$$module$patch.apply(b);c.check("Ta")&&autoEquipBracelet$$module$patch.apply(b);c.check("Tw")&&nerfWildWarp$$module$patch.apply(b);return stampVersionSeedAndHash$$module$patch(b,a,c)}),stampVersionSeedAndHash$$module$patch=(b,a,c)=>{const d=crc32$$module$crc32(b).toString(16).padStart(8,0).toUpperCase(),e="unstable"==STATUS$$module$version?HASH$$module$version.substring(0,7).padStart(7,0).toUpperCase():VERSION$$module$version;
a=a.toString(16).padStart(8,0).toUpperCase();const f=(a,c)=>{for(let d=0;d<c.length;d++)b[a+16+d]=c.charCodeAt(d)},g=(a,b)=>{const c=[];for(let d=0;d<a.length||d<b.length;d++)c.push(a[d]||" "),c.push(b[d]||" ");return c.join("")};f(161743,g("  VERSION     SEED      ",`  ${e}     ${a}`));a=String(c);let h;if(46<a.length){if(92<a.length)throw Error("Flag string way too long!");h=a.substring(46,92).padEnd(46," ");a=a.substring(0,46)}a=a.padEnd(46," ");f(161791,g(a.substring(0,23),a.substring(23)));h&&
f(161839,g(h.substring(0,23),h.substring(23)));f(161925,g(d.substring(0,4),d.substring(4)));f(153366,"RANDOMIZER");f(153404,"BETA");return d},watchForFlag0$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000\n\n;;;; TODO - REMOVE THIS ONCE IT'S SOLVED\n.org $3cb62 ; main game mode jump 08\n  jsr CheckFlag0\n.org $3fe80\nReadControllersWithDirections:\n.org $3d347\nInitiateDialog:\n\n.org $3fdd0 ; !!! - note itemLib (I think) uses this space, too\nCheckFlag0:\n  lda $6480\n  lsr\n  bcc +\n   asl\n   sta $6480\n   lda #$00\n   sta $20\n   sta $21\n   ldx #$0c\n-   lda $6140,x\n    eor #$ff\n    sta $6140,x\n    dex\n   bpl -\n   jsr InitiateDialog\n+ jmp ReadControllersWithDirections\n\n",
"watchForFlag0")),openSwanFromEitherSide$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000\n.bank $18000 $8000:$4000\n\n.org $192e7\n  .byte $a3,$ab  ; 73 swan gate\n.org $1aba3 ; empty space at end of npcdata\n  .byte $00,$ff,$09,$6b,$ff\n  .byte $04,$01,$02,$b3\n  .byte $04,$0a,$04,$2c\n  .byte $07,$06,$01,$2d\n  .byte $07,$09,$01,$2d\n  .byte $02,$0a,$01,$2d ; new soldier (they need to come in pairs)\n  .byte $02,$0b,$01,$2d ; new soldier\n  .byte $0a,$0e,$02,$b3 ; new trigger to erase guards\n  .byte $ff\n.org $1ac00\n",
"openSwanFromEitherSide")),connectLeafToLimeTree$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000\n.bank $14000 $8000:$4000\n\n;; Valley of Wind\n.org $145dd\n  .byte $e7,$93 ; new valley of wind entrance table\n  .byte $22,$86 ; move exit table up a little\n.org $14605\n  .byte $10\n.org $153e7\n  .byte $80,$03,$df,$06\n  .byte $40,$01,$60,$01\n  .byte $80,$02,$70,$00\n  .byte $c8,$01,$98,$01\n  .byte $98,$01,$98,$01\n  .byte $a8,$00,$90,$03\n  .byte $ef,$04,$78,$05 ; new entrance from lime tree\n.org $14622\n  .byte $4f,$56,$42,$02 ; new exit to lime tree valley\n  .byte $4f,$57,$42,$02\n\n;; Lime Tree Valley\n.org $1544c\n  .byte $12,$86 ; new entrance table (inside v.wind area)\n  .byte $67,$94 ; move exit table up a little\n.org $14612 ; lime tree entrances\n  .byte $ef,$02,$78,$01\n  .byte $80,$01,$30,$00\n  .byte $10,$00,$c0,$01 ; new entrance from valley of wind\n.org $1545a\n  .byte $1a ; left-middle screen\n.org $1545d\n  .byte $0c ; bottom-left (just nicer matched mountains)\n.org $15467\n  .byte $00,$1b,$03,$06 ; new exits to valley of wind\n  .byte $00,$1c,$03,$06\n\n;; Waterfall Valley South\n.org $153dd\n  .byte $60,$93 ; share layout and graphics tables w/ north half\n  .byte $92,$93\n;;.org $153e7  ;; Newly-freed space\n;;.org $1541e\n\n\n\n  ; find/make a free block for some new exit/entrance tables\n",
"connectLeafToLimeTree")),rearrangeTriggersAndNpcs$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000\n.bank $1c000 $8000:$4000\n\ndefine Difficulty $64a2\ndefine ShouldRedisplayDifficulty $64a3\n\n;; Move Draygon's spawn condition up about $100 bytes to make 3 bytes\n;; extra space for a spawn flag check for Draygon 2.\n.org $1c776         ; cb draygon 1 and 2\n  .byte $54,$88     ; ($1c854)\n.org $1c854\n  .byte $9f,$a1,$0b ; pyramid front: 10b NOT defeated draygon 1\n  .byte $ff,$ff,$ff\n  .byte $ff\n\n;; Move 'Learn Barrier' trigger into 'Shyron Massacre' to get 2 extra\n;; bytes for the 'Calmed Sea' condition.\n.org $1e182      ; 84 learn barrier\n  .byte $00,$a2  ; ($1e200)\n\n.org $1e200\n  .byte $20,$51  ; Condition: 051 NOT learned barrier\n  .byte $a0,$00  ; Condition: 000 NOT false\n  .byte $5b,$b2  ; Message: 1d:12  Action: 0b\n  .byte $40,$51  ; Set: 051 learned barrier\n.org $1e208\n\n;; Move 'Shyron Massacre' trigger to the unused space in triggers\n;; 87 and 88 to get 2 extra bytes (leaves 8 more bytes in that spot).\n.org $1e17a      ; 80 shyron massacre\n  .byte $32,$a2  ; ($1e232)\n.org $1e232\n  .byte $20,$27  ; Condition: 027 NOT shyron massacre\n  .byte $00,$5f  ; Condition: 05f sword of thunder\n  .byte $80,$3b  ; Condition: 03b talked to zebu in shyron -> SLOT(key to styx)\n  .byte $03,$b3  ; Message: 1d:13\n  .byte $40,$27  ; Set: 027 shyron massacre\n.org $1e244\n\n;; Reorder Zebu cave dialog to spawn windmill guard first\n;; Alternatively: consider just having him always spawned?\n;; NOTE: this reordering requires adjusting the offset for\n;; the refresh give condition.\n.org $1d76c ; zebu dialog 10 cave\n  .byte $60,$3a,$00,$1a,$00 ; 03a NOT talked to zebu in cave -> 00:1a\n  .byte         $40,$3a     ;     Set: 03a talked to zebu in cave\n  .byte $00,$0d,$00,$1d,$00 ; 00d leaf villagers rescued -> 00:1d\n  .byte $00,$38,$00,$1c,$00 ; 038 leaf attacked -> 00:1c\n  .byte $00,$39,$00,$1d,$00 ; 039 learned refresh -> 00:1d\n  .byte $40,$0a,$18,$1b,$00 ; 00a windmill key used -> 00:1b (action 03)\n  .byte         $c0,$00     ;     Clear: 000 (set on item get instead)\n;;.byte         $40,$39     ;     Set: 039 learned refresh\n\n;; Give key to styx regardless of whether sword of thunder found\n;; Also don't duplicate-set 03b, it's already handled by ItemGet.\n.org $1d78e ; zebu dialog f2 shyron temple\n  .byte $60,$3b,$8a,$97,$22,$c0,$00  ; 03b NOT -> 14:17 (action 11)\n  .byte $00,$2d,$02,$c3,$22          ; 02d -> 16:03\n\n;; Windmill guard shouldn't despawn on massacre\n.org $1c7d6\n  .byte $00 ; no despawn at all\n\n;; Don't check unwritten 104 flag for mado spawn\n.org $1c93a\n  .byte $a0,$00\n\n;; Remove redundant dialog itemget flag sets\n.org $1cb67 ; sword of wind\n  .byte $c0,$00\n.org $1cde1 ; sword of fire\n  .byte $c0,$00\n.org $1ce0c ; insect flute\n  .byte $c0,$00\n.org $1d5db ; warrior ring\n  .byte $c0,$00\n.org $1d662 ; deo\n  .byte $c0,$00\n.org $1d6ee ; shield ring\n  .byte $c0,$00\n.org $1ccdf ; windmill key\n  .byte $c0,$00\n;.org $1d798 ; key to styx (zebu)\n;  .byte $c0,$00\n.org $1e208 ; key to styx (trigger)\n  .byte $a0,$00\n.org $1d3b4 ; eye glasses (clark)\n  .byte $a0,$00\n.org $1d852 ; kensu lighthouse\n  .byte $c0,$00\n\n; Move NpcDialog_2d to the unused space at 1d1fd..1f21b\n.org $1c9b7\n  .byte $fd,$91\n.org $1d1fd\n  .byte $80,$00,$00,$00\n  .byte $28,$00\n  .byte $73,$05\n  .byte $ff\n  ;; 00: 28 Mt Sabre North - Main\n  .byte $a0,$00,$08,$b0,$00 ; default -> 05:10 (action 01)\n  ;; 05: 73 Swan - Gate\n  .byte $40,$2a,$42,$75,$05 ; 02a change:soldier -> 13:15 (action 08)\n  .byte         $41,$0d     ;     Set: 10d\n  .byte $a0,$00,$0a,$74,$05 ; default -> 13:14 (action 01) -> @ 05\n.org $1d21b\n\n.org $1e34c ; trigger b3: despawn swan guards\n  .byte $81,$0d ; 10d talked to guards from other side -> despawn\n\n;; NOTE: we could use 2 less bytes if necessary by moving a smaller\n;; entry here that's otherwise adjacent to some free space.  Or\n;; just defrag that table.\n.org $1db06\n  .byte $79,$8f ; ItemGetData_03 pointer\n.org $1cf79 ; space freed by moving Dialog_2d\nItemGetData_03: ; sword of thunder\n  .byte $03,$80 ; slot\n  .byte $08,$00 ; action 01 -> teleport to shyron\n  .byte $02,$fd ; Set: 2fd warp:shyron\n  .byte $40,$5f ; Set: 05f chest:03:sword of thunder\n  .byte $ff\n.org $1cf82\n  ; 15 bytes still available\n.org $1cf91\n\n\n;; queen will try to give flute of lime even if got sword first\n.org $1cfab ; queen \"you found sword of water\" message action\n  .byte $19 ; add action 03\n;.org $3d1f5 ; call to WaitForDialogToBeDismissed\n;  jsr PatchAsinaReveal\n\n;; asina will also give flute of lime if queen never did (after recover)\n.org $098f9\n  .byte $28 ; asina persondata[1] -> flute of lime\n.org $1d80a\n  .byte $89 ; asina love pendant dialog -> give second item\n.org $1d816\n  .byte $89 ; asina default dialog -> give second item\n\n.org $3ff44\n; TODO - 60 bytes we could use here (now 36)\nPatchGrantItemInRegisterA:\n  ;; Version of GrantItemInRegisterA that bails out if the\n  ;; item is already owned.\n  sta $057f\n  lsr\n  lsr\n  lsr\n  tax\n  lda $057f\n  and #$07\n  tay\n  lda $64c0,x\n  and $3c000,y ; powers of two\n  beq +\n   pla\n   pla\n+ rts\n.org $3ff5c\n\n;;PatchAsinaReveal:\n;;  jsr WaitForDialogToBeDismissed\n;;  jmp DialogFollowupActionJump_03\n.org $3ff62\n; this space is used by nerfArmors\n;.org $3ff77\n;.org $3ff80\n\n;.org $3d225\n;DialogFollowupActionJump_03:\n;.org $3d354\n;WaitForDialogToBeDismissed:\n\n\n.org $3d223 ; part of DialogFollowupActionJump_11 (give 2nd item)\n  bpl GrantItemInRegisterA ; change from bne to handle sword of wind\n\n.org $3d22b\nGrantItemInRegisterA:\n  jsr PatchGrantItemInRegisterA\n\n;; If LookingAt is $1f and the item goes into the $20 row then we can't\n;; just reject - instead, add the item to an overflow chest.\n;; We use the bytes at 64b8..64bf to store the overflow.\n\n;; asina reveal depends on mesia recording (01b), not ball of water (01f)\n;; - this ensures you have both sword and ball to get to her --\x3e ???\n.org $1c81f\n  .byte $1b\n.org $1c822\n  .byte $1b\n.org $1c82a\n  .byte $1b\n.org $1cf9c\n  .byte $1b\n.org $1d047\n  .byte $1b\n.org $1e389\n  .byte $1b\n\n\n;; bow of truth extra triggers\n.org $1d8dc ;; Azteca dialog\n  .byte $80,$00,$c0,$00\n\n;; refresh triggers\n;.org $1d780\n;  .byte $c0,$00\n.org $1e358\n  .byte $c0,$00\n\n;; paralysis triggers\n.org $1e34a\n  .byte $c0,$00\n\n;; teleport triggers\n.org $1d7d0\n  .byte $c0,$00\n\n;; barrier triggers\n.org $1c7e2\n  .byte $20,$00 ; akahana cave\n.org $1c7ef\n  .byte $a0,$00 ; akahana stoned\n.org $1c886\n  .byte $a0,$00 ; zebu\n.org $1c898\n  .byte $a0,$00 ; tornel\n.org $1c8ac\n  .byte $a0,$00 ; stom\n.org $1e222\n  .byte $c0,$00 ; trigger set flag\n\n;; insect/dwarf items\n;; Change all the post-insect messages to action 03\n.org $1cdc6\n  .byte $18\n.org $1cdcb\n  .byte $18\n.org $1cdd2\n  .byte $18\n.org $1cdd9\n  .byte $18\n.org $1cdff\n  .byte $18\n.org $1ce04\n  .byte $18\n\n;; kensu in the cabin needs to be available even after visiting joel.\n;; just have him disappear after setting the flag. but also require\n;; having returned the fog lamp before he shows up - this requires\n;; moving him up a word.\n.org $1c6b0\n  .byte $f6,$88 ; pointer to kensu 68\n.org $1c8f6\n  .byte $61,$20,$9b,$80,$21,$ff\n.org $1d867\n  .byte $12,$21 ; message 11:01 (action 02 disappear)\n\n\n;; Treasure chest spawns don't need to be so complicated.\n;; Instead, just use the new dedicated ItemGet flags 200..27f\n.org $1c5c3\n  ;; Read the flag 200+chest, where chest is in $23\n  lda #$a2\n  sta $61\n  lda $23\n  sta $62\n  lda #$61\n  sta $24\n  lda #$00\n  sta $25\n  tay\n  jsr ReadFlagFromBytePair_24y\n  beq +\n   inc $20\n+ rts\n.org $1c5de\n\n;; Patches to ItemGet to update the dedicated flag and\n;; leave room for calling the difficulty methods\n.org $1c287\n  jsr ItemGet_PickSlotAndAdd\n.org $1c299\n  jmp ItemGetFollowup\n.org $1c29c\nItemGet_PickSlotAndAdd:\n  sty $62\n  nop\n  nop\n.org $1c2a0\n\n.org $1c26f\nItemGet:\n.org $1c135\nReadFlagFromBytePair_24y:\n.org $1c112\nSetOrClearFlagsFromBytePair_24y:\n\n;; Freed from the chest spawn pointer table\n.org $1dc82\n.org $1dd64\n\n;; Freed from the chest spawn data\n.org $1e106\nItemGetRedisplayDifficulty:\n  rts  ; change to nop to enable this code\n  lda #$01\n  sta ShouldRedisplayDifficulty\n  rts\n.org $1e110\nItemGetFollowup:\n  ;; We have room to exactly copy this behavior, but it does appear\n  ;; to be dead.\n  lda ($24),y\n  pha  ; later -> pla and if pl then repeat ItemGet with A -> $23\n   ;; Maybe increase difficulty (if last element is FE)\n   bpl +\n   lsr\n   bcs +\n    lda Difficulty\n    cmp #$2f\n    bcs +\n     inc Difficulty\n     jsr ItemGetRedisplayDifficulty\n   ;; Always set the dedicated 200+chest flag.\n+  lda #$42\n   sta $61\n   ;; $62 is already the item number, saved from earlier\n   lda #$61\n   sta $24\n   lda #$00\n   sta $25\n   tay\n   jsr SetOrClearFlagsFromBytePair_24y\n  ;; Now finish by maybe chaining to another item if positive\n  pla\n  bmi +\n   sta $23\n   jmp ItemGet\n+ rts\n\nItemGet_FindOpenSlotWithOverflow:\n  tay ; copied from 1c2a8\n  bmi +\n   pla ; make the call into this actually a jump...\n   pla\n   stx $61  ; save this for now\n   jsr ItemGet_FindOpenSlot\n   ;; if 23 nonzero then we failed to find a slot\n   ;; if 61 is 20 then we really need to put it somewhere\n   ;; in that case, add it to the overflow.  when we\n   ;; delete a key item, it will fall in\n   lda $23\n    beq +\n   lda $61\n   cmp #$20\n    bne +\n   ;; need to find a place\n   ldx #$07\n-   lda $64b8,x\n    beq ++\n    dex\n    bpl -\n+ rts\n++  lda $29\n    sta $64b8,x\n    lda #$00\n    sta $23\n    rts\n\n;; TODO - still plenty of space here\n\n.org $1e179 ; 1e17a is above...\n\n\n.org $1c308\nItemGet_FindOpenSlot:\n.org $1c2a8\n  jsr ItemGet_FindOpenSlotWithOverflow\n\n\n;; Replace \"drop item\" code for key items to use an overflow buffer\n\n.bank $20000 $8000:$2000\n\n.org $20372\n  jsr CheckDroppable\n\n.org $20434\n  jsr MaybeDrop\n  nop\n  nop\n\n.org $20ff0\nInvItemData:\n\n.org $21471 ; unused space, 130 or so bytes\nCheckDroppable:\n  ;; Loads A with something that has the :40 bit set if the item\n  ;; is not droppable.\n  lda $64bf\n  beq +\n   ;; there's overflow, so allow deleting if selecting from 3rd row\n   lda $6427\n   and #$38\n   cmp #$10\n   bne +\n    lda #$00\n    rts\n+ lda InvItemData,x\n  rts\nMaybeDrop:  ; 21486\n  txa\n  and #$f0\n  cmp #$20\n  beq +\n   lda #$ff\n   sta $6430,x\n   rts\n  ;; This is a key item and we have overflow.\n  ;; Substitute the overflow and cycle...\n+ lda $6430,x\n  pha\n   lda $64bf\n   sta $6430,x\n   ldx #$07\n-   lda $64b7,x\n    beq +\n    sta $64b8,x\n    dex\n    bne -\n+ pla\n  sta $64b8,x\n  rts\nFillQuestItemsFromBuffer: ; 214af\n  ;; If there's anything in the buffer and any space in the inventory,\n  ;; fill them in.  Just take the most recently added ones, not worrying\n  ;; about cycling the queue (that's only needed for dropping).\n  ldy #$08     ; predecrement, so start at $64c0\n-  dey\n   bmi +       ; buffer is full\n   lda $64b8,y\n  bne -        ; occupied, decrement and look at the next\n  ;; If y == #$08 then buffer is empty - return.\n+ iny\n  cpy #$08\n  beq +\n  ;; Look for open spots in the quest item row\n  ldx #$08\n-   dex\n    bmi +\n    lda $6450,x\n   bpl -\n   ;; We're looking at an open slot in x and an available item in y\n   lda $64b8,y\n   sta $6450,x\n   lda #$00\n   sta $64b8,y\n   iny\n   cpy #$08\n  bne -\n  ;; The following is copied from $20534, patched to not sort\n  ;; the swords or powerups (so it loads 2 instead of 0)\n+ lda #$02\n  sta $2e\n  rts\n\n.org $21500\n\n;; MUST BE EXACTLY 4 BYTES\n.org $20534\n  nop\n  jsr FillQuestItemsFromBuffer\n\n;; NOTE: This is copied from preventSwordClobber, which is no longer\n;; used on its own since we need to do slightly different initialization\n;; to refill from the buffer.\n;.org $20534\n;  lda #$02\n.org $205a7\n  .byte $0c\n.org $205a9\n  .byte $04\n\n",
"rearrangeTriggers")),requireHealedDolphinToRide$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n;; move portoa fisherman up 1 word, make him only\n;; appear if both shell flute AND healed dolphin\n;; NOTE: 8b is the traditional itemget and 25\n;; is tied to the slot (healing dolphin)\n;; We could delete the slot one, but it's actually\n;; convenient to have both...\n.org $1c6a8\n  .byte $99,$87\n.org $1c799\n  .byte $d6,$00,$25,$80,$8b,$ff\n;; daughter's dialog should trigger on both, too\n.org $1d1c5\n  .byte $80,$2a,$03,$cc,$ff\n  .byte $20,$25,$01,$26,$00\n  .byte $20,$8b,$01,$26,$00\n  .byte $00,$21,$01,$25,$00\n  .byte $a0,$00,$01,$24,$00\n",
"requireHealedDolphinToRide")),buffDeosPendant$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.org $3f026\n  nop\n  nop\n","buffDeosPendant")),allowTeleportOutOfTower$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.bank $1c000 $8000:$4000\n\n;; draygon 2 does not reappear after defeated\n;; (points to moved memory location).\n.org $1c857\n  .byte $a6,$a2,$8d\n\n.org $3db39\n  .byte $00   ; don't jump away to prevent warp, just goto next line\n\n",
"allowTeleportOutOfTower")),preventNpcDespawns$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.bank $1a000 $8000:$2000\n\n.org $1a181 ;; npcdata a9 slot 0d second byte\n  .byte $67 ;; move kelbesque 2 one tile left\n\n.bank $1c000 $8000:$4000\n\n;; akahana does not disappear from waterfall cave after barrier\n.org $1c7e3\n  .byte $00\n\n;; stoned akahana does not disappear from waterfall cave after barrier\n.org $1c7f0\n  .byte $00\n\n;; zebu does not disappear from his cave after barrier\n.org $1c887\n  .byte $00\n\n;; asina does not disappear after defeating sabera\n.org $1c8b9\n  .byte $00\n\n;; clark moves back to joel after giving item, not after calming sea\n;; TODO - this is slightly awkward in that you can go up the stairs\n;; and back down and he's disappeared.  An alternative would be to\n;; put a trigger somewhere far away that checks 08d and sets some\n;; other (fresh/unused) flag to key off of.  (disappearing would be\n;; weird for clark, tho)\n.org $1c842\n  .byte $8d\n.org $1c845\n  .byte $8d\n\n;; Prevent soft-lock when encountering sabera and mado from reverse\n;; Double-returns if the boss's sprite is not in the top quarter of\n;; the screen. This is unused space at the end of the triggers.\n.org $1e3c0\nCheckBelowBoss:\n   lda $0380,x\n    bmi ++\n   ; skip the check for sabera 1 and mado 1\n   lda $04a0,x\n   and #$fe\n   cmp #$e6  ; sabera and mado\n   bne +\n    lda #$dc\n    cmp $04c0,x  ; first version has #$cf, second has #$dc\n    bne ++\n+  sec\n   lda $d0\n   sbc $d0,x\n    bmi ++\n   lda $b0\n   sbc $b0,x\n    bmi ++\n   sbc #$40\n++ rts\n.org $1e3e5\n.org $1e3f0\n\n.org $1e48b  ; vampire pattern 0\n  jsr CheckBelowBoss\n.org $1e971  ; kelbesque pattern 0\n  jsr CheckBelowBoss\n.org $1ec8f  ; sabera pattern 0\n  jsr CheckBelowBoss\n.org $1ede8  ; mado pattern 0\n  jsr CheckBelowBoss\n\n;; TODO - despawning swan guards closes the door forever\n;; instead, pick an unused flag, then set it as a prereq for\n;; trigger_b3 (1e34c) and set it as result of dialog_2d @73 +0 (1cf87)\n;;   => need 2 extra bytes to do this...\n;;   ... or add a jump to DialogFollowupActionJump_08 () to\n;;       set the flag manually if $6c==#$73\n\n;; Also fix softlock issue with zebu in reverse fortress.\n;; Remove the $c4,$29 spawn that locks the screen.\n.bank $1a000 $a000:$2000\n.org $1a1c0  ; npcdata_aa slot 0e\n  .byte $ff  ; just delete the spawn entirely\n.org $1a220  ; npcdata_ac slot 0f\n  .byte $ff  ; same for tornel\n.org $1a2e8  ; npcdata_b9 slot 0f\n  .byte $ff  ; same for asina\n;; NOTE - changing this for kensu seems broken and is unnecessary...\n;; except that it seems to be broken.\n;;.org $1a3ac  ; npcdata_ba slot 0e\n;;  .byte $00,$00,$02,$80 ; more npcs follow so instead change to off-screen trigger\n\n",
"preventNpcDespawns")),barrierRequiresCalmSea$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.bank $1c000 $8000:$4000\n\n.org $1e202\n  .byte $80,$8f  ; Condition: 283 calmed angy sea (also 283)\n","barrierRequiresCalmSea")),noTeleportOnThunderSword$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.org $3d565\n  .word ($d78c)\n","noTeleportOnThunderSword")),asinaTeleportsToMezameShrine$$module$patch=
buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.bank $1c000 $8000:$2000\n\n;; Add an extra dialog followup for asina to conditionally use to\n;; warp back to leaf from shyron\n\n.org $1d81b\n  .byte $fa ; 03b -> action 1f\n.org $1d820\n  .byte $fa ; 03b -> action 1f\n.org $1d82c\n  .byte $fa ; default -> action 1f\n\n.org $3d161\n  .byte $45,$fe ; DialogFollowupActionJump 1f\n\n.org $3fe45\n  lda #$00\n  sta $6c\n  sta $6d\n  lda #$01\n  sta $41\n  rts\n.org $3fe50\n.org $3fe78 ; end of unused space\n\n",
"asinaTeleportsToMezameShrine")),saharaBunniesRequireTelepathy$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $1c000 $8000:$2000\n.org $1d653 ; dialog 5a deo\n  ;; replace akahana's dialog - would be nice to add an extra stanza instead,\n  ;; but there's not immediately space - if we ever defrag then we should do it\n  ;; or else remove all the changed forms (except maybe soldier)\n  .byte $c2,$43   ; 243 NOT telepathy -> 1a:13\n.org $1d671 ; dialog 59 generic sahara bunnies\n  ;; replace stom - he can talk to bunnies just fine\n  .byte $c2,$43   ; 243 NOT telepathy -> 1a:12\n\n",
"saharaBunniesRequireTelepathy")),fixShaking$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n\n.org $3f4eb\n  ldx #$03\nloop1:\n  dex\n  bpl loop1\n\n.org $3f455\n  ldx #$07\n  nop\n","fixShaking")),displayDifficulty$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.bank $1e000 $a000:$2000\n\ndefine ShouldRedisplayDifficulty $64a3\n\n.org $1fd27\n  lda #$0e                      ; refer to moved LV(menu) display\n\n.bank $26000 $a000:$2000\n.org $27aca\n  ldx #$06                      ; also show diff\n\n.bank $34000 $8000:$2000\n.org $34ee9  ; NOTE - Difficulty goes here!\n  .byte $a2,$64,$3c,$2b,$03,$00 ; display difficulty right of lvl\n.org $34f19\n  .byte $21,$04,$29,$29,$03,$00 ; copied from $34ee9\n\n.bank $1c000 $8000:$2000\n.org $1e106\n  .byte $ea    ; change rts to nop\n\n.org $3ffa9\nDisplayNumber:\n\n.org $3cb84\nCheckForPlayerDeath:\n\n.org $3cb65  ; inside GameModeJump_08_Normal\n  jsr CheckToRedisplayDifficulty\n\n.org $3ffe3 ; we have 23 bytes to spend here\nCheckToRedisplayDifficulty:\n  lda ShouldRedisplayDifficulty\n  beq +\n   lda #$00\n   sta ShouldRedisplayDifficulty\n   lda #$06\n   jsr DisplayNumber\n+ jmp CheckForPlayerDeath\n.org $3fffa\n",
"displayDifficulty")),buffMedicalHerb3x$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $1c000 $8000:$4000\n.org $1c4ea\n  .byte $60\n","buffMedicalHerb3x")),buffMedicalHerb2x$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $1c000 $8000:$4000\n.org $1c4ea\n  .byte $40\n","buffMedicalHerb2x")),removeWildWarp$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n;;; NOTE: this actually recovers 36 bytes of prime real estate PRG.\n;;; Alternatively, restrict it to only go to leaf?\n.bank $3c000 $c000:$4000\n.org $3cbc7\n  rts\n",
"removeWildWarp")),nerfWildWarp$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n;;; Wild warp only goes to start.\n.bank $3c000 $c000:$4000\n.org $3cbec\n  .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00\n","nerfWildWarp")),preventSwordClobber$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000\n.bank $20000 $8000:$4000\n\n.org $20534\n  lda #$02\n.org $205a7\n  .byte $0c\n.org $205a9\n  .byte $04\n","preventSwordClobber")),
upgradeBallsToBracelets$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000\n.bank $1c000 $8000:$2000\n\n.org $1c2de\n  lda $29\n  bcc +\n   inc $6430,x\n   bne ItemGet_Bracelet\n   lsr\n   lda $29\n   sbc #$00\n   sta $23\n+ sta $6430,x\n  rts\n.org $1c2f4\nItemGet_Bracelet:\n","upgradeBallsToBracelets")),neverDie$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000\n\n.org $3cb89\n  lda $03c0\n  sta $03c1\n  nop\n.org $3cbaf\n  bne label\n.org $3cbc0\nlabel:\n",
"neverDie")),fixVampire$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n;;; Fix the vampire to allow >60 HP\n.bank $3c000 $c000:$4000\n.bank $1e000 $a000:$2000\n.org $1e576\n  jsr ComputeVampireAnimationStart\n  nop\n.org $1ff97 ; This looks like it's just junk at the end, but we could\n            ; probably go to $1ff47 if we don't care about developer mode\nComputeVampireAnimationStart:\n   bcs +\n   asl\n   bcs +\n   adc #$10\n   bcc ++\n+  lda #$ff\n++ rts\n","fixVampire")),
itemLib$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n\n.org $3c0f8\n  jsr PostUpdateEquipment\n  jmp RestoreBanksAndReturn\n\n.org $3c446\nPostUpdateEquipment:\n  ;; Change 'lda' (ad) to 'jsr' (20) to enable these\n  lda ApplySpeedBoots\n  rts\nApplySpeedBoots:\n  lda #$06   ; normal speed\n  sta $0341  ; player speed\n  lda $0716  ; equipped passive item\n  cmp #$13   ; leather boots\n  bne +\n   inc $0341 ; speed up by 1\n+ rts\n.org $3c482  ; end of empty area\n\n.org $3c008\nUpdateEquipmentAndStatus:\n\n.org $3d91f\n  jsr PostInventoryMenu\n.org $3d971\n  jsr PostInventoryMenu\n\n;;; Call 3f9ba instead of 3c008 after the inventory menu\n.org $3f9ba\nPostInventoryMenu:\n  ;; Change 'lda' (ad) to 'jsr' (20) to enable these\n  lda AutoEquipBracelets\n  jmp UpdateEquipmentAndStatus\nAutoEquipBracelets:\n  lda $6428\n  bpl +\n   ;; deselect all\n-  lda #$80\n   sta $642b\n   lda #00\n   sta $0718\n   sta $0719\n   rts\n+ tay\n  cmp $6430,y ; check for crystalis\n   bne -\n  lda $643c,y ; which power-up do we have?\n   bmi -\n  ;; need to store $718 (0=nothing, 1..4=ball, 5..8=bracelet), $719 (0..2), $642b (0..3)\n  lsr\n  lda #$01\n  bcs +\n   lda #$02\n+ sta $719\n  and #$02\n  asl\n  sta $61\n  tya\n  sta $642b\n  sec\n  adc $61\n  sta $0718\n  rts\n\n.org $3f9f8\nFinishTriggerSquare:\n  beq +\n   lda #$08  ; game mode normal\n   sta $41\n+ jmp MainLoop_01_Game\n  \n.org $3fa10\n\n.org $3fdf0\n\n.org $3d354\nWaitForDialogToBeDismissed:\n.org $3d3ff\nMainLoopItemGet:\n.org $3e756\nRestoreBanksAndReturn:\n\n\n.org $3cab6\nMainLoop_01_Game:\n\n;; End of ActivateTriggerSquare restores game mode to normal,\n;; but if sword of thunder comes from trigger square, this will\n;; clobber the LOCATION_CHANGE mode.  Patch it to call out to\n;; FinishTriggerSquare to check for mode 02 and if it is, don't\n;; change it back.\n.org $3d54b ; change this to call FinishTriggerSquare\n  lda $41\n  cmp #$01  ; game mode: location change\n  jmp FinishTriggerSquare\n.org $3d552\n\n",
"itemLib")),quickChangeItems$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n\n;;.org $3fe75\n;;  jmp\n\n;; REPLACE ALL CALLS to ReadControllersWithDirections\n;; to instead use ReadControllersAndUpdateStart\n\n;;  - will thhis even work?\n\n.org $3fe80\nReadControllersWithDirections:\n\n\n\n.org $3cb62\n  jsr ReadControllersAndUpdateStart\n.org $3d8ea\n  jsr ReadControllersAndUpdateStart\n\n.org $3f9f8 ; whereever AutoEquipBracelet left off -- TODO - seat's taken\nReadControllersAndUpdateStart:\n  lda $43    ; Pressed buttons last frame\n  and #$30   ; Start and Select\n  sta $61\n  jsr ReadControllersWithDirections\n  ;; Cahnge $4b to report start/select only on button-up, and\n  ;; only if no quick select happened.  We store a mask #$30 in\n  ;; $42 on button-down for start and select, and zero it out\n  ;; on quick change, so that ANDing with it before setting\n  ;; $4b is sufficient to meet the requirement.\n  lda #$30\n  bit $4b\n  beq +\n   sta $42\n+ lda $43\n  eor #$ff\n  and $61\n  and $42\n  sta $61\n  lda $4b\n  and #$cf  ; ~$30\n  ora $61\n  sta $4b\n  rts\n",
"quickChangeItems")),leatherBootsForSpeed$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502('\n.bank $3c000 $c000:$4000 ; fixed bank\n\n.org $3c446\n  .byte $20\n\n.bank $28000 $8000:$2000\n.org $29105\n  .byte "Speed Boots",$00\n.org $2134a\n  .byte "Speed Boots",$ff\n\n',"leatherBootsForSpeed")),autoEquipBracelet$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n.org $3f9ba\n  .byte $20\n","autoEquipBracelets")),scaleDifficultyLib$$module$patch=
buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000 ; fixed bank\n\ndefine Difficulty $64a2\ndefine PlayerLevel $421\ndefine ObjectRecoil $340\ndefine ObjectHP $3c0\ndefine PlayerMaxHP $3c0\ndefine ObjectAtk $3e0\ndefine PlayerAtk $3e1\ndefine ObjectDef $400\ndefine ObjectActionScript $4a0\ndefine ObjectGold $500\ndefine ObjectElementalDefense $500\ndefine ObjectExp $520\n\ndefine SFX_MONSTER_HIT       $21\ndefine SFX_ATTACK_IMMUNE     $3a\n\n.org $34bde\nCoinAmounts:\n  .word 0,1,2,4,8,16,30,50,100,200,300,400,500,600,700,800\n\n.bank $1c000 $8000:$4000 ; item use code\n\n.org $3fe2e\nSubtractEnemyHP:\n  ;; NOTE: we could probably afford to move a few of these back if needed\n  lda ObjectElementalDefense,y\n  and #$0f\n  cmp #$0f\n  sec\n   beq +   ; don't damage anything that's invincible.\n  lda ObjectHP,y\n  sbc $63\n  sta ObjectHP,y\n+ lda $61\n  sbc #$00\n  rts\n.org $3fe45\n; NOTE - this space used by TeleportToMezameShrine\n.org $3fe78 ; end of unused space\n\n;;.org $3c010\n;;;; Adjusted inventory update - use level instead of sword\n;;   ldy $0719  ; max charge level\n;;   lda #$01\n;;-   asl\n;;    dey\n;;   bpl -\n;;   ldy $0716  ; equipped passive item\n;;-   clc\n;;    adc $0421  ; player level\n;;    dey\n;;    cpy #$0d   ; power ring - 1\n;;   beq -\n;;   sta $03e1  ; player attack\n;;   lda $0421  ; player level\n;;   cpy #$0f   ; iron necklace - 1\n;;.org $3c02d   ; NOTE - MUST BE EXACT!!!!\n\n\n.org $3c010\n;; Adjusted inventory update - use level instead of sword\n;; Also nerf power ring to only double the sword value, rather than the level.\n   ldy $0719  ; max charge level\n   lda #$01\n-   asl\n    dey\n   bpl -\n   ldy $0716  ; equipped passive item\n   cpy #$0e   ; power ring\n   bne +\n    asl\n+  clc\n   adc $0421  ; player level\n   sta $03e1  ; player attack\n   lda $0421  ; player level\n.org $3c02b   ; NOTE - MUST BE EXACT!!!!\n\n\n.bank $34000 $8000:$4000 ; item use code\n\n\n;; Adjusted stab damage for populating sword object ($02)\n.org $35c5f\n  lda #$02\n  sta $03e2\n  rts\n\n\n;; ADJUSTED DAMAGE CALCULATIONS\n;; $61 is extra HP bit(s)\n;; $62 is DEF\n;; $63 is damage\n.org $350fa\n    lda #$00\n    sta $61\n    sta $63 ; damage we're actually going to do\n    ;; Check elemental immunity\n    lda ObjectElementalDefense,y\n    and ObjectElementalDefense,x\n    and #$0f\n    php\n     lda ObjectDef,y\n     lsr     ; Just pull one extra bit for HP, could do one more if needed\n     rol $61\n     sta $62 ; Store actual shifted DEF in $62\n     lda PlayerAtk\n     adc ObjectAtk,x\n     sec\n     sbc $62 ; A <- atk - def\n     bcc +\n    plp\n    bne ++\n     sta $63 ; will do damage\n     pha ; to prevent pla from screwing up\n+   pla  ; to compensate for skipping the plp above\n++  stx $10\n    sty $11\n    lda $63\n    bne ++\n      sta ObjectActionScript,x\n      lda ObjectActionScript,y\n      bmi +\n       jsr KnockbackObject\n+     lda #SFX_ATTACK_IMMUNE\n      inc $63\n      bne +++\n++   jsr KnockbackObject\n     lda #SFX_MONSTER_HIT\n+++ jsr StartAudioTrack\n    jsr SubtractEnemyHP\n     bcc KillObject\n    lsr\n    lda $62\n    rol\n    sta ObjectDef,y\n    rts\n;;; NOTE: must finish before 35152\n.org $35152\nKillObject:\n.org $355c0\nKnockbackObject:\n.org $3c125\nStartAudioTrack:\n\n\n.bank $1a000 $a000:$2000 ; object data\n.org $3c409\n  jmp ComputeEnemyStats\n\n.org $1bb00  ; This should leave some space after compression\n\nDiffAtk:   ; PAtk*8\n  .byte $28,$2C,$30,$33,$37,$3B,$3F,$42,$46,$4A,$4E,$51,$55,$59,$5D,$60\n  .byte $64,$68,$6C,$6F,$73,$77,$7B,$7E,$82,$86,$8A,$8D,$91,$95,$99,$9C\n  .byte $A0,$A4,$A8,$AB,$AF,$B3,$B7,$BA,$BE,$C2,$C6,$C9,$CD,$D1,$D5,$D8\nDiffDef:   ; PDef * 4\n  .byte $0C,$0F,$12,$15,$18,$1B,$1E,$21,$24,$27,$2A,$2D,$30,$33,$36,$39\n  .byte $3C,$3F,$42,$45,$48,$4B,$4E,$51,$54,$57,$5A,$5D,$60,$63,$66,$69\n  .byte $6C,$6F,$72,$75,$78,$7B,$7E,$81,$84,$87,$8A,$8D,$90,$93,$96,$99\nDiffHP:    ; PHP (0..$26)\n  .byte $30,$36,$3B,$41,$46,$4C,$51,$57,$5C,$62,$67,$6D,$72,$78,$7D,$83\n  .byte $88,$8E,$93,$99,$9E,$A4,$A9,$AF,$B4,$BA,$BF,$C5,$CA,$D0,$D5,$DB\n  .byte $E0,$E6,$EB,$F1,$F6,$FC,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF\nDiffExp:   ; ExpBase * 4, encoded in standard EXP encoding\n  .byte $05,$06,$08,$0A,$0C,$0E,$12,$16,$1A,$20,$27,$30,$3A,$47,$56,$69\n  .byte $88,$89,$8B,$8E,$91,$95,$99,$9F,$A6,$AE,$B8,$C4,$D2,$E4,$FA,$FF\n  .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF\n\n;;; $12 and $13 are free RAM at this point\n\n.org $1bbd0  ; Note: this follows immediately from the tables.\nComputeEnemyStats:\n  lda ObjectRecoil,x\n  bmi +\n   jmp $3c2af ; exit point\n+ and #$7f\n  sta ObjectRecoil,x\n  ldy Difficulty\nRescaleDefAndHP:\n   ;; HP = max(PAtk + SWRD - DEF, 1) * HITS - 1\n   ;; DiffAtk = 8 * PAtk\n   ;; DEF = (8 * PAtk) * SDEF / 64   (alt, SDEF = 8 * DEF / PAtk)\n   lda ObjectHP,x\n    beq RescaleAtk\n   ;; Start by computing 8*DEF, but don't write it to DEF yet.\n+  lda ObjectDef,x\n   pha\n    and #$0f\n    sta $62 ; SDEF\n   pla\n   and #$f0\n   lsr\n   sta $12 ; 8*SWRD (Note: we could store this on the stack)\n   lda DiffAtk,y\n   sta $61 ; 8 * PAtk\n   jsr Multiply16Bit  ; $61$62 <- 64*DEF\n   ;; Multiply by 4 and read off the high byte.\n   lda $62\n   asl $61\n   rol\n   asl $61\n   rol\n   sta ObjectDef,x\n   ;; Now compute 8*PAtk + 8*SWRD - 8*DEF\n   asl\n   bcs +\n    asl\n    bcs +\n     asl\n     bcc ++\n+     lda #$ff        ; overflow, so just use $ff.\n++ sta $61            ; $61 <- 8*DEF\n   ;; Subtract from 8*PAtk.  This may go negative, in which case\n   ;; we store the #$ff in $62.  We start with 1 and unconditionally\n   ;; decrement at the end so that we can check its zeroness and sign\n   ;; without destroying the accumulator.\n   lda #$01\n   sta $62\n   lda DiffAtk,y\n   sec\n   sbc $61\n   bcs +\n    dec $62\n   ;; Now add 8*SWRD, again carrying into $62.\n+  clc\n   adc $12\n   bcc +\n    inc $62\n+  dec $62\n   ;; Check for overflow - if $62 == 1 then set A <- $ff\n   beq ++\n    bpl +\n     lda #$ff\n     bmi ++\n+   lda #$00\n++ sta $61\n   ;; Now check if A is zero, in which case we need to increment it.\n   ora #$0\n   bne +\n    inc $61\n   ;; Multiply by hits, then divide by 8\n   ;; $1bc3c:\n+  lda ObjectHP,x\n   sta $62\n   jsr Multiply16Bit\n   ;; Subtract 1\n   lda $61\n   sec\n   sbc #$01\n   bcs +\n    dec $62\n   ;; Divide by 8\n+  lsr $62\n   ror\n   lsr $62\n   ror\n   lsr $62\n   ror                ; A is low byte of HP, $62 is high byte.\n   ;; Check the high part of HP.  One bit will be rotated into the DEF byte.\n   lsr $62\n   ;; If there's anything left in $62 then we've overflowed.\n   beq +\n    lda #$ff\n    sec\n+  rol ObjectDef,x\n   sta ObjectHP,x\nRescaleAtk:   ; $1bc63\n  ;; DiffDef = 4 * PDef\n  ;; DiffHP = PHP\n  ;; ATK = (4 * PDef + PHP * SAtk / 32) / 4\n  lda ObjectAtk,x\n   beq RescaleGold\n  sta $61\n  lda DiffHP,y\n  sta $62\n  jsr Multiply16Bit\n  lda $61\n  lsr $62\n  ror\n  lsr $62\n  ror\n  lsr $62\n  ror\n  lsr $62\n  ror\n  lsr $62\n  ror\n  clc\n  adc DiffDef,y\n  sta $61\n  lda $62\n  adc #$00\n  lsr\n  ror $61\n  lsr\n  lda $61\n  ror\n  sta ObjectAtk,x\nRescaleGold:   ; $1bc98\n  ;; GOLD = min(15, (8 * DGLD + 3 * DIFF) / 16)\n  lda ObjectGold,x\n  and #$f0\n   beq RescaleExp\n  lsr\n  sta $61\n  lda Difficulty\n  asl\n  adc Difficulty\n  adc $61\n  bcc +\n   lda #$f0\n+ and #$f0\n  sta $61\n  lda ObjectGold,x\n  and #$0f\n  ora $61\n  sta ObjectGold,x\nRescaleExp:   ; $1bcbd\n  ;; EXP = min(2032, DiffExp * SEXP)\n  ;; NOTE: SEXP is compressed for values > $7f.\n  lda ObjectExp,x\n   beq RescaleDone\n  sta $61\n  lda DiffExp,y\n  php ; keep track of whether we were compressed or not.\n   and #$7f\n   sta $62\n   jsr Multiply16Bit  \n   lda $62\n  plp\n  bmi ++\n    ;; No scaling previously.  $61$62 is 128*EXP.\n    ;; If EXP >= 128 then 128*EXP >= #$4000\n    cmp #$40\n    bcc +\n     ;; $62 >= #$40 - need scaling now.\n     ;; EXP/16 = ($80*EXP)/$800\n     lsr\n     lsr\n     lsr\n     ora #$80\n     bne +++ ; uncond\n    ;; No rescaling needed, rotate left one.\n+   asl $61\n    rol\n    ;; Now A is EXP, A<128 guaranteed.  Make sure it's not zero.\n    bne +++\n    lda #$01\n    bne +++ ; uncond\n   ;; Was previously scaled - just re-add and carry.\n++ asl $61\n   rol\n   bcs +\n    adc #$80\n    bcc +++\n+    lda #$ff\n+++ sta ObjectExp,x\nRescaleDone:\n   jmp $3c2af\n\nMultiply16Bit:\n  ;; Multiplies inputs in $61 and $62, then shifts\n  ;; right A times.\n  ;; Result goes $61$62 (lo hi), preserves XY\n  ;; Sets carry if result doesn't fit in 8 bits\n  txa\n  pha\n  lda #$00\n  ldx #$08\n  clc\n-  bcc +\n    clc\n    adc $62\n+  ror\n   ror $61\n   dex\n  bpl -\n  sta $62\n  cmp #$01 ; set carry if A != 0\n  pla\n  tax\n  rts\n.org $1bff0\n",
"scaleDifficultyLib")),nerfArmors$$module$patch=buildRomPatch$$module$6502(assemble$$module$6502("\n.bank $3c000 $c000:$4000\n.bank $1a000 $a000:$2000\n.org $1bb30\nDiffDef:   ; PDef' * 4\n  .byte $08,$0A,$0C,$0E,$10,$12,$14,$16,$18,$1A,$1C,$1E,$20,$22,$24,$26\n  .byte $28,$2A,$2C,$2E,$30,$32,$34,$36,$38,$3A,$3C,$3E,$40,$42,$44,$46\n  .byte $48,$4A,$4C,$4E,$50,$52,$54,$56,$58,$5A,$5C,$5E,$60,$62,$64,$66\n\n.bank $34000 $8000:$2000\n.org $34bc0\nArmorDefense:\n  .byte $00,$01,$03,$05,$07,$09,$0c,$0a,$10\nShieldDefense:\n  .byte $00,$01,$03,$04,$06,$09,$08,$0c,$10\n\n;; Max out armor and shield def at 2*level\n.org $3c02b\n  sta $61\n  asl $61\n  ldy $0713\n  lda ArmorDefense,y\n  cmp $61\n  bcc +\n   lda $61\n+ ldy $0716 ; equipped passive item\n  cpy #$10  ; iron necklace\n  bne +\n   asl\n+ clc\n  adc $0421 ; armor defense\n  sta $0401\n.org $3c04a\n  jsr PatchUpdateShieldDefense\n  nop\n  nop\n.org $3c04f ; NOTE: must be exact!\n  ; STA PLAYER_DEF\n\n.org $3ff62\nPatchUpdateShieldDefense:\n  ldy $0714\n  lda ShieldDefense,y\n  cmp $61\n  bcc +\n   lda $61\n+ ldy $0716 ; equipped passive item\n  cpy #$14  ; shield ring\n  bne +\n   asl\n+ clc\n  adc $0421 ; shield defense\n  sta $0400\n  rts\n.org $3ff80\n\n;; We could try to be cleverer about not reloading the equipped item.\n;; If we just ASL the whole defense then we can do them simultaneously,\n;; and then go into power ring.\n\n",
"nerfArmors")),rescaleMonsters$$module$patch=(b,a)=>{for(var c of SCALED_MONSTERS$$module$patch.keys())for(const b in a.objects){if(SCALED_MONSTERS$$module$patch.has(b))return;a.objects[c].objectDataBase==a.objects[b].objectDataBase&&(SCALED_MONSTERS$$module$patch[b]=SCALED_MONSTERS$$module$patch[c])}for(const d of SCALED_MONSTERS$$module$patch){const [e,{sdef:f,swrd:g,hits:h,satk:k,dgld:n,sexp:m}]=d;b=a.objects[e].objectData;c=[87,94,104,125,136,151,155,158].includes(e)?1:0;b[2]|=128;b[6]=h;b[7]=
k;b[8]=f|g<<4;b[9]=b[9]&224|c;b[16]=b[16]&15|n<<4;b[17]=m}a.objects[125].objectData[16]|=8;a.writeObjectData()},shuffleMonsters$$module$patch=(b,a,c,d)=>{b=new MonsterPool$$module$patch({});for(const c of a.locations)c&&b.populate(c);b.shuffle(c);a.writeNpcData()},identifyKeyItemsForDifficultyBuffs$$module$patch=(b)=>{for(const a of b.itemGets){const c=ITEMS$$module$patch.get(a.item);if(c&&c.key){if(!a.table)throw Error(`No table for ${c.name}`);if(255==a.table[a.table.length-1])a.table[a.table.length-
1]=254;else throw Error(`Expected FF at end of ItemGet table: ${a.id.toString(16)}: ${Array.from(a.table).map((a)=>a.toString(16).padStart(2,0)).join(" ")}`);a.write(b)}}},SCALED_MONSTERS$$module$patch=new Map([[63,"p","Sorceror shot",,,,19,,,],[75,"m","wraith??",2,,2,22,4,61],[79,"m","wraith",1,,2,20,4,61],[80,"m","Blue Slime",,,1,16,2,32],[81,"m","Weretiger",,,1,21,4,40],[82,"m","Green Jelly",4,,3,16,4,36],[83,"m","Red Slime",6,,4,16,4,48],[84,"m","Rock Golem",6,,11,24,6,85],[85,"m","Blue Bat",
,,,4,,32],[86,"m","Green Wyvern",4,,4,24,6,52],[87,"b","Vampire",3,,13,18,,,],[88,"m","Orc",3,,4,21,4,57],[89,"m","Red Flying Swamp Insect",3,,1,21,4,57],[90,"m","Blue Mushroom",2,,1,21,4,44],[91,"m","Swamp Tomato",3,,2,35,4,52],[92,"m","Flying Meadow Insect",3,,3,23,4,81],[93,"m","Swamp Plant",,,,,,36],[94,"b","Insect",,1,8,6,,,],[95,"m","Large Blue Slime",5,,3,20,4,52],[96,"m","Ice Zombie",5,,7,14,4,57],[97,"m","Green Living Rock",,,1,9,4,28],[98,"m","Green Spider",4,,4,22,4,44],[99,"m","Red/Purple Wyvern",
3,,4,30,4,65],[100,"m","Draygonia Soldier",6,,11,36,4,89],[101,"m","Ice Entity",3,,2,24,4,52],[102,"m","Red Living Rock",,,1,13,4,40],[103,"m","Ice Golem",7,2,11,28,4,81],[104,"b","Kelbesque",4,6,12,29,,,],[105,"m","Giant Red Slime",7,,40,90,4,102],[106,"m","Troll",2,,3,24,4,65],[107,"m","Red Jelly",2,,2,14,4,44],[108,"m","Medusa",3,,4,36,8,77],[109,"m","Red Crab",2,,1,21,4,44],[110,"m","Medusa Head",,,1,29,4,36],[111,"m","Evil Bird",,,2,30,6,65],[113,"m","Red/Purple Mushroom",3,,5,19,6,69],[114,
"m","Violet Earth Entity",3,,3,18,6,61],[115,"m","Mimic",,,3,26,15,73],[116,"m","Red Spider",3,,4,22,6,48],[117,"m","Fishman",4,,6,19,5,61],[118,"m","Jellyfish",,,3,14,3,48],[119,"m","Kraken",5,,11,25,7,73],[120,"m","Dark Green Wyvern",4,,5,21,5,61],[121,"m","Sand Monster",5,,8,6,4,57],[123,"m","Wraith Shadow 1",,,,9,7,44],[124,"m","Killer Moth",,,2,35,,77],[125,"b","Sabera",3,7,13,24,,,],[128,"m","Draygonia Archer",1,,3,20,6,61],[129,"m","Evil Bomber Bird",,,1,19,4,65],[130,"m","Lavaman/blob",3,
,3,24,6,85],[132,"m","Lizardman (w/ flail(",2,,3,30,6,81],[133,"m","Giant Eye",3,,5,33,4,81],[134,"m","Salamander",2,,4,29,8,77],[135,"m","Sorceror",2,,5,31,6,65],[136,"b","Mado",4,8,10,30,,,],[137,"m","Draygonia Knight",2,,3,24,4,77],[138,"m","Devil",,,1,18,4,52],[139,"b","Kelbesque 2",4,6,11,27,,,],[140,"m","Wraith Shadow 2",,,,17,4,48],[144,"b","Sabera 2",5,7,21,27,,,],[145,"m","Tarantula",3,,3,21,6,73],[146,"m","Skeleton",,,4,30,6,69],[147,"b","Mado 2",4,8,11,25,,,],[148,"m","Purple Giant Eye",
4,,10,23,6,102],[149,"m","Black Knight (w/ flail)",3,,7,26,6,89],[150,"m","Scorpion",3,,5,29,2,73],[151,"b","Karmine",4,,14,26,,,],[152,"m","Sandman/blob",3,,5,36,6,98],[153,"m","Mummy",5,,19,36,6,110],[154,"m","Tomb Guardian",7,,60,37,6,106],[155,"b","Draygon",5,6,16,41,,,],[158,"b","Draygon 2",7,6,28,40,,,],[160,"m","Ground Sentry (1)",4,,12,26,,],[161,"m","Tower Defense Mech (2)",5,,16,36,,],[162,"m","Tower Sentinel",,,2,,,],[163,"m","Air Sentry",3,,4,26,,],[164,"b","Dyna",6,5,16,,,,],[165,"b",
"Vampire 2",2,,6,27,,,],[180,"b","dyna pod",15,,255,26,,,],[184,"p","dyna counter",,,,26,,,],[185,"p","dyna laser",,,,26,,,],[186,"p","dyna bubble",,,,36,,,],[188,"m","vamp2 bat",,,,16,,40],[191,"p","draygon2 fireball",,,,26,,,],[193,"m","vamp1 bat",,,,16,,40],[195,"p","giant insect spit",,,,35,,,],[196,"m","summoned insect",4,,2,42,,98],[197,"p","kelby1 rock",,,,22,,,],[198,"p","sabera1 balls",,,,19,,,],[199,"p","kelby2 fireballs",,,,11,,,],[200,"p","sabera2 fire",,,1,6,,,],[201,"p","sabera2 balls",
,,,17,,,],[202,"p","karmine balls",,,,25,,,],[203,"p","sun/moon statue fireballs",,,,39,,,],[204,"p","draygon1 lightning",,,,37,,,],[205,"p","draygon2 laser",,,,36,,,],[206,"p","draygon2 breath",,,,36,,,],[224,"p","evil bomber bird bomb",,,,2,,,],[226,"p","summoned insect bomb",,,,47,,,],[227,"p","paralysis beam",,,,23,,,],[228,"p","stone gaze",,,,33,,,],[229,"p","rock golem rock",,,,24,,,],[230,"p","curse beam",,,,10,,,],[231,"p","mp drain web",,,,11,,,],[232,"p","fishman trident",,,,15,,,],[233,
"p","orc axe",,,,24,,,],[234,"p","Swamp Pollen",,,,37,,,],[235,"p","paralysis powder",,,,17,,,],[236,"p","draygonia solider sword",,,,28,,,],[237,"p","ice golem rock",,,,20,,,],[238,"p","troll axe",,,,27,,,],[239,"p","kraken ink",,,,24,,,],[240,"p","draygonia archer arrow",,,,12,,,],[241,"p","??? unused",,,,16,,,],[242,"p","draygonia knight sword",,,,9,,,],[243,"p","moth residue",,,,19,,,],[244,"p","ground sentry laser",,,,13,,,],[245,"p","tower defense mech laser",,,,23,,,],[246,"p","tower sentinel laser",
,,,8,,,],[247,"p","skeleton shot",,,,11,,,],[248,"p","lavaman shot",,,,14,,,],[249,"p","black knight flail",,,,18,,,],[250,"p","lizardman flail",,,,21,,,],[252,"p","mado shuriken",,,,36,,,],[253,"p","guardian statue missile",,,,23,,,],[254,"p","demon wall fire",,,,23,,,]].map((b)=>{var [a,c,d,e=0,f=0,g=0,h=0,k=0,n=0]=b;return[a,{id:a,type:c,name:d,sdef:e,swrd:f,hits:g,satk:h,dgld:k,sexp:n}]}));
class MonsterPool$$module$patch{constructor(b){this.report=b;this.monsters=[];this.used=[];this.locations=[]}populate(b){var a=MONSTER_ADJUSTMENTS$$module$patch[b.id]||{},c=Object.assign({},a);a=a.skip;c=(delete c.maxFlyers,delete c.nonFlyers,delete c.skip,delete c.fixedSlots,c);for(var d in c)throw Error(`Unexpected property '${d}' in MONSTER_ADJUSTMENTS[${b.id}]`);if(!0!==a&&b.spritePatterns&&b.spritePalettes){d=[];c=[];var e=12;for(const a of b.objects||[]){++e;if(a[2]&7)continue;const h=a[3]+
80;if(h in UNTOUCHED_MONSTERS$$module$patch||!SCALED_MONSTERS$$module$patch.has(h)||"m"!=SCALED_MONSTERS$$module$patch.get(h).type)continue;var f=b.rom.objects[h];if(!f)continue;const n=a[2]&128?1:0,m=b.spritePatterns[n];var g=f.palettes(!0);f=g.includes(2)?b.spritePalettes[0]:null;g=g.includes(3)?b.spritePalettes[1]:null;d.push({id:h,pat:m,pal2:f,pal3:g,patBank:n});(this.report[`start-${h.toString(16)}`]=this.report[`start-${h.toString(16)}`]||[]).push("$"+b.id.toString(16));c.push(e)}d.length&&
(a||this.locations.push({location:b,slots:c}),this.monsters.push(...d))}}shuffle(b){this.report["pre-shuffle locations"]=this.locations.map((a)=>a.location.id);this.report["pre-shuffle monsters"]=this.monsters.map((a)=>a.id);b.shuffle(this.locations);b.shuffle(this.monsters);this.report["post-shuffle locations"]=this.locations.map((a)=>a.location.id);for(this.report["post-shuffle monsters"]=this.monsters.map((a)=>a.id);this.locations.length;){const {location:d,slots:e}=this.locations.pop();let f=
this.report["$"+d.id.toString(16).padStart(2,0)]=[];const {maxFlyers:g,nonFlyers:h={},fixedSlots:k={}}=MONSTER_ADJUSTMENTS$$module$patch[d.id]||{};let n=k.pat0||null,m=k.pat1||null,q=k.pal2||null,p=k.pal3||null,u=g,l=!1;for(const b of d.objects||[])if(2==(b[2]&7)&&(l=!0),!(b[2]&7)){var a=b[3]+80;126==a||127==a||159==a?m=98:143==a&&(n=97)}if(21==d.id||71==d.id)l=!1;f.push(`Initial pass: ${[l,n,m,q,p].join(", ")}`);a=(a)=>{var b=FLYERS$$module$patch.has(a.id),c=MOTHS_AND_BATS$$module$patch.has(a.id);
if(b){if(!u)return!1;--u}if(null!=q&&null!=a.pal2&&q!=a.pal2||null!=p&&null!=a.pal3&&p!=a.pal3)return!1;var g=!l||TREASURE_CHEST_BANKS$$module$patch.has(a.pat);let k;if(d.rom.objects[a.id].child||RETAIN_SLOTS$$module$patch.has(a.id)){const b=(k=a.patSlot?128:0)?m:n;if(null!=b&&b!=a.pat)return!1;if(k)m=a.pat;else if(g)n=a.pat;else return!1;f.push(`  Adding ${a.id.toString(16)}: pat(${k}) <-  ${a.pat.toString(16)}`)}else if(null==n&&g||n==a.pat)n=a.pat,k=0,f.push(`  Adding ${a.id.toString(16)}: pat0 <-  ${a.pat.toString(16)}`);
else if(null==m||m==a.pat)m=a.pat,k=128,f.push(`  Adding ${a.id.toString(16)}: pat1 <-  ${a.pat.toString(16)}`);else return!1;null!=a.pal2&&(q=a.pal2);null!=a.pal3&&(p=a.pal3);f.push(`    ${Object.keys(a).map((b)=>`${b}: ${a[b]}`).join(", ")}`);f.push(`    pal: ${(a.pal2||0).toString(16)} ${(a.pal3||0).toString(16)}`);g=0;if(b||c)for(b=0;b<e.length;b++){if(e[b]in h){g=b;break}}else for(b=0;b<e.length;b++)if(!(e[b]in h)){g=b;break}(this.report[`mon-${a.id.toString(16)}`]=this.report[`mon-${a.id.toString(16)}`]||
[]).push("$"+d.id.toString(16));b=e[g];c=d.objects[b-13];b in h&&(c[0]+=h[b][0],c[1]+=h[b][1]);c[2]=c[2]&127|k;c[3]=a.id-80;f.push(`    slot ${b.toString(16)}: objData=${c}`);e.splice(g,1);return!0};if(u)for(var c=0;c<Math.min(40,this.monsters.length);c++)FLYERS$$module$patch.has(this.monsters[c].id)&&a(this.monsters[c])&&this.monsters.splice(c,1),b.shuffle(this.monsters);for(c=0;c<this.monsters.length&&e.length;c++)if(a(this.monsters[c])){const [a]=this.monsters.splice(c,1);FLYERS$$module$patch.has(a.id)||
this.used.push(a);c--}for(c=0;c<this.used.length&&e.length;c++)a(this.used[c])&&(this.used.push(...this.used.splice(c,1)),c--);null!=n&&(d.spritePatterns[0]=n);null!=m&&(d.spritePatterns[1]=m);null!=q&&(d.spritePalettes[0]=q);null!=p&&(d.spritePalettes[1]=p);if(e.length){f.push(`Failed to fill location ${d.id.toString(16)}: ${e.length} remaining`);for(const b of e)a=d.objects[b-13],a[0]=a[1]=0}}}}
const FLYERS$$module$patch=new Set([89,92,110,111,129,138,163,196]),MOTHS_AND_BATS$$module$patch=new Set([85,93,124,188,193]),SWIMMERS$$module$patch=new Set([117,118]),STATIONARY$$module$patch=new Set([119,135]),TREASURE_CHEST_BANKS$$module$patch=new Set([94,95,96,97,100,101,102,103,104,105,106,108,109,110,111,112,116,117,118,119]),MONSTER_ADJUSTMENTS$$module$patch={[3]:{maxFlyers:2,fixedSlots:{pat1:96}},[7]:{nonFlyers:{[15]:[0,-3],[16]:[-10,0],[17]:[0,4]}},[20]:{maxFlyers:2},[21]:{maxFlyers:2},[26]:{maxFlyers:2,
fixedSlots:{pat1:79,pal3:35},nonFlyers:{[16]:[4,0],[17]:[5,0],[18]:[4,0],[19]:[5,0],[20]:[4,0],[21]:[4,0]}},[27]:{skip:!0},[32]:{maxFlyers:1},[33]:{maxFlyers:1,fixedSlots:{pat1:80}},[39]:{nonFlyers:{[13]:[0,16]}},[40]:{maxFlyers:1},[41]:{maxFlyers:1},[43]:{nonFlyers:{[20]:[32,-8]}},[64]:{maxFlyers:2,nonFlyers:{[19]:[12,-16]}},[65]:{maxFlyers:2,nonFlyers:{[21]:[0,-6]}},[66]:{maxFlyers:2,nonFlyers:{[13]:[0,8],[14]:[-8,8]}},[71]:{maxFlyers:1,nonFlyers:{[13]:[-8,-8]}},[74]:{maxFlyers:1,nonFlyers:{[14]:[4,
0],[15]:[0,-3],[16]:[0,4]}},[76]:{},[77]:{maxFlyers:1},[78]:{maxFlyers:1},[79]:{},[87]:{fixedSlots:{pat1:77}},[89]:{skip:!0},[90]:{skip:!0},[91]:{skip:!0},[96]:{skip:!0,maxFlyers:2,fixedSlots:{pat1:82,pal3:8}},[100]:{skip:!0,fixedSlots:{pat1:82,pal3:8}},[104]:{skip:!0,fixedSlots:{pat1:82,pal3:8}},[105]:{maxFlyers:1,nonFlyers:{[23]:[4,6]}},[106]:{maxFlyers:1,nonFlyers:{[21]:[0,24]}},[108]:{maxFlyers:1,nonFlyers:{[23]:[0,24]}},[109]:{maxFlyers:1,nonFlyers:{[17]:[16,0],[27]:[0,0],[28]:[6,0]}},[120]:{maxFlyers:1,
nonFlyers:{[22]:[-8,-8]}},[124]:{maxFlyers:1,nonFlyers:{[21]:[-39,84]}},[132]:{nonFlyers:{[18]:[0,-4],[19]:[0,4],[20]:[-6,0],[21]:[14,12]}},[136]:{maxFlyers:1},[137]:{maxFlyers:1},[138]:{maxFlyers:1,nonFlyers:{[13]:[7,0],[14]:[0,0],[15]:[7,3],[16]:[0,6],[17]:[11,-16]}},[143]:{skip:!0},[144]:{maxFlyers:2,nonFlyers:{[20]:[-11,-3],[21]:[0,16]}},[145]:{maxFlyers:2,nonFlyers:{[24]:[0,14],[25]:[4,-16]}},[152]:{maxFlyers:2,nonFlyers:{[20]:[-6,6],[21]:[0,-16]}},[158]:{maxFlyers:2},[162]:{maxFlyers:1,nonFlyers:{[18]:[0,
11],[19]:[6,0]}},[165]:{nonFlyers:{[23]:[6,6],[24]:[-6,0],[25]:[-1,-7]}},[166]:{skip:!0},[168]:{skip:!0},[169]:{maxFlyers:2,nonFlyers:{[22]:[26,-16],[23]:[0,32]}},[171]:{maxFlyers:2,nonFlyers:{[13]:[1,0],[14]:[2,-2]}},[173]:{maxFlyers:2,nonFlyers:{[24]:[0,8],[25]:[0,-8]}},[175]:{nonFlyers:{[13]:[0,0],[14]:[0,0],[19]:[59,-38]}},[180]:{maxFlyers:2,nonFlyers:{[17]:[6,0],[18]:[0,6]}},[215]:{skip:!0}},ITEMS$$module$patch=new Map([[0,"Sword of Wind",!0],[1,"Sword of Fire",!0],[2,"Sword of Water",!0],[3,
"Sword of Thunder",!0],[4,"Crystalis",!0],[5,"Ball of Wind",!0],[6,"Tornado Bracelet",!0],[7,"Ball of Fire",!0],[8,"Flame Bracelet",!0],[9,"Ball of Water",!0],[10,"Blizzard Bracelet",!0],[11,"Ball of Thunder",!0],[12,"Storm Bracelet",!0],[13,"Carapace Shield"],[14,"Bronze Shield"],[15,"Platinum Shield"],[16,"Mirrored Shield"],[17,"Ceramic Shield"],[18,"Sacred Shield"],[19,"Battle Shield"],[20,"Psycho Shield",!0],[21,"Tanned Hide"],[22,"Leather Armor"],[23,"Bronze Armor"],[24,"Platinum Armor"],[25,
"Soldier Suit"],[26,"Ceramic Suit"],[27,"Battle Armor",!0],[28,"Psycho Armor",!0],[29,"Medical Herb"],[30,"Antidote"],[31,"Lysis Plant"],[32,"Fruit of Lime"],[33,"Fruit of Power"],[34,"Magic Ring"],[35,"Fruit of Repun"],[36,"Warp Boots"],[37,"Statue of Onyx",!0],[38,"Opel Statue",!0],[39,"Insect Flute",!0],[40,"Flute of Lime",!0],[41,"Gas Mask",!0],[42,"Power Ring",!0],[43,"Warrior Ring",!0],[44,"Iron Necklace",!0],[45,"Deo's Pendant",!0],[46,"Rabbit Boots",!0],[47,"Leather Boots",!0],[48,"Shield Ring",
!0],[49,"Alarm Flute"],[50,"Windmill Key",!0],[51,"Key to Prison",!0],[52,"Key to Styx",!0],[53,"Fog Lamp",!0],[54,"Shell Flute",!0],[55,"Eye Glasses",!0],[56,"Broken Statue",!0],[57,"Glowing Lamp",!0],[58,"Statue of Gold",!0],[59,"Love Pendant",!0],[60,"Kirisa Plant",!0],[61,"Ivory Statue",!0],[62,"Bow of Moon",!0],[63,"Bow of Sun",!0],[64,"Bow of Truth",!0],[65,"Refresh",!0],[66,"Paralysis",!0],[67,"Telepathy",!0],[68,"Teleport",!0],[69,"Recover",!0],[70,"Barrier",!0],[71,"Change",!0],[72,"Flight",
!0]].map((b)=>{var [a,c,d]=b;return[a,{id:a,name:c,key:d}]})),RETAIN_SLOTS$$module$patch=new Set([80,83]),UNTOUCHED_MONSTERS$$module$patch={[126]:!0,[127]:!0,[131]:!0,[141]:!0,[142]:!0,[143]:!0,[159]:!0,[166]:!0};var module$patch={};module$patch.default=$jscompDefaultExport$$module$patch;module$patch.parseSeed=parseSeed$$module$patch;module$patch.shuffle=shuffle$$module$patch;module$patch.stampVersionSeedAndHash=stampVersionSeedAndHash$$module$patch;module$patch.watchForFlag0=watchForFlag0$$module$patch;
module$patch.openSwanFromEitherSide=openSwanFromEitherSide$$module$patch;module$patch.connectLeafToLimeTree=connectLeafToLimeTree$$module$patch;module$patch.rearrangeTriggersAndNpcs=rearrangeTriggersAndNpcs$$module$patch;module$patch.requireHealedDolphinToRide=requireHealedDolphinToRide$$module$patch;module$patch.buffDeosPendant=buffDeosPendant$$module$patch;module$patch.allowTeleportOutOfTower=allowTeleportOutOfTower$$module$patch;module$patch.preventNpcDespawns=preventNpcDespawns$$module$patch;
module$patch.barrierRequiresCalmSea=barrierRequiresCalmSea$$module$patch;module$patch.noTeleportOnThunderSword=noTeleportOnThunderSword$$module$patch;module$patch.asinaTeleportsToMezameShrine=asinaTeleportsToMezameShrine$$module$patch;module$patch.saharaBunniesRequireTelepathy=saharaBunniesRequireTelepathy$$module$patch;module$patch.fixShaking=fixShaking$$module$patch;module$patch.displayDifficulty=displayDifficulty$$module$patch;module$patch.buffMedicalHerb3x=buffMedicalHerb3x$$module$patch;
module$patch.buffMedicalHerb2x=buffMedicalHerb2x$$module$patch;module$patch.removeWildWarp=removeWildWarp$$module$patch;module$patch.nerfWildWarp=nerfWildWarp$$module$patch;module$patch.preventSwordClobber=preventSwordClobber$$module$patch;module$patch.upgradeBallsToBracelets=upgradeBallsToBracelets$$module$patch;module$patch.neverDie=neverDie$$module$patch;module$patch.fixVampire=fixVampire$$module$patch;module$patch.itemLib=itemLib$$module$patch;module$patch.quickChangeItems=quickChangeItems$$module$patch;
module$patch.leatherBootsForSpeed=leatherBootsForSpeed$$module$patch;module$patch.autoEquipBracelet=autoEquipBracelet$$module$patch;module$patch.scaleDifficultyLib=scaleDifficultyLib$$module$patch;class ProgressTracker$$module$progress{constructor(){this.completed=this.tasks=0}addTasks(b){this.tasks+=b}addCompleted(b){this.completed+=b}value(){return this.tasks&&this.completed/this.tasks}}var module$progress={};module$progress.ProgressTracker=ProgressTracker$$module$progress;let flags$$module$main,seed$$module$main,rom$$module$main,romName$$module$main,race$$module$main=!1;
const initRace$$module$main=()=>{race$$module$main=!0;loadRomFromStorage$$module$main();initializeStateFromHash$$module$main(!1);updateRaceDom$$module$main();window.addEventListener("popstate",(b)=>{initializeStateFromHash$$module$main(!1)});document.body.addEventListener("click",click$$module$main);initVersion$$module$main()},main$$module$main=()=>{if(null==document.getElementById("race"))initRace$$module$main();else{loadRomFromStorage$$module$main();initializeStateFromHash$$module$main(!0);document.getElementById("preset").addEventListener("change",
setPresets$$module$main);setPresets$$module$main();flags$$module$main||(flags$$module$main=new FlagSet$$module$flagset(document.getElementById("flagstring").value));for(const b of[...document.getElementsByClassName("checkbox")])makeCheckbox$$module$main(b);updateDom$$module$main();addSeedListeners$$module$main();document.body.addEventListener("click",click$$module$main);window.addEventListener("popstate",(b)=>{b.state?(flags$$module$main.flags=b.state.flags,seed$$module$main=b.state.seed):initializeStateFromHash$$module$main(!0)});
initVersion$$module$main()}},initVersion$$module$main=()=>{"latest"!==HASH$$module$version&&(document.getElementById("version").textContent=`Current version: ${LABEL$$module$version} (${DATE$$module$version.toDateString()})`);document.body.classList.add("js-works");document.body.classList.remove("js-broken");"rc"==STATUS$$module$version?(document.body.classList.add("release-candidate"),document.body.classList.add("versioned")):"stable"==STATUS$$module$version&&document.body.classList.add("versioned")},
addSeedListeners$$module$main=()=>{const b=document.getElementById("seed"),a=()=>{seed$$module$main=b.value;updateDom$$module$main()};b.addEventListener("keyup",a);b.addEventListener("change",a)},initializeStateFromHash$$module$main=(b)=>{for(const a of location.hash.substring(1).split("&")){let [c,d]=a.split("=");d=decodeURIComponent(d);"flags"===c&&(flags$$module$main=new FlagSet$$module$flagset(d),b&&(document.getElementById("preset").value="--",document.getElementById("flagstring").value=d));
"seed"===c&&(seed$$module$main=decodeURIComponent(d));"race"===c&&document.body.classList.add("race")}},click$$module$main=(b)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){let a=b.target;for(;a;){if("H1"===a.tagName&&a.parentElement.classList.contains("expandable")){a.parentElement.classList.toggle("expanded");break}else if("preset-apply"===a.id){flags$$module$main=new FlagSet$$module$flagset(document.getElementById("flagstring").value);updateDom$$module$main();break}else if("new-seed"===
a.id)seed$$module$main=Math.floor(4294967296*Math.random()).toString(16),updateDom$$module$main();else if("generate"===a.id){var c=parseSeed$$module$patch(seed$$module$main);const [a,b]=yield shuffleRom$$module$main(c);c=romName$$module$main.replace(/\.nes|$/,["_",c.toString(16).padStart(8,0),"_",b.toString(16).padStart(8,0),".nes"].join(""));download$$module$main(a,c)}else"spoiler"===a.id&&shuffleRom$$module$main(parseSeed$$module$patch(seed$$module$main));a=a.parentElement}}),read$$module$main=
(b,a,c)=>{const d=[];for(let e=0;e<c;e++)d.push(String.fromCharCode(b[a+2*e]));return d.join("")},shuffleRom$$module$main=(b)=>$jscomp.asyncExecutePromiseGeneratorFunction(function*(){const a=document.getElementById("progress"),c=new ProgressTracker$$module$progress,d=rom$$module$main.slice();let e=!1;var f=new FlagSet$$module$flagset(String(flags$$module$main));document.body.classList.add("shuffling");const g=flags$$module$main.check("Ds")?{}:void 0,h=()=>{e||(a.value=c.value(),setTimeout(h,120))};
h();f=yield shuffle$$module$patch(d,b,f,g,c);e=!0;document.body.classList.remove("shuffling");g&&(replaceSpoiler$$module$main("spoiler-items",g.items.map((a)=>a.text)),replaceSpoiler$$module$main("spoiler-route",g.route));document.getElementById("checksum").textContent=read$$module$main(d,161941,4)+read$$module$main(d,161942,4);return[d,f]}),replaceSpoiler$$module$main=(b,a)=>{for(b=document.getElementById(b);b.children.length;)b.lastChild.remove();for(const c of a)a=document.createElement("li"),
a.textContent=c,b.appendChild(a)},setPresets$$module$main=()=>{const b=document.querySelector("#preset :checked");document.getElementById("preset-explanation").textContent=b.dataset.text;document.getElementById("flagstring").value=b.dataset.flags},makeCheckbox$$module$main=(b)=>{const a=b.getElementsByClassName("flag-body")[0];a&&a.remove();const [c,d]=b.textContent.split(/:\s*/),e=document.createElement("input");e.type="checkbox";e.id=`flag-${c}`;e.dataset.flag=c;b.parentElement.insertBefore(e,b);
const f=document.createElement("label");f.textContent=c;f.htmlFor=e.id;b.parentElement.insertBefore(f,b);const g=document.createElement("div");b.parentElement.insertBefore(g,b);const h=document.createElement("label");h.textContent=d;h.htmlFor=e.id;g.appendChild(h);a&&g.appendChild(a);b.classList.contains("hard")&&(f.classList.add("hard"),h.classList.add("hard"),h.textContent+=" *");b.remove();e.addEventListener("change",()=>{window.FLAGS=flags$$module$main;flags$$module$main.set(c,e.checked);updateDom$$module$main()})},
updateDom$$module$main=()=>{for(var b of document.querySelectorAll("input[data-flag]"))b.checked=flags$$module$main.check(b.dataset.flag);b=String(flags$$module$main).replace(/ /g,"");document.getElementById("seed").value=seed$$module$main||"";var a=["#flags=",b];seed$$module$main&&a.push("&seed=",encodeURIComponent(seed$$module$main));history.replaceState({flags:flags$$module$main.flags,seed:seed$$module$main},"",String(window.location).replace(/#.*/,"")+a.join(""));if("stable"==STATUS$$module$version||
"rc"==STATUS$$module$version){a=seed$$module$main||Math.floor(4294967296*Math.random()).toString(16);const c=VERSION$$module$version;document.getElementById("race").href=`/${c}/race#flags=${b}&seed=${a}`}updateRaceDom$$module$main()},updateRaceDom$$module$main=()=>{const b=String(flags$$module$main);document.body.classList.toggle("spoiled",flags$$module$main.check("Ds"));document.body.classList.toggle("debug-mode",/D/.test(b));document.getElementById("flagstring-out").textContent=b;document.getElementById("track-url").href=
`track#flags=${b.replace(/ /g,"")}`},loadRomFromStorage$$module$main=()=>{const b=window.localStorage.getItem("name"),a=window.localStorage.getItem("rom"),c=document.getElementById("pick-file"),d=()=>{document.body.classList.add("rom-uploaded");document.body.classList.toggle("rom-broken",crc32$$module$crc32(rom$$module$main)!=EXPECTED_CRC32$$module$rom)};b&&a&&(romName$$module$main=b,rom$$module$main=Uint8Array.from(Array(a.length/2).fill(0).map((b,c)=>Number.parseInt(a[2*c]+a[2*c+1],16))),d());c.addEventListener("change",
()=>{const a=c.files[0],b=new FileReader;b.addEventListener("loadend",()=>{const c=new Uint8Array(b.result),e=Array.from(c,(a)=>a.toString(16).padStart(2,0)).join("");window.localStorage.setItem("rom",e);window.localStorage.setItem("name",a.name);rom$$module$main=c.slice(0,393232);d();romName$$module$main=a.name});b.readAsArrayBuffer(a)})},download$$module$main=(b,a)=>{const c=document.createElement("a");document.body.appendChild(c);c.style="display: none";b=new Blob([b],{type:"octet/stream"});b=
window.URL.createObjectURL(b);c.href=b;c.download=a;c.click();window.URL.revokeObjectURL(b);c.remove()};main$$module$main();var module$main={};
}).call(this)
